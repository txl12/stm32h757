/*********************************************************************************/
/********** THIS FILE IS GENERATED BY TOUCHGFX DESIGNER, DO NOT MODIFY ***********/
/*********************************************************************************/
#include <gui_generated/demo_screen/DemoViewBase.hpp>
#include <touchgfx/Color.hpp>
#include <texts/TextKeysAndLanguages.hpp>
#include <images/BitmapDatabase.hpp>

DemoViewBase::DemoViewBase() :
    buttonCallback(this, &DemoViewBase::buttonCallbackHandler)
{
    __background.setPosition(0, 0, 800, 480);
    __background.setColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
    add(__background);

    background.setPosition(0, 0, 800, 480);
    background.setColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
    add(background);

    hw_input_value.setPosition(0, 147, 800, 156);
    hw_input_value.setColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
    hw_input_value.setLinespacing(0);
    Unicode::snprintf(hw_input_valueBuffer, HW_INPUT_VALUE_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_JADC).getText());
    hw_input_value.setWildcard(hw_input_valueBuffer);
    hw_input_value.setTypedText(touchgfx::TypedText(T___SINGLEUSE_8CK6));
    add(hw_input_value);

    hw_input.setXY(360, 146);
    hw_input.setColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
    hw_input.setLinespacing(0);
    hw_input.setTypedText(touchgfx::TypedText(T___SINGLEUSE_57E3));
    add(hw_input);

    hw_output.setXY(220, 311);
    hw_output.setBitmaps(touchgfx::Bitmap(BITMAP_DARK_BUTTON_ID), touchgfx::Bitmap(BITMAP_DARK_BUTTON_PRESSED_ID));
    hw_output.setLabelText(touchgfx::TypedText(T___SINGLEUSE_U18S));
    hw_output.setLabelColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
    hw_output.setLabelColorPressed(touchgfx::Color::getColorFromRGB(255, 255, 255));
    hw_output.setAction(buttonCallback);
    add(hw_output);

    arrow_left.setXY(6, 224);
    arrow_left.setBitmaps(touchgfx::Bitmap(BITMAP_ARROW_LEFT_ID), touchgfx::Bitmap(BITMAP_ARROW_LEFT_ID));
    arrow_left.setAction(buttonCallback);
    add(arrow_left);

    arrow_right.setXY(776, 224);
    arrow_right.setBitmaps(touchgfx::Bitmap(BITMAP_ARROW_RIGHT_ID), touchgfx::Bitmap(BITMAP_ARROW_RIGHT_ID));
    arrow_right.setAction(buttonCallback);
    add(arrow_right);
}

DemoViewBase::~DemoViewBase()
{

}

void DemoViewBase::setupScreen()
{

}

void DemoViewBase::buttonCallbackHandler(const touchgfx::AbstractButton& src)
{
    if (&src == &hw_output)
    {
        //ButtonClicked
        //When hw_output clicked call virtual function
        //Call buttonClicked
        buttonClicked();
    }
    if (&src == &arrow_left)
    {
        //GoBack
        //When arrow_left clicked change screen to Introduction
        //Go to Introduction with screen transition towards West
        application().gotoIntroductionScreenSlideTransitionWest();
    }
    if (&src == &arrow_right)
    {
        //GoForward
        //When arrow_right clicked change screen to Introduction
        //Go to Introduction with screen transition towards East
        application().gotoIntroductionScreenSlideTransitionEast();
    }
}
