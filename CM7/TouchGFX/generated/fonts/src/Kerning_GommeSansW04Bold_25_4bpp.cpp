#include <touchgfx/Font.hpp>

FONT_KERNING_LOCATION_FLASH_PRAGMA
KEEP extern const touchgfx::KerningNode kerning_GommeSansW04Bold_25_4bpp[] FONT_KERNING_LOCATION_FLASH_ATTRIBUTE = {
    { 0x002F, -2 },  // (First char = [0x002F, slash], Second char = [0x002F, slash], Kerning dist = -2)
    { 0x0045,  1 },  // (First char = [0x0045, E], Second char = [0x002F, slash], Kerning dist = 1)
    { 0x004C,  1 },  // (First char = [0x004C, L], Second char = [0x002F, slash], Kerning dist = 1)
    { 0x0054, -1 },  // (First char = [0x0054, T], Second char = [0x002F, slash], Kerning dist = -1)
    { 0x0073,  1 },  // (First char = [0x0073, s], Second char = [0x002F, slash], Kerning dist = 1)
    { 0x004C,  1 },  // (First char = [0x004C, L], Second char = [0x003A, colon], Kerning dist = 1)
    { 0x004C,  1 },  // (First char = [0x004C, L], Second char = [0x003F, question], Kerning dist = 1)
    { 0x0054,  1 },  // (First char = [0x0054, T], Second char = [0x003F, question], Kerning dist = 1)
    { 0x002F, -1 },  // (First char = [0x002F, slash], Second char = [0x0041, A], Kerning dist = -1)
    { 0x0054, -2 },  // (First char = [0x0054, T], Second char = [0x0041, A], Kerning dist = -2)
    { 0x0054,  1 },  // (First char = [0x0054, T], Second char = [0x0053, S], Kerning dist = 1)
    { 0x002F,  1 },  // (First char = [0x002F, slash], Second char = [0x0054, T], Kerning dist = 1)
    { 0x004C, -2 },  // (First char = [0x004C, L], Second char = [0x0054, T], Kerning dist = -2)
    { 0x0054,  1 },  // (First char = [0x0054, T], Second char = [0x0054, T], Kerning dist = 1)
    { 0x002F, -2 },  // (First char = [0x002F, slash], Second char = [0x0065, e], Kerning dist = -2)
    { 0x004C,  1 },  // (First char = [0x004C, L], Second char = [0x0065, e], Kerning dist = 1)
    { 0x0053,  1 },  // (First char = [0x0053, S], Second char = [0x0065, e], Kerning dist = 1)
    { 0x0054, -2 },  // (First char = [0x0054, T], Second char = [0x0065, e], Kerning dist = -2)
    { 0x002F, -2 },  // (First char = [0x002F, slash], Second char = [0x0067, g], Kerning dist = -2)
    { 0x004C,  1 },  // (First char = [0x004C, L], Second char = [0x0067, g], Kerning dist = 1)
    { 0x0053,  1 },  // (First char = [0x0053, S], Second char = [0x0067, g], Kerning dist = 1)
    { 0x0054, -2 },  // (First char = [0x0054, T], Second char = [0x0067, g], Kerning dist = -2)
    { 0x002F, -1 },  // (First char = [0x002F, slash], Second char = [0x006D, m], Kerning dist = -1)
    { 0x0054, -2 },  // (First char = [0x0054, T], Second char = [0x006D, m], Kerning dist = -2)
    { 0x002F, -1 },  // (First char = [0x002F, slash], Second char = [0x006E, n], Kerning dist = -1)
    { 0x0054, -2 },  // (First char = [0x0054, T], Second char = [0x006E, n], Kerning dist = -2)
    { 0x002F, -1 },  // (First char = [0x002F, slash], Second char = [0x0073, s], Kerning dist = -1)
    { 0x004C,  1 },  // (First char = [0x004C, L], Second char = [0x0073, s], Kerning dist = 1)
    { 0x0053,  1 },  // (First char = [0x0053, S], Second char = [0x0073, s], Kerning dist = 1)
    { 0x0054, -1 },  // (First char = [0x0054, T], Second char = [0x0073, s], Kerning dist = -1)
    { 0x002F, -2 },  // (First char = [0x002F, slash], Second char = [0x00E7, ccedilla], Kerning dist = -2)
    { 0x004C,  1 },  // (First char = [0x004C, L], Second char = [0x00E7, ccedilla], Kerning dist = 1)
    { 0x0053,  1 },  // (First char = [0x0053, S], Second char = [0x00E7, ccedilla], Kerning dist = 1)
    { 0x0054, -2 },  // (First char = [0x0054, T], Second char = [0x00E7, ccedilla], Kerning dist = -2)
    { 0x002F, -2 },  // (First char = [0x002F, slash], Second char = [0x00E9, eacute], Kerning dist = -2)
    { 0x004C,  1 },  // (First char = [0x004C, L], Second char = [0x00E9, eacute], Kerning dist = 1)
    { 0x0053,  1 },  // (First char = [0x0053, S], Second char = [0x00E9, eacute], Kerning dist = 1)
    { 0x0054, -2 },  // (First char = [0x0054, T], Second char = [0x00E9, eacute], Kerning dist = -2)
};
