<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html><head>
<title>Static Call Graph - [H757XI_SDRAM_Test_CM7\H757XI_SDRAM_Test_CM7.axf]</title></head>
<body><HR>
<H1>Static Call Graph for image H757XI_SDRAM_Test_CM7\H757XI_SDRAM_Test_CM7.axf</H1><HR>
<BR><P>#&#060CALLGRAPH&#062# ARM Linker, 5060960: Last Updated: Tue Mar 19 22:30:40 2024
<BR><P>
<H3>Maximum Stack Usage =        952 bytes + Unknown(Functions without stacksize, Cycles, Untraceable Function Pointers)</H3><H3>
Call chain for Maximum Stack Depth:</H3>
touchgfx::TextAreaWithWildcardBase::draw(const touchgfx::Rect&) const &rArr; touchgfx::LCD::drawString(touchgfx::Rect, const touchgfx::Rect&, const touchgfx::LCD::StringVisuals&, const unsigned short*, ...) &rArr; touchgfx::LCD::drawStringLTR(const touchgfx::Rect&, const touchgfx::Rect&, const touchgfx::LCD::StringVisuals&, const unsigned short*, std::__va_list) &rArr; touchgfx::LCD::drawStringInternal(unsigned short*, const touchgfx::Rect*, short, short, const touchgfx::Rect&, const touchgfx::LCD::StringVisuals*, unsigned char, touchgfx::TextProvider&, int, bool) &rArr; touchgfx::TextProvider::getNextLigature(unsigned char, const touchgfx::Font*, const touchgfx::GlyphNode*&, const unsigned char*&, unsigned char&) &rArr; touchgfx::TextProvider::getNextLigature(unsigned char) &rArr; touchgfx::TextProvider::substituteGlyphs() &rArr; touchgfx::TextProvider::applyGsubRules(const unsigned short*, unsigned short) &rArr; touchgfx::TextProvider::replaceInputCharacters(unsigned short, unsigned short, const unsigned short*) &rArr; touchgfx::TextProvider::fillInputBuffer() &rArr; touchgfx::TextProvider::circularBuffer&lang;(unsigned)10&rang;::pushBack(unsigned short) &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
<P>
<H3>
Functions with no stack information
</H3><UL>
 <LI><a href="#[1cd]">__user_initial_stackheap</a>
</UL>
</UL>
<P>
<H3>
Mutually Recursive functions
</H3> <LI><a href="#[95]">ADC3_IRQHandler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[95]">ADC3_IRQHandler</a><BR>
 <LI><a href="#[289]">touchgfx::TouchCalibration::muldivu(unsigned, unsigned, unsigned, unsigned, unsigned, unsigned&)</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[289]">touchgfx::TouchCalibration::muldivu(unsigned, unsigned, unsigned, unsigned, unsigned, unsigned&)</a><BR>
 <LI><a href="#[2b0]">touchgfx::Screen::JSMOC(const touchgfx::Rect&, touchgfx::Drawable*)</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[2b0]">touchgfx::Screen::JSMOC(const touchgfx::Rect&, touchgfx::Drawable*)</a><BR>
 <LI><a href="#[27b]">touchgfx::TextProvider::getNextCharInternal()</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[27b]">touchgfx::TextProvider::getNextCharInternal()</a><BR>
</UL>
<P>
<H3>
Function Pointers
</H3><UL>
 <LI><a href="#[95]">ADC3_IRQHandler</a> from startup_stm32h757xx_cm7.o(.text) referenced from startup_stm32h757xx_cm7.o(RESET)
 <LI><a href="#[2b]">ADC_IRQHandler</a> from startup_stm32h757xx_cm7.o(.text) referenced from startup_stm32h757xx_cm7.o(RESET)
 <LI><a href="#[97]">BDMA_Channel0_IRQHandler</a> from startup_stm32h757xx_cm7.o(.text) referenced from startup_stm32h757xx_cm7.o(RESET)
 <LI><a href="#[98]">BDMA_Channel1_IRQHandler</a> from startup_stm32h757xx_cm7.o(.text) referenced from startup_stm32h757xx_cm7.o(RESET)
 <LI><a href="#[99]">BDMA_Channel2_IRQHandler</a> from startup_stm32h757xx_cm7.o(.text) referenced from startup_stm32h757xx_cm7.o(RESET)
 <LI><a href="#[9a]">BDMA_Channel3_IRQHandler</a> from startup_stm32h757xx_cm7.o(.text) referenced from startup_stm32h757xx_cm7.o(RESET)
 <LI><a href="#[9b]">BDMA_Channel4_IRQHandler</a> from startup_stm32h757xx_cm7.o(.text) referenced from startup_stm32h757xx_cm7.o(RESET)
 <LI><a href="#[9c]">BDMA_Channel5_IRQHandler</a> from startup_stm32h757xx_cm7.o(.text) referenced from startup_stm32h757xx_cm7.o(RESET)
 <LI><a href="#[9d]">BDMA_Channel6_IRQHandler</a> from startup_stm32h757xx_cm7.o(.text) referenced from startup_stm32h757xx_cm7.o(RESET)
 <LI><a href="#[9e]">BDMA_Channel7_IRQHandler</a> from startup_stm32h757xx_cm7.o(.text) referenced from startup_stm32h757xx_cm7.o(RESET)
 <LI><a href="#[13]">BusFault_Handler</a> from stm32h7xx_it_1.o(i.BusFault_Handler) referenced from startup_stm32h757xx_cm7.o(RESET)
 <LI><a href="#[74]">CEC_IRQHandler</a> from startup_stm32h757xx_cm7.o(.text) referenced from startup_stm32h757xx_cm7.o(RESET)
 <LI><a href="#[59]">CM4_SEV_IRQHandler</a> from startup_stm32h757xx_cm7.o(.text) referenced from startup_stm32h757xx_cm7.o(RESET)
 <LI><a href="#[58]">CM7_SEV_IRQHandler</a> from startup_stm32h757xx_cm7.o(.text) referenced from startup_stm32h757xx_cm7.o(RESET)
 <LI><a href="#[9f]">COMP1_IRQHandler</a> from startup_stm32h757xx_cm7.o(.text) referenced from startup_stm32h757xx_cm7.o(RESET)
 <LI><a href="#[a6]">CRS_IRQHandler</a> from startup_stm32h757xx_cm7.o(.text) referenced from startup_stm32h757xx_cm7.o(RESET)
 <LI><a href="#[65]">CRYP_IRQHandler</a> from startup_stm32h757xx_cm7.o(.text) referenced from startup_stm32h757xx_cm7.o(RESET)
 <LI><a href="#[64]">DCMI_IRQHandler</a> from startup_stm32h757xx_cm7.o(.text) referenced from startup_stm32h757xx_cm7.o(RESET)
 <LI><a href="#[84]">DFSDM1_FLT0_IRQHandler</a> from startup_stm32h757xx_cm7.o(.text) referenced from startup_stm32h757xx_cm7.o(RESET)
 <LI><a href="#[85]">DFSDM1_FLT1_IRQHandler</a> from startup_stm32h757xx_cm7.o(.text) referenced from startup_stm32h757xx_cm7.o(RESET)
 <LI><a href="#[86]">DFSDM1_FLT2_IRQHandler</a> from startup_stm32h757xx_cm7.o(.text) referenced from startup_stm32h757xx_cm7.o(RESET)
 <LI><a href="#[87]">DFSDM1_FLT3_IRQHandler</a> from startup_stm32h757xx_cm7.o(.text) referenced from startup_stm32h757xx_cm7.o(RESET)
 <LI><a href="#[24]">DMA1_Stream0_IRQHandler</a> from startup_stm32h757xx_cm7.o(.text) referenced from startup_stm32h757xx_cm7.o(RESET)
 <LI><a href="#[25]">DMA1_Stream1_IRQHandler</a> from startup_stm32h757xx_cm7.o(.text) referenced from startup_stm32h757xx_cm7.o(RESET)
 <LI><a href="#[26]">DMA1_Stream2_IRQHandler</a> from startup_stm32h757xx_cm7.o(.text) referenced from startup_stm32h757xx_cm7.o(RESET)
 <LI><a href="#[27]">DMA1_Stream3_IRQHandler</a> from startup_stm32h757xx_cm7.o(.text) referenced from startup_stm32h757xx_cm7.o(RESET)
 <LI><a href="#[28]">DMA1_Stream4_IRQHandler</a> from startup_stm32h757xx_cm7.o(.text) referenced from startup_stm32h757xx_cm7.o(RESET)
 <LI><a href="#[29]">DMA1_Stream5_IRQHandler</a> from startup_stm32h757xx_cm7.o(.text) referenced from startup_stm32h757xx_cm7.o(RESET)
 <LI><a href="#[2a]">DMA1_Stream6_IRQHandler</a> from startup_stm32h757xx_cm7.o(.text) referenced from startup_stm32h757xx_cm7.o(RESET)
 <LI><a href="#[47]">DMA1_Stream7_IRQHandler</a> from startup_stm32h757xx_cm7.o(.text) referenced from startup_stm32h757xx_cm7.o(RESET)
 <LI><a href="#[70]">DMA2D_IRQHandler</a> from stm32h7xx_it_1.o(i.DMA2D_IRQHandler) referenced from startup_stm32h757xx_cm7.o(RESET)
 <LI><a href="#[50]">DMA2_Stream0_IRQHandler</a> from startup_stm32h757xx_cm7.o(.text) referenced from startup_stm32h757xx_cm7.o(RESET)
 <LI><a href="#[51]">DMA2_Stream1_IRQHandler</a> from startup_stm32h757xx_cm7.o(.text) referenced from startup_stm32h757xx_cm7.o(RESET)
 <LI><a href="#[52]">DMA2_Stream2_IRQHandler</a> from startup_stm32h757xx_cm7.o(.text) referenced from startup_stm32h757xx_cm7.o(RESET)
 <LI><a href="#[53]">DMA2_Stream3_IRQHandler</a> from startup_stm32h757xx_cm7.o(.text) referenced from startup_stm32h757xx_cm7.o(RESET)
 <LI><a href="#[54]">DMA2_Stream4_IRQHandler</a> from startup_stm32h757xx_cm7.o(.text) referenced from startup_stm32h757xx_cm7.o(RESET)
 <LI><a href="#[5a]">DMA2_Stream5_IRQHandler</a> from startup_stm32h757xx_cm7.o(.text) referenced from startup_stm32h757xx_cm7.o(RESET)
 <LI><a href="#[5b]">DMA2_Stream6_IRQHandler</a> from startup_stm32h757xx_cm7.o(.text) referenced from startup_stm32h757xx_cm7.o(RESET)
 <LI><a href="#[5c]">DMA2_Stream7_IRQHandler</a> from startup_stm32h757xx_cm7.o(.text) referenced from startup_stm32h757xx_cm7.o(RESET)
 <LI><a href="#[7c]">DMAMUX1_OVR_IRQHandler</a> from startup_stm32h757xx_cm7.o(.text) referenced from startup_stm32h757xx_cm7.o(RESET)
 <LI><a href="#[96]">DMAMUX2_OVR_IRQHandler</a> from startup_stm32h757xx_cm7.o(.text) referenced from startup_stm32h757xx_cm7.o(RESET)
 <LI><a href="#[91]">DSI_IRQHandler</a> from startup_stm32h757xx_cm7.o(.text) referenced from startup_stm32h757xx_cm7.o(RESET)
 <LI><a href="#[16]">DebugMon_Handler</a> from stm32h7xx_it_1.o(i.DebugMon_Handler) referenced from startup_stm32h757xx_cm7.o(RESET)
 <LI><a href="#[a7]">ECC_IRQHandler</a> from startup_stm32h757xx_cm7.o(.text) referenced from startup_stm32h757xx_cm7.o(RESET)
 <LI><a href="#[55]">ETH_IRQHandler</a> from startup_stm32h757xx_cm7.o(.text) referenced from startup_stm32h757xx_cm7.o(RESET)
 <LI><a href="#[56]">ETH_WKUP_IRQHandler</a> from startup_stm32h757xx_cm7.o(.text) referenced from startup_stm32h757xx_cm7.o(RESET)
 <LI><a href="#[1f]">EXTI0_IRQHandler</a> from startup_stm32h757xx_cm7.o(.text) referenced from startup_stm32h757xx_cm7.o(RESET)
 <LI><a href="#[41]">EXTI15_10_IRQHandler</a> from startup_stm32h757xx_cm7.o(.text) referenced from startup_stm32h757xx_cm7.o(RESET)
 <LI><a href="#[20]">EXTI1_IRQHandler</a> from startup_stm32h757xx_cm7.o(.text) referenced from startup_stm32h757xx_cm7.o(RESET)
 <LI><a href="#[21]">EXTI2_IRQHandler</a> from startup_stm32h757xx_cm7.o(.text) referenced from startup_stm32h757xx_cm7.o(RESET)
 <LI><a href="#[22]">EXTI3_IRQHandler</a> from startup_stm32h757xx_cm7.o(.text) referenced from startup_stm32h757xx_cm7.o(RESET)
 <LI><a href="#[23]">EXTI4_IRQHandler</a> from startup_stm32h757xx_cm7.o(.text) referenced from startup_stm32h757xx_cm7.o(RESET)
 <LI><a href="#[30]">EXTI9_5_IRQHandler</a> from startup_stm32h757xx_cm7.o(.text) referenced from startup_stm32h757xx_cm7.o(RESET)
 <LI><a href="#[2c]">FDCAN1_IT0_IRQHandler</a> from startup_stm32h757xx_cm7.o(.text) referenced from startup_stm32h757xx_cm7.o(RESET)
 <LI><a href="#[2e]">FDCAN1_IT1_IRQHandler</a> from startup_stm32h757xx_cm7.o(.text) referenced from startup_stm32h757xx_cm7.o(RESET)
 <LI><a href="#[2d]">FDCAN2_IT0_IRQHandler</a> from startup_stm32h757xx_cm7.o(.text) referenced from startup_stm32h757xx_cm7.o(RESET)
 <LI><a href="#[2f]">FDCAN2_IT1_IRQHandler</a> from startup_stm32h757xx_cm7.o(.text) referenced from startup_stm32h757xx_cm7.o(RESET)
 <LI><a href="#[57]">FDCAN_CAL_IRQHandler</a> from startup_stm32h757xx_cm7.o(.text) referenced from startup_stm32h757xx_cm7.o(RESET)
 <LI><a href="#[1d]">FLASH_IRQHandler</a> from startup_stm32h757xx_cm7.o(.text) referenced from startup_stm32h757xx_cm7.o(RESET)
 <LI><a href="#[48]">FMC_IRQHandler</a> from startup_stm32h757xx_cm7.o(.text) referenced from startup_stm32h757xx_cm7.o(RESET)
 <LI><a href="#[67]">FPU_IRQHandler</a> from startup_stm32h757xx_cm7.o(.text) referenced from startup_stm32h757xx_cm7.o(RESET)
 <LI><a href="#[66]">HASH_RNG_IRQHandler</a> from startup_stm32h757xx_cm7.o(.text) referenced from startup_stm32h757xx_cm7.o(RESET)
 <LI><a href="#[a9]">HOLD_CORE_IRQHandler</a> from startup_stm32h757xx_cm7.o(.text) referenced from startup_stm32h757xx_cm7.o(RESET)
 <LI><a href="#[83]">HRTIM1_FLT_IRQHandler</a> from startup_stm32h757xx_cm7.o(.text) referenced from startup_stm32h757xx_cm7.o(RESET)
 <LI><a href="#[7d]">HRTIM1_Master_IRQHandler</a> from startup_stm32h757xx_cm7.o(.text) referenced from startup_stm32h757xx_cm7.o(RESET)
 <LI><a href="#[7e]">HRTIM1_TIMA_IRQHandler</a> from startup_stm32h757xx_cm7.o(.text) referenced from startup_stm32h757xx_cm7.o(RESET)
 <LI><a href="#[7f]">HRTIM1_TIMB_IRQHandler</a> from startup_stm32h757xx_cm7.o(.text) referenced from startup_stm32h757xx_cm7.o(RESET)
 <LI><a href="#[80]">HRTIM1_TIMC_IRQHandler</a> from startup_stm32h757xx_cm7.o(.text) referenced from startup_stm32h757xx_cm7.o(RESET)
 <LI><a href="#[81]">HRTIM1_TIMD_IRQHandler</a> from startup_stm32h757xx_cm7.o(.text) referenced from startup_stm32h757xx_cm7.o(RESET)
 <LI><a href="#[82]">HRTIM1_TIME_IRQHandler</a> from startup_stm32h757xx_cm7.o(.text) referenced from startup_stm32h757xx_cm7.o(RESET)
 <LI><a href="#[93]">HSEM1_IRQHandler</a> from startup_stm32h757xx_cm7.o(.text) referenced from startup_stm32h757xx_cm7.o(RESET)
 <LI><a href="#[94]">HSEM2_IRQHandler</a> from startup_stm32h757xx_cm7.o(.text) referenced from startup_stm32h757xx_cm7.o(RESET)
 <LI><a href="#[11]">HardFault_Handler</a> from stm32h7xx_it_1.o(i.HardFault_Handler) referenced from startup_stm32h757xx_cm7.o(RESET)
 <LI><a href="#[39]">I2C1_ER_IRQHandler</a> from startup_stm32h757xx_cm7.o(.text) referenced from startup_stm32h757xx_cm7.o(RESET)
 <LI><a href="#[38]">I2C1_EV_IRQHandler</a> from startup_stm32h757xx_cm7.o(.text) referenced from startup_stm32h757xx_cm7.o(RESET)
 <LI><a href="#[3b]">I2C2_ER_IRQHandler</a> from startup_stm32h757xx_cm7.o(.text) referenced from startup_stm32h757xx_cm7.o(RESET)
 <LI><a href="#[3a]">I2C2_EV_IRQHandler</a> from startup_stm32h757xx_cm7.o(.text) referenced from startup_stm32h757xx_cm7.o(RESET)
 <LI><a href="#[5f]">I2C3_ER_IRQHandler</a> from startup_stm32h757xx_cm7.o(.text) referenced from startup_stm32h757xx_cm7.o(RESET)
 <LI><a href="#[5e]">I2C3_EV_IRQHandler</a> from startup_stm32h757xx_cm7.o(.text) referenced from startup_stm32h757xx_cm7.o(RESET)
 <LI><a href="#[76]">I2C4_ER_IRQHandler</a> from startup_stm32h757xx_cm7.o(.text) referenced from startup_stm32h757xx_cm7.o(RESET)
 <LI><a href="#[75]">I2C4_EV_IRQHandler</a> from startup_stm32h757xx_cm7.o(.text) referenced from startup_stm32h757xx_cm7.o(RESET)
 <LI><a href="#[8f]">JPEG_IRQHandler</a> from startup_stm32h757xx_cm7.o(.text) referenced from startup_stm32h757xx_cm7.o(RESET)
 <LI><a href="#[73]">LPTIM1_IRQHandler</a> from startup_stm32h757xx_cm7.o(.text) referenced from startup_stm32h757xx_cm7.o(RESET)
 <LI><a href="#[a0]">LPTIM2_IRQHandler</a> from startup_stm32h757xx_cm7.o(.text) referenced from startup_stm32h757xx_cm7.o(RESET)
 <LI><a href="#[a1]">LPTIM3_IRQHandler</a> from startup_stm32h757xx_cm7.o(.text) referenced from startup_stm32h757xx_cm7.o(RESET)
 <LI><a href="#[a2]">LPTIM4_IRQHandler</a> from startup_stm32h757xx_cm7.o(.text) referenced from startup_stm32h757xx_cm7.o(RESET)
 <LI><a href="#[a3]">LPTIM5_IRQHandler</a> from startup_stm32h757xx_cm7.o(.text) referenced from startup_stm32h757xx_cm7.o(RESET)
 <LI><a href="#[a4]">LPUART1_IRQHandler</a> from startup_stm32h757xx_cm7.o(.text) referenced from startup_stm32h757xx_cm7.o(RESET)
 <LI><a href="#[6f]">LTDC_ER_IRQHandler</a> from startup_stm32h757xx_cm7.o(.text) referenced from startup_stm32h757xx_cm7.o(RESET)
 <LI><a href="#[6e]">LTDC_IRQHandler</a> from stm32h7xx_it_1.o(i.LTDC_IRQHandler) referenced from startup_stm32h757xx_cm7.o(RESET)
 <LI><a href="#[8e]">MDIOS_IRQHandler</a> from startup_stm32h757xx_cm7.o(.text) referenced from startup_stm32h757xx_cm7.o(RESET)
 <LI><a href="#[8d]">MDIOS_WKUP_IRQHandler</a> from startup_stm32h757xx_cm7.o(.text) referenced from startup_stm32h757xx_cm7.o(RESET)
 <LI><a href="#[90]">MDMA_IRQHandler</a> from startup_stm32h757xx_cm7.o(.text) referenced from startup_stm32h757xx_cm7.o(RESET)
 <LI><a href="#[12]">MemManage_Handler</a> from stm32h7xx_it_1.o(i.MemManage_Handler) referenced from startup_stm32h757xx_cm7.o(RESET)
 <LI><a href="#[10]">NMI_Handler</a> from stm32h7xx_it_1.o(i.NMI_Handler) referenced from startup_stm32h757xx_cm7.o(RESET)
 <LI><a href="#[79]">OTG_FS_EP1_IN_IRQHandler</a> from startup_stm32h757xx_cm7.o(.text) referenced from startup_stm32h757xx_cm7.o(RESET)
 <LI><a href="#[78]">OTG_FS_EP1_OUT_IRQHandler</a> from startup_stm32h757xx_cm7.o(.text) referenced from startup_stm32h757xx_cm7.o(RESET)
 <LI><a href="#[7b]">OTG_FS_IRQHandler</a> from startup_stm32h757xx_cm7.o(.text) referenced from startup_stm32h757xx_cm7.o(RESET)
 <LI><a href="#[7a]">OTG_FS_WKUP_IRQHandler</a> from startup_stm32h757xx_cm7.o(.text) referenced from startup_stm32h757xx_cm7.o(RESET)
 <LI><a href="#[61]">OTG_HS_EP1_IN_IRQHandler</a> from startup_stm32h757xx_cm7.o(.text) referenced from startup_stm32h757xx_cm7.o(RESET)
 <LI><a href="#[60]">OTG_HS_EP1_OUT_IRQHandler</a> from startup_stm32h757xx_cm7.o(.text) referenced from startup_stm32h757xx_cm7.o(RESET)
 <LI><a href="#[63]">OTG_HS_IRQHandler</a> from startup_stm32h757xx_cm7.o(.text) referenced from startup_stm32h757xx_cm7.o(RESET)
 <LI><a href="#[62]">OTG_HS_WKUP_IRQHandler</a> from startup_stm32h757xx_cm7.o(.text) referenced from startup_stm32h757xx_cm7.o(RESET)
 <LI><a href="#[1a]">PVD_AVD_IRQHandler</a> from startup_stm32h757xx_cm7.o(.text) referenced from startup_stm32h757xx_cm7.o(RESET)
 <LI><a href="#[17]">PendSV_Handler</a> from port.o(.emb_text) referenced from startup_stm32h757xx_cm7.o(RESET)
 <LI><a href="#[72]">QUADSPI_IRQHandler</a> from startup_stm32h757xx_cm7.o(.text) referenced from startup_stm32h757xx_cm7.o(RESET)
 <LI><a href="#[1e]">RCC_IRQHandler</a> from startup_stm32h757xx_cm7.o(.text) referenced from startup_stm32h757xx_cm7.o(RESET)
 <LI><a href="#[42]">RTC_Alarm_IRQHandler</a> from startup_stm32h757xx_cm7.o(.text) referenced from startup_stm32h757xx_cm7.o(RESET)
 <LI><a href="#[1c]">RTC_WKUP_IRQHandler</a> from startup_stm32h757xx_cm7.o(.text) referenced from startup_stm32h757xx_cm7.o(RESET)
 <LI><a href="#[f]">Reset_Handler</a> from startup_stm32h757xx_cm7.o(.text) referenced from startup_stm32h757xx_cm7.o(RESET)
 <LI><a href="#[6d]">SAI1_IRQHandler</a> from startup_stm32h757xx_cm7.o(.text) referenced from startup_stm32h757xx_cm7.o(RESET)
 <LI><a href="#[71]">SAI2_IRQHandler</a> from startup_stm32h757xx_cm7.o(.text) referenced from startup_stm32h757xx_cm7.o(RESET)
 <LI><a href="#[88]">SAI3_IRQHandler</a> from startup_stm32h757xx_cm7.o(.text) referenced from startup_stm32h757xx_cm7.o(RESET)
 <LI><a href="#[a8]">SAI4_IRQHandler</a> from startup_stm32h757xx_cm7.o(.text) referenced from startup_stm32h757xx_cm7.o(RESET)
 <LI><a href="#[49]">SDMMC1_IRQHandler</a> from startup_stm32h757xx_cm7.o(.text) referenced from startup_stm32h757xx_cm7.o(RESET)
 <LI><a href="#[92]">SDMMC2_IRQHandler</a> from startup_stm32h757xx_cm7.o(.text) referenced from startup_stm32h757xx_cm7.o(RESET)
 <LI><a href="#[77]">SPDIF_RX_IRQHandler</a> from startup_stm32h757xx_cm7.o(.text) referenced from startup_stm32h757xx_cm7.o(RESET)
 <LI><a href="#[3c]">SPI1_IRQHandler</a> from startup_stm32h757xx_cm7.o(.text) referenced from startup_stm32h757xx_cm7.o(RESET)
 <LI><a href="#[3d]">SPI2_IRQHandler</a> from startup_stm32h757xx_cm7.o(.text) referenced from startup_stm32h757xx_cm7.o(RESET)
 <LI><a href="#[4b]">SPI3_IRQHandler</a> from startup_stm32h757xx_cm7.o(.text) referenced from startup_stm32h757xx_cm7.o(RESET)
 <LI><a href="#[6a]">SPI4_IRQHandler</a> from startup_stm32h757xx_cm7.o(.text) referenced from startup_stm32h757xx_cm7.o(RESET)
 <LI><a href="#[6b]">SPI5_IRQHandler</a> from startup_stm32h757xx_cm7.o(.text) referenced from startup_stm32h757xx_cm7.o(RESET)
 <LI><a href="#[6c]">SPI6_IRQHandler</a> from startup_stm32h757xx_cm7.o(.text) referenced from startup_stm32h757xx_cm7.o(RESET)
 <LI><a href="#[15]">SVC_Handler</a> from port.o(.emb_text) referenced from startup_stm32h757xx_cm7.o(RESET)
 <LI><a href="#[89]">SWPMI1_IRQHandler</a> from startup_stm32h757xx_cm7.o(.text) referenced from startup_stm32h757xx_cm7.o(RESET)
 <LI><a href="#[ad]">StartDefaultTask</a> from freertos.o(i.StartDefaultTask) referenced from freertos.o(i.MX_FREERTOS_Init)
 <LI><a href="#[18]">SysTick_Handler</a> from cmsis_os2.o(i.SysTick_Handler) referenced from startup_stm32h757xx_cm7.o(RESET)
 <LI><a href="#[ab]">SystemInit</a> from system_stm32h7xx_dualcore_boot_cm4_cm7.o(i.SystemInit) referenced from startup_stm32h757xx_cm7.o(.text)
 <LI><a href="#[1b]">TAMP_STAMP_IRQHandler</a> from startup_stm32h757xx_cm7.o(.text) referenced from startup_stm32h757xx_cm7.o(RESET)
 <LI><a href="#[8a]">TIM15_IRQHandler</a> from startup_stm32h757xx_cm7.o(.text) referenced from startup_stm32h757xx_cm7.o(RESET)
 <LI><a href="#[8b]">TIM16_IRQHandler</a> from startup_stm32h757xx_cm7.o(.text) referenced from startup_stm32h757xx_cm7.o(RESET)
 <LI><a href="#[8c]">TIM17_IRQHandler</a> from stm32h7xx_it_1.o(i.TIM17_IRQHandler) referenced from startup_stm32h757xx_cm7.o(RESET)
 <LI><a href="#[31]">TIM1_BRK_IRQHandler</a> from startup_stm32h757xx_cm7.o(.text) referenced from startup_stm32h757xx_cm7.o(RESET)
 <LI><a href="#[34]">TIM1_CC_IRQHandler</a> from startup_stm32h757xx_cm7.o(.text) referenced from startup_stm32h757xx_cm7.o(RESET)
 <LI><a href="#[33]">TIM1_TRG_COM_IRQHandler</a> from startup_stm32h757xx_cm7.o(.text) referenced from startup_stm32h757xx_cm7.o(RESET)
 <LI><a href="#[32]">TIM1_UP_IRQHandler</a> from startup_stm32h757xx_cm7.o(.text) referenced from startup_stm32h757xx_cm7.o(RESET)
 <LI><a href="#[35]">TIM2_IRQHandler</a> from startup_stm32h757xx_cm7.o(.text) referenced from startup_stm32h757xx_cm7.o(RESET)
 <LI><a href="#[36]">TIM3_IRQHandler</a> from startup_stm32h757xx_cm7.o(.text) referenced from startup_stm32h757xx_cm7.o(RESET)
 <LI><a href="#[37]">TIM4_IRQHandler</a> from startup_stm32h757xx_cm7.o(.text) referenced from startup_stm32h757xx_cm7.o(RESET)
 <LI><a href="#[4a]">TIM5_IRQHandler</a> from startup_stm32h757xx_cm7.o(.text) referenced from startup_stm32h757xx_cm7.o(RESET)
 <LI><a href="#[4e]">TIM6_DAC_IRQHandler</a> from startup_stm32h757xx_cm7.o(.text) referenced from startup_stm32h757xx_cm7.o(RESET)
 <LI><a href="#[4f]">TIM7_IRQHandler</a> from startup_stm32h757xx_cm7.o(.text) referenced from startup_stm32h757xx_cm7.o(RESET)
 <LI><a href="#[43]">TIM8_BRK_TIM12_IRQHandler</a> from startup_stm32h757xx_cm7.o(.text) referenced from startup_stm32h757xx_cm7.o(RESET)
 <LI><a href="#[46]">TIM8_CC_IRQHandler</a> from startup_stm32h757xx_cm7.o(.text) referenced from startup_stm32h757xx_cm7.o(RESET)
 <LI><a href="#[45]">TIM8_TRG_COM_TIM14_IRQHandler</a> from startup_stm32h757xx_cm7.o(.text) referenced from startup_stm32h757xx_cm7.o(RESET)
 <LI><a href="#[44]">TIM8_UP_TIM13_IRQHandler</a> from startup_stm32h757xx_cm7.o(.text) referenced from startup_stm32h757xx_cm7.o(RESET)
 <LI><a href="#[ae]">TouchGFX_Task</a> from app_touchgfx.o(i.TouchGFX_Task) referenced from freertos.o(i.MX_FREERTOS_Init)
 <LI><a href="#[4c]">UART4_IRQHandler</a> from startup_stm32h757xx_cm7.o(.text) referenced from startup_stm32h757xx_cm7.o(RESET)
 <LI><a href="#[4d]">UART5_IRQHandler</a> from startup_stm32h757xx_cm7.o(.text) referenced from startup_stm32h757xx_cm7.o(RESET)
 <LI><a href="#[68]">UART7_IRQHandler</a> from startup_stm32h757xx_cm7.o(.text) referenced from startup_stm32h757xx_cm7.o(RESET)
 <LI><a href="#[69]">UART8_IRQHandler</a> from startup_stm32h757xx_cm7.o(.text) referenced from startup_stm32h757xx_cm7.o(RESET)
 <LI><a href="#[3e]">USART1_IRQHandler</a> from startup_stm32h757xx_cm7.o(.text) referenced from startup_stm32h757xx_cm7.o(RESET)
 <LI><a href="#[3f]">USART2_IRQHandler</a> from startup_stm32h757xx_cm7.o(.text) referenced from startup_stm32h757xx_cm7.o(RESET)
 <LI><a href="#[40]">USART3_IRQHandler</a> from startup_stm32h757xx_cm7.o(.text) referenced from startup_stm32h757xx_cm7.o(RESET)
 <LI><a href="#[5d]">USART6_IRQHandler</a> from startup_stm32h757xx_cm7.o(.text) referenced from startup_stm32h757xx_cm7.o(RESET)
 <LI><a href="#[14]">UsageFault_Handler</a> from stm32h7xx_it_1.o(i.UsageFault_Handler) referenced from startup_stm32h757xx_cm7.o(RESET)
 <LI><a href="#[aa]">WAKEUP_PIN_IRQHandler</a> from startup_stm32h757xx_cm7.o(.text) referenced from startup_stm32h757xx_cm7.o(RESET)
 <LI><a href="#[19]">WWDG_IRQHandler</a> from startup_stm32h757xx_cm7.o(.text) referenced from startup_stm32h757xx_cm7.o(RESET)
 <LI><a href="#[a5]">WWDG_RST_IRQHandler</a> from startup_stm32h757xx_cm7.o(.text) referenced from startup_stm32h757xx_cm7.o(RESET)
 <LI><a href="#[dd]">Screen1View::setupScreen()</a> from screen1view.o(i._ZN11Screen1View11setupScreenEv) referenced from screen1view.o(.constdata__ZTV11Screen1View)
 <LI><a href="#[df]">Screen1View::tearDownScreen()</a> from screen1view.o(i._ZN11Screen1View14tearDownScreenEv) referenced from screen1view.o(.constdata__ZTV11Screen1View)
 <LI><a href="#[db]">Screen1View::~Screen1View()</a> from screen1view.o(i._ZN11Screen1ViewD1Ev) referenced from screen1view.o(.constdata__ZTV11Screen1View)
 <LI><a href="#[fe]">TouchGFXHAL::beginFrame()</a> from touchgfxhal.o(i._ZN11TouchGFXHAL10beginFrameEv) referenced from touchgfxhal.o(.constdata__ZTV11TouchGFXHAL)
 <LI><a href="#[e6]">TouchGFXHAL::initialize()</a> from touchgfxhal.o(i._ZN11TouchGFXHAL10initializeEv) referenced from touchgfxhal.o(.constdata__ZTV11TouchGFXHAL)
 <LI><a href="#[f5]">TouchGFXHAL::enableInterrupts()</a> from touchgfxhal.o(i._ZN11TouchGFXHAL16enableInterruptsEv) referenced from touchgfxhal.o(.constdata__ZTV11TouchGFXHAL)
 <LI><a href="#[e8]">TouchGFXHAL::flushFrameBuffer(const touchgfx::Rect&)</a> from touchgfxhal.o(i._ZN11TouchGFXHAL16flushFrameBufferERKN8touchgfx4RectE) referenced from touchgfxhal.o(.constdata__ZTV11TouchGFXHAL)
 <LI><a href="#[f6]">TouchGFXHAL::disableInterrupts()</a> from touchgfxhal.o(i._ZN11TouchGFXHAL17disableInterruptsEv) referenced from touchgfxhal.o(.constdata__ZTV11TouchGFXHAL)
 <LI><a href="#[100]">TouchGFXHAL::setTFTFrameBuffer(unsigned short*)</a> from touchgfxhal.o(i._ZN11TouchGFXHAL17setTFTFrameBufferEPt) referenced from touchgfxhal.o(.constdata__ZTV11TouchGFXHAL)
 <LI><a href="#[f4]">TouchGFXHAL::configureInterrupts()</a> from touchgfxhal.o(i._ZN11TouchGFXHAL19configureInterruptsEv) referenced from touchgfxhal.o(.constdata__ZTV11TouchGFXHAL)
 <LI><a href="#[f7]">TouchGFXHAL::enableLCDControllerInterrupt()</a> from touchgfxhal.o(i._ZN11TouchGFXHAL28enableLCDControllerInterruptEv) referenced from touchgfxhal.o(.constdata__ZTV11TouchGFXHAL)
 <LI><a href="#[ff]">TouchGFXHAL::endFrame()</a> from touchgfxhal.o(i._ZN11TouchGFXHAL8endFrameEv) referenced from touchgfxhal.o(.constdata__ZTV11TouchGFXHAL)
 <LI><a href="#[d4]">TouchGFXHAL::~TouchGFXHAL()</a> from touchgfxhal.o(i._ZN11TouchGFXHALD1Ev) referenced from touchgfxhal.o(.constdata__ZTV11TouchGFXHAL)
 <LI><a href="#[d4]">TouchGFXHAL::~TouchGFXHAL()</a> from touchgfxhal.o(i._ZN11TouchGFXHALD1Ev) referenced from touchgfxconfiguration.o(i.__sti___25_TouchGFXConfiguration_cpp_f5abfd34)
 <LI><a href="#[d6]">FrontendHeap::~FrontendHeap()</a> from touchgfxconfiguration.o(i._ZN12FrontendHeapD1Ev) referenced from touchgfxconfiguration.o(.constdata__ZTV12FrontendHeap)
 <LI><a href="#[d6]">FrontendHeap::~FrontendHeap()</a> from touchgfxconfiguration.o(i._ZN12FrontendHeapD1Ev) referenced from touchgfxconfiguration.o(i.touchgfx_init)
 <LI><a href="#[108]">Screen1ViewBase::setupScreen()</a> from screen1viewbase.o(i._ZN15Screen1ViewBase11setupScreenEv) referenced from screen1viewbase.o(.constdata__ZTV15Screen1ViewBase)
 <LI><a href="#[107]">Screen1ViewBase::~Screen1ViewBase()</a> from screen1viewbase.o(i._ZN15Screen1ViewBaseD1Ev) referenced from screen1viewbase.o(.constdata__ZTV15Screen1ViewBase)
 <LI><a href="#[106]">FrontendHeapBase::gotoStartScreen(FrontendApplication&)</a> from touchgfxconfiguration.o(i._ZN16FrontendHeapBase15gotoStartScreenER19FrontendApplication) referenced from touchgfxconfiguration.o(.constdata__ZTV12FrontendHeap)
 <LI><a href="#[106]">FrontendHeapBase::gotoStartScreen(FrontendApplication&)</a> from touchgfxconfiguration.o(i._ZN16FrontendHeapBase15gotoStartScreenER19FrontendApplication) referenced from touchgfxconfiguration.o(.constdata__ZTV16FrontendHeapBase)
 <LI><a href="#[10a]">FrontendHeapBase::~FrontendHeapBase()</a> from touchgfxconfiguration.o(i._ZN16FrontendHeapBaseD1Ev) referenced from touchgfxconfiguration.o(.constdata__ZTV16FrontendHeapBase)
 <LI><a href="#[10c]">Screen1Presenter::deactivate()</a> from screen1presenter.o(i._ZN16Screen1Presenter10deactivateEv) referenced from screen1presenter.o(.constdata__ZTV16Screen1Presenter)
 <LI><a href="#[10b]">Screen1Presenter::activate()</a> from screen1presenter.o(i._ZN16Screen1Presenter8activateEv) referenced from screen1presenter.o(.constdata__ZTV16Screen1Presenter)
 <LI><a href="#[10d]">Screen1Presenter::~Screen1Presenter()</a> from screen1presenter.o(i._ZN16Screen1PresenterD1Ev) referenced from screen1presenter.o(.constdata__ZTV16Screen1Presenter)
 <LI><a href="#[112]">FrontendApplication::handleTickEvent()</a> from frontendapplication.o(i._ZN19FrontendApplication15handleTickEventEv) referenced from frontendapplication.o(.constdata__ZTV19FrontendApplication)
 <LI><a href="#[11a]">STM32TouchController::sampleTouch(int&, int&)</a> from stm32touchcontroller.o(i._ZN20STM32TouchController11sampleTouchERiS0_) referenced from stm32touchcontroller.o(.constdata__ZTV20STM32TouchController)
 <LI><a href="#[119]">STM32TouchController::init()</a> from stm32touchcontroller.o(i._ZN20STM32TouchController4initEv) referenced from stm32touchcontroller.o(.constdata__ZTV20STM32TouchController)
 <LI><a href="#[d0]">STM32TouchController::~STM32TouchController()</a> from stm32touchcontroller.o(i._ZN20STM32TouchControllerD1Ev) referenced from stm32touchcontroller.o(.constdata__ZTV20STM32TouchController)
 <LI><a href="#[d0]">STM32TouchController::~STM32TouchController()</a> from stm32touchcontroller.o(i._ZN20STM32TouchControllerD1Ev) referenced from touchgfxconfiguration.o(i.__sti___25_TouchGFXConfiguration_cpp_f5abfd34)
 <LI><a href="#[105]">TouchGFXGeneratedHAL::FlushCache()</a> from touchgfxgeneratedhal.o(i._ZN20TouchGFXGeneratedHAL10FlushCacheEv) referenced from touchgfxhal.o(.constdata__ZTV11TouchGFXHAL)
 <LI><a href="#[105]">TouchGFXGeneratedHAL::FlushCache()</a> from touchgfxgeneratedhal.o(i._ZN20TouchGFXGeneratedHAL10FlushCacheEv) referenced from touchgfxgeneratedhal.o(.constdata__ZTV20TouchGFXGeneratedHAL)
 <LI><a href="#[122]">TouchGFXGeneratedHAL::beginFrame()</a> from touchgfxgeneratedhal.o(i._ZN20TouchGFXGeneratedHAL10beginFrameEv) referenced from touchgfxgeneratedhal.o(.constdata__ZTV20TouchGFXGeneratedHAL)
 <LI><a href="#[11b]">TouchGFXGeneratedHAL::initialize()</a> from touchgfxgeneratedhal.o(i._ZN20TouchGFXGeneratedHAL10initializeEv) referenced from touchgfxgeneratedhal.o(.constdata__ZTV20TouchGFXGeneratedHAL)
 <LI><a href="#[104]">TouchGFXGeneratedHAL::InvalidateCache()</a> from touchgfxgeneratedhal.o(i._ZN20TouchGFXGeneratedHAL15InvalidateCacheEv) referenced from touchgfxhal.o(.constdata__ZTV11TouchGFXHAL)
 <LI><a href="#[104]">TouchGFXGeneratedHAL::InvalidateCache()</a> from touchgfxgeneratedhal.o(i._ZN20TouchGFXGeneratedHAL15InvalidateCacheEv) referenced from touchgfxgeneratedhal.o(.constdata__ZTV20TouchGFXGeneratedHAL)
 <LI><a href="#[11f]">TouchGFXGeneratedHAL::enableInterrupts()</a> from touchgfxgeneratedhal.o(i._ZN20TouchGFXGeneratedHAL16enableInterruptsEv) referenced from touchgfxgeneratedhal.o(.constdata__ZTV20TouchGFXGeneratedHAL)
 <LI><a href="#[11c]">TouchGFXGeneratedHAL::flushFrameBuffer(const touchgfx::Rect&)</a> from touchgfxgeneratedhal.o(i._ZN20TouchGFXGeneratedHAL16flushFrameBufferERKN8touchgfx4RectE) referenced from touchgfxgeneratedhal.o(.constdata__ZTV20TouchGFXGeneratedHAL)
 <LI><a href="#[120]">TouchGFXGeneratedHAL::disableInterrupts()</a> from touchgfxgeneratedhal.o(i._ZN20TouchGFXGeneratedHAL17disableInterruptsEv) referenced from touchgfxgeneratedhal.o(.constdata__ZTV20TouchGFXGeneratedHAL)
 <LI><a href="#[fc]">TouchGFXGeneratedHAL::getTFTCurrentLine()</a> from touchgfxgeneratedhal.o(i._ZN20TouchGFXGeneratedHAL17getTFTCurrentLineEv) referenced from touchgfxhal.o(.constdata__ZTV11TouchGFXHAL)
 <LI><a href="#[fc]">TouchGFXGeneratedHAL::getTFTCurrentLine()</a> from touchgfxgeneratedhal.o(i._ZN20TouchGFXGeneratedHAL17getTFTCurrentLineEv) referenced from touchgfxgeneratedhal.o(.constdata__ZTV20TouchGFXGeneratedHAL)
 <LI><a href="#[124]">TouchGFXGeneratedHAL::setTFTFrameBuffer(unsigned short*)</a> from touchgfxgeneratedhal.o(i._ZN20TouchGFXGeneratedHAL17setTFTFrameBufferEPt) referenced from touchgfxgeneratedhal.o(.constdata__ZTV20TouchGFXGeneratedHAL)
 <LI><a href="#[11e]">TouchGFXGeneratedHAL::configureInterrupts()</a> from touchgfxgeneratedhal.o(i._ZN20TouchGFXGeneratedHAL19configureInterruptsEv) referenced from touchgfxgeneratedhal.o(.constdata__ZTV20TouchGFXGeneratedHAL)
 <LI><a href="#[121]">TouchGFXGeneratedHAL::enableLCDControllerInterrupt()</a> from touchgfxgeneratedhal.o(i._ZN20TouchGFXGeneratedHAL28enableLCDControllerInterruptEv) referenced from touchgfxgeneratedhal.o(.constdata__ZTV20TouchGFXGeneratedHAL)
 <LI><a href="#[123]">TouchGFXGeneratedHAL::endFrame()</a> from touchgfxgeneratedhal.o(i._ZN20TouchGFXGeneratedHAL8endFrameEv) referenced from touchgfxgeneratedhal.o(.constdata__ZTV20TouchGFXGeneratedHAL)
 <LI><a href="#[d3]">ApplicationFontProvider::~ApplicationFontProvider()</a> from touchgfxconfiguration.o(i._ZN23ApplicationFontProviderD1Ev) referenced from applicationfontprovider.o(.constdata__ZTV23ApplicationFontProvider)
 <LI><a href="#[d3]">ApplicationFontProvider::~ApplicationFontProvider()</a> from touchgfxconfiguration.o(i._ZN23ApplicationFontProviderD1Ev) referenced from touchgfxconfiguration.o(i.__sti___25_TouchGFXConfiguration_cpp_f5abfd34)
 <LI><a href="#[da]">FrontendApplicationBase::gotoScreen1ScreenNoTransitionImpl()</a> from frontendapplicationbase.o(i._ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv) referenced from frontendapplicationbase.o(.constdata)
 <LI><a href="#[126]">FrontendApplicationBase::~FrontendApplicationBase()</a> from touchgfxconfiguration.o(i._ZN23FrontendApplicationBaseD1Ev) referenced from touchgfxconfiguration.o(.constdata__ZTV23FrontendApplicationBase)
 <LI><a href="#[127]">STM32DMA::getBlitCaps()</a> from stm32dma.o(i._ZN8STM32DMA11getBlitCapsEv) referenced from stm32dma.o(.constdata__ZTV8STM32DMA)
 <LI><a href="#[12e]">STM32DMA::setupDataCopy(const touchgfx::BlitOp&)</a> from stm32dma.o(i._ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE) referenced from stm32dma.o(.constdata__ZTV8STM32DMA)
 <LI><a href="#[12f]">STM32DMA::setupDataFill(const touchgfx::BlitOp&)</a> from stm32dma.o(i._ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE) referenced from stm32dma.o(.constdata__ZTV8STM32DMA)
 <LI><a href="#[129]">STM32DMA::flush()</a> from stm32dma.o(i._ZN8STM32DMA5flushEv) referenced from stm32dma.o(.constdata__ZTV8STM32DMA)
 <LI><a href="#[d1]">STM32DMA::~STM32DMA()</a> from touchgfxconfiguration.o(i._ZN8STM32DMAD1Ev) referenced from stm32dma.o(.constdata__ZTV8STM32DMA)
 <LI><a href="#[d1]">STM32DMA::~STM32DMA()</a> from touchgfxconfiguration.o(i._ZN8STM32DMAD1Ev) referenced from touchgfxconfiguration.o(i.__sti___25_TouchGFXConfiguration_cpp_f5abfd34)
 <LI><a href="#[b0]">touchgfx::OSWrappers::taskDelay(unsigned short)</a> from oswrappers.o(i._ZN8touchgfx10OSWrappers9taskDelayEt) referenced from touchgfxgeneratedhal.o(i._ZN20TouchGFXGeneratedHAL10initializeEv)
 <LI><a href="#[137]">touchgfx::Transition::invalidate()</a> from frontendapplicationbase.o(i._ZN8touchgfx10Transition10invalidateEv) referenced from frontendapplicationbase.o(.constdata__ZTVN8touchgfx10TransitionE)
 <LI><a href="#[137]">touchgfx::Transition::invalidate()</a> from frontendapplicationbase.o(i._ZN8touchgfx10Transition10invalidateEv) referenced from frontendapplicationbase.o(.constdata__ZTVN8touchgfx12NoTransitionE)
 <LI><a href="#[134]">touchgfx::Transition::handleTickEvent()</a> from frontendapplicationbase.o(i._ZN8touchgfx10Transition15handleTickEventEv) referenced from frontendapplicationbase.o(.constdata__ZTVN8touchgfx10TransitionE)
 <LI><a href="#[138]">touchgfx::Transition::setScreenContainer(touchgfx::Container&)</a> from frontendapplicationbase.o(i._ZN8touchgfx10Transition18setScreenContainerERNS_9ContainerE) referenced from frontendapplicationbase.o(.constdata__ZTVN8touchgfx10TransitionE)
 <LI><a href="#[138]">touchgfx::Transition::setScreenContainer(touchgfx::Container&)</a> from frontendapplicationbase.o(i._ZN8touchgfx10Transition18setScreenContainerERNS_9ContainerE) referenced from frontendapplicationbase.o(.constdata__ZTVN8touchgfx12NoTransitionE)
 <LI><a href="#[136]">touchgfx::Transition::init()</a> from frontendapplicationbase.o(i._ZN8touchgfx10Transition4initEv) referenced from frontendapplicationbase.o(.constdata__ZTVN8touchgfx10TransitionE)
 <LI><a href="#[136]">touchgfx::Transition::init()</a> from frontendapplicationbase.o(i._ZN8touchgfx10Transition4initEv) referenced from frontendapplicationbase.o(.constdata__ZTVN8touchgfx12NoTransitionE)
 <LI><a href="#[135]">touchgfx::Transition::tearDown()</a> from frontendapplicationbase.o(i._ZN8touchgfx10Transition8tearDownEv) referenced from frontendapplicationbase.o(.constdata__ZTVN8touchgfx10TransitionE)
 <LI><a href="#[135]">touchgfx::Transition::tearDown()</a> from frontendapplicationbase.o(i._ZN8touchgfx10Transition8tearDownEv) referenced from frontendapplicationbase.o(.constdata__ZTVN8touchgfx12NoTransitionE)
 <LI><a href="#[133]">touchgfx::Transition::~Transition()</a> from frontendapplicationbase.o(i._ZN8touchgfx10TransitionD1Ev) referenced from frontendapplicationbase.o(.constdata__ZTVN8touchgfx10TransitionE)
 <LI><a href="#[116]">touchgfx::Application::invalidate()</a> from application.o(i._ZN8touchgfx11Application10invalidateEv) referenced from frontendapplication.o(.constdata__ZTV19FrontendApplication)
 <LI><a href="#[116]">touchgfx::Application::invalidate()</a> from application.o(i._ZN8touchgfx11Application10invalidateEv) referenced from touchgfxconfiguration.o(.constdata__ZTV23FrontendApplicationBase)
 <LI><a href="#[116]">touchgfx::Application::invalidate()</a> from application.o(i._ZN8touchgfx11Application10invalidateEv) referenced from application.o(.constdata__ZTVN8touchgfx11ApplicationE)
 <LI><a href="#[116]">touchgfx::Application::invalidate()</a> from application.o(i._ZN8touchgfx11Application10invalidateEv) referenced from frontendapplicationbase.o(.constdata__ZTVN8touchgfx14MVPApplicationE)
 <LI><a href="#[111]">touchgfx::Application::handleKeyEvent(unsigned char)</a> from application.o(i._ZN8touchgfx11Application14handleKeyEventEh) referenced from frontendapplication.o(.constdata__ZTV19FrontendApplication)
 <LI><a href="#[111]">touchgfx::Application::handleKeyEvent(unsigned char)</a> from application.o(i._ZN8touchgfx11Application14handleKeyEventEh) referenced from touchgfxconfiguration.o(.constdata__ZTV23FrontendApplicationBase)
 <LI><a href="#[111]">touchgfx::Application::handleKeyEvent(unsigned char)</a> from application.o(i._ZN8touchgfx11Application14handleKeyEventEh) referenced from application.o(.constdata__ZTVN8touchgfx11ApplicationE)
 <LI><a href="#[111]">touchgfx::Application::handleKeyEvent(unsigned char)</a> from application.o(i._ZN8touchgfx11Application14handleKeyEventEh) referenced from frontendapplicationbase.o(.constdata__ZTVN8touchgfx14MVPApplicationE)
 <LI><a href="#[117]">touchgfx::Application::invalidateArea(touchgfx::Rect)</a> from application.o(i._ZN8touchgfx11Application14invalidateAreaENS_4RectE) referenced from frontendapplication.o(.constdata__ZTV19FrontendApplication)
 <LI><a href="#[117]">touchgfx::Application::invalidateArea(touchgfx::Rect)</a> from application.o(i._ZN8touchgfx11Application14invalidateAreaENS_4RectE) referenced from touchgfxconfiguration.o(.constdata__ZTV23FrontendApplicationBase)
 <LI><a href="#[117]">touchgfx::Application::invalidateArea(touchgfx::Rect)</a> from application.o(i._ZN8touchgfx11Application14invalidateAreaENS_4RectE) referenced from application.o(.constdata__ZTVN8touchgfx11ApplicationE)
 <LI><a href="#[117]">touchgfx::Application::invalidateArea(touchgfx::Rect)</a> from application.o(i._ZN8touchgfx11Application14invalidateAreaENS_4RectE) referenced from frontendapplicationbase.o(.constdata__ZTVN8touchgfx14MVPApplicationE)
 <LI><a href="#[115]">touchgfx::Application::drawCachedAreas()</a> from application.o(i._ZN8touchgfx11Application15drawCachedAreasEv) referenced from frontendapplication.o(.constdata__ZTV19FrontendApplication)
 <LI><a href="#[115]">touchgfx::Application::drawCachedAreas()</a> from application.o(i._ZN8touchgfx11Application15drawCachedAreasEv) referenced from touchgfxconfiguration.o(.constdata__ZTV23FrontendApplicationBase)
 <LI><a href="#[115]">touchgfx::Application::drawCachedAreas()</a> from application.o(i._ZN8touchgfx11Application15drawCachedAreasEv) referenced from application.o(.constdata__ZTVN8touchgfx11ApplicationE)
 <LI><a href="#[115]">touchgfx::Application::drawCachedAreas()</a> from application.o(i._ZN8touchgfx11Application15drawCachedAreasEv) referenced from frontendapplicationbase.o(.constdata__ZTVN8touchgfx14MVPApplicationE)
 <LI><a href="#[10f]">touchgfx::Application::handleDragEvent(const touchgfx::DragEvent&)</a> from application.o(i._ZN8touchgfx11Application15handleDragEventERKNS_9DragEventE) referenced from frontendapplication.o(.constdata__ZTV19FrontendApplication)
 <LI><a href="#[10f]">touchgfx::Application::handleDragEvent(const touchgfx::DragEvent&)</a> from application.o(i._ZN8touchgfx11Application15handleDragEventERKNS_9DragEventE) referenced from touchgfxconfiguration.o(.constdata__ZTV23FrontendApplicationBase)
 <LI><a href="#[10f]">touchgfx::Application::handleDragEvent(const touchgfx::DragEvent&)</a> from application.o(i._ZN8touchgfx11Application15handleDragEventERKNS_9DragEventE) referenced from application.o(.constdata__ZTVN8touchgfx11ApplicationE)
 <LI><a href="#[10f]">touchgfx::Application::handleDragEvent(const touchgfx::DragEvent&)</a> from application.o(i._ZN8touchgfx11Application15handleDragEventERKNS_9DragEventE) referenced from frontendapplicationbase.o(.constdata__ZTVN8touchgfx14MVPApplicationE)
 <LI><a href="#[125]">touchgfx::Application::handleTickEvent()</a> from application.o(i._ZN8touchgfx11Application15handleTickEventEv) referenced from touchgfxconfiguration.o(.constdata__ZTV23FrontendApplicationBase)
 <LI><a href="#[125]">touchgfx::Application::handleTickEvent()</a> from application.o(i._ZN8touchgfx11Application15handleTickEventEv) referenced from application.o(.constdata__ZTVN8touchgfx11ApplicationE)
 <LI><a href="#[125]">touchgfx::Application::handleTickEvent()</a> from application.o(i._ZN8touchgfx11Application15handleTickEventEv) referenced from frontendapplicationbase.o(.constdata__ZTVN8touchgfx14MVPApplicationE)
 <LI><a href="#[114]">touchgfx::Application::clearCachedAreas()</a> from application.o(i._ZN8touchgfx11Application16clearCachedAreasEv) referenced from frontendapplication.o(.constdata__ZTV19FrontendApplication)
 <LI><a href="#[114]">touchgfx::Application::clearCachedAreas()</a> from application.o(i._ZN8touchgfx11Application16clearCachedAreasEv) referenced from touchgfxconfiguration.o(.constdata__ZTV23FrontendApplicationBase)
 <LI><a href="#[114]">touchgfx::Application::clearCachedAreas()</a> from application.o(i._ZN8touchgfx11Application16clearCachedAreasEv) referenced from application.o(.constdata__ZTVN8touchgfx11ApplicationE)
 <LI><a href="#[114]">touchgfx::Application::clearCachedAreas()</a> from application.o(i._ZN8touchgfx11Application16clearCachedAreasEv) referenced from frontendapplicationbase.o(.constdata__ZTVN8touchgfx14MVPApplicationE)
 <LI><a href="#[10e]">touchgfx::Application::handleClickEvent(const touchgfx::ClickEvent&)</a> from application.o(i._ZN8touchgfx11Application16handleClickEventERKNS_10ClickEventE) referenced from frontendapplication.o(.constdata__ZTV19FrontendApplication)
 <LI><a href="#[10e]">touchgfx::Application::handleClickEvent(const touchgfx::ClickEvent&)</a> from application.o(i._ZN8touchgfx11Application16handleClickEventERKNS_10ClickEventE) referenced from touchgfxconfiguration.o(.constdata__ZTV23FrontendApplicationBase)
 <LI><a href="#[10e]">touchgfx::Application::handleClickEvent(const touchgfx::ClickEvent&)</a> from application.o(i._ZN8touchgfx11Application16handleClickEventERKNS_10ClickEventE) referenced from application.o(.constdata__ZTVN8touchgfx11ApplicationE)
 <LI><a href="#[10e]">touchgfx::Application::handleClickEvent(const touchgfx::ClickEvent&)</a> from application.o(i._ZN8touchgfx11Application16handleClickEventERKNS_10ClickEventE) referenced from frontendapplicationbase.o(.constdata__ZTVN8touchgfx14MVPApplicationE)
 <LI><a href="#[110]">touchgfx::Application::handleGestureEvent(const touchgfx::GestureEvent&)</a> from application.o(i._ZN8touchgfx11Application18handleGestureEventERKNS_12GestureEventE) referenced from frontendapplication.o(.constdata__ZTV19FrontendApplication)
 <LI><a href="#[110]">touchgfx::Application::handleGestureEvent(const touchgfx::GestureEvent&)</a> from application.o(i._ZN8touchgfx11Application18handleGestureEventERKNS_12GestureEventE) referenced from touchgfxconfiguration.o(.constdata__ZTV23FrontendApplicationBase)
 <LI><a href="#[110]">touchgfx::Application::handleGestureEvent(const touchgfx::GestureEvent&)</a> from application.o(i._ZN8touchgfx11Application18handleGestureEventERKNS_12GestureEventE) referenced from application.o(.constdata__ZTVN8touchgfx11ApplicationE)
 <LI><a href="#[110]">touchgfx::Application::handleGestureEvent(const touchgfx::GestureEvent&)</a> from application.o(i._ZN8touchgfx11Application18handleGestureEventERKNS_12GestureEventE) referenced from frontendapplicationbase.o(.constdata__ZTVN8touchgfx14MVPApplicationE)
 <LI><a href="#[139]">touchgfx::Application::handlePendingScreenTransition()</a> from application.o(i._ZN8touchgfx11Application29handlePendingScreenTransitionEv) referenced from application.o(.constdata__ZTVN8touchgfx11ApplicationE)
 <LI><a href="#[118]">touchgfx::Application::draw(touchgfx::Rect&)</a> from application.o(i._ZN8touchgfx11Application4drawERNS_4RectE) referenced from frontendapplication.o(.constdata__ZTV19FrontendApplication)
 <LI><a href="#[118]">touchgfx::Application::draw(touchgfx::Rect&)</a> from application.o(i._ZN8touchgfx11Application4drawERNS_4RectE) referenced from touchgfxconfiguration.o(.constdata__ZTV23FrontendApplicationBase)
 <LI><a href="#[118]">touchgfx::Application::draw(touchgfx::Rect&)</a> from application.o(i._ZN8touchgfx11Application4drawERNS_4RectE) referenced from application.o(.constdata__ZTVN8touchgfx11ApplicationE)
 <LI><a href="#[118]">touchgfx::Application::draw(touchgfx::Rect&)</a> from application.o(i._ZN8touchgfx11Application4drawERNS_4RectE) referenced from frontendapplicationbase.o(.constdata__ZTVN8touchgfx14MVPApplicationE)
 <LI><a href="#[13c]">touchgfx::NoTransition::handleTickEvent()</a> from frontendapplicationbase.o(i._ZN8touchgfx12NoTransition15handleTickEventEv) referenced from frontendapplicationbase.o(.constdata__ZTVN8touchgfx12NoTransitionE)
 <LI><a href="#[13b]">touchgfx::NoTransition::~NoTransition()</a> from frontendapplicationbase.o(i._ZN8touchgfx12NoTransitionD1Ev) referenced from frontendapplicationbase.o(.constdata__ZTVN8touchgfx12NoTransitionE)
 <LI><a href="#[128]">touchgfx::DMA_Interface::addToQueue(const touchgfx::BlitOp&)</a> from dma.o(i._ZN8touchgfx13DMA_Interface10addToQueueERKNS_6BlitOpE) referenced from stm32dma.o(.constdata__ZTV8STM32DMA)
 <LI><a href="#[128]">touchgfx::DMA_Interface::addToQueue(const touchgfx::BlitOp&)</a> from dma.o(i._ZN8touchgfx13DMA_Interface10addToQueueERKNS_6BlitOpE) referenced from dma.o(.constdata__ZTVN8touchgfx13DMA_InterfaceE)
 <LI><a href="#[12a]">touchgfx::DMA_Interface::initialize()</a> from stm32dma.o(i._ZN8touchgfx13DMA_Interface10initializeEv) referenced from stm32dma.o(.constdata__ZTV8STM32DMA)
 <LI><a href="#[12a]">touchgfx::DMA_Interface::initialize()</a> from stm32dma.o(i._ZN8touchgfx13DMA_Interface10initializeEv) referenced from dma.o(.constdata__ZTVN8touchgfx13DMA_InterfaceE)
 <LI><a href="#[130]">touchgfx::DMA_Interface::enableAlpha(unsigned char)</a> from dma.o(i._ZN8touchgfx13DMA_Interface11enableAlphaEh) referenced from stm32dma.o(.constdata__ZTV8STM32DMA)
 <LI><a href="#[130]">touchgfx::DMA_Interface::enableAlpha(unsigned char)</a> from dma.o(i._ZN8touchgfx13DMA_Interface11enableAlphaEh) referenced from dma.o(.constdata__ZTVN8touchgfx13DMA_InterfaceE)
 <LI><a href="#[131]">touchgfx::DMA_Interface::disableAlpha()</a> from dma.o(i._ZN8touchgfx13DMA_Interface12disableAlphaEv) referenced from stm32dma.o(.constdata__ZTV8STM32DMA)
 <LI><a href="#[131]">touchgfx::DMA_Interface::disableAlpha()</a> from dma.o(i._ZN8touchgfx13DMA_Interface12disableAlphaEv) referenced from dma.o(.constdata__ZTVN8touchgfx13DMA_InterfaceE)
 <LI><a href="#[12d]">touchgfx::DMA_Interface::seedExecution()</a> from dma.o(i._ZN8touchgfx13DMA_Interface13seedExecutionEv) referenced from stm32dma.o(.constdata__ZTV8STM32DMA)
 <LI><a href="#[12d]">touchgfx::DMA_Interface::seedExecution()</a> from dma.o(i._ZN8touchgfx13DMA_Interface13seedExecutionEv) referenced from dma.o(.constdata__ZTVN8touchgfx13DMA_InterfaceE)
 <LI><a href="#[132]">touchgfx::DMA_Interface::waitForFrameBufferSemaphore()</a> from dma.o(i._ZN8touchgfx13DMA_Interface27waitForFrameBufferSemaphoreEv) referenced from stm32dma.o(.constdata__ZTV8STM32DMA)
 <LI><a href="#[132]">touchgfx::DMA_Interface::waitForFrameBufferSemaphore()</a> from dma.o(i._ZN8touchgfx13DMA_Interface27waitForFrameBufferSemaphoreEv) referenced from dma.o(.constdata__ZTVN8touchgfx13DMA_InterfaceE)
 <LI><a href="#[13d]">touchgfx::DMA_Interface::flush()</a> from dma.o(i._ZN8touchgfx13DMA_Interface5flushEv) referenced from dma.o(.constdata__ZTVN8touchgfx13DMA_InterfaceE)
 <LI><a href="#[12b]">touchgfx::DMA_Interface::start()</a> from dma.o(i._ZN8touchgfx13DMA_Interface5startEv) referenced from stm32dma.o(.constdata__ZTV8STM32DMA)
 <LI><a href="#[12b]">touchgfx::DMA_Interface::start()</a> from dma.o(i._ZN8touchgfx13DMA_Interface5startEv) referenced from dma.o(.constdata__ZTVN8touchgfx13DMA_InterfaceE)
 <LI><a href="#[12c]">touchgfx::DMA_Interface::execute()</a> from dma.o(i._ZN8touchgfx13DMA_Interface7executeEv) referenced from stm32dma.o(.constdata__ZTV8STM32DMA)
 <LI><a href="#[12c]">touchgfx::DMA_Interface::execute()</a> from dma.o(i._ZN8touchgfx13DMA_Interface7executeEv) referenced from dma.o(.constdata__ZTVN8touchgfx13DMA_InterfaceE)
 <LI><a href="#[af]">touchgfx::GeneratedFont::~GeneratedFont()</a> from generatedfont.o(i._ZN8touchgfx13GeneratedFontD1Ev) referenced from generatedfont.o(.constdata__ZTVN8touchgfx13GeneratedFontE)
 <LI><a href="#[af]">touchgfx::GeneratedFont::~GeneratedFont()</a> from generatedfont.o(i._ZN8touchgfx13GeneratedFontD1Ev) referenced from table_verdana_10_4bpp.o(i._Z23getFont_verdana_10_4bppv)
 <LI><a href="#[af]">touchgfx::GeneratedFont::~GeneratedFont()</a> from generatedfont.o(i._ZN8touchgfx13GeneratedFontD1Ev) referenced from table_verdana_20_4bpp.o(i._Z23getFont_verdana_20_4bppv)
 <LI><a href="#[af]">touchgfx::GeneratedFont::~GeneratedFont()</a> from generatedfont.o(i._ZN8touchgfx13GeneratedFontD1Ev) referenced from table_verdana_40_4bpp.o(i._Z23getFont_verdana_40_4bppv)
 <LI><a href="#[113]">touchgfx::MVPApplication::handlePendingScreenTransition()</a> from touchgfxconfiguration.o(i._ZN8touchgfx14MVPApplication29handlePendingScreenTransitionEv) referenced from frontendapplication.o(.constdata__ZTV19FrontendApplication)
 <LI><a href="#[113]">touchgfx::MVPApplication::handlePendingScreenTransition()</a> from touchgfxconfiguration.o(i._ZN8touchgfx14MVPApplication29handlePendingScreenTransitionEv) referenced from touchgfxconfiguration.o(.constdata__ZTV23FrontendApplicationBase)
 <LI><a href="#[113]">touchgfx::MVPApplication::handlePendingScreenTransition()</a> from touchgfxconfiguration.o(i._ZN8touchgfx14MVPApplication29handlePendingScreenTransitionEv) referenced from frontendapplicationbase.o(.constdata__ZTVN8touchgfx14MVPApplicationE)
 <LI><a href="#[14c]">touchgfx::AbstractPartition::~AbstractPartition__sub_object()</a> from abstractpartition.o(i._ZN8touchgfx17AbstractPartitionD2Ev) referenced from abstractpartition.o(.constdata__ZTVN8touchgfx17AbstractPartitionE)
 <LI><a href="#[14f]">touchgfx::LockFreeDMA_Queue::pushCopyOf(const touchgfx::BlitOp&)</a> from dma.o(i._ZN8touchgfx17LockFreeDMA_Queue10pushCopyOfERKNS_6BlitOpE) referenced from dma.o(.constdata__ZTVN8touchgfx17LockFreeDMA_QueueE)
 <LI><a href="#[150]">touchgfx::LockFreeDMA_Queue::first()</a> from dma.o(i._ZN8touchgfx17LockFreeDMA_Queue5firstEv) referenced from dma.o(.constdata__ZTVN8touchgfx17LockFreeDMA_QueueE)
 <LI><a href="#[14e]">touchgfx::LockFreeDMA_Queue::isFull()</a> from dma.o(i._ZN8touchgfx17LockFreeDMA_Queue6isFullEv) referenced from dma.o(.constdata__ZTVN8touchgfx17LockFreeDMA_QueueE)
 <LI><a href="#[14d]">touchgfx::LockFreeDMA_Queue::isEmpty()</a> from dma.o(i._ZN8touchgfx17LockFreeDMA_Queue7isEmptyEv) referenced from dma.o(.constdata__ZTVN8touchgfx17LockFreeDMA_QueueE)
 <LI><a href="#[151]">touchgfx::TextAreaWithOneWildcard::~TextAreaWithOneWildcard()</a> from screen1viewbase.o(i._ZN8touchgfx23TextAreaWithOneWildcardD1Ev) referenced from screen1viewbase.o(.constdata__ZTVN8touchgfx23TextAreaWithOneWildcardE)
 <LI><a href="#[168]">touchgfx::Box::~Box()</a> from screen1viewbase.o(i._ZN8touchgfx3BoxD1Ev) referenced from box.o(.constdata__ZTVN8touchgfx3BoxE)
 <LI><a href="#[173]">touchgfx::HAL::FlushCache()</a> from hal.o(i._ZN8touchgfx3HAL10FlushCacheEv) referenced from hal.o(.constdata__ZTVN8touchgfx3HALE)
 <LI><a href="#[170]">touchgfx::HAL::beginFrame()</a> from hal.o(i._ZN8touchgfx3HAL10beginFrameEv) referenced from hal.o(.constdata__ZTVN8touchgfx3HALE)
 <LI><a href="#[16d]">touchgfx::HAL::initialize()</a> from hal.o(i._ZN8touchgfx3HAL10initializeEv) referenced from hal.o(.constdata__ZTVN8touchgfx3HALE)
 <LI><a href="#[ee]">touchgfx::HAL::getBlitCaps()</a> from touchgfxhal.o(i._ZN8touchgfx3HAL11getBlitCapsEv) referenced from touchgfxhal.o(.constdata__ZTV11TouchGFXHAL)
 <LI><a href="#[ee]">touchgfx::HAL::getBlitCaps()</a> from touchgfxhal.o(i._ZN8touchgfx3HAL11getBlitCapsEv) referenced from touchgfxgeneratedhal.o(.constdata__ZTV20TouchGFXGeneratedHAL)
 <LI><a href="#[ee]">touchgfx::HAL::getBlitCaps()</a> from touchgfxhal.o(i._ZN8touchgfx3HAL11getBlitCapsEv) referenced from hal.o(.constdata__ZTVN8touchgfx3HALE)
 <LI><a href="#[ef]">touchgfx::HAL::blitCopyGlyph(const unsigned char*, unsigned short, unsigned short, unsigned short, unsigned short, unsigned short, touchgfx::colortype, unsigned char, touchgfx::BlitOperations, bool)</a> from hal.o(i._ZN8touchgfx3HAL13blitCopyGlyphEPKhtttttNS_9colortypeEhNS_14BlitOperationsEb) referenced from touchgfxhal.o(.constdata__ZTV11TouchGFXHAL)
 <LI><a href="#[ef]">touchgfx::HAL::blitCopyGlyph(const unsigned char*, unsigned short, unsigned short, unsigned short, unsigned short, unsigned short, touchgfx::colortype, unsigned char, touchgfx::BlitOperations, bool)</a> from hal.o(i._ZN8touchgfx3HAL13blitCopyGlyphEPKhtttttNS_9colortypeEhNS_14BlitOperationsEb) referenced from touchgfxgeneratedhal.o(.constdata__ZTV20TouchGFXGeneratedHAL)
 <LI><a href="#[ef]">touchgfx::HAL::blitCopyGlyph(const unsigned char*, unsigned short, unsigned short, unsigned short, unsigned short, unsigned short, touchgfx::colortype, unsigned char, touchgfx::BlitOperations, bool)</a> from hal.o(i._ZN8touchgfx3HAL13blitCopyGlyphEPKhtttttNS_9colortypeEhNS_14BlitOperationsEb) referenced from hal.o(.constdata__ZTVN8touchgfx3HALE)
 <LI><a href="#[172]">touchgfx::HAL::InvalidateCache()</a> from hal.o(i._ZN8touchgfx3HAL15InvalidateCacheEv) referenced from hal.o(.constdata__ZTVN8touchgfx3HALE)
 <LI><a href="#[f3]">touchgfx::HAL::backPorchExited()</a> from touchgfxhal.o(i._ZN8touchgfx3HAL15backPorchExitedEv) referenced from touchgfxhal.o(.constdata__ZTV11TouchGFXHAL)
 <LI><a href="#[f3]">touchgfx::HAL::backPorchExited()</a> from touchgfxhal.o(i._ZN8touchgfx3HAL15backPorchExitedEv) referenced from touchgfxgeneratedhal.o(.constdata__ZTV20TouchGFXGeneratedHAL)
 <LI><a href="#[f3]">touchgfx::HAL::backPorchExited()</a> from touchgfxhal.o(i._ZN8touchgfx3HAL15backPorchExitedEv) referenced from hal.o(.constdata__ZTVN8touchgfx3HALE)
 <LI><a href="#[eb]">touchgfx::HAL::lockFrameBuffer()</a> from hal.o(i._ZN8touchgfx3HAL15lockFrameBufferEv) referenced from touchgfxhal.o(.constdata__ZTV11TouchGFXHAL)
 <LI><a href="#[eb]">touchgfx::HAL::lockFrameBuffer()</a> from hal.o(i._ZN8touchgfx3HAL15lockFrameBufferEv) referenced from touchgfxgeneratedhal.o(.constdata__ZTV20TouchGFXGeneratedHAL)
 <LI><a href="#[eb]">touchgfx::HAL::lockFrameBuffer()</a> from hal.o(i._ZN8touchgfx3HAL15lockFrameBufferEv) referenced from hal.o(.constdata__ZTVN8touchgfx3HALE)
 <LI><a href="#[16e]">touchgfx::HAL::flushFrameBuffer(const touchgfx::Rect&)</a> from hal.o(i._ZN8touchgfx3HAL16flushFrameBufferERKNS_4RectE) referenced from hal.o(.constdata__ZTVN8touchgfx3HALE)
 <LI><a href="#[e9]">touchgfx::HAL::allowDMATransfers()</a> from hal.o(i._ZN8touchgfx3HAL17allowDMATransfersEv) referenced from touchgfxhal.o(.constdata__ZTV11TouchGFXHAL)
 <LI><a href="#[e9]">touchgfx::HAL::allowDMATransfers()</a> from hal.o(i._ZN8touchgfx3HAL17allowDMATransfersEv) referenced from touchgfxgeneratedhal.o(.constdata__ZTV20TouchGFXGeneratedHAL)
 <LI><a href="#[e9]">touchgfx::HAL::allowDMATransfers()</a> from hal.o(i._ZN8touchgfx3HAL17allowDMATransfersEv) referenced from hal.o(.constdata__ZTVN8touchgfx3HALE)
 <LI><a href="#[16f]">touchgfx::HAL::getTFTCurrentLine()</a> from hal.o(i._ZN8touchgfx3HAL17getTFTCurrentLineEv) referenced from hal.o(.constdata__ZTVN8touchgfx3HALE)
 <LI><a href="#[ec]">touchgfx::HAL::unlockFrameBuffer()</a> from hal.o(i._ZN8touchgfx3HAL17unlockFrameBufferEv) referenced from touchgfxhal.o(.constdata__ZTV11TouchGFXHAL)
 <LI><a href="#[ec]">touchgfx::HAL::unlockFrameBuffer()</a> from hal.o(i._ZN8touchgfx3HAL17unlockFrameBufferEv) referenced from touchgfxgeneratedhal.o(.constdata__ZTV20TouchGFXGeneratedHAL)
 <LI><a href="#[ec]">touchgfx::HAL::unlockFrameBuffer()</a> from hal.o(i._ZN8touchgfx3HAL17unlockFrameBufferEv) referenced from hal.o(.constdata__ZTVN8touchgfx3HALE)
 <LI><a href="#[f9]">touchgfx::HAL::setAnimationStorage(void*)</a> from touchgfxhal.o(i._ZN8touchgfx3HAL19setAnimationStorageEPv) referenced from touchgfxhal.o(.constdata__ZTV11TouchGFXHAL)
 <LI><a href="#[f9]">touchgfx::HAL::setAnimationStorage(void*)</a> from touchgfxhal.o(i._ZN8touchgfx3HAL19setAnimationStorageEPv) referenced from touchgfxgeneratedhal.o(.constdata__ZTV20TouchGFXGeneratedHAL)
 <LI><a href="#[f9]">touchgfx::HAL::setAnimationStorage(void*)</a> from touchgfxhal.o(i._ZN8touchgfx3HAL19setAnimationStorageEPv) referenced from hal.o(.constdata__ZTVN8touchgfx3HALE)
 <LI><a href="#[f2]">touchgfx::HAL::registerEventListener(touchgfx::UIEventListener&)</a> from hal.o(i._ZN8touchgfx3HAL21registerEventListenerERNS_15UIEventListenerE) referenced from touchgfxhal.o(.constdata__ZTV11TouchGFXHAL)
 <LI><a href="#[f2]">touchgfx::HAL::registerEventListener(touchgfx::UIEventListener&)</a> from hal.o(i._ZN8touchgfx3HAL21registerEventListenerERNS_15UIEventListenerE) referenced from touchgfxgeneratedhal.o(.constdata__ZTV20TouchGFXGeneratedHAL)
 <LI><a href="#[f2]">touchgfx::HAL::registerEventListener(touchgfx::UIEventListener&)</a> from hal.o(i._ZN8touchgfx3HAL21registerEventListenerERNS_15UIEventListenerE) referenced from hal.o(.constdata__ZTVN8touchgfx3HALE)
 <LI><a href="#[e5]">touchgfx::HAL::setDisplayOrientation(touchgfx::DisplayOrientation)</a> from touchgfxhal.o(i._ZN8touchgfx3HAL21setDisplayOrientationENS_18DisplayOrientationE) referenced from touchgfxhal.o(.constdata__ZTV11TouchGFXHAL)
 <LI><a href="#[e5]">touchgfx::HAL::setDisplayOrientation(touchgfx::DisplayOrientation)</a> from touchgfxhal.o(i._ZN8touchgfx3HAL21setDisplayOrientationENS_18DisplayOrientationE) referenced from touchgfxgeneratedhal.o(.constdata__ZTV20TouchGFXGeneratedHAL)
 <LI><a href="#[e5]">touchgfx::HAL::setDisplayOrientation(touchgfx::DisplayOrientation)</a> from touchgfxhal.o(i._ZN8touchgfx3HAL21setDisplayOrientationENS_18DisplayOrientationE) referenced from hal.o(.constdata__ZTVN8touchgfx3HALE)
 <LI><a href="#[fa]">touchgfx::HAL::configurePartialFrameBuffer(unsigned short, unsigned short, unsigned short, unsigned short)</a> from hal.o(i._ZN8touchgfx3HAL27configurePartialFrameBufferEtttt) referenced from touchgfxhal.o(.constdata__ZTV11TouchGFXHAL)
 <LI><a href="#[fa]">touchgfx::HAL::configurePartialFrameBuffer(unsigned short, unsigned short, unsigned short, unsigned short)</a> from hal.o(i._ZN8touchgfx3HAL27configurePartialFrameBufferEtttt) referenced from touchgfxgeneratedhal.o(.constdata__ZTV20TouchGFXGeneratedHAL)
 <LI><a href="#[fa]">touchgfx::HAL::configurePartialFrameBuffer(unsigned short, unsigned short, unsigned short, unsigned short)</a> from hal.o(i._ZN8touchgfx3HAL27configurePartialFrameBufferEtttt) referenced from hal.o(.constdata__ZTVN8touchgfx3HALE)
 <LI><a href="#[f8]">touchgfx::HAL::setFrameBufferStartAddresses(void*, void*, void*)</a> from touchgfxhal.o(i._ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_) referenced from touchgfxhal.o(.constdata__ZTV11TouchGFXHAL)
 <LI><a href="#[f8]">touchgfx::HAL::setFrameBufferStartAddresses(void*, void*, void*)</a> from touchgfxhal.o(i._ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_) referenced from touchgfxgeneratedhal.o(.constdata__ZTV20TouchGFXGeneratedHAL)
 <LI><a href="#[f8]">touchgfx::HAL::setFrameBufferStartAddresses(void*, void*, void*)</a> from touchgfxhal.o(i._ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_) referenced from hal.o(.constdata__ZTVN8touchgfx3HALE)
 <LI><a href="#[103]">touchgfx::HAL::performDisplayOrientationChange()</a> from touchgfxhal.o(i._ZN8touchgfx3HAL31performDisplayOrientationChangeEv) referenced from touchgfxhal.o(.constdata__ZTV11TouchGFXHAL)
 <LI><a href="#[103]">touchgfx::HAL::performDisplayOrientationChange()</a> from touchgfxhal.o(i._ZN8touchgfx3HAL31performDisplayOrientationChangeEv) referenced from touchgfxgeneratedhal.o(.constdata__ZTV20TouchGFXGeneratedHAL)
 <LI><a href="#[103]">touchgfx::HAL::performDisplayOrientationChange()</a> from touchgfxhal.o(i._ZN8touchgfx3HAL31performDisplayOrientationChangeEv) referenced from hal.o(.constdata__ZTVN8touchgfx3HALE)
 <LI><a href="#[fd]">touchgfx::HAL::tick()</a> from hal.o(i._ZN8touchgfx3HAL4tickEv) referenced from touchgfxhal.o(.constdata__ZTV11TouchGFXHAL)
 <LI><a href="#[fd]">touchgfx::HAL::tick()</a> from hal.o(i._ZN8touchgfx3HAL4tickEv) referenced from touchgfxgeneratedhal.o(.constdata__ZTV20TouchGFXGeneratedHAL)
 <LI><a href="#[fd]">touchgfx::HAL::tick()</a> from hal.o(i._ZN8touchgfx3HAL4tickEv) referenced from hal.o(.constdata__ZTVN8touchgfx3HALE)
 <LI><a href="#[101]">touchgfx::HAL::touch(int, int)</a> from hal.o(i._ZN8touchgfx3HAL5touchEii) referenced from touchgfxhal.o(.constdata__ZTV11TouchGFXHAL)
 <LI><a href="#[101]">touchgfx::HAL::touch(int, int)</a> from hal.o(i._ZN8touchgfx3HAL5touchEii) referenced from touchgfxgeneratedhal.o(.constdata__ZTV20TouchGFXGeneratedHAL)
 <LI><a href="#[101]">touchgfx::HAL::touch(int, int)</a> from hal.o(i._ZN8touchgfx3HAL5touchEii) referenced from hal.o(.constdata__ZTVN8touchgfx3HALE)
 <LI><a href="#[102]">touchgfx::HAL::noTouch()</a> from hal.o(i._ZN8touchgfx3HAL7noTouchEv) referenced from touchgfxhal.o(.constdata__ZTV11TouchGFXHAL)
 <LI><a href="#[102]">touchgfx::HAL::noTouch()</a> from hal.o(i._ZN8touchgfx3HAL7noTouchEv) referenced from touchgfxgeneratedhal.o(.constdata__ZTV20TouchGFXGeneratedHAL)
 <LI><a href="#[102]">touchgfx::HAL::noTouch()</a> from hal.o(i._ZN8touchgfx3HAL7noTouchEv) referenced from hal.o(.constdata__ZTVN8touchgfx3HALE)
 <LI><a href="#[f1]">touchgfx::HAL::blitFill(touchgfx::colortype, unsigned short, unsigned short, unsigned short, unsigned short, unsigned char, bool)</a> from hal.o(i._ZN8touchgfx3HAL8blitFillENS_9colortypeEtttthb) referenced from touchgfxhal.o(.constdata__ZTV11TouchGFXHAL)
 <LI><a href="#[f1]">touchgfx::HAL::blitFill(touchgfx::colortype, unsigned short, unsigned short, unsigned short, unsigned short, unsigned char, bool)</a> from hal.o(i._ZN8touchgfx3HAL8blitFillENS_9colortypeEtttthb) referenced from touchgfxgeneratedhal.o(.constdata__ZTV20TouchGFXGeneratedHAL)
 <LI><a href="#[f1]">touchgfx::HAL::blitFill(touchgfx::colortype, unsigned short, unsigned short, unsigned short, unsigned short, unsigned char, bool)</a> from hal.o(i._ZN8touchgfx3HAL8blitFillENS_9colortypeEtttthb) referenced from hal.o(.constdata__ZTVN8touchgfx3HALE)
 <LI><a href="#[f0]">touchgfx::HAL::blitFill(touchgfx::colortype, unsigned short, unsigned short, unsigned short, unsigned short, unsigned char, unsigned short, touchgfx::Bitmap::BitmapFormat, bool)</a> from hal.o(i._ZN8touchgfx3HAL8blitFillENS_9colortypeEtttthtNS_6Bitmap12BitmapFormatEb) referenced from touchgfxhal.o(.constdata__ZTV11TouchGFXHAL)
 <LI><a href="#[f0]">touchgfx::HAL::blitFill(touchgfx::colortype, unsigned short, unsigned short, unsigned short, unsigned short, unsigned char, unsigned short, touchgfx::Bitmap::BitmapFormat, bool)</a> from hal.o(i._ZN8touchgfx3HAL8blitFillENS_9colortypeEtttthtNS_6Bitmap12BitmapFormatEb) referenced from touchgfxgeneratedhal.o(.constdata__ZTV20TouchGFXGeneratedHAL)
 <LI><a href="#[f0]">touchgfx::HAL::blitFill(touchgfx::colortype, unsigned short, unsigned short, unsigned short, unsigned short, unsigned char, unsigned short, touchgfx::Bitmap::BitmapFormat, bool)</a> from hal.o(i._ZN8touchgfx3HAL8blitFillENS_9colortypeEtttthtNS_6Bitmap12BitmapFormatEb) referenced from hal.o(.constdata__ZTVN8touchgfx3HALE)
 <LI><a href="#[171]">touchgfx::HAL::endFrame()</a> from hal.o(i._ZN8touchgfx3HAL8endFrameEv) referenced from hal.o(.constdata__ZTVN8touchgfx3HALE)
 <LI><a href="#[ea]">touchgfx::HAL::flushDMA()</a> from hal.o(i._ZN8touchgfx3HAL8flushDMAEv) referenced from touchgfxhal.o(.constdata__ZTV11TouchGFXHAL)
 <LI><a href="#[ea]">touchgfx::HAL::flushDMA()</a> from hal.o(i._ZN8touchgfx3HAL8flushDMAEv) referenced from touchgfxgeneratedhal.o(.constdata__ZTV20TouchGFXGeneratedHAL)
 <LI><a href="#[ea]">touchgfx::HAL::flushDMA()</a> from hal.o(i._ZN8touchgfx3HAL8flushDMAEv) referenced from hal.o(.constdata__ZTVN8touchgfx3HALE)
 <LI><a href="#[fb]">touchgfx::HAL::taskDelay(unsigned short)</a> from touchgfxhal.o(i._ZN8touchgfx3HAL9taskDelayEt) referenced from touchgfxhal.o(.constdata__ZTV11TouchGFXHAL)
 <LI><a href="#[fb]">touchgfx::HAL::taskDelay(unsigned short)</a> from touchgfxhal.o(i._ZN8touchgfx3HAL9taskDelayEt) referenced from touchgfxgeneratedhal.o(.constdata__ZTV20TouchGFXGeneratedHAL)
 <LI><a href="#[fb]">touchgfx::HAL::taskDelay(unsigned short)</a> from touchgfxhal.o(i._ZN8touchgfx3HAL9taskDelayEt) referenced from hal.o(.constdata__ZTVN8touchgfx3HALE)
 <LI><a href="#[e7]">touchgfx::HAL::taskEntry()</a> from hal.o(i._ZN8touchgfx3HAL9taskEntryEv) referenced from touchgfxhal.o(.constdata__ZTV11TouchGFXHAL)
 <LI><a href="#[e7]">touchgfx::HAL::taskEntry()</a> from hal.o(i._ZN8touchgfx3HAL9taskEntryEv) referenced from touchgfxgeneratedhal.o(.constdata__ZTV20TouchGFXGeneratedHAL)
 <LI><a href="#[e7]">touchgfx::HAL::taskEntry()</a> from hal.o(i._ZN8touchgfx3HAL9taskEntryEv) referenced from hal.o(.constdata__ZTVN8touchgfx3HALE)
 <LI><a href="#[d9]">touchgfx::Rect::Rect()</a> from screen1viewbase.o(i._ZN8touchgfx4RectC1Ev) referenced from application.o(t._ZN8touchgfx6VectorINS_4RectELt8EEC1Ev)
 <LI><a href="#[177]">touchgfx::View&lang;Screen1Presenter&rang;::~View()</a> from screen1viewbase.o(i._ZN8touchgfx4ViewI16Screen1PresenterED1Ev) referenced from screen1viewbase.o(.constdata__ZTVN8touchgfx4ViewI16Screen1PresenterEE)
 <LI><a href="#[178]">touchgfx::Screen::setupScreen()</a> from screen1viewbase.o(i._ZN8touchgfx6Screen11setupScreenEv) referenced from screen1viewbase.o(.constdata__ZTVN8touchgfx4ViewI16Screen1PresenterEE)
 <LI><a href="#[178]">touchgfx::Screen::setupScreen()</a> from screen1viewbase.o(i._ZN8touchgfx6Screen11setupScreenEv) referenced from screen.o(.constdata__ZTVN8touchgfx6ScreenE)
 <LI><a href="#[e4]">touchgfx::Screen::handleKeyEvent(unsigned char)</a> from screen1view.o(i._ZN8touchgfx6Screen14handleKeyEventEh) referenced from screen1view.o(.constdata__ZTV11Screen1View)
 <LI><a href="#[e4]">touchgfx::Screen::handleKeyEvent(unsigned char)</a> from screen1view.o(i._ZN8touchgfx6Screen14handleKeyEventEh) referenced from screen1viewbase.o(.constdata__ZTV15Screen1ViewBase)
 <LI><a href="#[e4]">touchgfx::Screen::handleKeyEvent(unsigned char)</a> from screen1view.o(i._ZN8touchgfx6Screen14handleKeyEventEh) referenced from screen1viewbase.o(.constdata__ZTVN8touchgfx4ViewI16Screen1PresenterEE)
 <LI><a href="#[e4]">touchgfx::Screen::handleKeyEvent(unsigned char)</a> from screen1view.o(i._ZN8touchgfx6Screen14handleKeyEventEh) referenced from screen.o(.constdata__ZTVN8touchgfx6ScreenE)
 <LI><a href="#[109]">touchgfx::Screen::tearDownScreen()</a> from screen1viewbase.o(i._ZN8touchgfx6Screen14tearDownScreenEv) referenced from screen1viewbase.o(.constdata__ZTV15Screen1ViewBase)
 <LI><a href="#[109]">touchgfx::Screen::tearDownScreen()</a> from screen1viewbase.o(i._ZN8touchgfx6Screen14tearDownScreenEv) referenced from screen1viewbase.o(.constdata__ZTVN8touchgfx4ViewI16Screen1PresenterEE)
 <LI><a href="#[109]">touchgfx::Screen::tearDownScreen()</a> from screen1viewbase.o(i._ZN8touchgfx6Screen14tearDownScreenEv) referenced from screen.o(.constdata__ZTVN8touchgfx6ScreenE)
 <LI><a href="#[de]">touchgfx::Screen::afterTransition()</a> from screen1view.o(i._ZN8touchgfx6Screen15afterTransitionEv) referenced from screen1view.o(.constdata__ZTV11Screen1View)
 <LI><a href="#[de]">touchgfx::Screen::afterTransition()</a> from screen1view.o(i._ZN8touchgfx6Screen15afterTransitionEv) referenced from screen1viewbase.o(.constdata__ZTV15Screen1ViewBase)
 <LI><a href="#[de]">touchgfx::Screen::afterTransition()</a> from screen1view.o(i._ZN8touchgfx6Screen15afterTransitionEv) referenced from screen1viewbase.o(.constdata__ZTVN8touchgfx4ViewI16Screen1PresenterEE)
 <LI><a href="#[de]">touchgfx::Screen::afterTransition()</a> from screen1view.o(i._ZN8touchgfx6Screen15afterTransitionEv) referenced from screen.o(.constdata__ZTVN8touchgfx6ScreenE)
 <LI><a href="#[e1]">touchgfx::Screen::handleDragEvent(const touchgfx::DragEvent&)</a> from screen.o(i._ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE) referenced from screen1view.o(.constdata__ZTV11Screen1View)
 <LI><a href="#[e1]">touchgfx::Screen::handleDragEvent(const touchgfx::DragEvent&)</a> from screen.o(i._ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE) referenced from screen1viewbase.o(.constdata__ZTV15Screen1ViewBase)
 <LI><a href="#[e1]">touchgfx::Screen::handleDragEvent(const touchgfx::DragEvent&)</a> from screen.o(i._ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE) referenced from screen1viewbase.o(.constdata__ZTVN8touchgfx4ViewI16Screen1PresenterEE)
 <LI><a href="#[e1]">touchgfx::Screen::handleDragEvent(const touchgfx::DragEvent&)</a> from screen.o(i._ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE) referenced from screen.o(.constdata__ZTVN8touchgfx6ScreenE)
 <LI><a href="#[e3]">touchgfx::Screen::handleTickEvent()</a> from screen1view.o(i._ZN8touchgfx6Screen15handleTickEventEv) referenced from screen1view.o(.constdata__ZTV11Screen1View)
 <LI><a href="#[e3]">touchgfx::Screen::handleTickEvent()</a> from screen1view.o(i._ZN8touchgfx6Screen15handleTickEventEv) referenced from screen1viewbase.o(.constdata__ZTV15Screen1ViewBase)
 <LI><a href="#[e3]">touchgfx::Screen::handleTickEvent()</a> from screen1view.o(i._ZN8touchgfx6Screen15handleTickEventEv) referenced from screen1viewbase.o(.constdata__ZTVN8touchgfx4ViewI16Screen1PresenterEE)
 <LI><a href="#[e3]">touchgfx::Screen::handleTickEvent()</a> from screen1view.o(i._ZN8touchgfx6Screen15handleTickEventEv) referenced from screen.o(.constdata__ZTVN8touchgfx6ScreenE)
 <LI><a href="#[e0]">touchgfx::Screen::handleClickEvent(const touchgfx::ClickEvent&)</a> from screen.o(i._ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE) referenced from screen1view.o(.constdata__ZTV11Screen1View)
 <LI><a href="#[e0]">touchgfx::Screen::handleClickEvent(const touchgfx::ClickEvent&)</a> from screen.o(i._ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE) referenced from screen1viewbase.o(.constdata__ZTV15Screen1ViewBase)
 <LI><a href="#[e0]">touchgfx::Screen::handleClickEvent(const touchgfx::ClickEvent&)</a> from screen.o(i._ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE) referenced from screen1viewbase.o(.constdata__ZTVN8touchgfx4ViewI16Screen1PresenterEE)
 <LI><a href="#[e0]">touchgfx::Screen::handleClickEvent(const touchgfx::ClickEvent&)</a> from screen.o(i._ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE) referenced from screen.o(.constdata__ZTVN8touchgfx6ScreenE)
 <LI><a href="#[e2]">touchgfx::Screen::handleGestureEvent(const touchgfx::GestureEvent&)</a> from screen.o(i._ZN8touchgfx6Screen18handleGestureEventERKNS_12GestureEventE) referenced from screen1view.o(.constdata__ZTV11Screen1View)
 <LI><a href="#[e2]">touchgfx::Screen::handleGestureEvent(const touchgfx::GestureEvent&)</a> from screen.o(i._ZN8touchgfx6Screen18handleGestureEventERKNS_12GestureEventE) referenced from screen1viewbase.o(.constdata__ZTV15Screen1ViewBase)
 <LI><a href="#[e2]">touchgfx::Screen::handleGestureEvent(const touchgfx::GestureEvent&)</a> from screen.o(i._ZN8touchgfx6Screen18handleGestureEventERKNS_12GestureEventE) referenced from screen1viewbase.o(.constdata__ZTVN8touchgfx4ViewI16Screen1PresenterEE)
 <LI><a href="#[e2]">touchgfx::Screen::handleGestureEvent(const touchgfx::GestureEvent&)</a> from screen.o(i._ZN8touchgfx6Screen18handleGestureEventERKNS_12GestureEventE) referenced from screen.o(.constdata__ZTVN8touchgfx6ScreenE)
 <LI><a href="#[dc]">touchgfx::Screen::draw(touchgfx::Rect&)</a> from screen.o(i._ZN8touchgfx6Screen4drawERNS_4RectE) referenced from screen1view.o(.constdata__ZTV11Screen1View)
 <LI><a href="#[dc]">touchgfx::Screen::draw(touchgfx::Rect&)</a> from screen.o(i._ZN8touchgfx6Screen4drawERNS_4RectE) referenced from screen1viewbase.o(.constdata__ZTV15Screen1ViewBase)
 <LI><a href="#[dc]">touchgfx::Screen::draw(touchgfx::Rect&)</a> from screen.o(i._ZN8touchgfx6Screen4drawERNS_4RectE) referenced from screen1viewbase.o(.constdata__ZTVN8touchgfx4ViewI16Screen1PresenterEE)
 <LI><a href="#[dc]">touchgfx::Screen::draw(touchgfx::Rect&)</a> from screen.o(i._ZN8touchgfx6Screen4drawERNS_4RectE) referenced from screen.o(.constdata__ZTVN8touchgfx6ScreenE)
 <LI><a href="#[179]">touchgfx::Screen::~Screen()</a> from screen.o(i._ZN8touchgfx6ScreenD1Ev) referenced from screen.o(.constdata__ZTVN8touchgfx6ScreenE)
 <LI><a href="#[154]">touchgfx::Widget::getLastChild(short, short, touchgfx::Drawable**)</a> from screen1viewbase.o(i._ZN8touchgfx6Widget12getLastChildEssPPNS_8DrawableE) referenced from screen1viewbase.o(.constdata__ZTVN8touchgfx23TextAreaWithOneWildcardE)
 <LI><a href="#[154]">touchgfx::Widget::getLastChild(short, short, touchgfx::Drawable**)</a> from screen1viewbase.o(i._ZN8touchgfx6Widget12getLastChildEssPPNS_8DrawableE) referenced from textareawithwildcard.o(.constdata__ZTVN8touchgfx24TextAreaWithWildcardBaseE)
 <LI><a href="#[154]">touchgfx::Widget::getLastChild(short, short, touchgfx::Drawable**)</a> from screen1viewbase.o(i._ZN8touchgfx6Widget12getLastChildEssPPNS_8DrawableE) referenced from box.o(.constdata__ZTVN8touchgfx3BoxE)
 <LI><a href="#[154]">touchgfx::Widget::getLastChild(short, short, touchgfx::Drawable**)</a> from screen1viewbase.o(i._ZN8touchgfx6Widget12getLastChildEssPPNS_8DrawableE) referenced from screen1viewbase.o(.constdata__ZTVN8touchgfx6WidgetE)
 <LI><a href="#[154]">touchgfx::Widget::getLastChild(short, short, touchgfx::Drawable**)</a> from screen1viewbase.o(i._ZN8touchgfx6Widget12getLastChildEssPPNS_8DrawableE) referenced from textarea.o(.constdata__ZTVN8touchgfx8TextAreaE)
 <LI><a href="#[17a]">touchgfx::Widget::~Widget__sub_object()</a> from screen1viewbase.o(i._ZN8touchgfx6WidgetD2Ev) referenced from screen1viewbase.o(.constdata__ZTVN8touchgfx6WidgetE)
 <LI><a href="#[17c]">touchgfx::Callback&lang;FrontendApplicationBase, void, void, void&rang;::execute()</a> from frontendapplicationbase.o(t._ZN8touchgfx8CallbackI23FrontendApplicationBasevvvE7executeEv) referenced from frontendapplicationbase.o(.constdata__ZTVN8touchgfx8CallbackI23FrontendApplicationBasevvvEE)
 <LI><a href="#[17b]">touchgfx::Callback&lang;FrontendApplicationBase, void, void, void&rang;::~Callback()</a> from frontendapplicationbase.o(i._ZN8touchgfx8CallbackI23FrontendApplicationBasevvvED1Ev) referenced from frontendapplicationbase.o(.constdata__ZTVN8touchgfx8CallbackI23FrontendApplicationBasevvvEE)
 <LI><a href="#[15f]">touchgfx::Drawable::setupDrawChain(const touchgfx::Rect&, touchgfx::Drawable**)</a> from screen1viewbase.o(i._ZN8touchgfx8Drawable14setupDrawChainERKNS_4RectEPPS0_) referenced from screen1viewbase.o(.constdata__ZTVN8touchgfx23TextAreaWithOneWildcardE)
 <LI><a href="#[15f]">touchgfx::Drawable::setupDrawChain(const touchgfx::Rect&, touchgfx::Drawable**)</a> from screen1viewbase.o(i._ZN8touchgfx8Drawable14setupDrawChainERKNS_4RectEPPS0_) referenced from textareawithwildcard.o(.constdata__ZTVN8touchgfx24TextAreaWithWildcardBaseE)
 <LI><a href="#[15f]">touchgfx::Drawable::setupDrawChain(const touchgfx::Rect&, touchgfx::Drawable**)</a> from screen1viewbase.o(i._ZN8touchgfx8Drawable14setupDrawChainERKNS_4RectEPPS0_) referenced from box.o(.constdata__ZTVN8touchgfx3BoxE)
 <LI><a href="#[15f]">touchgfx::Drawable::setupDrawChain(const touchgfx::Rect&, touchgfx::Drawable**)</a> from screen1viewbase.o(i._ZN8touchgfx8Drawable14setupDrawChainERKNS_4RectEPPS0_) referenced from screen1viewbase.o(.constdata__ZTVN8touchgfx6WidgetE)
 <LI><a href="#[15f]">touchgfx::Drawable::setupDrawChain(const touchgfx::Rect&, touchgfx::Drawable**)</a> from screen1viewbase.o(i._ZN8touchgfx8Drawable14setupDrawChainERKNS_4RectEPPS0_) referenced from drawable.o(.constdata__ZTVN8touchgfx8DrawableE)
 <LI><a href="#[15f]">touchgfx::Drawable::setupDrawChain(const touchgfx::Rect&, touchgfx::Drawable**)</a> from screen1viewbase.o(i._ZN8touchgfx8Drawable14setupDrawChainERKNS_4RectEPPS0_) referenced from textarea.o(.constdata__ZTVN8touchgfx8TextAreaE)
 <LI><a href="#[15d]">touchgfx::Drawable::handleDragEvent(const touchgfx::DragEvent&)</a> from screen1viewbase.o(i._ZN8touchgfx8Drawable15handleDragEventERKNS_9DragEventE) referenced from screen1viewbase.o(.constdata__ZTVN8touchgfx23TextAreaWithOneWildcardE)
 <LI><a href="#[15d]">touchgfx::Drawable::handleDragEvent(const touchgfx::DragEvent&)</a> from screen1viewbase.o(i._ZN8touchgfx8Drawable15handleDragEventERKNS_9DragEventE) referenced from textareawithwildcard.o(.constdata__ZTVN8touchgfx24TextAreaWithWildcardBaseE)
 <LI><a href="#[15d]">touchgfx::Drawable::handleDragEvent(const touchgfx::DragEvent&)</a> from screen1viewbase.o(i._ZN8touchgfx8Drawable15handleDragEventERKNS_9DragEventE) referenced from box.o(.constdata__ZTVN8touchgfx3BoxE)
 <LI><a href="#[15d]">touchgfx::Drawable::handleDragEvent(const touchgfx::DragEvent&)</a> from screen1viewbase.o(i._ZN8touchgfx8Drawable15handleDragEventERKNS_9DragEventE) referenced from screen1viewbase.o(.constdata__ZTVN8touchgfx6WidgetE)
 <LI><a href="#[15d]">touchgfx::Drawable::handleDragEvent(const touchgfx::DragEvent&)</a> from screen1viewbase.o(i._ZN8touchgfx8Drawable15handleDragEventERKNS_9DragEventE) referenced from drawable.o(.constdata__ZTVN8touchgfx8DrawableE)
 <LI><a href="#[15d]">touchgfx::Drawable::handleDragEvent(const touchgfx::DragEvent&)</a> from screen1viewbase.o(i._ZN8touchgfx8Drawable15handleDragEventERKNS_9DragEventE) referenced from textarea.o(.constdata__ZTVN8touchgfx8TextAreaE)
 <LI><a href="#[15d]">touchgfx::Drawable::handleDragEvent(const touchgfx::DragEvent&)</a> from screen1viewbase.o(i._ZN8touchgfx8Drawable15handleDragEventERKNS_9DragEventE) referenced from container.o(.constdata__ZTVN8touchgfx9ContainerE)
 <LI><a href="#[15e]">touchgfx::Drawable::handleTickEvent()</a> from screen1viewbase.o(i._ZN8touchgfx8Drawable15handleTickEventEv) referenced from screen1viewbase.o(.constdata__ZTVN8touchgfx23TextAreaWithOneWildcardE)
 <LI><a href="#[15e]">touchgfx::Drawable::handleTickEvent()</a> from screen1viewbase.o(i._ZN8touchgfx8Drawable15handleTickEventEv) referenced from textareawithwildcard.o(.constdata__ZTVN8touchgfx24TextAreaWithWildcardBaseE)
 <LI><a href="#[15e]">touchgfx::Drawable::handleTickEvent()</a> from screen1viewbase.o(i._ZN8touchgfx8Drawable15handleTickEventEv) referenced from box.o(.constdata__ZTVN8touchgfx3BoxE)
 <LI><a href="#[15e]">touchgfx::Drawable::handleTickEvent()</a> from screen1viewbase.o(i._ZN8touchgfx8Drawable15handleTickEventEv) referenced from screen1viewbase.o(.constdata__ZTVN8touchgfx6WidgetE)
 <LI><a href="#[15e]">touchgfx::Drawable::handleTickEvent()</a> from screen1viewbase.o(i._ZN8touchgfx8Drawable15handleTickEventEv) referenced from drawable.o(.constdata__ZTVN8touchgfx8DrawableE)
 <LI><a href="#[15e]">touchgfx::Drawable::handleTickEvent()</a> from screen1viewbase.o(i._ZN8touchgfx8Drawable15handleTickEventEv) referenced from textarea.o(.constdata__ZTVN8touchgfx8TextAreaE)
 <LI><a href="#[15e]">touchgfx::Drawable::handleTickEvent()</a> from screen1viewbase.o(i._ZN8touchgfx8Drawable15handleTickEventEv) referenced from container.o(.constdata__ZTVN8touchgfx9ContainerE)
 <LI><a href="#[15b]">touchgfx::Drawable::handleClickEvent(const touchgfx::ClickEvent&)</a> from screen1viewbase.o(i._ZN8touchgfx8Drawable16handleClickEventERKNS_10ClickEventE) referenced from screen1viewbase.o(.constdata__ZTVN8touchgfx23TextAreaWithOneWildcardE)
 <LI><a href="#[15b]">touchgfx::Drawable::handleClickEvent(const touchgfx::ClickEvent&)</a> from screen1viewbase.o(i._ZN8touchgfx8Drawable16handleClickEventERKNS_10ClickEventE) referenced from textareawithwildcard.o(.constdata__ZTVN8touchgfx24TextAreaWithWildcardBaseE)
 <LI><a href="#[15b]">touchgfx::Drawable::handleClickEvent(const touchgfx::ClickEvent&)</a> from screen1viewbase.o(i._ZN8touchgfx8Drawable16handleClickEventERKNS_10ClickEventE) referenced from box.o(.constdata__ZTVN8touchgfx3BoxE)
 <LI><a href="#[15b]">touchgfx::Drawable::handleClickEvent(const touchgfx::ClickEvent&)</a> from screen1viewbase.o(i._ZN8touchgfx8Drawable16handleClickEventERKNS_10ClickEventE) referenced from screen1viewbase.o(.constdata__ZTVN8touchgfx6WidgetE)
 <LI><a href="#[15b]">touchgfx::Drawable::handleClickEvent(const touchgfx::ClickEvent&)</a> from screen1viewbase.o(i._ZN8touchgfx8Drawable16handleClickEventERKNS_10ClickEventE) referenced from drawable.o(.constdata__ZTVN8touchgfx8DrawableE)
 <LI><a href="#[15b]">touchgfx::Drawable::handleClickEvent(const touchgfx::ClickEvent&)</a> from screen1viewbase.o(i._ZN8touchgfx8Drawable16handleClickEventERKNS_10ClickEventE) referenced from textarea.o(.constdata__ZTVN8touchgfx8TextAreaE)
 <LI><a href="#[15b]">touchgfx::Drawable::handleClickEvent(const touchgfx::ClickEvent&)</a> from screen1viewbase.o(i._ZN8touchgfx8Drawable16handleClickEventERKNS_10ClickEventE) referenced from container.o(.constdata__ZTVN8touchgfx9ContainerE)
 <LI><a href="#[15c]">touchgfx::Drawable::handleGestureEvent(const touchgfx::GestureEvent&)</a> from screen1viewbase.o(i._ZN8touchgfx8Drawable18handleGestureEventERKNS_12GestureEventE) referenced from screen1viewbase.o(.constdata__ZTVN8touchgfx23TextAreaWithOneWildcardE)
 <LI><a href="#[15c]">touchgfx::Drawable::handleGestureEvent(const touchgfx::GestureEvent&)</a> from screen1viewbase.o(i._ZN8touchgfx8Drawable18handleGestureEventERKNS_12GestureEventE) referenced from textareawithwildcard.o(.constdata__ZTVN8touchgfx24TextAreaWithWildcardBaseE)
 <LI><a href="#[15c]">touchgfx::Drawable::handleGestureEvent(const touchgfx::GestureEvent&)</a> from screen1viewbase.o(i._ZN8touchgfx8Drawable18handleGestureEventERKNS_12GestureEventE) referenced from box.o(.constdata__ZTVN8touchgfx3BoxE)
 <LI><a href="#[15c]">touchgfx::Drawable::handleGestureEvent(const touchgfx::GestureEvent&)</a> from screen1viewbase.o(i._ZN8touchgfx8Drawable18handleGestureEventERKNS_12GestureEventE) referenced from screen1viewbase.o(.constdata__ZTVN8touchgfx6WidgetE)
 <LI><a href="#[15c]">touchgfx::Drawable::handleGestureEvent(const touchgfx::GestureEvent&)</a> from screen1viewbase.o(i._ZN8touchgfx8Drawable18handleGestureEventERKNS_12GestureEventE) referenced from drawable.o(.constdata__ZTVN8touchgfx8DrawableE)
 <LI><a href="#[15c]">touchgfx::Drawable::handleGestureEvent(const touchgfx::GestureEvent&)</a> from screen1viewbase.o(i._ZN8touchgfx8Drawable18handleGestureEventERKNS_12GestureEventE) referenced from textarea.o(.constdata__ZTVN8touchgfx8TextAreaE)
 <LI><a href="#[15c]">touchgfx::Drawable::handleGestureEvent(const touchgfx::GestureEvent&)</a> from screen1viewbase.o(i._ZN8touchgfx8Drawable18handleGestureEventERKNS_12GestureEventE) referenced from container.o(.constdata__ZTVN8touchgfx9ContainerE)
 <LI><a href="#[157]">touchgfx::Drawable::setX(short)</a> from screen1viewbase.o(i._ZN8touchgfx8Drawable4setXEs) referenced from screen1viewbase.o(.constdata__ZTVN8touchgfx23TextAreaWithOneWildcardE)
 <LI><a href="#[157]">touchgfx::Drawable::setX(short)</a> from screen1viewbase.o(i._ZN8touchgfx8Drawable4setXEs) referenced from textareawithwildcard.o(.constdata__ZTVN8touchgfx24TextAreaWithWildcardBaseE)
 <LI><a href="#[157]">touchgfx::Drawable::setX(short)</a> from screen1viewbase.o(i._ZN8touchgfx8Drawable4setXEs) referenced from box.o(.constdata__ZTVN8touchgfx3BoxE)
 <LI><a href="#[157]">touchgfx::Drawable::setX(short)</a> from screen1viewbase.o(i._ZN8touchgfx8Drawable4setXEs) referenced from screen1viewbase.o(.constdata__ZTVN8touchgfx6WidgetE)
 <LI><a href="#[157]">touchgfx::Drawable::setX(short)</a> from screen1viewbase.o(i._ZN8touchgfx8Drawable4setXEs) referenced from drawable.o(.constdata__ZTVN8touchgfx8DrawableE)
 <LI><a href="#[157]">touchgfx::Drawable::setX(short)</a> from screen1viewbase.o(i._ZN8touchgfx8Drawable4setXEs) referenced from textarea.o(.constdata__ZTVN8touchgfx8TextAreaE)
 <LI><a href="#[157]">touchgfx::Drawable::setX(short)</a> from screen1viewbase.o(i._ZN8touchgfx8Drawable4setXEs) referenced from container.o(.constdata__ZTVN8touchgfx9ContainerE)
 <LI><a href="#[158]">touchgfx::Drawable::setY(short)</a> from screen1viewbase.o(i._ZN8touchgfx8Drawable4setYEs) referenced from screen1viewbase.o(.constdata__ZTVN8touchgfx23TextAreaWithOneWildcardE)
 <LI><a href="#[158]">touchgfx::Drawable::setY(short)</a> from screen1viewbase.o(i._ZN8touchgfx8Drawable4setYEs) referenced from textareawithwildcard.o(.constdata__ZTVN8touchgfx24TextAreaWithWildcardBaseE)
 <LI><a href="#[158]">touchgfx::Drawable::setY(short)</a> from screen1viewbase.o(i._ZN8touchgfx8Drawable4setYEs) referenced from box.o(.constdata__ZTVN8touchgfx3BoxE)
 <LI><a href="#[158]">touchgfx::Drawable::setY(short)</a> from screen1viewbase.o(i._ZN8touchgfx8Drawable4setYEs) referenced from screen1viewbase.o(.constdata__ZTVN8touchgfx6WidgetE)
 <LI><a href="#[158]">touchgfx::Drawable::setY(short)</a> from screen1viewbase.o(i._ZN8touchgfx8Drawable4setYEs) referenced from drawable.o(.constdata__ZTVN8touchgfx8DrawableE)
 <LI><a href="#[158]">touchgfx::Drawable::setY(short)</a> from screen1viewbase.o(i._ZN8touchgfx8Drawable4setYEs) referenced from textarea.o(.constdata__ZTVN8touchgfx8TextAreaE)
 <LI><a href="#[158]">touchgfx::Drawable::setY(short)</a> from screen1viewbase.o(i._ZN8touchgfx8Drawable4setYEs) referenced from container.o(.constdata__ZTVN8touchgfx9ContainerE)
 <LI><a href="#[16b]">touchgfx::Drawable::setWidth(short)</a> from screen1viewbase.o(i._ZN8touchgfx8Drawable8setWidthEs) referenced from box.o(.constdata__ZTVN8touchgfx3BoxE)
 <LI><a href="#[16b]">touchgfx::Drawable::setWidth(short)</a> from screen1viewbase.o(i._ZN8touchgfx8Drawable8setWidthEs) referenced from screen1viewbase.o(.constdata__ZTVN8touchgfx6WidgetE)
 <LI><a href="#[16b]">touchgfx::Drawable::setWidth(short)</a> from screen1viewbase.o(i._ZN8touchgfx8Drawable8setWidthEs) referenced from drawable.o(.constdata__ZTVN8touchgfx8DrawableE)
 <LI><a href="#[16b]">touchgfx::Drawable::setWidth(short)</a> from screen1viewbase.o(i._ZN8touchgfx8Drawable8setWidthEs) referenced from container.o(.constdata__ZTVN8touchgfx9ContainerE)
 <LI><a href="#[16c]">touchgfx::Drawable::setHeight(short)</a> from screen1viewbase.o(i._ZN8touchgfx8Drawable9setHeightEs) referenced from box.o(.constdata__ZTVN8touchgfx3BoxE)
 <LI><a href="#[16c]">touchgfx::Drawable::setHeight(short)</a> from screen1viewbase.o(i._ZN8touchgfx8Drawable9setHeightEs) referenced from screen1viewbase.o(.constdata__ZTVN8touchgfx6WidgetE)
 <LI><a href="#[16c]">touchgfx::Drawable::setHeight(short)</a> from screen1viewbase.o(i._ZN8touchgfx8Drawable9setHeightEs) referenced from drawable.o(.constdata__ZTVN8touchgfx8DrawableE)
 <LI><a href="#[16c]">touchgfx::Drawable::setHeight(short)</a> from screen1viewbase.o(i._ZN8touchgfx8Drawable9setHeightEs) referenced from container.o(.constdata__ZTVN8touchgfx9ContainerE)
 <LI><a href="#[17f]">touchgfx::LCD16bpp::fillBuffer(unsigned char*, unsigned short, const touchgfx::Rect&, touchgfx::colortype, unsigned char)</a> from lcd16bpp.o(i._ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh) referenced from lcd16bpp.o(.constdata__ZTVN8touchgfx8LCD16bppE)
 <LI><a href="#[b1]">touchgfx::LCD16bpp::DecompressorL8_L4::~DecompressorL8_L4()</a> from lcd16bpp.o(i._ZN8touchgfx8LCD16bpp17DecompressorL8_L4D1Ev) referenced from lcd16bpp.o(.constdata__ZTVN8touchgfx8LCD16bpp17DecompressorL8_L4E)
 <LI><a href="#[b1]">touchgfx::LCD16bpp::DecompressorL8_L4::~DecompressorL8_L4()</a> from lcd16bpp.o(i._ZN8touchgfx8LCD16bpp17DecompressorL8_L4D1Ev) referenced from lcd16bpp.o(i._ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev)
 <LI><a href="#[b2]">touchgfx::LCD16bpp::DecompressorL8_RLE::~DecompressorL8_RLE()</a> from lcd16bpp.o(i._ZN8touchgfx8LCD16bpp18DecompressorL8_RLED1Ev) referenced from lcd16bpp.o(.constdata__ZTVN8touchgfx8LCD16bpp18DecompressorL8_RLEE)
 <LI><a href="#[b2]">touchgfx::LCD16bpp::DecompressorL8_RLE::~DecompressorL8_RLE()</a> from lcd16bpp.o(i._ZN8touchgfx8LCD16bpp18DecompressorL8_RLED1Ev) referenced from lcd16bpp.o(i._ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv)
 <LI><a href="#[b3]">touchgfx::LCD16bpp::DecompressorL8_LZW9::~DecompressorL8_LZW9()</a> from lcd16bpp.o(i._ZN8touchgfx8LCD16bpp19DecompressorL8_LZW9D1Ev) referenced from lcd16bpp.o(.constdata__ZTVN8touchgfx8LCD16bpp19DecompressorL8_LZW9E)
 <LI><a href="#[b3]">touchgfx::LCD16bpp::DecompressorL8_LZW9::~DecompressorL8_LZW9()</a> from lcd16bpp.o(i._ZN8touchgfx8LCD16bpp19DecompressorL8_LZW9D1Ev) referenced from lcd16bpp.o(i._ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev)
 <LI><a href="#[b4]">touchgfx::LCD16bpp::TextureMapper_A4_NearestNeighbor_GA::~TextureMapper_A4_NearestNeighbor_GA()</a> from lcd16bpp.o(i._ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GAD1Ev) referenced from lcd16bpp.o(.constdata__ZTVN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GAE)
 <LI><a href="#[b4]">touchgfx::LCD16bpp::TextureMapper_A4_NearestNeighbor_GA::~TextureMapper_A4_NearestNeighbor_GA()</a> from lcd16bpp.o(i._ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GAD1Ev) referenced from lcd16bpp.o(i._ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv)
 <LI><a href="#[b5]">touchgfx::LCD16bpp::TextureMapper_A4_NearestNeighbor_NoGA::~TextureMapper_A4_NearestNeighbor_NoGA()</a> from lcd16bpp.o(i._ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGAD1Ev) referenced from lcd16bpp.o(.constdata__ZTVN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGAE)
 <LI><a href="#[b5]">touchgfx::LCD16bpp::TextureMapper_A4_NearestNeighbor_NoGA::~TextureMapper_A4_NearestNeighbor_NoGA()</a> from lcd16bpp.o(i._ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGAD1Ev) referenced from lcd16bpp.o(i._ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv)
 <LI><a href="#[b6]">touchgfx::LCD16bpp::TextureMapper_A4_BilinearInterpolation_GA::~TextureMapper_A4_BilinearInterpolation_GA()</a> from lcd16bpp.o(i._ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GAD1Ev) referenced from lcd16bpp.o(.constdata__ZTVN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GAE)
 <LI><a href="#[b6]">touchgfx::LCD16bpp::TextureMapper_A4_BilinearInterpolation_GA::~TextureMapper_A4_BilinearInterpolation_GA()</a> from lcd16bpp.o(i._ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GAD1Ev) referenced from lcd16bpp.o(i._ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv)
 <LI><a href="#[b7]">touchgfx::LCD16bpp::TextureMapper_A4_BilinearInterpolation_NoGA::~TextureMapper_A4_BilinearInterpolation_NoGA()</a> from lcd16bpp.o(i._ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGAD1Ev) referenced from lcd16bpp.o(.constdata__ZTVN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGAE)
 <LI><a href="#[b7]">touchgfx::LCD16bpp::TextureMapper_A4_BilinearInterpolation_NoGA::~TextureMapper_A4_BilinearInterpolation_NoGA()</a> from lcd16bpp.o(i._ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGAD1Ev) referenced from lcd16bpp.o(i._ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv)
 <LI><a href="#[c0]">touchgfx::LCD16bpp::TextureMapper_RGB565_Opaque_NearestNeighbor_GA::~TextureMapper_RGB565_Opaque_NearestNeighbor_GA()</a> from lcd16bpp.o(i._ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GAD1Ev) referenced from lcd16bpp.o(.constdata__ZTVN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GAE)
 <LI><a href="#[c0]">touchgfx::LCD16bpp::TextureMapper_RGB565_Opaque_NearestNeighbor_GA::~TextureMapper_RGB565_Opaque_NearestNeighbor_GA()</a> from lcd16bpp.o(i._ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GAD1Ev) referenced from lcd16bpp.o(i._ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv)
 <LI><a href="#[c1]">touchgfx::LCD16bpp::TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA::~TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA()</a> from lcd16bpp.o(i._ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGAD1Ev) referenced from lcd16bpp.o(.constdata__ZTVN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGAE)
 <LI><a href="#[c1]">touchgfx::LCD16bpp::TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA::~TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA()</a> from lcd16bpp.o(i._ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGAD1Ev) referenced from lcd16bpp.o(i._ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv)
 <LI><a href="#[ba]">touchgfx::LCD16bpp::TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA::~TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA()</a> from lcd16bpp.o(i._ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GAD1Ev) referenced from lcd16bpp.o(.constdata__ZTVN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GAE)
 <LI><a href="#[ba]">touchgfx::LCD16bpp::TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA::~TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA()</a> from lcd16bpp.o(i._ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GAD1Ev) referenced from lcd16bpp.o(i._ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv)
 <LI><a href="#[bc]">touchgfx::LCD16bpp::TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA::~TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA()</a> from lcd16bpp.o(i._ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GAD1Ev) referenced from lcd16bpp.o(.constdata__ZTVN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GAE)
 <LI><a href="#[bc]">touchgfx::LCD16bpp::TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA::~TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA()</a> from lcd16bpp.o(i._ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GAD1Ev) referenced from lcd16bpp.o(i._ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv)
 <LI><a href="#[c8]">touchgfx::LCD16bpp::TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA::~TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA()</a> from lcd16bpp.o(i._ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GAD1Ev) referenced from lcd16bpp.o(.constdata__ZTVN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GAE)
 <LI><a href="#[c8]">touchgfx::LCD16bpp::TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA::~TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA()</a> from lcd16bpp.o(i._ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GAD1Ev) referenced from lcd16bpp.o(i._ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv)
 <LI><a href="#[b8]">touchgfx::LCD16bpp::TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA::~TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA()</a> from lcd16bpp.o(i._ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GAD1Ev) referenced from lcd16bpp.o(.constdata__ZTVN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GAE)
 <LI><a href="#[b8]">touchgfx::LCD16bpp::TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA::~TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA()</a> from lcd16bpp.o(i._ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GAD1Ev) referenced from lcd16bpp.o(i._ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv)
 <LI><a href="#[bb]">touchgfx::LCD16bpp::TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA::~TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA()</a> from lcd16bpp.o(i._ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGAD1Ev) referenced from lcd16bpp.o(.constdata__ZTVN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGAE)
 <LI><a href="#[bb]">touchgfx::LCD16bpp::TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA::~TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA()</a> from lcd16bpp.o(i._ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGAD1Ev) referenced from lcd16bpp.o(i._ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv)
 <LI><a href="#[bd]">touchgfx::LCD16bpp::TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA::~TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA()</a> from lcd16bpp.o(i._ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGAD1Ev) referenced from lcd16bpp.o(.constdata__ZTVN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGAE)
 <LI><a href="#[bd]">touchgfx::LCD16bpp::TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA::~TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA()</a> from lcd16bpp.o(i._ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGAD1Ev) referenced from lcd16bpp.o(i._ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv)
 <LI><a href="#[c9]">touchgfx::LCD16bpp::TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA::~TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA()</a> from lcd16bpp.o(i._ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGAD1Ev) referenced from lcd16bpp.o(.constdata__ZTVN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGAE)
 <LI><a href="#[c9]">touchgfx::LCD16bpp::TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA::~TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA()</a> from lcd16bpp.o(i._ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGAD1Ev) referenced from lcd16bpp.o(i._ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv)
 <LI><a href="#[cc]">touchgfx::LCD16bpp::TextureMapper_RGB565_Opaque_BilinearInterpolation_GA::~TextureMapper_RGB565_Opaque_BilinearInterpolation_GA()</a> from lcd16bpp.o(i._ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GAD1Ev) referenced from lcd16bpp.o(.constdata__ZTVN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GAE)
 <LI><a href="#[cc]">touchgfx::LCD16bpp::TextureMapper_RGB565_Opaque_BilinearInterpolation_GA::~TextureMapper_RGB565_Opaque_BilinearInterpolation_GA()</a> from lcd16bpp.o(i._ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GAD1Ev) referenced from lcd16bpp.o(i._ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv)
 <LI><a href="#[b9]">touchgfx::LCD16bpp::TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA::~TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA()</a> from lcd16bpp.o(i._ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGAD1Ev) referenced from lcd16bpp.o(.constdata__ZTVN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGAE)
 <LI><a href="#[b9]">touchgfx::LCD16bpp::TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA::~TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA()</a> from lcd16bpp.o(i._ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGAD1Ev) referenced from lcd16bpp.o(i._ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv)
 <LI><a href="#[be]">touchgfx::LCD16bpp::TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA::~TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA()</a> from lcd16bpp.o(i._ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GAD1Ev) referenced from lcd16bpp.o(.constdata__ZTVN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GAE)
 <LI><a href="#[be]">touchgfx::LCD16bpp::TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA::~TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA()</a> from lcd16bpp.o(i._ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GAD1Ev) referenced from lcd16bpp.o(i._ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv)
 <LI><a href="#[cd]">touchgfx::LCD16bpp::TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA::~TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA()</a> from lcd16bpp.o(i._ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGAD1Ev) referenced from lcd16bpp.o(.constdata__ZTVN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGAE)
 <LI><a href="#[cd]">touchgfx::LCD16bpp::TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA::~TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA()</a> from lcd16bpp.o(i._ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGAD1Ev) referenced from lcd16bpp.o(i._ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv)
 <LI><a href="#[c4]">touchgfx::LCD16bpp::TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA::~TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA()</a> from lcd16bpp.o(i._ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GAD1Ev) referenced from lcd16bpp.o(.constdata__ZTVN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GAE)
 <LI><a href="#[c4]">touchgfx::LCD16bpp::TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA::~TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA()</a> from lcd16bpp.o(i._ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GAD1Ev) referenced from lcd16bpp.o(i._ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv)
 <LI><a href="#[c6]">touchgfx::LCD16bpp::TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA::~TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA()</a> from lcd16bpp.o(i._ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GAD1Ev) referenced from lcd16bpp.o(.constdata__ZTVN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GAE)
 <LI><a href="#[c6]">touchgfx::LCD16bpp::TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA::~TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA()</a> from lcd16bpp.o(i._ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GAD1Ev) referenced from lcd16bpp.o(i._ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv)
 <LI><a href="#[ce]">touchgfx::LCD16bpp::TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA::~TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA()</a> from lcd16bpp.o(i._ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GAD1Ev) referenced from lcd16bpp.o(.constdata__ZTVN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GAE)
 <LI><a href="#[ce]">touchgfx::LCD16bpp::TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA::~TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA()</a> from lcd16bpp.o(i._ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GAD1Ev) referenced from lcd16bpp.o(i._ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv)
 <LI><a href="#[bf]">touchgfx::LCD16bpp::TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA::~TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA()</a> from lcd16bpp.o(i._ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGAD1Ev) referenced from lcd16bpp.o(.constdata__ZTVN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGAE)
 <LI><a href="#[bf]">touchgfx::LCD16bpp::TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA::~TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA()</a> from lcd16bpp.o(i._ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGAD1Ev) referenced from lcd16bpp.o(i._ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv)
 <LI><a href="#[c2]">touchgfx::LCD16bpp::TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA::~TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA()</a> from lcd16bpp.o(i._ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GAD1Ev) referenced from lcd16bpp.o(.constdata__ZTVN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GAE)
 <LI><a href="#[c2]">touchgfx::LCD16bpp::TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA::~TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA()</a> from lcd16bpp.o(i._ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GAD1Ev) referenced from lcd16bpp.o(i._ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv)
 <LI><a href="#[c5]">touchgfx::LCD16bpp::TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA::~TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA()</a> from lcd16bpp.o(i._ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGAD1Ev) referenced from lcd16bpp.o(.constdata__ZTVN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGAE)
 <LI><a href="#[c5]">touchgfx::LCD16bpp::TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA::~TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA()</a> from lcd16bpp.o(i._ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGAD1Ev) referenced from lcd16bpp.o(i._ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv)
 <LI><a href="#[c7]">touchgfx::LCD16bpp::TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA::~TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA()</a> from lcd16bpp.o(i._ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGAD1Ev) referenced from lcd16bpp.o(.constdata__ZTVN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGAE)
 <LI><a href="#[c7]">touchgfx::LCD16bpp::TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA::~TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA()</a> from lcd16bpp.o(i._ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGAD1Ev) referenced from lcd16bpp.o(i._ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv)
 <LI><a href="#[cf]">touchgfx::LCD16bpp::TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA::~TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA()</a> from lcd16bpp.o(i._ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGAD1Ev) referenced from lcd16bpp.o(.constdata__ZTVN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGAE)
 <LI><a href="#[cf]">touchgfx::LCD16bpp::TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA::~TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA()</a> from lcd16bpp.o(i._ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGAD1Ev) referenced from lcd16bpp.o(i._ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv)
 <LI><a href="#[c3]">touchgfx::LCD16bpp::TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA::~TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA()</a> from lcd16bpp.o(i._ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGAD1Ev) referenced from lcd16bpp.o(.constdata__ZTVN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGAE)
 <LI><a href="#[c3]">touchgfx::LCD16bpp::TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA::~TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA()</a> from lcd16bpp.o(i._ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGAD1Ev) referenced from lcd16bpp.o(i._ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv)
 <LI><a href="#[ca]">touchgfx::LCD16bpp::TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA::~TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA()</a> from lcd16bpp.o(i._ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GAD1Ev) referenced from lcd16bpp.o(.constdata__ZTVN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GAE)
 <LI><a href="#[ca]">touchgfx::LCD16bpp::TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA::~TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA()</a> from lcd16bpp.o(i._ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GAD1Ev) referenced from lcd16bpp.o(i._ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv)
 <LI><a href="#[cb]">touchgfx::LCD16bpp::TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA::~TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA()</a> from lcd16bpp.o(i._ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGAD1Ev) referenced from lcd16bpp.o(.constdata__ZTVN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGAE)
 <LI><a href="#[cb]">touchgfx::LCD16bpp::TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA::~TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA()</a> from lcd16bpp.o(i._ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGAD1Ev) referenced from lcd16bpp.o(i._ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv)
 <LI><a href="#[17e]">touchgfx::LCD16bpp::fillRect(const touchgfx::Rect&, touchgfx::colortype, unsigned char)</a> from lcd16bpp.o(i._ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh) referenced from lcd16bpp.o(.constdata__ZTVN8touchgfx8LCD16bppE)
 <LI><a href="#[181]">touchgfx::LCD16bpp::drawGlyph(unsigned short*, touchgfx::Rect, short, short, unsigned short, unsigned short, const touchgfx::Rect&, const touchgfx::GlyphNode*, const unsigned char*, unsigned char, touchgfx::colortype, unsigned char, unsigned char, touchgfx::TextRotation)</a> from lcd16bpp.o(i._ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE) referenced from lcd16bpp.o(.constdata__ZTVN8touchgfx8LCD16bppE)
 <LI><a href="#[d2]">touchgfx::LCD16bpp::~LCD16bpp()</a> from touchgfxconfiguration.o(i._ZN8touchgfx8LCD16bppD1Ev) referenced from lcd16bpp.o(.constdata__ZTVN8touchgfx8LCD16bppE)
 <LI><a href="#[d2]">touchgfx::LCD16bpp::~LCD16bpp()</a> from touchgfxconfiguration.o(i._ZN8touchgfx8LCD16bppD1Ev) referenced from touchgfxconfiguration.o(i.__sti___25_TouchGFXConfiguration_cpp_f5abfd34)
 <LI><a href="#[159]">touchgfx::TextArea::setWidth(short)</a> from screen1viewbase.o(i._ZN8touchgfx8TextArea8setWidthEs) referenced from screen1viewbase.o(.constdata__ZTVN8touchgfx23TextAreaWithOneWildcardE)
 <LI><a href="#[159]">touchgfx::TextArea::setWidth(short)</a> from screen1viewbase.o(i._ZN8touchgfx8TextArea8setWidthEs) referenced from textareawithwildcard.o(.constdata__ZTVN8touchgfx24TextAreaWithWildcardBaseE)
 <LI><a href="#[159]">touchgfx::TextArea::setWidth(short)</a> from screen1viewbase.o(i._ZN8touchgfx8TextArea8setWidthEs) referenced from textarea.o(.constdata__ZTVN8touchgfx8TextAreaE)
 <LI><a href="#[15a]">touchgfx::TextArea::setHeight(short)</a> from screen1viewbase.o(i._ZN8touchgfx8TextArea9setHeightEs) referenced from screen1viewbase.o(.constdata__ZTVN8touchgfx23TextAreaWithOneWildcardE)
 <LI><a href="#[15a]">touchgfx::TextArea::setHeight(short)</a> from screen1viewbase.o(i._ZN8touchgfx8TextArea9setHeightEs) referenced from textareawithwildcard.o(.constdata__ZTVN8touchgfx24TextAreaWithWildcardBaseE)
 <LI><a href="#[15a]">touchgfx::TextArea::setHeight(short)</a> from screen1viewbase.o(i._ZN8touchgfx8TextArea9setHeightEs) referenced from textarea.o(.constdata__ZTVN8touchgfx8TextAreaE)
 <LI><a href="#[186]">touchgfx::Container::getLastChild(short, short, touchgfx::Drawable**)</a> from container.o(i._ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE) referenced from container.o(.constdata__ZTVN8touchgfx9ContainerE)
 <LI><a href="#[187]">touchgfx::Container::setupDrawChain(const touchgfx::Rect&, touchgfx::Drawable**)</a> from container.o(i._ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE) referenced from container.o(.constdata__ZTVN8touchgfx9ContainerE)
 <LI><a href="#[189]">touchgfx::Container::getLastChildNear(short, short, touchgfx::Drawable**, short*, short*)</a> from container.o(i._ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_) referenced from container.o(.constdata__ZTVN8touchgfx9ContainerE)
 <LI><a href="#[188]">touchgfx::Container::add(touchgfx::Drawable&)</a> from container.o(i._ZN8touchgfx9Container3addERNS_8DrawableE) referenced from container.o(.constdata__ZTVN8touchgfx9ContainerE)
 <LI><a href="#[18b]">touchgfx::Partition&lang;touchgfx::meta::TypeList&lang;Screen1View, touchgfx::meta::TypeList&lang;touchgfx::meta::Nil, touchgfx::meta::Nil&rang;&rang;, (unsigned short)1&rang;::element_size()</a> from touchgfxconfiguration.o(t._ZN8touchgfx9PartitionINS_4meta8TypeListI11Screen1ViewNS2_INS1_3NilES4_EEEELt1EE12element_sizeEv) referenced from touchgfxconfiguration.o(.constdata__ZTVN8touchgfx9PartitionINS_4meta8TypeListI11Screen1ViewNS2_INS1_3NilES4_EEEELt1EEE)
 <LI><a href="#[18c]">touchgfx::Partition&lang;touchgfx::meta::TypeList&lang;Screen1View, touchgfx::meta::TypeList&lang;touchgfx::meta::Nil, touchgfx::meta::Nil&rang;&rang;, (unsigned short)1&rang;::element(unsigned short)</a> from touchgfxconfiguration.o(t._ZN8touchgfx9PartitionINS_4meta8TypeListI11Screen1ViewNS2_INS1_3NilES4_EEEELt1EE7elementEt) referenced from touchgfxconfiguration.o(.constdata__ZTVN8touchgfx9PartitionINS_4meta8TypeListI11Screen1ViewNS2_INS1_3NilES4_EEEELt1EEE)
 <LI><a href="#[18a]">touchgfx::Partition&lang;touchgfx::meta::TypeList&lang;Screen1View, touchgfx::meta::TypeList&lang;touchgfx::meta::Nil, touchgfx::meta::Nil&rang;&rang;, (unsigned short)1&rang;::~Partition()</a> from touchgfxconfiguration.o(i._ZN8touchgfx9PartitionINS_4meta8TypeListI11Screen1ViewNS2_INS1_3NilES4_EEEELt1EED1Ev) referenced from touchgfxconfiguration.o(.constdata__ZTVN8touchgfx9PartitionINS_4meta8TypeListI11Screen1ViewNS2_INS1_3NilES4_EEEELt1EEE)
 <LI><a href="#[18e]">touchgfx::Partition&lang;touchgfx::meta::TypeList&lang;Screen1Presenter, touchgfx::meta::TypeList&lang;touchgfx::meta::Nil, touchgfx::meta::Nil&rang;&rang;, (unsigned short)1&rang;::element_size()</a> from touchgfxconfiguration.o(t._ZN8touchgfx9PartitionINS_4meta8TypeListI16Screen1PresenterNS2_INS1_3NilES4_EEEELt1EE12element_sizeEv) referenced from touchgfxconfiguration.o(.constdata__ZTVN8touchgfx9PartitionINS_4meta8TypeListI16Screen1PresenterNS2_INS1_3NilES4_EEEELt1EEE)
 <LI><a href="#[18f]">touchgfx::Partition&lang;touchgfx::meta::TypeList&lang;Screen1Presenter, touchgfx::meta::TypeList&lang;touchgfx::meta::Nil, touchgfx::meta::Nil&rang;&rang;, (unsigned short)1&rang;::element(unsigned short)</a> from touchgfxconfiguration.o(t._ZN8touchgfx9PartitionINS_4meta8TypeListI16Screen1PresenterNS2_INS1_3NilES4_EEEELt1EE7elementEt) referenced from touchgfxconfiguration.o(.constdata__ZTVN8touchgfx9PartitionINS_4meta8TypeListI16Screen1PresenterNS2_INS1_3NilES4_EEEELt1EEE)
 <LI><a href="#[18d]">touchgfx::Partition&lang;touchgfx::meta::TypeList&lang;Screen1Presenter, touchgfx::meta::TypeList&lang;touchgfx::meta::Nil, touchgfx::meta::Nil&rang;&rang;, (unsigned short)1&rang;::~Partition()</a> from touchgfxconfiguration.o(i._ZN8touchgfx9PartitionINS_4meta8TypeListI16Screen1PresenterNS2_INS1_3NilES4_EEEELt1EED1Ev) referenced from touchgfxconfiguration.o(.constdata__ZTVN8touchgfx9PartitionINS_4meta8TypeListI16Screen1PresenterNS2_INS1_3NilES4_EEEELt1EEE)
 <LI><a href="#[191]">touchgfx::Partition&lang;touchgfx::meta::TypeList&lang;touchgfx::NoTransition, touchgfx::meta::TypeList&lang;touchgfx::meta::Nil, touchgfx::meta::Nil&rang;&rang;, (unsigned short)1&rang;::element_size()</a> from touchgfxconfiguration.o(t._ZN8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EE12element_sizeEv) referenced from touchgfxconfiguration.o(.constdata__ZTVN8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EEE)
 <LI><a href="#[192]">touchgfx::Partition&lang;touchgfx::meta::TypeList&lang;touchgfx::NoTransition, touchgfx::meta::TypeList&lang;touchgfx::meta::Nil, touchgfx::meta::Nil&rang;&rang;, (unsigned short)1&rang;::element(unsigned short)</a> from touchgfxconfiguration.o(t._ZN8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EE7elementEt) referenced from touchgfxconfiguration.o(.constdata__ZTVN8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EEE)
 <LI><a href="#[190]">touchgfx::Partition&lang;touchgfx::meta::TypeList&lang;touchgfx::NoTransition, touchgfx::meta::TypeList&lang;touchgfx::meta::Nil, touchgfx::meta::Nil&rang;&rang;, (unsigned short)1&rang;::~Partition()</a> from touchgfxconfiguration.o(i._ZN8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EED1Ev) referenced from touchgfxconfiguration.o(.constdata__ZTVN8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EEE)
 <LI><a href="#[194]">touchgfx::Presenter::deactivate()</a> from screen1presenter.o(i._ZN8touchgfx9Presenter10deactivateEv) referenced from screen1presenter.o(.constdata__ZTVN8touchgfx9PresenterE)
 <LI><a href="#[193]">touchgfx::Presenter::activate()</a> from screen1presenter.o(i._ZN8touchgfx9Presenter8activateEv) referenced from screen1presenter.o(.constdata__ZTVN8touchgfx9PresenterE)
 <LI><a href="#[195]">touchgfx::Presenter::~Presenter()</a> from screen1presenter.o(i._ZN8touchgfx9PresenterD1Ev) referenced from screen1presenter.o(.constdata__ZTVN8touchgfx9PresenterE)
 <LI><a href="#[ed]">TouchGFXHAL::getTFTFrameBuffer() const</a> from touchgfxhal.o(i._ZNK11TouchGFXHAL17getTFTFrameBufferEv) referenced from touchgfxhal.o(.constdata__ZTV11TouchGFXHAL)
 <LI><a href="#[11d]">TouchGFXGeneratedHAL::getTFTFrameBuffer() const</a> from touchgfxgeneratedhal.o(i._ZNK20TouchGFXGeneratedHAL17getTFTFrameBufferEv) referenced from touchgfxgeneratedhal.o(.constdata__ZTV20TouchGFXGeneratedHAL)
 <LI><a href="#[147]">touchgfx::GeneratedFont::getKerning(unsigned short, const touchgfx::GlyphNode*) const</a> from generatedfont.o(i._ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE) referenced from generatedfont.o(.constdata__ZTVN8touchgfx13GeneratedFontE)
 <LI><a href="#[148]">touchgfx::GeneratedFont::getGSUBTable() const</a> from generatedfont.o(i._ZNK8touchgfx13GeneratedFont12getGSUBTableEv) referenced from generatedfont.o(.constdata__ZTVN8touchgfx13GeneratedFontE)
 <LI><a href="#[14b]">touchgfx::GeneratedFont::getPixelData(const touchgfx::GlyphNode*) const</a> from generatedfont.o(i._ZNK8touchgfx13GeneratedFont12getPixelDataEPKNS_9GlyphNodeE) referenced from generatedfont.o(.constdata__ZTVN8touchgfx13GeneratedFontE)
 <LI><a href="#[149]">touchgfx::GeneratedFont::getContextualFormsTable() const</a> from generatedfont.o(i._ZNK8touchgfx13GeneratedFont23getContextualFormsTableEv) referenced from generatedfont.o(.constdata__ZTVN8touchgfx13GeneratedFontE)
 <LI><a href="#[164]">touchgfx::TextAreaWithOneWildcard::getWildcard1() const</a> from screen1viewbase.o(i._ZNK8touchgfx23TextAreaWithOneWildcard12getWildcard1Ev) referenced from screen1viewbase.o(.constdata__ZTVN8touchgfx23TextAreaWithOneWildcardE)
 <LI><a href="#[166]">touchgfx::TextAreaWithWildcardBase::calculateBoundingArea() const</a> from screen1viewbase.o(i._ZNK8touchgfx24TextAreaWithWildcardBase21calculateBoundingAreaEv) referenced from screen1viewbase.o(.constdata__ZTVN8touchgfx23TextAreaWithOneWildcardE)
 <LI><a href="#[166]">touchgfx::TextAreaWithWildcardBase::calculateBoundingArea() const</a> from screen1viewbase.o(i._ZNK8touchgfx24TextAreaWithWildcardBase21calculateBoundingAreaEv) referenced from textareawithwildcard.o(.constdata__ZTVN8touchgfx24TextAreaWithWildcardBaseE)
 <LI><a href="#[152]">touchgfx::TextAreaWithWildcardBase::draw(const touchgfx::Rect&) const</a> from textareawithwildcard.o(i._ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE) referenced from screen1viewbase.o(.constdata__ZTVN8touchgfx23TextAreaWithOneWildcardE)
 <LI><a href="#[152]">touchgfx::TextAreaWithWildcardBase::draw(const touchgfx::Rect&) const</a> from textareawithwildcard.o(i._ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE) referenced from textareawithwildcard.o(.constdata__ZTVN8touchgfx24TextAreaWithWildcardBaseE)
 <LI><a href="#[16a]">touchgfx::Box::getSolidRect() const</a> from box.o(i._ZNK8touchgfx3Box12getSolidRectEv) referenced from box.o(.constdata__ZTVN8touchgfx3BoxE)
 <LI><a href="#[169]">touchgfx::Box::draw(const touchgfx::Rect&) const</a> from box.o(i._ZNK8touchgfx3Box4drawERKNS_4RectE) referenced from box.o(.constdata__ZTVN8touchgfx3BoxE)
 <LI><a href="#[174]">touchgfx::Font::getKerning(unsigned short, const touchgfx::GlyphNode*) const</a> from texts.o(i._ZNK8touchgfx4Font10getKerningEtPKNS_9GlyphNodeE) referenced from texts.o(.constdata__ZTVN8touchgfx4FontE)
 <LI><a href="#[143]">touchgfx::Font::getBaseline() const</a> from cachedfont.o(i._ZNK8touchgfx4Font11getBaselineEv) referenced from generatedfont.o(.constdata__ZTVN8touchgfx13GeneratedFontE)
 <LI><a href="#[143]">touchgfx::Font::getBaseline() const</a> from cachedfont.o(i._ZNK8touchgfx4Font11getBaselineEv) referenced from texts.o(.constdata__ZTVN8touchgfx4FontE)
 <LI><a href="#[143]">touchgfx::Font::getBaseline() const</a> from cachedfont.o(i._ZNK8touchgfx4Font11getBaselineEv) referenced from constfont.o(.constdata__ZTVN8touchgfx9ConstFontE)
 <LI><a href="#[175]">touchgfx::Font::getGSUBTable() const</a> from texts.o(i._ZNK8touchgfx4Font12getGSUBTableEv) referenced from texts.o(.constdata__ZTVN8touchgfx4FontE)
 <LI><a href="#[175]">touchgfx::Font::getGSUBTable() const</a> from texts.o(i._ZNK8touchgfx4Font12getGSUBTableEv) referenced from constfont.o(.constdata__ZTVN8touchgfx9ConstFontE)
 <LI><a href="#[142]">touchgfx::Font::getStringWidth(unsigned char, const unsigned short*, ...) const</a> from texts.o(i._ZNK8touchgfx4Font14getStringWidthEhPKtz) referenced from generatedfont.o(.constdata__ZTVN8touchgfx13GeneratedFontE)
 <LI><a href="#[142]">touchgfx::Font::getStringWidth(unsigned char, const unsigned short*, ...) const</a> from texts.o(i._ZNK8touchgfx4Font14getStringWidthEhPKtz) referenced from texts.o(.constdata__ZTVN8touchgfx4FontE)
 <LI><a href="#[142]">touchgfx::Font::getStringWidth(unsigned char, const unsigned short*, ...) const</a> from texts.o(i._ZNK8touchgfx4Font14getStringWidthEhPKtz) referenced from constfont.o(.constdata__ZTVN8touchgfx9ConstFontE)
 <LI><a href="#[145]">touchgfx::Font::getBitsPerPixel() const</a> from cachedfont.o(i._ZNK8touchgfx4Font15getBitsPerPixelEv) referenced from generatedfont.o(.constdata__ZTVN8touchgfx13GeneratedFontE)
 <LI><a href="#[145]">touchgfx::Font::getBitsPerPixel() const</a> from cachedfont.o(i._ZNK8touchgfx4Font15getBitsPerPixelEv) referenced from texts.o(.constdata__ZTVN8touchgfx4FontE)
 <LI><a href="#[145]">touchgfx::Font::getBitsPerPixel() const</a> from cachedfont.o(i._ZNK8touchgfx4Font15getBitsPerPixelEv) referenced from constfont.o(.constdata__ZTVN8touchgfx9ConstFontE)
 <LI><a href="#[146]">touchgfx::Font::getByteAlignRow() const</a> from cachedfont.o(i._ZNK8touchgfx4Font15getByteAlignRowEv) referenced from generatedfont.o(.constdata__ZTVN8touchgfx13GeneratedFontE)
 <LI><a href="#[146]">touchgfx::Font::getByteAlignRow() const</a> from cachedfont.o(i._ZNK8touchgfx4Font15getByteAlignRowEv) referenced from texts.o(.constdata__ZTVN8touchgfx4FontE)
 <LI><a href="#[146]">touchgfx::Font::getByteAlignRow() const</a> from cachedfont.o(i._ZNK8touchgfx4Font15getByteAlignRowEv) referenced from constfont.o(.constdata__ZTVN8touchgfx9ConstFontE)
 <LI><a href="#[141]">touchgfx::Font::getEllipsisChar() const</a> from cachedfont.o(i._ZNK8touchgfx4Font15getEllipsisCharEv) referenced from generatedfont.o(.constdata__ZTVN8touchgfx13GeneratedFontE)
 <LI><a href="#[141]">touchgfx::Font::getEllipsisChar() const</a> from cachedfont.o(i._ZNK8touchgfx4Font15getEllipsisCharEv) referenced from texts.o(.constdata__ZTVN8touchgfx4FontE)
 <LI><a href="#[141]">touchgfx::Font::getEllipsisChar() const</a> from cachedfont.o(i._ZNK8touchgfx4Font15getEllipsisCharEv) referenced from constfont.o(.constdata__ZTVN8touchgfx9ConstFontE)
 <LI><a href="#[140]">touchgfx::Font::getFallbackChar() const</a> from cachedfont.o(i._ZNK8touchgfx4Font15getFallbackCharEv) referenced from generatedfont.o(.constdata__ZTVN8touchgfx13GeneratedFontE)
 <LI><a href="#[140]">touchgfx::Font::getFallbackChar() const</a> from cachedfont.o(i._ZNK8touchgfx4Font15getFallbackCharEv) referenced from texts.o(.constdata__ZTVN8touchgfx4FontE)
 <LI><a href="#[140]">touchgfx::Font::getFallbackChar() const</a> from cachedfont.o(i._ZNK8touchgfx4Font15getFallbackCharEv) referenced from constfont.o(.constdata__ZTVN8touchgfx9ConstFontE)
 <LI><a href="#[14a]">touchgfx::Font::isVectorBasedFont() const</a> from cachedfont.o(i._ZNK8touchgfx4Font17isVectorBasedFontEv) referenced from generatedfont.o(.constdata__ZTVN8touchgfx13GeneratedFontE)
 <LI><a href="#[14a]">touchgfx::Font::isVectorBasedFont() const</a> from cachedfont.o(i._ZNK8touchgfx4Font17isVectorBasedFontEv) referenced from texts.o(.constdata__ZTVN8touchgfx4FontE)
 <LI><a href="#[14a]">touchgfx::Font::isVectorBasedFont() const</a> from cachedfont.o(i._ZNK8touchgfx4Font17isVectorBasedFontEv) referenced from constfont.o(.constdata__ZTVN8touchgfx9ConstFontE)
 <LI><a href="#[176]">touchgfx::Font::getContextualFormsTable() const</a> from texts.o(i._ZNK8touchgfx4Font23getContextualFormsTableEv) referenced from texts.o(.constdata__ZTVN8touchgfx4FontE)
 <LI><a href="#[176]">touchgfx::Font::getContextualFormsTable() const</a> from texts.o(i._ZNK8touchgfx4Font23getContextualFormsTableEv) referenced from constfont.o(.constdata__ZTVN8touchgfx9ConstFontE)
 <LI><a href="#[13f]">touchgfx::Font::getGlyph(unsigned short) const</a> from cachedfont.o(i._ZNK8touchgfx4Font8getGlyphEt) referenced from generatedfont.o(.constdata__ZTVN8touchgfx13GeneratedFontE)
 <LI><a href="#[13f]">touchgfx::Font::getGlyph(unsigned short) const</a> from cachedfont.o(i._ZNK8touchgfx4Font8getGlyphEt) referenced from texts.o(.constdata__ZTVN8touchgfx4FontE)
 <LI><a href="#[13f]">touchgfx::Font::getGlyph(unsigned short) const</a> from cachedfont.o(i._ZNK8touchgfx4Font8getGlyphEt) referenced from constfont.o(.constdata__ZTVN8touchgfx9ConstFontE)
 <LI><a href="#[144]">touchgfx::Font::getHeight() const</a> from cachedfont.o(i._ZNK8touchgfx4Font9getHeightEv) referenced from generatedfont.o(.constdata__ZTVN8touchgfx13GeneratedFontE)
 <LI><a href="#[144]">touchgfx::Font::getHeight() const</a> from cachedfont.o(i._ZNK8touchgfx4Font9getHeightEv) referenced from texts.o(.constdata__ZTVN8touchgfx4FontE)
 <LI><a href="#[144]">touchgfx::Font::getHeight() const</a> from cachedfont.o(i._ZNK8touchgfx4Font9getHeightEv) referenced from constfont.o(.constdata__ZTVN8touchgfx9ConstFontE)
 <LI><a href="#[17d]">touchgfx::Callback&lang;FrontendApplicationBase, void, void, void&rang;::isValid() const</a> from frontendapplicationbase.o(t._ZNK8touchgfx8CallbackI23FrontendApplicationBasevvvE7isValidEv) referenced from frontendapplicationbase.o(.constdata__ZTVN8touchgfx8CallbackI23FrontendApplicationBasevvvEE)
 <LI><a href="#[155]">touchgfx::Drawable::getVisibleRect(touchgfx::Rect&) const</a> from drawable.o(i._ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE) referenced from screen1viewbase.o(.constdata__ZTVN8touchgfx23TextAreaWithOneWildcardE)
 <LI><a href="#[155]">touchgfx::Drawable::getVisibleRect(touchgfx::Rect&) const</a> from drawable.o(i._ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE) referenced from textareawithwildcard.o(.constdata__ZTVN8touchgfx24TextAreaWithWildcardBaseE)
 <LI><a href="#[155]">touchgfx::Drawable::getVisibleRect(touchgfx::Rect&) const</a> from drawable.o(i._ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE) referenced from box.o(.constdata__ZTVN8touchgfx3BoxE)
 <LI><a href="#[155]">touchgfx::Drawable::getVisibleRect(touchgfx::Rect&) const</a> from drawable.o(i._ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE) referenced from screen1viewbase.o(.constdata__ZTVN8touchgfx6WidgetE)
 <LI><a href="#[155]">touchgfx::Drawable::getVisibleRect(touchgfx::Rect&) const</a> from drawable.o(i._ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE) referenced from drawable.o(.constdata__ZTVN8touchgfx8DrawableE)
 <LI><a href="#[155]">touchgfx::Drawable::getVisibleRect(touchgfx::Rect&) const</a> from drawable.o(i._ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE) referenced from textarea.o(.constdata__ZTVN8touchgfx8TextAreaE)
 <LI><a href="#[155]">touchgfx::Drawable::getVisibleRect(touchgfx::Rect&) const</a> from drawable.o(i._ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE) referenced from container.o(.constdata__ZTVN8touchgfx9ContainerE)
 <LI><a href="#[156]">touchgfx::Drawable::translateRectToAbsolute(touchgfx::Rect&) const</a> from drawable.o(i._ZNK8touchgfx8Drawable23translateRectToAbsoluteERNS_4RectE) referenced from screen1viewbase.o(.constdata__ZTVN8touchgfx23TextAreaWithOneWildcardE)
 <LI><a href="#[156]">touchgfx::Drawable::translateRectToAbsolute(touchgfx::Rect&) const</a> from drawable.o(i._ZNK8touchgfx8Drawable23translateRectToAbsoluteERNS_4RectE) referenced from textareawithwildcard.o(.constdata__ZTVN8touchgfx24TextAreaWithWildcardBaseE)
 <LI><a href="#[156]">touchgfx::Drawable::translateRectToAbsolute(touchgfx::Rect&) const</a> from drawable.o(i._ZNK8touchgfx8Drawable23translateRectToAbsoluteERNS_4RectE) referenced from box.o(.constdata__ZTVN8touchgfx3BoxE)
 <LI><a href="#[156]">touchgfx::Drawable::translateRectToAbsolute(touchgfx::Rect&) const</a> from drawable.o(i._ZNK8touchgfx8Drawable23translateRectToAbsoluteERNS_4RectE) referenced from screen1viewbase.o(.constdata__ZTVN8touchgfx6WidgetE)
 <LI><a href="#[156]">touchgfx::Drawable::translateRectToAbsolute(touchgfx::Rect&) const</a> from drawable.o(i._ZNK8touchgfx8Drawable23translateRectToAbsoluteERNS_4RectE) referenced from drawable.o(.constdata__ZTVN8touchgfx8DrawableE)
 <LI><a href="#[156]">touchgfx::Drawable::translateRectToAbsolute(touchgfx::Rect&) const</a> from drawable.o(i._ZNK8touchgfx8Drawable23translateRectToAbsoluteERNS_4RectE) referenced from textarea.o(.constdata__ZTVN8touchgfx8TextAreaE)
 <LI><a href="#[156]">touchgfx::Drawable::translateRectToAbsolute(touchgfx::Rect&) const</a> from drawable.o(i._ZNK8touchgfx8Drawable23translateRectToAbsoluteERNS_4RectE) referenced from container.o(.constdata__ZTVN8touchgfx9ContainerE)
 <LI><a href="#[180]">touchgfx::LCD16bpp::framebufferFormat() const</a> from lcd16bpp.o(i._ZNK8touchgfx8LCD16bpp17framebufferFormatEv) referenced from lcd16bpp.o(.constdata__ZTVN8touchgfx8LCD16bppE)
 <LI><a href="#[160]">touchgfx::TextArea::getAlignment() const</a> from textarea.o(i._ZNK8touchgfx8TextArea12getAlignmentEv) referenced from screen1viewbase.o(.constdata__ZTVN8touchgfx23TextAreaWithOneWildcardE)
 <LI><a href="#[160]">touchgfx::TextArea::getAlignment() const</a> from textarea.o(i._ZNK8touchgfx8TextArea12getAlignmentEv) referenced from textareawithwildcard.o(.constdata__ZTVN8touchgfx24TextAreaWithWildcardBaseE)
 <LI><a href="#[160]">touchgfx::TextArea::getAlignment() const</a> from textarea.o(i._ZNK8touchgfx8TextArea12getAlignmentEv) referenced from textarea.o(.constdata__ZTVN8touchgfx8TextAreaE)
 <LI><a href="#[153]">touchgfx::TextArea::getSolidRect() const</a> from screen1viewbase.o(i._ZNK8touchgfx8TextArea12getSolidRectEv) referenced from screen1viewbase.o(.constdata__ZTVN8touchgfx23TextAreaWithOneWildcardE)
 <LI><a href="#[153]">touchgfx::TextArea::getSolidRect() const</a> from screen1viewbase.o(i._ZNK8touchgfx8TextArea12getSolidRectEv) referenced from textareawithwildcard.o(.constdata__ZTVN8touchgfx24TextAreaWithWildcardBaseE)
 <LI><a href="#[153]">touchgfx::TextArea::getSolidRect() const</a> from screen1viewbase.o(i._ZNK8touchgfx8TextArea12getSolidRectEv) referenced from textarea.o(.constdata__ZTVN8touchgfx8TextAreaE)
 <LI><a href="#[162]">touchgfx::TextArea::getTextWidth() const</a> from textarea.o(i._ZNK8touchgfx8TextArea12getTextWidthEv) referenced from screen1viewbase.o(.constdata__ZTVN8touchgfx23TextAreaWithOneWildcardE)
 <LI><a href="#[162]">touchgfx::TextArea::getTextWidth() const</a> from textarea.o(i._ZNK8touchgfx8TextArea12getTextWidthEv) referenced from textareawithwildcard.o(.constdata__ZTVN8touchgfx24TextAreaWithWildcardBaseE)
 <LI><a href="#[162]">touchgfx::TextArea::getTextWidth() const</a> from textarea.o(i._ZNK8touchgfx8TextArea12getTextWidthEv) referenced from textarea.o(.constdata__ZTVN8touchgfx8TextAreaE)
 <LI><a href="#[167]">touchgfx::TextArea::getWildcard1() const</a> from textarea.o(i._ZNK8touchgfx8TextArea12getWildcard1Ev) referenced from textareawithwildcard.o(.constdata__ZTVN8touchgfx24TextAreaWithWildcardBaseE)
 <LI><a href="#[167]">touchgfx::TextArea::getWildcard1() const</a> from textarea.o(i._ZNK8touchgfx8TextArea12getWildcard1Ev) referenced from textarea.o(.constdata__ZTVN8touchgfx8TextAreaE)
 <LI><a href="#[165]">touchgfx::TextArea::getWildcard2() const</a> from screen1viewbase.o(i._ZNK8touchgfx8TextArea12getWildcard2Ev) referenced from screen1viewbase.o(.constdata__ZTVN8touchgfx23TextAreaWithOneWildcardE)
 <LI><a href="#[165]">touchgfx::TextArea::getWildcard2() const</a> from screen1viewbase.o(i._ZNK8touchgfx8TextArea12getWildcard2Ev) referenced from textareawithwildcard.o(.constdata__ZTVN8touchgfx24TextAreaWithWildcardBaseE)
 <LI><a href="#[165]">touchgfx::TextArea::getWildcard2() const</a> from screen1viewbase.o(i._ZNK8touchgfx8TextArea12getWildcard2Ev) referenced from textarea.o(.constdata__ZTVN8touchgfx8TextAreaE)
 <LI><a href="#[161]">touchgfx::TextArea::getTextHeight() const</a> from textarea.o(i._ZNK8touchgfx8TextArea13getTextHeightEv) referenced from screen1viewbase.o(.constdata__ZTVN8touchgfx23TextAreaWithOneWildcardE)
 <LI><a href="#[161]">touchgfx::TextArea::getTextHeight() const</a> from textarea.o(i._ZNK8touchgfx8TextArea13getTextHeightEv) referenced from textareawithwildcard.o(.constdata__ZTVN8touchgfx24TextAreaWithWildcardBaseE)
 <LI><a href="#[161]">touchgfx::TextArea::getTextHeight() const</a> from textarea.o(i._ZNK8touchgfx8TextArea13getTextHeightEv) referenced from textarea.o(.constdata__ZTVN8touchgfx8TextAreaE)
 <LI><a href="#[163]">touchgfx::TextArea::calculateTextHeight(const unsigned short*, ...) const</a> from textarea.o(i._ZNK8touchgfx8TextArea19calculateTextHeightEPKtz) referenced from screen1viewbase.o(.constdata__ZTVN8touchgfx23TextAreaWithOneWildcardE)
 <LI><a href="#[163]">touchgfx::TextArea::calculateTextHeight(const unsigned short*, ...) const</a> from textarea.o(i._ZNK8touchgfx8TextArea19calculateTextHeightEPKtz) referenced from textareawithwildcard.o(.constdata__ZTVN8touchgfx24TextAreaWithWildcardBaseE)
 <LI><a href="#[163]">touchgfx::TextArea::calculateTextHeight(const unsigned short*, ...) const</a> from textarea.o(i._ZNK8touchgfx8TextArea19calculateTextHeightEPKtz) referenced from textarea.o(.constdata__ZTVN8touchgfx8TextAreaE)
 <LI><a href="#[183]">touchgfx::TextArea::calculateBoundingArea() const</a> from textarea.o(i._ZNK8touchgfx8TextArea21calculateBoundingAreaEv) referenced from textarea.o(.constdata__ZTVN8touchgfx8TextAreaE)
 <LI><a href="#[182]">touchgfx::TextArea::draw(const touchgfx::Rect&) const</a> from textarea.o(i._ZNK8touchgfx8TextArea4drawERKNS_4RectE) referenced from textarea.o(.constdata__ZTVN8touchgfx8TextAreaE)
 <LI><a href="#[13e]">touchgfx::ConstFont::getGlyph(unsigned short, const unsigned char*&, unsigned char&) const</a> from constfont.o(i._ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh) referenced from generatedfont.o(.constdata__ZTVN8touchgfx13GeneratedFontE)
 <LI><a href="#[13e]">touchgfx::ConstFont::getGlyph(unsigned short, const unsigned char*&, unsigned char&) const</a> from constfont.o(i._ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh) referenced from constfont.o(.constdata__ZTVN8touchgfx9ConstFontE)
 <LI><a href="#[185]">touchgfx::Container::getSolidRect() const</a> from container.o(i._ZNK8touchgfx9Container12getSolidRectEv) referenced from container.o(.constdata__ZTVN8touchgfx9ContainerE)
 <LI><a href="#[184]">touchgfx::Container::draw(const touchgfx::Rect&) const</a> from container.o(i._ZNK8touchgfx9Container4drawERKNS_4RectE) referenced from container.o(.constdata__ZTVN8touchgfx9ContainerE)
 <LI><a href="#[13a]">__cxa_pure_virtual</a> from pure_virt.o(i.__cxa_pure_virtual) referenced from touchgfxconfiguration.o(.constdata__ZTVN8touchgfx12FontProviderE)
 <LI><a href="#[13a]">__cxa_pure_virtual</a> from pure_virt.o(i.__cxa_pure_virtual) referenced 4 times from dma.o(.constdata__ZTVN8touchgfx13DMA_InterfaceE)
 <LI><a href="#[13a]">__cxa_pure_virtual</a> from pure_virt.o(i.__cxa_pure_virtual) referenced 2 times from frontendapplicationbase.o(.constdata__ZTVN8touchgfx15GenericCallbackIvvvEE)
 <LI><a href="#[13a]">__cxa_pure_virtual</a> from pure_virt.o(i.__cxa_pure_virtual) referenced 2 times from touchgfxconfiguration.o(.constdata__ZTVN8touchgfx15TouchControllerE)
 <LI><a href="#[13a]">__cxa_pure_virtual</a> from pure_virt.o(i.__cxa_pure_virtual) referenced 4 times from abstractpartition.o(.constdata__ZTVN8touchgfx17AbstractPartitionE)
 <LI><a href="#[13a]">__cxa_pure_virtual</a> from pure_virt.o(i.__cxa_pure_virtual) referenced 6 times from hal.o(.constdata__ZTVN8touchgfx3HALE)
 <LI><a href="#[13a]">__cxa_pure_virtual</a> from pure_virt.o(i.__cxa_pure_virtual) referenced from texts.o(.constdata__ZTVN8touchgfx4FontE)
 <LI><a href="#[13a]">__cxa_pure_virtual</a> from pure_virt.o(i.__cxa_pure_virtual) referenced 2 times from screen1viewbase.o(.constdata__ZTVN8touchgfx6WidgetE)
 <LI><a href="#[13a]">__cxa_pure_virtual</a> from pure_virt.o(i.__cxa_pure_virtual) referenced 3 times from drawable.o(.constdata__ZTVN8touchgfx8DrawableE)
 <LI><a href="#[13a]">__cxa_pure_virtual</a> from pure_virt.o(i.__cxa_pure_virtual) referenced 2 times from constfont.o(.constdata__ZTVN8touchgfx9ConstFontE)
 <LI><a href="#[19a]">__main</a> from __main.o(!!!main) referenced from startup_stm32h757xx_cm7.o(.text)
 <LI><a href="#[198]">__sti___15_Application_cpp_63cd8d44</a> from application.o(i.__sti___15_Application_cpp_63cd8d44) referenced from application.o(.init_array)
 <LI><a href="#[197]">__sti___21_typedtextdatabase_cpp_05ec7672</a> from typedtextdatabase.o(i.__sti___21_typedtextdatabase_cpp_05ec7672) referenced from typedtextdatabase.o(.init_array)
 <LI><a href="#[196]">__sti___25_TouchGFXConfiguration_cpp_f5abfd34</a> from touchgfxconfiguration.o(i.__sti___25_TouchGFXConfiguration_cpp_f5abfd34) referenced from touchgfxconfiguration.o(.init_array)
 <LI><a href="#[199]">__sti___7_LCD_cpp_86507772</a> from lcd.o(i.__sti___7_LCD_cpp_86507772) referenced from lcd.o(.init_array)
 <LI><a href="#[d7]">prvIdleTask</a> from tasks.o(i.prvIdleTask) referenced from tasks.o(i.vTaskStartScheduler)
 <LI><a href="#[d5]">prvTaskExitError</a> from port.o(i.prvTaskExitError) referenced from port.o(i.pxPortInitialiseStack)
 <LI><a href="#[d8]">prvTimerTask</a> from timers.o(i.prvTimerTask) referenced from timers.o(i.xTimerCreateTimerTask)
</UL>
<P>
<H3>
Global Symbols
</H3>
<P><STRONG><a name="[19a]"></a>__main</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, __main.o(!!!main))
<BR><BR>[Calls]<UL><LI><a href="#[19d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry
<LI><a href="#[19c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload
</UL>

<P><STRONG><a name="[19c]"></a>__scatterload</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __scatter.o(!!!scatter))
<BR><BR>[Called By]<UL><LI><a href="#[19a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__main
</UL>

<P><STRONG><a name="[19e]"></a>__scatterload_rt2</STRONG> (Thumb, 44 bytes, Stack size unknown bytes, __scatter.o(!!!scatter), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[19d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry
</UL>

<P><STRONG><a name="[33d]"></a>__scatterload_rt2_thumb_only</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __scatter.o(!!!scatter), UNUSED)

<P><STRONG><a name="[33e]"></a>__scatterload_null</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __scatter.o(!!!scatter), UNUSED)

<P><STRONG><a name="[33f]"></a>__decompress</STRONG> (Thumb, 90 bytes, Stack size unknown bytes, __dczerorl2.o(!!dczerorl2), UNUSED)

<P><STRONG><a name="[340]"></a>__decompress1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __dczerorl2.o(!!dczerorl2), UNUSED)

<P><STRONG><a name="[341]"></a>__scatterload_zeroinit</STRONG> (Thumb, 28 bytes, Stack size unknown bytes, __scatter_zi.o(!!handler_zi), UNUSED)

<P><STRONG><a name="[1a9]"></a>__rt_lib_init</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit.o(.ARM.Collect$$libinit$$00000000))
<BR><BR>[Called By]<UL><LI><a href="#[1a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry_li
</UL>

<P><STRONG><a name="[19f]"></a>__rt_lib_init_fp_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000001))
<BR><BR>[Calls]<UL><LI><a href="#[1a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fp_init
</UL>

<P><STRONG><a name="[1a1]"></a>__rt_lib_init_heap_2</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000005))
<BR><BR>[Stack]<UL><LI>Max Depth = 64 + Unknown Stack Size
<LI>Call Chain = __rt_lib_init_heap_2 &rArr; _init_alloc &rArr; __rt_SIGRTMEM &rArr; __rt_SIGRTMEM_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[1a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_init_alloc
</UL>

<P><STRONG><a name="[342]"></a>__rt_lib_init_preinit_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000004))

<P><STRONG><a name="[343]"></a>__rt_lib_init_alloca_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000002E))

<P><STRONG><a name="[344]"></a>__rt_lib_init_argv_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000002C))

<P><STRONG><a name="[345]"></a>__rt_lib_init_atexit_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000001B))

<P><STRONG><a name="[346]"></a>__rt_lib_init_clock_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000021))

<P><STRONG><a name="[1a3]"></a>__rt_lib_init_cpp_2</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000031))
<BR><BR>[Stack]<UL><LI>Max Depth = 16 + Unknown Stack Size
<LI>Call Chain = __rt_lib_init_cpp_2 &rArr; __cpp_initialize__aeabi_
</UL>
<BR>[Calls]<UL><LI><a href="#[19b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cpp_initialize__aeabi_
</UL>

<P><STRONG><a name="[347]"></a>__rt_lib_init_exceptions_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000030))

<P><STRONG><a name="[348]"></a>__rt_lib_init_fp_trap_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000001F))

<P><STRONG><a name="[349]"></a>__rt_lib_init_getenv_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000023))

<P><STRONG><a name="[34a]"></a>__rt_lib_init_heap_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000000A))

<P><STRONG><a name="[34b]"></a>__rt_lib_init_lc_collate_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000011))

<P><STRONG><a name="[34c]"></a>__rt_lib_init_lc_ctype_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000013))

<P><STRONG><a name="[34d]"></a>__rt_lib_init_lc_monetary_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000015))

<P><STRONG><a name="[34e]"></a>__rt_lib_init_lc_numeric_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000017))

<P><STRONG><a name="[34f]"></a>__rt_lib_init_lc_time_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000019))

<P><STRONG><a name="[350]"></a>__rt_lib_init_rand_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000000E))

<P><STRONG><a name="[351]"></a>__rt_lib_init_signal_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000001D))

<P><STRONG><a name="[352]"></a>__rt_lib_init_stdio_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000025))

<P><STRONG><a name="[353]"></a>__rt_lib_init_user_alloc_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000000C))

<P><STRONG><a name="[354]"></a>__rt_lib_init_cpp_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000032))

<P><STRONG><a name="[355]"></a>__rt_lib_init_return</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000033))

<P><STRONG><a name="[1ae]"></a>__rt_lib_shutdown</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown.o(.ARM.Collect$$libshutdown$$00000000))
<BR><BR>[Called By]<UL><LI><a href="#[1b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;abort
<LI><a href="#[1ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_exit_ls
</UL>

<P><STRONG><a name="[1a4]"></a>__rt_lib_shutdown_cpp_2</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$00000003))
<BR><BR>[Stack]<UL><LI>Max Depth = 40 + Unknown Stack Size
<LI>Call Chain = __rt_lib_shutdown_cpp_2 &rArr; __cxa_finalize &rArr; free
</UL>
<BR>[Calls]<UL><LI><a href="#[1a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxa_finalize
</UL>

<P><STRONG><a name="[356]"></a>__rt_lib_shutdown_fini_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$00000002))

<P><STRONG><a name="[357]"></a>__rt_lib_shutdown_cpp_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$00000004))

<P><STRONG><a name="[358]"></a>__rt_lib_shutdown_fp_trap_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$00000009))

<P><STRONG><a name="[359]"></a>__rt_lib_shutdown_heap_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$00000011))

<P><STRONG><a name="[35a]"></a>__rt_lib_shutdown_return</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$00000012))

<P><STRONG><a name="[35b]"></a>__rt_lib_shutdown_signal_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$0000000C))

<P><STRONG><a name="[35c]"></a>__rt_lib_shutdown_stdio_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$00000006))

<P><STRONG><a name="[35d]"></a>__rt_lib_shutdown_user_alloc_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$0000000E))

<P><STRONG><a name="[19d]"></a>__rt_entry</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __rtentry.o(.ARM.Collect$$rtentry$$00000000))
<BR><BR>[Called By]<UL><LI><a href="#[19a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__main
<LI><a href="#[19e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload_rt2
</UL>

<P><STRONG><a name="[35e]"></a>__rt_entry_presh_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __rtentry2.o(.ARM.Collect$$rtentry$$00000002))

<P><STRONG><a name="[1a6]"></a>__rt_entry_sh</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __rtentry4.o(.ARM.Collect$$rtentry$$00000004))
<BR><BR>[Stack]<UL><LI>Max Depth = 8 + Unknown Stack Size
<LI>Call Chain = __rt_entry_sh &rArr; __user_setup_stackheap
</UL>
<BR>[Calls]<UL><LI><a href="#[1a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__user_setup_stackheap
</UL>

<P><STRONG><a name="[1a8]"></a>__rt_entry_li</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __rtentry2.o(.ARM.Collect$$rtentry$$0000000A))
<BR><BR>[Calls]<UL><LI><a href="#[1a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_lib_init
</UL>

<P><STRONG><a name="[35f]"></a>__rt_entry_postsh_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __rtentry2.o(.ARM.Collect$$rtentry$$00000009))

<P><STRONG><a name="[1aa]"></a>__rt_entry_main</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __rtentry2.o(.ARM.Collect$$rtentry$$0000000D))
<BR><BR>[Stack]<UL><LI>Max Depth = 360 + Unknown Stack Size
<LI>Call Chain = __rt_entry_main &rArr; main &rArr; MX_LTDC_Init &rArr; HAL_LTDC_Init &rArr; HAL_LTDC_MspInit &rArr; HAL_NVIC_SetPriority &rArr; __NVIC_SetPriority
</UL>
<BR>[Calls]<UL><LI><a href="#[1ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[1ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;exit
</UL>

<P><STRONG><a name="[360]"></a>__rt_entry_postli_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __rtentry2.o(.ARM.Collect$$rtentry$$0000000C))

<P><STRONG><a name="[1ce]"></a>__rt_exit</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rtexit.o(.ARM.Collect$$rtexit$$00000000))
<BR><BR>[Called By]<UL><LI><a href="#[1ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;exit
</UL>

<P><STRONG><a name="[1ad]"></a>__rt_exit_ls</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rtexit2.o(.ARM.Collect$$rtexit$$00000003))
<BR><BR>[Calls]<UL><LI><a href="#[1ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_lib_shutdown
</UL>

<P><STRONG><a name="[361]"></a>__rt_exit_prels_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rtexit2.o(.ARM.Collect$$rtexit$$00000002))

<P><STRONG><a name="[1af]"></a>__rt_exit_exit</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rtexit2.o(.ARM.Collect$$rtexit$$00000004))
<BR><BR>[Calls]<UL><LI><a href="#[1b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_sys_exit
</UL>

<P><STRONG><a name="[15]"></a>SVC_Handler</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, port.o(.emb_text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h757xx_cm7.o(RESET)
</UL>
<P><STRONG><a name="[331]"></a>__asm___6_port_c_39a90d8d__prvStartFirstTask</STRONG> (Thumb, 36 bytes, Stack size 0 bytes, port.o(.emb_text))
<BR><BR>[Called By]<UL><LI><a href="#[32e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xPortStartScheduler
</UL>

<P><STRONG><a name="[330]"></a>__asm___6_port_c_39a90d8d__prvEnableVFP</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, port.o(.emb_text))
<BR><BR>[Called By]<UL><LI><a href="#[32e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xPortStartScheduler
</UL>

<P><STRONG><a name="[17]"></a>PendSV_Handler</STRONG> (Thumb, 88 bytes, Stack size 0 bytes, port.o(.emb_text))
<BR><BR>[Calls]<UL><LI><a href="#[1b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskSwitchContext
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h757xx_cm7.o(RESET)
</UL>
<P><STRONG><a name="[327]"></a>vPortGetIPSR</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, port.o(.emb_text))
<BR><BR>[Called By]<UL><LI><a href="#[326]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortValidateInterruptPriority
</UL>

<P><STRONG><a name="[f]"></a>Reset_Handler</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, startup_stm32h757xx_cm7.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h757xx_cm7.o(RESET)
</UL>
<P><STRONG><a name="[362]"></a>_maybe_terminate_alloc</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, maybetermalloc1.o(.emb_text), UNUSED)

<P><STRONG><a name="[95]"></a>ADC3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h757xx_cm7.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC3_IRQHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC3_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h757xx_cm7.o(RESET)
</UL>
<P><STRONG><a name="[2b]"></a>ADC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h757xx_cm7.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h757xx_cm7.o(RESET)
</UL>
<P><STRONG><a name="[97]"></a>BDMA_Channel0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h757xx_cm7.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h757xx_cm7.o(RESET)
</UL>
<P><STRONG><a name="[98]"></a>BDMA_Channel1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h757xx_cm7.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h757xx_cm7.o(RESET)
</UL>
<P><STRONG><a name="[99]"></a>BDMA_Channel2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h757xx_cm7.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h757xx_cm7.o(RESET)
</UL>
<P><STRONG><a name="[9a]"></a>BDMA_Channel3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h757xx_cm7.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h757xx_cm7.o(RESET)
</UL>
<P><STRONG><a name="[9b]"></a>BDMA_Channel4_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h757xx_cm7.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h757xx_cm7.o(RESET)
</UL>
<P><STRONG><a name="[9c]"></a>BDMA_Channel5_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h757xx_cm7.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h757xx_cm7.o(RESET)
</UL>
<P><STRONG><a name="[9d]"></a>BDMA_Channel6_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h757xx_cm7.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h757xx_cm7.o(RESET)
</UL>
<P><STRONG><a name="[9e]"></a>BDMA_Channel7_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h757xx_cm7.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h757xx_cm7.o(RESET)
</UL>
<P><STRONG><a name="[74]"></a>CEC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h757xx_cm7.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h757xx_cm7.o(RESET)
</UL>
<P><STRONG><a name="[59]"></a>CM4_SEV_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h757xx_cm7.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h757xx_cm7.o(RESET)
</UL>
<P><STRONG><a name="[58]"></a>CM7_SEV_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h757xx_cm7.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h757xx_cm7.o(RESET)
</UL>
<P><STRONG><a name="[9f]"></a>COMP1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h757xx_cm7.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h757xx_cm7.o(RESET)
</UL>
<P><STRONG><a name="[a6]"></a>CRS_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h757xx_cm7.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h757xx_cm7.o(RESET)
</UL>
<P><STRONG><a name="[65]"></a>CRYP_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h757xx_cm7.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h757xx_cm7.o(RESET)
</UL>
<P><STRONG><a name="[64]"></a>DCMI_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h757xx_cm7.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h757xx_cm7.o(RESET)
</UL>
<P><STRONG><a name="[84]"></a>DFSDM1_FLT0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h757xx_cm7.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h757xx_cm7.o(RESET)
</UL>
<P><STRONG><a name="[85]"></a>DFSDM1_FLT1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h757xx_cm7.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h757xx_cm7.o(RESET)
</UL>
<P><STRONG><a name="[86]"></a>DFSDM1_FLT2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h757xx_cm7.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h757xx_cm7.o(RESET)
</UL>
<P><STRONG><a name="[87]"></a>DFSDM1_FLT3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h757xx_cm7.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h757xx_cm7.o(RESET)
</UL>
<P><STRONG><a name="[24]"></a>DMA1_Stream0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h757xx_cm7.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h757xx_cm7.o(RESET)
</UL>
<P><STRONG><a name="[25]"></a>DMA1_Stream1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h757xx_cm7.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h757xx_cm7.o(RESET)
</UL>
<P><STRONG><a name="[26]"></a>DMA1_Stream2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h757xx_cm7.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h757xx_cm7.o(RESET)
</UL>
<P><STRONG><a name="[27]"></a>DMA1_Stream3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h757xx_cm7.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h757xx_cm7.o(RESET)
</UL>
<P><STRONG><a name="[28]"></a>DMA1_Stream4_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h757xx_cm7.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h757xx_cm7.o(RESET)
</UL>
<P><STRONG><a name="[29]"></a>DMA1_Stream5_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h757xx_cm7.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h757xx_cm7.o(RESET)
</UL>
<P><STRONG><a name="[2a]"></a>DMA1_Stream6_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h757xx_cm7.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h757xx_cm7.o(RESET)
</UL>
<P><STRONG><a name="[47]"></a>DMA1_Stream7_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h757xx_cm7.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h757xx_cm7.o(RESET)
</UL>
<P><STRONG><a name="[50]"></a>DMA2_Stream0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h757xx_cm7.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h757xx_cm7.o(RESET)
</UL>
<P><STRONG><a name="[51]"></a>DMA2_Stream1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h757xx_cm7.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h757xx_cm7.o(RESET)
</UL>
<P><STRONG><a name="[52]"></a>DMA2_Stream2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h757xx_cm7.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h757xx_cm7.o(RESET)
</UL>
<P><STRONG><a name="[53]"></a>DMA2_Stream3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h757xx_cm7.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h757xx_cm7.o(RESET)
</UL>
<P><STRONG><a name="[54]"></a>DMA2_Stream4_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h757xx_cm7.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h757xx_cm7.o(RESET)
</UL>
<P><STRONG><a name="[5a]"></a>DMA2_Stream5_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h757xx_cm7.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h757xx_cm7.o(RESET)
</UL>
<P><STRONG><a name="[5b]"></a>DMA2_Stream6_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h757xx_cm7.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h757xx_cm7.o(RESET)
</UL>
<P><STRONG><a name="[5c]"></a>DMA2_Stream7_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h757xx_cm7.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h757xx_cm7.o(RESET)
</UL>
<P><STRONG><a name="[7c]"></a>DMAMUX1_OVR_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h757xx_cm7.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h757xx_cm7.o(RESET)
</UL>
<P><STRONG><a name="[96]"></a>DMAMUX2_OVR_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h757xx_cm7.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h757xx_cm7.o(RESET)
</UL>
<P><STRONG><a name="[91]"></a>DSI_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h757xx_cm7.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h757xx_cm7.o(RESET)
</UL>
<P><STRONG><a name="[a7]"></a>ECC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h757xx_cm7.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h757xx_cm7.o(RESET)
</UL>
<P><STRONG><a name="[55]"></a>ETH_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h757xx_cm7.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h757xx_cm7.o(RESET)
</UL>
<P><STRONG><a name="[56]"></a>ETH_WKUP_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h757xx_cm7.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h757xx_cm7.o(RESET)
</UL>
<P><STRONG><a name="[1f]"></a>EXTI0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h757xx_cm7.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h757xx_cm7.o(RESET)
</UL>
<P><STRONG><a name="[41]"></a>EXTI15_10_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h757xx_cm7.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h757xx_cm7.o(RESET)
</UL>
<P><STRONG><a name="[20]"></a>EXTI1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h757xx_cm7.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h757xx_cm7.o(RESET)
</UL>
<P><STRONG><a name="[21]"></a>EXTI2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h757xx_cm7.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h757xx_cm7.o(RESET)
</UL>
<P><STRONG><a name="[22]"></a>EXTI3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h757xx_cm7.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h757xx_cm7.o(RESET)
</UL>
<P><STRONG><a name="[23]"></a>EXTI4_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h757xx_cm7.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h757xx_cm7.o(RESET)
</UL>
<P><STRONG><a name="[30]"></a>EXTI9_5_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h757xx_cm7.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h757xx_cm7.o(RESET)
</UL>
<P><STRONG><a name="[2c]"></a>FDCAN1_IT0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h757xx_cm7.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h757xx_cm7.o(RESET)
</UL>
<P><STRONG><a name="[2e]"></a>FDCAN1_IT1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h757xx_cm7.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h757xx_cm7.o(RESET)
</UL>
<P><STRONG><a name="[2d]"></a>FDCAN2_IT0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h757xx_cm7.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h757xx_cm7.o(RESET)
</UL>
<P><STRONG><a name="[2f]"></a>FDCAN2_IT1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h757xx_cm7.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h757xx_cm7.o(RESET)
</UL>
<P><STRONG><a name="[57]"></a>FDCAN_CAL_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h757xx_cm7.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h757xx_cm7.o(RESET)
</UL>
<P><STRONG><a name="[1d]"></a>FLASH_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h757xx_cm7.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h757xx_cm7.o(RESET)
</UL>
<P><STRONG><a name="[48]"></a>FMC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h757xx_cm7.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h757xx_cm7.o(RESET)
</UL>
<P><STRONG><a name="[67]"></a>FPU_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h757xx_cm7.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h757xx_cm7.o(RESET)
</UL>
<P><STRONG><a name="[66]"></a>HASH_RNG_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h757xx_cm7.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h757xx_cm7.o(RESET)
</UL>
<P><STRONG><a name="[a9]"></a>HOLD_CORE_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h757xx_cm7.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h757xx_cm7.o(RESET)
</UL>
<P><STRONG><a name="[83]"></a>HRTIM1_FLT_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h757xx_cm7.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h757xx_cm7.o(RESET)
</UL>
<P><STRONG><a name="[7d]"></a>HRTIM1_Master_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h757xx_cm7.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h757xx_cm7.o(RESET)
</UL>
<P><STRONG><a name="[7e]"></a>HRTIM1_TIMA_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h757xx_cm7.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h757xx_cm7.o(RESET)
</UL>
<P><STRONG><a name="[7f]"></a>HRTIM1_TIMB_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h757xx_cm7.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h757xx_cm7.o(RESET)
</UL>
<P><STRONG><a name="[80]"></a>HRTIM1_TIMC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h757xx_cm7.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h757xx_cm7.o(RESET)
</UL>
<P><STRONG><a name="[81]"></a>HRTIM1_TIMD_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h757xx_cm7.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h757xx_cm7.o(RESET)
</UL>
<P><STRONG><a name="[82]"></a>HRTIM1_TIME_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h757xx_cm7.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h757xx_cm7.o(RESET)
</UL>
<P><STRONG><a name="[93]"></a>HSEM1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h757xx_cm7.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h757xx_cm7.o(RESET)
</UL>
<P><STRONG><a name="[94]"></a>HSEM2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h757xx_cm7.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h757xx_cm7.o(RESET)
</UL>
<P><STRONG><a name="[39]"></a>I2C1_ER_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h757xx_cm7.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h757xx_cm7.o(RESET)
</UL>
<P><STRONG><a name="[38]"></a>I2C1_EV_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h757xx_cm7.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h757xx_cm7.o(RESET)
</UL>
<P><STRONG><a name="[3b]"></a>I2C2_ER_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h757xx_cm7.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h757xx_cm7.o(RESET)
</UL>
<P><STRONG><a name="[3a]"></a>I2C2_EV_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h757xx_cm7.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h757xx_cm7.o(RESET)
</UL>
<P><STRONG><a name="[5f]"></a>I2C3_ER_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h757xx_cm7.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h757xx_cm7.o(RESET)
</UL>
<P><STRONG><a name="[5e]"></a>I2C3_EV_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h757xx_cm7.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h757xx_cm7.o(RESET)
</UL>
<P><STRONG><a name="[76]"></a>I2C4_ER_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h757xx_cm7.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h757xx_cm7.o(RESET)
</UL>
<P><STRONG><a name="[75]"></a>I2C4_EV_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h757xx_cm7.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h757xx_cm7.o(RESET)
</UL>
<P><STRONG><a name="[8f]"></a>JPEG_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h757xx_cm7.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h757xx_cm7.o(RESET)
</UL>
<P><STRONG><a name="[73]"></a>LPTIM1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h757xx_cm7.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h757xx_cm7.o(RESET)
</UL>
<P><STRONG><a name="[a0]"></a>LPTIM2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h757xx_cm7.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h757xx_cm7.o(RESET)
</UL>
<P><STRONG><a name="[a1]"></a>LPTIM3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h757xx_cm7.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h757xx_cm7.o(RESET)
</UL>
<P><STRONG><a name="[a2]"></a>LPTIM4_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h757xx_cm7.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h757xx_cm7.o(RESET)
</UL>
<P><STRONG><a name="[a3]"></a>LPTIM5_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h757xx_cm7.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h757xx_cm7.o(RESET)
</UL>
<P><STRONG><a name="[a4]"></a>LPUART1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h757xx_cm7.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h757xx_cm7.o(RESET)
</UL>
<P><STRONG><a name="[6f]"></a>LTDC_ER_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h757xx_cm7.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h757xx_cm7.o(RESET)
</UL>
<P><STRONG><a name="[8e]"></a>MDIOS_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h757xx_cm7.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h757xx_cm7.o(RESET)
</UL>
<P><STRONG><a name="[8d]"></a>MDIOS_WKUP_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h757xx_cm7.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h757xx_cm7.o(RESET)
</UL>
<P><STRONG><a name="[90]"></a>MDMA_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h757xx_cm7.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h757xx_cm7.o(RESET)
</UL>
<P><STRONG><a name="[79]"></a>OTG_FS_EP1_IN_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h757xx_cm7.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h757xx_cm7.o(RESET)
</UL>
<P><STRONG><a name="[78]"></a>OTG_FS_EP1_OUT_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h757xx_cm7.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h757xx_cm7.o(RESET)
</UL>
<P><STRONG><a name="[7b]"></a>OTG_FS_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h757xx_cm7.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h757xx_cm7.o(RESET)
</UL>
<P><STRONG><a name="[7a]"></a>OTG_FS_WKUP_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h757xx_cm7.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h757xx_cm7.o(RESET)
</UL>
<P><STRONG><a name="[61]"></a>OTG_HS_EP1_IN_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h757xx_cm7.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h757xx_cm7.o(RESET)
</UL>
<P><STRONG><a name="[60]"></a>OTG_HS_EP1_OUT_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h757xx_cm7.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h757xx_cm7.o(RESET)
</UL>
<P><STRONG><a name="[63]"></a>OTG_HS_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h757xx_cm7.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h757xx_cm7.o(RESET)
</UL>
<P><STRONG><a name="[62]"></a>OTG_HS_WKUP_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h757xx_cm7.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h757xx_cm7.o(RESET)
</UL>
<P><STRONG><a name="[1a]"></a>PVD_AVD_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h757xx_cm7.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h757xx_cm7.o(RESET)
</UL>
<P><STRONG><a name="[72]"></a>QUADSPI_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h757xx_cm7.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h757xx_cm7.o(RESET)
</UL>
<P><STRONG><a name="[1e]"></a>RCC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h757xx_cm7.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h757xx_cm7.o(RESET)
</UL>
<P><STRONG><a name="[42]"></a>RTC_Alarm_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h757xx_cm7.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h757xx_cm7.o(RESET)
</UL>
<P><STRONG><a name="[1c]"></a>RTC_WKUP_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h757xx_cm7.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h757xx_cm7.o(RESET)
</UL>
<P><STRONG><a name="[6d]"></a>SAI1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h757xx_cm7.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h757xx_cm7.o(RESET)
</UL>
<P><STRONG><a name="[71]"></a>SAI2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h757xx_cm7.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h757xx_cm7.o(RESET)
</UL>
<P><STRONG><a name="[88]"></a>SAI3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h757xx_cm7.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h757xx_cm7.o(RESET)
</UL>
<P><STRONG><a name="[a8]"></a>SAI4_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h757xx_cm7.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h757xx_cm7.o(RESET)
</UL>
<P><STRONG><a name="[49]"></a>SDMMC1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h757xx_cm7.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h757xx_cm7.o(RESET)
</UL>
<P><STRONG><a name="[92]"></a>SDMMC2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h757xx_cm7.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h757xx_cm7.o(RESET)
</UL>
<P><STRONG><a name="[77]"></a>SPDIF_RX_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h757xx_cm7.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h757xx_cm7.o(RESET)
</UL>
<P><STRONG><a name="[3c]"></a>SPI1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h757xx_cm7.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h757xx_cm7.o(RESET)
</UL>
<P><STRONG><a name="[3d]"></a>SPI2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h757xx_cm7.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h757xx_cm7.o(RESET)
</UL>
<P><STRONG><a name="[4b]"></a>SPI3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h757xx_cm7.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h757xx_cm7.o(RESET)
</UL>
<P><STRONG><a name="[6a]"></a>SPI4_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h757xx_cm7.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h757xx_cm7.o(RESET)
</UL>
<P><STRONG><a name="[6b]"></a>SPI5_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h757xx_cm7.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h757xx_cm7.o(RESET)
</UL>
<P><STRONG><a name="[6c]"></a>SPI6_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h757xx_cm7.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h757xx_cm7.o(RESET)
</UL>
<P><STRONG><a name="[89]"></a>SWPMI1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h757xx_cm7.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h757xx_cm7.o(RESET)
</UL>
<P><STRONG><a name="[1b]"></a>TAMP_STAMP_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h757xx_cm7.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h757xx_cm7.o(RESET)
</UL>
<P><STRONG><a name="[8a]"></a>TIM15_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h757xx_cm7.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h757xx_cm7.o(RESET)
</UL>
<P><STRONG><a name="[8b]"></a>TIM16_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h757xx_cm7.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h757xx_cm7.o(RESET)
</UL>
<P><STRONG><a name="[31]"></a>TIM1_BRK_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h757xx_cm7.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h757xx_cm7.o(RESET)
</UL>
<P><STRONG><a name="[34]"></a>TIM1_CC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h757xx_cm7.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h757xx_cm7.o(RESET)
</UL>
<P><STRONG><a name="[33]"></a>TIM1_TRG_COM_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h757xx_cm7.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h757xx_cm7.o(RESET)
</UL>
<P><STRONG><a name="[32]"></a>TIM1_UP_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h757xx_cm7.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h757xx_cm7.o(RESET)
</UL>
<P><STRONG><a name="[35]"></a>TIM2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h757xx_cm7.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h757xx_cm7.o(RESET)
</UL>
<P><STRONG><a name="[36]"></a>TIM3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h757xx_cm7.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h757xx_cm7.o(RESET)
</UL>
<P><STRONG><a name="[37]"></a>TIM4_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h757xx_cm7.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h757xx_cm7.o(RESET)
</UL>
<P><STRONG><a name="[4a]"></a>TIM5_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h757xx_cm7.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h757xx_cm7.o(RESET)
</UL>
<P><STRONG><a name="[4e]"></a>TIM6_DAC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h757xx_cm7.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h757xx_cm7.o(RESET)
</UL>
<P><STRONG><a name="[4f]"></a>TIM7_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h757xx_cm7.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h757xx_cm7.o(RESET)
</UL>
<P><STRONG><a name="[43]"></a>TIM8_BRK_TIM12_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h757xx_cm7.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h757xx_cm7.o(RESET)
</UL>
<P><STRONG><a name="[46]"></a>TIM8_CC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h757xx_cm7.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h757xx_cm7.o(RESET)
</UL>
<P><STRONG><a name="[45]"></a>TIM8_TRG_COM_TIM14_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h757xx_cm7.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h757xx_cm7.o(RESET)
</UL>
<P><STRONG><a name="[44]"></a>TIM8_UP_TIM13_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h757xx_cm7.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h757xx_cm7.o(RESET)
</UL>
<P><STRONG><a name="[4c]"></a>UART4_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h757xx_cm7.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h757xx_cm7.o(RESET)
</UL>
<P><STRONG><a name="[4d]"></a>UART5_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h757xx_cm7.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h757xx_cm7.o(RESET)
</UL>
<P><STRONG><a name="[68]"></a>UART7_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h757xx_cm7.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h757xx_cm7.o(RESET)
</UL>
<P><STRONG><a name="[69]"></a>UART8_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h757xx_cm7.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h757xx_cm7.o(RESET)
</UL>
<P><STRONG><a name="[3e]"></a>USART1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h757xx_cm7.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h757xx_cm7.o(RESET)
</UL>
<P><STRONG><a name="[3f]"></a>USART2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h757xx_cm7.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h757xx_cm7.o(RESET)
</UL>
<P><STRONG><a name="[40]"></a>USART3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h757xx_cm7.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h757xx_cm7.o(RESET)
</UL>
<P><STRONG><a name="[5d]"></a>USART6_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h757xx_cm7.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h757xx_cm7.o(RESET)
</UL>
<P><STRONG><a name="[aa]"></a>WAKEUP_PIN_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h757xx_cm7.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h757xx_cm7.o(RESET)
</UL>
<P><STRONG><a name="[19]"></a>WWDG_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h757xx_cm7.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h757xx_cm7.o(RESET)
</UL>
<P><STRONG><a name="[a5]"></a>WWDG_RST_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h757xx_cm7.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h757xx_cm7.o(RESET)
</UL>
<P><STRONG><a name="[1cd]"></a>__user_initial_stackheap</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, startup_stm32h757xx_cm7.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[1a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__user_setup_stackheap
</UL>

<P><STRONG><a name="[1b2]"></a>abort</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, abort.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48 + Unknown Stack Size
<LI>Call Chain = abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[1b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_SIGABRT
<LI><a href="#[1b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_sys_exit
<LI><a href="#[1ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_lib_shutdown
</UL>
<BR>[Called By]<UL><LI><a href="#[f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::HAL::blitFill(touchgfx::colortype, unsigned short, unsigned short, unsigned short, unsigned short, unsigned char, unsigned short, touchgfx::Bitmap::BitmapFormat, bool)
<LI><a href="#[fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::HAL::configurePartialFrameBuffer(unsigned short, unsigned short, unsigned short, unsigned short)
<LI><a href="#[ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::HAL::blitCopyGlyph(const unsigned char*, unsigned short, unsigned short, unsigned short, unsigned short, unsigned short, touchgfx::colortype, unsigned char, touchgfx::BlitOperations, bool)
<LI><a href="#[12c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::DMA_Interface::execute()
<LI><a href="#[270]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextProvider::fillInputBuffer()
<LI><a href="#[26f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextProvider::getNextChar()
<LI><a href="#[160]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextArea::getAlignment() const
<LI><a href="#[152]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextAreaWithWildcardBase::draw(const touchgfx::Rect&) const
<LI><a href="#[188]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Container::add(touchgfx::Drawable&)
<LI><a href="#[2a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Bitmap::setCache(unsigned short*, unsigned, unsigned)
<LI><a href="#[25b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Vector&lang;touchgfx::Rect, (unsigned short)8&rang;::add(touchgfx::Rect)
<LI><a href="#[257]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Vector&lang;touchgfx::Rect, (unsigned short)8&rang;::quickRemoveAt(unsigned short)
<LI><a href="#[253]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Application::TimerWidgets::compact()
<LI><a href="#[14f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LockFreeDMA_Queue::pushCopyOf(const touchgfx::BlitOp&)
<LI><a href="#[2a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD::realY(const touchgfx::Rect&, short, short, touchgfx::TextRotation)
<LI><a href="#[2a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD::realX(const touchgfx::Rect&, short, short, touchgfx::TextRotation)
<LI><a href="#[2d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::nextPixel(bool, touchgfx::TextRotation)
<LI><a href="#[2d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::nextLine(bool, touchgfx::TextRotation)
<LI><a href="#[2bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::getFramebufferStride()
<LI><a href="#[17f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::fillBuffer(unsigned char*, unsigned short, const touchgfx::Rect&, touchgfx::colortype, unsigned char)
<LI><a href="#[29e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD::WideTextInternalStruct::scanStringLengthForLine()
<LI><a href="#[2a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD::drawStringInternal(unsigned short*, const touchgfx::Rect*, short, short, const touchgfx::Rect&, const touchgfx::LCD::StringVisuals*, unsigned char, touchgfx::TextProvider&, int, bool)
<LI><a href="#[2de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::HAL::getBitDepth(touchgfx::Bitmap::BitmapFormat) const
<LI><a href="#[282]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextProvider::circularBuffer&lang;(unsigned)10&rang;::dropFront(unsigned short)
<LI><a href="#[279]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextProvider::circularBuffer&lang;(unsigned)10&rang;::pushBack(unsigned short)
<LI><a href="#[272]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextProvider::circularBuffer&lang;(unsigned)10&rang;::peekChar(unsigned short)
<LI><a href="#[274]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextProvider::replaceInputCharacters(unsigned short, unsigned short, const unsigned short*)
<LI><a href="#[271]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextProvider::gsubRuleMatch(const unsigned short*, unsigned short, unsigned short, unsigned short)
<LI><a href="#[2e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TypedText::getText() const
<LI><a href="#[2e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TypedText::getTextDirection() const
<LI><a href="#[1b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_assert
</UL>

<P><STRONG><a name="[1b4]"></a>__aeabi_atexit</STRONG> (Thumb, 46 bytes, Stack size 24 bytes, aeabi_atexit.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = __aeabi_atexit &rArr; malloc &rArr; __Heap_Full &rArr; __Heap_ProvideMemory &rArr; free
</UL>
<BR>[Calls]<UL><LI><a href="#[1b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;malloc
<LI><a href="#[1b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_ddtor_pointer_addr
</UL>
<BR>[Called By]<UL><LI><a href="#[220]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx_init
<LI><a href="#[196]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__sti___25_TouchGFXConfiguration_cpp_f5abfd34
<LI><a href="#[22a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getFont_verdana_40_4bpp()
<LI><a href="#[229]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getFont_verdana_20_4bpp()
<LI><a href="#[226]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getFont_verdana_10_4bpp()
<LI><a href="#[2ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::enableTextureMapperRGB565_NonOpaque_BilinearInterpolation()
<LI><a href="#[2c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::enableTextureMapperRGB565_Opaque_BilinearInterpolation()
<LI><a href="#[2d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::enableTextureMapperL8_ARGB8888_BilinearInterpolation()
<LI><a href="#[2cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::enableTextureMapperRGB565_NonOpaque_NearestNeighbor()
<LI><a href="#[2d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::enableTextureMapperL8_RGB888_BilinearInterpolation()
<LI><a href="#[2ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::enableTextureMapperL8_RGB565_BilinearInterpolation()
<LI><a href="#[2cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::enableTextureMapperARGB8888_BilinearInterpolation()
<LI><a href="#[2c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::enableTextureMapperRGB565_Opaque_NearestNeighbor()
<LI><a href="#[2d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::enableTextureMapperL8_ARGB8888_NearestNeighbor()
<LI><a href="#[2d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::enableTextureMapperL8_RGB888_NearestNeighbor()
<LI><a href="#[2cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::enableTextureMapperL8_RGB565_NearestNeighbor()
<LI><a href="#[2cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::enableTextureMapperARGB8888_NearestNeighbor()
<LI><a href="#[2be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::enableTextureMapperA4_BilinearInterpolation()
<LI><a href="#[2bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::enableTextureMapperA4_NearestNeighbor()
<LI><a href="#[2c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::enableDecompressorL8_LZW9()
<LI><a href="#[2c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::enableDecompressorL8_RLE()
<LI><a href="#[2c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::enableDecompressorL8_L4()
</UL>

<P><STRONG><a name="[1b7]"></a>__aeabi_assert</STRONG> (Thumb, 86 bytes, Stack size 16 bytes, assert.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 64 + Unknown Stack Size
<LI>Call Chain = __aeabi_assert &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[1b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__assert_puts
<LI><a href="#[1b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;abort
</UL>
<BR>[Called By]<UL><LI><a href="#[f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::HAL::setFrameBufferStartAddresses(void*, void*, void*)
<LI><a href="#[247]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::OSWrappers::initialize()
<LI><a href="#[12f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;STM32DMA::setupDataFill(const touchgfx::BlitOp&)
<LI><a href="#[12e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;STM32DMA::setupDataCopy(const touchgfx::BlitOp&)
<LI><a href="#[26e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextProvider::circularBuffer&lang;(unsigned)10&rang;::peekChar()
<LI><a href="#[23f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;T2* touchgfx::makeTransition&lang;Screen1View, Screen1Presenter, touchgfx::NoTransition, Model&rang;(touchgfx::Screen**, touchgfx::Presenter**, touchgfx::MVPHeap&, touchgfx::Transition**, T4*)
<LI><a href="#[27c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextProvider::getNextLigature(unsigned char)
<LI><a href="#[2dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TypedText::getFont() const
</UL>

<P><STRONG><a name="[363]"></a>__assert</STRONG> (Thumb, 0 bytes, Stack size 16 bytes, assert.o(.text), UNUSED)

<P><STRONG><a name="[276]"></a>__aeabi_memcpy</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rt_memcpy_v6.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[307]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvCopyDataToQueue
<LI><a href="#[306]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvCopyDataFromQueue
<LI><a href="#[269]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextProvider::adjustArabicGlyph(const touchgfx::Font*, const touchgfx::GlyphNode*, unsigned short)
<LI><a href="#[26b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextProvider::adjustHindiGlyph(const touchgfx::GlyphNode*)
<LI><a href="#[26a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextProvider::adjustThaiGlyph(const touchgfx::Font*, const touchgfx::GlyphNode*)
</UL>

<P><STRONG><a name="[1b9]"></a>__rt_memcpy</STRONG> (Thumb, 138 bytes, Stack size 0 bytes, rt_memcpy_v6.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[1ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
</UL>

<P><STRONG><a name="[364]"></a>_memcpy_lastbytes</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rt_memcpy_v6.o(.text), UNUSED)

<P><STRONG><a name="[1ba]"></a>__aeabi_memcpy4</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, rt_memcpy_w.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = __aeabi_memcpy4
</UL>
<BR>[Called By]<UL><LI><a href="#[1ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_LTDC_ConfigLayer
<LI><a href="#[29a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD::drawStringLTR(const touchgfx::Rect&, const touchgfx::Rect&, const touchgfx::LCD::StringVisuals&, const unsigned short*, std::__va_list)
<LI><a href="#[14f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LockFreeDMA_Queue::pushCopyOf(const touchgfx::BlitOp&)
<LI><a href="#[189]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Container::getLastChildNear(short, short, touchgfx::Drawable**, short*, short*)
<LI><a href="#[1b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_memcpy
</UL>

<P><STRONG><a name="[365]"></a>__aeabi_memcpy8</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, rt_memcpy_w.o(.text), UNUSED)

<P><STRONG><a name="[366]"></a>__rt_memcpy_w</STRONG> (Thumb, 100 bytes, Stack size 8 bytes, rt_memcpy_w.o(.text), UNUSED)

<P><STRONG><a name="[367]"></a>_memcpy_lastbytes_aligned</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rt_memcpy_w.o(.text), UNUSED)

<P><STRONG><a name="[1bb]"></a>__aeabi_memset</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, aeabi_memset.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[1bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_memset
</UL>
<BR>[Called By]<UL><LI><a href="#[30c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvInitialiseNewTask
</UL>

<P><STRONG><a name="[1dd]"></a>__aeabi_memclr4</STRONG> (Thumb, 0 bytes, Stack size 4 bytes, rt_memclr_w.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = __aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[1f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_LTDC_MspInit
<LI><a href="#[1dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_FMC_MspInit
<LI><a href="#[21d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_LTDC_Init
<LI><a href="#[21b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_GPIO_Init
<LI><a href="#[217]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_FMC_Init
<LI><a href="#[224]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemClock_Config
<LI><a href="#[233]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextArea::TextArea()
<LI><a href="#[232]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Box::Box()
<LI><a href="#[240]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Application::Application()
<LI><a href="#[283]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextProvider::TextProvider()
</UL>

<P><STRONG><a name="[368]"></a>__aeabi_memclr8</STRONG> (Thumb, 0 bytes, Stack size 4 bytes, rt_memclr_w.o(.text), UNUSED)

<P><STRONG><a name="[369]"></a>__rt_memclr_w</STRONG> (Thumb, 78 bytes, Stack size 4 bytes, rt_memclr_w.o(.text), UNUSED)

<P><STRONG><a name="[1c6]"></a>_memset_w</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rt_memclr_w.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[1c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_memclr
</UL>

<P><STRONG><a name="[36a]"></a>__use_two_region_memory</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, heapauxi.o(.text), UNUSED)

<P><STRONG><a name="[7]"></a>__rt_heap_escrow</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, heapauxi.o(.text), UNUSED)

<P><STRONG><a name="[6]"></a>__rt_heap_expand</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, heapauxi.o(.text), UNUSED)

<P><STRONG><a name="[19b]"></a>__cpp_initialize__aeabi_</STRONG> (Thumb, 26 bytes, Stack size 16 bytes, init_aeabi.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = __cpp_initialize__aeabi_
</UL>
<BR>[Called By]<UL><LI><a href="#[1a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_lib_init_cpp_2
</UL>

<P><STRONG><a name="[1b0]"></a>_sys_exit</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, sys_exit.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[1c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__sig_exit
<LI><a href="#[1b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;abort
<LI><a href="#[1af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_exit_exit
</UL>

<P><STRONG><a name="[1b6]"></a>__rt_ddtor_pointer_addr</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, rt_ddtor_pointer_addr_intlibspace.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[1a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxa_finalize
<LI><a href="#[1b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_atexit
</UL>

<P><STRONG><a name="[1b5]"></a>malloc</STRONG> (Thumb, 94 bytes, Stack size 16 bytes, h1_alloc.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = malloc &rArr; __Heap_Full &rArr; __Heap_ProvideMemory &rArr; free
</UL>
<BR>[Calls]<UL><LI><a href="#[1be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__Heap_Full
<LI><a href="#[1bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_heap_descriptor
</UL>
<BR>[Called By]<UL><LI><a href="#[1b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_atexit
</UL>

<P><STRONG><a name="[1bf]"></a>free</STRONG> (Thumb, 78 bytes, Stack size 16 bytes, h1_free.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = free
</UL>
<BR>[Calls]<UL><LI><a href="#[1bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_heap_descriptor
</UL>
<BR>[Called By]<UL><LI><a href="#[1a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxa_finalize
<LI><a href="#[1c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__Heap_ProvideMemory
</UL>

<P><STRONG><a name="[1a5]"></a>__cxa_finalize</STRONG> (Thumb, 66 bytes, Stack size 24 bytes, cxa_finalize.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = __cxa_finalize &rArr; free
</UL>
<BR>[Calls]<UL><LI><a href="#[1bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;free
<LI><a href="#[1b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_ddtor_pointer_addr
</UL>
<BR>[Called By]<UL><LI><a href="#[1a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_lib_shutdown_cpp_2
</UL>

<P><STRONG><a name="[1b3]"></a>__rt_SIGABRT</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, defsig_abrt_outer.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[1c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_SIGABRT_inner
<LI><a href="#[1c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__sig_exit
</UL>
<BR>[Called By]<UL><LI><a href="#[1b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;abort
</UL>

<P><STRONG><a name="[1c2]"></a>__rt_SIGPVFN</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, defsig_pvfn_outer.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = __rt_SIGPVFN &rArr; __rt_SIGPVFN_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[1c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_SIGPVFN_inner
<LI><a href="#[1c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__sig_exit
</UL>
<BR>[Called By]<UL><LI><a href="#[13a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxa_pure_virtual
</UL>

<P><STRONG><a name="[1b8]"></a>__assert_puts</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, assert_puts.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = __assert_puts &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[1c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ttywrch
</UL>
<BR>[Called By]<UL><LI><a href="#[1b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_assert
</UL>

<P><STRONG><a name="[36b]"></a>__aeabi_memclr</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rt_memclr.o(.text), UNUSED)

<P><STRONG><a name="[1c5]"></a>__rt_memclr</STRONG> (Thumb, 68 bytes, Stack size 0 bytes, rt_memclr.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[1c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_memset_w
</UL>

<P><STRONG><a name="[1bc]"></a>_memset</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rt_memclr.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[1bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memset
</UL>

<P><STRONG><a name="[1c4]"></a>_ttywrch</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, sys_wrch.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = _ttywrch
</UL>
<BR>[Called By]<UL><LI><a href="#[1b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__assert_puts
<LI><a href="#[1cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__default_signal_display
</UL>

<P><STRONG><a name="[36c]"></a>__user_libspace</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, libspace.o(.text), UNUSED)

<P><STRONG><a name="[1cc]"></a>__user_perproc_libspace</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, libspace.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[1a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__user_setup_stackheap
</UL>

<P><STRONG><a name="[36d]"></a>__user_perthread_libspace</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, libspace.o(.text), UNUSED)

<P><STRONG><a name="[36e]"></a>__I$use$semihosting</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, use_no_semi.o(.text), UNUSED)

<P><STRONG><a name="[36f]"></a>__use_no_semihosting_swi</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, use_no_semi.o(.text), UNUSED)

<P><STRONG><a name="[370]"></a>__semihosting_library_function</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, indicate_semi.o(.text), UNUSED)

<P><STRONG><a name="[1bd]"></a>__rt_heap_descriptor</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, rt_heap_descriptor_intlibspace.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[1a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_init_alloc
<LI><a href="#[1bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;free
<LI><a href="#[1b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;malloc
</UL>

<P><STRONG><a name="[371]"></a>__use_no_heap</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, hguard.o(.text), UNUSED)

<P><STRONG><a name="[372]"></a>__heap$guard</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, hguard.o(.text), UNUSED)

<P><STRONG><a name="[9]"></a>_terminate_user_alloc</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, init_alloc.o(.text), UNUSED)

<P><STRONG><a name="[3]"></a>_init_user_alloc</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, init_alloc.o(.text), UNUSED)

<P><STRONG><a name="[1be]"></a>__Heap_Full</STRONG> (Thumb, 34 bytes, Stack size 16 bytes, init_alloc.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = __Heap_Full &rArr; __Heap_ProvideMemory &rArr; free
</UL>
<BR>[Calls]<UL><LI><a href="#[1c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__Heap_ProvideMemory
</UL>
<BR>[Called By]<UL><LI><a href="#[1b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;malloc
</UL>

<P><STRONG><a name="[1c8]"></a>__Heap_Broken</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, init_alloc.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[1c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_SIGRTMEM
</UL>

<P><STRONG><a name="[1a2]"></a>_init_alloc</STRONG> (Thumb, 94 bytes, Stack size 24 bytes, init_alloc.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = _init_alloc &rArr; __rt_SIGRTMEM &rArr; __rt_SIGRTMEM_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[1ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__Heap_Initialize
<LI><a href="#[1bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_heap_descriptor
<LI><a href="#[1c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_SIGRTMEM
<LI><a href="#[1c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__Heap_ProvideMemory
</UL>
<BR>[Called By]<UL><LI><a href="#[1a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_lib_init_heap_2
</UL>

<P><STRONG><a name="[1ca]"></a>__Heap_Initialize</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, h1_init.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[1a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_init_alloc
</UL>

<P><STRONG><a name="[8]"></a>__Heap_DescSize</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, h1_init.o(.text), UNUSED)

<P><STRONG><a name="[1c1]"></a>__sig_exit</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, defsig_exit.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[1b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_sys_exit
</UL>
<BR>[Called By]<UL><LI><a href="#[1c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_SIGPVFN
<LI><a href="#[1b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_SIGABRT
<LI><a href="#[1c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_SIGRTMEM
</UL>

<P><STRONG><a name="[1c0]"></a>__rt_SIGABRT_inner</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, defsig_abrt_inner.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[1cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__default_signal_display
</UL>
<BR>[Called By]<UL><LI><a href="#[1b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_SIGABRT
</UL>

<P><STRONG><a name="[1c3]"></a>__rt_SIGPVFN_inner</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, defsig_pvfn_inner.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = __rt_SIGPVFN_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[1cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__default_signal_display
</UL>
<BR>[Called By]<UL><LI><a href="#[1c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_SIGPVFN
</UL>

<P><STRONG><a name="[1a7]"></a>__user_setup_stackheap</STRONG> (Thumb, 74 bytes, Stack size 8 bytes, sys_stackheap_outer.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8 + Unknown Stack Size
<LI>Call Chain = __user_setup_stackheap
</UL>
<BR>[Calls]<UL><LI><a href="#[1cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__user_initial_stackheap
<LI><a href="#[1cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__user_perproc_libspace
</UL>
<BR>[Called By]<UL><LI><a href="#[1a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry_sh
</UL>

<P><STRONG><a name="[1c7]"></a>__Heap_ProvideMemory</STRONG> (Thumb, 52 bytes, Stack size 0 bytes, h1_extend.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = __Heap_ProvideMemory &rArr; free
</UL>
<BR>[Calls]<UL><LI><a href="#[1bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;free
</UL>
<BR>[Called By]<UL><LI><a href="#[1a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_init_alloc
<LI><a href="#[1be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__Heap_Full
</UL>

<P><STRONG><a name="[1ac]"></a>exit</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, exit.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8 + Unknown Stack Size
<LI>Call Chain = exit
</UL>
<BR>[Calls]<UL><LI><a href="#[1ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_exit
</UL>
<BR>[Called By]<UL><LI><a href="#[1aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry_main
</UL>

<P><STRONG><a name="[1cb]"></a>__default_signal_display</STRONG> (Thumb, 50 bytes, Stack size 16 bytes, defsig_general.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[1c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ttywrch
</UL>
<BR>[Called By]<UL><LI><a href="#[1c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_SIGPVFN_inner
<LI><a href="#[1c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_SIGABRT_inner
<LI><a href="#[1cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_SIGRTMEM_inner
</UL>

<P><STRONG><a name="[1c9]"></a>__rt_SIGRTMEM</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, defsig_rtmem_outer.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = __rt_SIGRTMEM &rArr; __rt_SIGRTMEM_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[1c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__sig_exit
<LI><a href="#[1cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_SIGRTMEM_inner
</UL>
<BR>[Called By]<UL><LI><a href="#[1a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_init_alloc
<LI><a href="#[1c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__Heap_Broken
</UL>

<P><STRONG><a name="[1cf]"></a>__rt_SIGRTMEM_inner</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, defsig_rtmem_inner.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = __rt_SIGRTMEM_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[1cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__default_signal_display
</UL>
<BR>[Called By]<UL><LI><a href="#[1c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_SIGRTMEM
</UL>

<P><STRONG><a name="[13]"></a>BusFault_Handler</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, stm32h7xx_it_1.o(i.BusFault_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h757xx_cm7.o(RESET)
</UL>
<P><STRONG><a name="[262]"></a>CRC_Lock</STRONG> (Thumb, 134 bytes, Stack size 12 bytes, stm32_crc_lock.o(i.CRC_Lock))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = CRC_Lock
</UL>
<BR>[Called By]<UL><LI><a href="#[240]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Application::Application()
</UL>

<P><STRONG><a name="[70]"></a>DMA2D_IRQHandler</STRONG> (Thumb, 10 bytes, Stack size 8 bytes, stm32h7xx_it_1.o(i.DMA2D_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = DMA2D_IRQHandler &rArr; HAL_DMA2D_IRQHandler
</UL>
<BR>[Calls]<UL><LI><a href="#[1d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_DMA2D_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h757xx_cm7.o(RESET)
</UL>
<P><STRONG><a name="[16]"></a>DebugMon_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32h7xx_it_1.o(i.DebugMon_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h757xx_cm7.o(RESET)
</UL>
<P><STRONG><a name="[1df]"></a>Error_Handler</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, main_1.o(i.Error_Handler))
<BR><BR>[Called By]<UL><LI><a href="#[1f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_LTDC_MspInit
<LI><a href="#[1dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_FMC_MspInit
<LI><a href="#[21d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_LTDC_Init
<LI><a href="#[217]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_FMC_Init
<LI><a href="#[215]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_DMA2D_Init
<LI><a href="#[214]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_CRC_Init
<LI><a href="#[224]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemClock_Config
</UL>

<P><STRONG><a name="[202]"></a>FMC_SDRAM_Init</STRONG> (Thumb, 108 bytes, Stack size 0 bytes, stm32h7xx_ll_fmc.o(i.FMC_SDRAM_Init))
<BR><BR>[Called By]<UL><LI><a href="#[200]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SDRAM_Init
</UL>

<P><STRONG><a name="[205]"></a>FMC_SDRAM_ProgramRefreshRate</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, stm32h7xx_ll_fmc.o(i.FMC_SDRAM_ProgramRefreshRate))
<BR><BR>[Called By]<UL><LI><a href="#[204]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SDRAM_ProgramRefreshRate
</UL>

<P><STRONG><a name="[207]"></a>FMC_SDRAM_SendCommand</STRONG> (Thumb, 38 bytes, Stack size 8 bytes, stm32h7xx_ll_fmc.o(i.FMC_SDRAM_SendCommand))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = FMC_SDRAM_SendCommand
</UL>
<BR>[Called By]<UL><LI><a href="#[206]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SDRAM_SendCommand
</UL>

<P><STRONG><a name="[203]"></a>FMC_SDRAM_Timing_Init</STRONG> (Thumb, 144 bytes, Stack size 12 bytes, stm32h7xx_ll_fmc.o(i.FMC_SDRAM_Timing_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = FMC_SDRAM_Timing_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[200]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SDRAM_Init
</UL>

<P><STRONG><a name="[1d3]"></a>HAL_CRCEx_Polynomial_Set</STRONG> (Thumb, 112 bytes, Stack size 16 bytes, stm32h7xx_hal_crc_ex.o(i.HAL_CRCEx_Polynomial_Set))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = HAL_CRCEx_Polynomial_Set
</UL>
<BR>[Called By]<UL><LI><a href="#[1d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_CRC_Init
</UL>

<P><STRONG><a name="[1d1]"></a>HAL_CRC_Init</STRONG> (Thumb, 128 bytes, Stack size 8 bytes, stm32h7xx_hal_crc.o(i.HAL_CRC_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = HAL_CRC_Init &rArr; HAL_CRCEx_Polynomial_Set
</UL>
<BR>[Calls]<UL><LI><a href="#[1d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_CRC_MspInit
<LI><a href="#[1d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_CRCEx_Polynomial_Set
</UL>
<BR>[Called By]<UL><LI><a href="#[214]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_CRC_Init
</UL>

<P><STRONG><a name="[1d2]"></a>HAL_CRC_MspInit</STRONG> (Thumb, 40 bytes, Stack size 8 bytes, crc.o(i.HAL_CRC_MspInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = HAL_CRC_MspInit
</UL>
<BR>[Called By]<UL><LI><a href="#[1d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_CRC_Init
</UL>

<P><STRONG><a name="[1d5]"></a>HAL_DMA2D_CLUTLoadingCpltCallback</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32h7xx_hal_dma2d.o(i.HAL_DMA2D_CLUTLoadingCpltCallback))
<BR><BR>[Called By]<UL><LI><a href="#[1d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_DMA2D_IRQHandler
</UL>

<P><STRONG><a name="[216]"></a>HAL_DMA2D_ConfigLayer</STRONG> (Thumb, 254 bytes, Stack size 16 bytes, stm32h7xx_hal_dma2d.o(i.HAL_DMA2D_ConfigLayer))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = HAL_DMA2D_ConfigLayer
</UL>
<BR>[Called By]<UL><LI><a href="#[215]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_DMA2D_Init
</UL>

<P><STRONG><a name="[1d0]"></a>HAL_DMA2D_IRQHandler</STRONG> (Thumb, 358 bytes, Stack size 16 bytes, stm32h7xx_hal_dma2d.o(i.HAL_DMA2D_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = HAL_DMA2D_IRQHandler
</UL>
<BR>[Calls]<UL><LI><a href="#[1d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_DMA2D_LineEventCallback
<LI><a href="#[1d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_DMA2D_CLUTLoadingCpltCallback
</UL>
<BR>[Called By]<UL><LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA2D_IRQHandler
</UL>

<P><STRONG><a name="[1d6]"></a>HAL_DMA2D_Init</STRONG> (Thumb, 130 bytes, Stack size 8 bytes, stm32h7xx_hal_dma2d.o(i.HAL_DMA2D_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = HAL_DMA2D_Init &rArr; HAL_DMA2D_MspInit &rArr; HAL_NVIC_SetPriority &rArr; __NVIC_SetPriority
</UL>
<BR>[Calls]<UL><LI><a href="#[1d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_DMA2D_MspInit
</UL>
<BR>[Called By]<UL><LI><a href="#[215]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_DMA2D_Init
</UL>

<P><STRONG><a name="[1d4]"></a>HAL_DMA2D_LineEventCallback</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32h7xx_hal_dma2d.o(i.HAL_DMA2D_LineEventCallback))
<BR><BR>[Called By]<UL><LI><a href="#[1d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_DMA2D_IRQHandler
</UL>

<P><STRONG><a name="[1d7]"></a>HAL_DMA2D_MspInit</STRONG> (Thumb, 58 bytes, Stack size 16 bytes, dma2d.o(i.HAL_DMA2D_MspInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = HAL_DMA2D_MspInit &rArr; HAL_NVIC_SetPriority &rArr; __NVIC_SetPriority
</UL>
<BR>[Calls]<UL><LI><a href="#[1d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_NVIC_SetPriority
<LI><a href="#[1d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_NVIC_EnableIRQ
</UL>
<BR>[Called By]<UL><LI><a href="#[1d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_DMA2D_Init
</UL>

<P><STRONG><a name="[1da]"></a>HAL_Delay</STRONG> (Thumb, 36 bytes, Stack size 16 bytes, stm32h7xx_hal.o(i.HAL_Delay))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = HAL_Delay
</UL>
<BR>[Calls]<UL><LI><a href="#[1db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GetTick
</UL>
<BR>[Called By]<UL><LI><a href="#[218]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDRAM_Initialization_Sequence
</UL>

<P><STRONG><a name="[1e0]"></a>HAL_GPIO_Init</STRONG> (Thumb, 456 bytes, Stack size 24 bytes, stm32h7xx_hal_gpio.o(i.HAL_GPIO_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = HAL_GPIO_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[1f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_LTDC_MspInit
<LI><a href="#[1dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_FMC_MspInit
<LI><a href="#[21b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_GPIO_Init
</UL>

<P><STRONG><a name="[21c]"></a>HAL_GPIO_WritePin</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, stm32h7xx_hal_gpio.o(i.HAL_GPIO_WritePin))
<BR><BR>[Called By]<UL><LI><a href="#[21b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_GPIO_Init
<LI><a href="#[1ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[1ff]"></a>HAL_GetREVID</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, stm32h7xx_hal.o(i.HAL_GetREVID))
<BR><BR>[Called By]<UL><LI><a href="#[1fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCC_OscConfig
</UL>

<P><STRONG><a name="[1db]"></a>HAL_GetTick</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, stm32h7xx_hal.o(i.HAL_GetTick))
<BR><BR>[Called By]<UL><LI><a href="#[1da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_Delay
<LI><a href="#[1fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCC_OscConfig
<LI><a href="#[1fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCC_ClockConfig
<LI><a href="#[1de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCCEx_PeriphCLKConfig
<LI><a href="#[1f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_PWREx_ConfigSupply
<LI><a href="#[1fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCCEx_PLL3_Config
<LI><a href="#[1fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCCEx_PLL2_Config
</UL>

<P><STRONG><a name="[213]"></a>HAL_IncTick</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, stm32h7xx_hal.o(i.HAL_IncTick))
<BR><BR>[Called By]<UL><LI><a href="#[20e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_PeriodElapsedCallback
</UL>

<P><STRONG><a name="[1e1]"></a>HAL_Init</STRONG> (Thumb, 80 bytes, Stack size 8 bytes, stm32h7xx_hal.o(i.HAL_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = HAL_Init &rArr; HAL_InitTick &rArr; HAL_NVIC_SetPriority &rArr; __NVIC_SetPriority
</UL>
<BR>[Calls]<UL><LI><a href="#[1e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCC_GetSysClockFreq
<LI><a href="#[1e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_NVIC_SetPriorityGrouping
<LI><a href="#[1e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_InitTick
<LI><a href="#[1e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_MspInit
</UL>
<BR>[Called By]<UL><LI><a href="#[1ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[1e4]"></a>HAL_InitTick</STRONG> (Thumb, 128 bytes, Stack size 56 bytes, stm32h7xx_hal_timebase_tim.o(i.HAL_InitTick))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = HAL_InitTick &rArr; HAL_NVIC_SetPriority &rArr; __NVIC_SetPriority
</UL>
<BR>[Calls]<UL><LI><a href="#[1d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_NVIC_SetPriority
<LI><a href="#[1d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_NVIC_EnableIRQ
<LI><a href="#[1e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_Base_Start_IT
<LI><a href="#[1e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_Base_Init
<LI><a href="#[1e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCC_GetPCLK2Freq
<LI><a href="#[1e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCC_GetClockConfig
</UL>
<BR>[Called By]<UL><LI><a href="#[1fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCC_ClockConfig
<LI><a href="#[1e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_Init
</UL>

<P><STRONG><a name="[1ea]"></a>HAL_LTDC_ConfigLayer</STRONG> (Thumb, 94 bytes, Stack size 16 bytes, stm32h7xx_hal_ltdc.o(i.HAL_LTDC_ConfigLayer))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = HAL_LTDC_ConfigLayer &rArr; LTDC_SetConfig
</UL>
<BR>[Calls]<UL><LI><a href="#[1eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LTDC_SetConfig
<LI><a href="#[1ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
</UL>
<BR>[Called By]<UL><LI><a href="#[21d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_LTDC_Init
</UL>

<P><STRONG><a name="[1ed]"></a>HAL_LTDC_ErrorCallback</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32h7xx_hal_ltdc.o(i.HAL_LTDC_ErrorCallback))
<BR><BR>[Called By]<UL><LI><a href="#[1ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_LTDC_IRQHandler
</UL>

<P><STRONG><a name="[1ec]"></a>HAL_LTDC_IRQHandler</STRONG> (Thumb, 244 bytes, Stack size 16 bytes, stm32h7xx_hal_ltdc.o(i.HAL_LTDC_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 176<LI>Call Chain = HAL_LTDC_IRQHandler &rArr; HAL_LTDC_LineEventCallback &rArr; touchgfx::OSWrappers::signalVSync() &rArr; osMessageQueuePut &rArr; xQueueGenericSend &rArr; vTaskPlaceOnEventList &rArr; prvAddCurrentTaskToDelayedList &rArr; vListInsert
</UL>
<BR>[Calls]<UL><LI><a href="#[1ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_LTDC_ReloadEventCallback
<LI><a href="#[1ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_LTDC_ErrorCallback
<LI><a href="#[1ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_LTDC_LineEventCallback
</UL>
<BR>[Called By]<UL><LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LTDC_IRQHandler
</UL>

<P><STRONG><a name="[1f0]"></a>HAL_LTDC_Init</STRONG> (Thumb, 274 bytes, Stack size 16 bytes, stm32h7xx_hal_ltdc.o(i.HAL_LTDC_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 304<LI>Call Chain = HAL_LTDC_Init &rArr; HAL_LTDC_MspInit &rArr; HAL_NVIC_SetPriority &rArr; __NVIC_SetPriority
</UL>
<BR>[Calls]<UL><LI><a href="#[1f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_LTDC_MspInit
</UL>
<BR>[Called By]<UL><LI><a href="#[21d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_LTDC_Init
</UL>

<P><STRONG><a name="[1ee]"></a>HAL_LTDC_LineEventCallback</STRONG> (Thumb, 118 bytes, Stack size 16 bytes, touchgfxgeneratedhal.o(i.HAL_LTDC_LineEventCallback))
<BR><BR>[Stack]<UL><LI>Max Depth = 160<LI>Call Chain = HAL_LTDC_LineEventCallback &rArr; touchgfx::OSWrappers::signalVSync() &rArr; osMessageQueuePut &rArr; xQueueGenericSend &rArr; vTaskPlaceOnEventList &rArr; prvAddCurrentTaskToDelayedList &rArr; vListInsert
</UL>
<BR>[Calls]<UL><LI><a href="#[1f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_LTDC_ProgramLineEvent
<LI><a href="#[1f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::GPIO::clear(touchgfx::GPIO::GPIO_ID)
<LI><a href="#[1f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::GPIO::set(touchgfx::GPIO::GPIO_ID)
<LI><a href="#[1f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::HAL::swapFrameBuffers()
<LI><a href="#[1f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::OSWrappers::signalVSync()
</UL>
<BR>[Called By]<UL><LI><a href="#[1ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_LTDC_IRQHandler
</UL>

<P><STRONG><a name="[1f1]"></a>HAL_LTDC_MspInit</STRONG> (Thumb, 608 bytes, Stack size 240 bytes, ltdc.o(i.HAL_LTDC_MspInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 288<LI>Call Chain = HAL_LTDC_MspInit &rArr; HAL_NVIC_SetPriority &rArr; __NVIC_SetPriority
</UL>
<BR>[Calls]<UL><LI><a href="#[1d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_NVIC_SetPriority
<LI><a href="#[1d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_NVIC_EnableIRQ
<LI><a href="#[1e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_Init
<LI><a href="#[1de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCCEx_PeriphCLKConfig
<LI><a href="#[1df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Error_Handler
<LI><a href="#[1dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[1f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_LTDC_Init
</UL>

<P><STRONG><a name="[1f2]"></a>HAL_LTDC_ProgramLineEvent</STRONG> (Thumb, 78 bytes, Stack size 0 bytes, stm32h7xx_hal_ltdc.o(i.HAL_LTDC_ProgramLineEvent))
<BR><BR>[Called By]<UL><LI><a href="#[1ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_LTDC_LineEventCallback
</UL>

<P><STRONG><a name="[1ef]"></a>HAL_LTDC_ReloadEventCallback</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32h7xx_hal_ltdc.o(i.HAL_LTDC_ReloadEventCallback))
<BR><BR>[Called By]<UL><LI><a href="#[1ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_LTDC_IRQHandler
</UL>

<P><STRONG><a name="[1e5]"></a>HAL_MspInit</STRONG> (Thumb, 42 bytes, Stack size 8 bytes, stm32h7xx_hal_msp_1.o(i.HAL_MspInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = HAL_MspInit &rArr; HAL_NVIC_SetPriority &rArr; __NVIC_SetPriority
</UL>
<BR>[Calls]<UL><LI><a href="#[1d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_NVIC_SetPriority
</UL>
<BR>[Called By]<UL><LI><a href="#[1e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_Init
</UL>

<P><STRONG><a name="[1d9]"></a>HAL_NVIC_EnableIRQ</STRONG> (Thumb, 40 bytes, Stack size 0 bytes, stm32h7xx_hal_cortex.o(i.HAL_NVIC_EnableIRQ))
<BR><BR>[Called By]<UL><LI><a href="#[1f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_LTDC_MspInit
<LI><a href="#[1d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_DMA2D_MspInit
<LI><a href="#[1e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_InitTick
</UL>

<P><STRONG><a name="[1d8]"></a>HAL_NVIC_SetPriority</STRONG> (Thumb, 122 bytes, Stack size 40 bytes, stm32h7xx_hal_cortex.o(i.HAL_NVIC_SetPriority))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = HAL_NVIC_SetPriority &rArr; __NVIC_SetPriority
</UL>
<BR>[Calls]<UL><LI><a href="#[1f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__NVIC_SetPriority
<LI><a href="#[1f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__NVIC_GetPriorityGrouping
</UL>
<BR>[Called By]<UL><LI><a href="#[1f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_LTDC_MspInit
<LI><a href="#[1d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_DMA2D_MspInit
<LI><a href="#[1e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_InitTick
<LI><a href="#[1e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_MspInit
</UL>

<P><STRONG><a name="[1e2]"></a>HAL_NVIC_SetPriorityGrouping</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, stm32h7xx_hal_cortex.o(i.HAL_NVIC_SetPriorityGrouping))
<BR><BR>[Called By]<UL><LI><a href="#[1e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_Init
</UL>

<P><STRONG><a name="[1f9]"></a>HAL_PWREx_ConfigSupply</STRONG> (Thumb, 144 bytes, Stack size 16 bytes, stm32h7xx_hal_pwr_ex.o(i.HAL_PWREx_ConfigSupply))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = HAL_PWREx_ConfigSupply
</UL>
<BR>[Calls]<UL><LI><a href="#[1db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GetTick
</UL>
<BR>[Called By]<UL><LI><a href="#[224]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemClock_Config
</UL>

<P><STRONG><a name="[1de]"></a>HAL_RCCEx_PeriphCLKConfig</STRONG> (Thumb, 3510 bytes, Stack size 24 bytes, stm32h7xx_hal_rcc_ex.o(i.HAL_RCCEx_PeriphCLKConfig))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = HAL_RCCEx_PeriphCLKConfig &rArr; RCCEx_PLL3_Config
</UL>
<BR>[Calls]<UL><LI><a href="#[1fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCCEx_PLL3_Config
<LI><a href="#[1fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCCEx_PLL2_Config
<LI><a href="#[1db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GetTick
</UL>
<BR>[Called By]<UL><LI><a href="#[1f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_LTDC_MspInit
<LI><a href="#[1dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_FMC_MspInit
</UL>

<P><STRONG><a name="[1fc]"></a>HAL_RCC_ClockConfig</STRONG> (Thumb, 774 bytes, Stack size 24 bytes, stm32h7xx_hal_rcc.o(i.HAL_RCC_ClockConfig))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = HAL_RCC_ClockConfig &rArr; HAL_InitTick &rArr; HAL_NVIC_SetPriority &rArr; __NVIC_SetPriority
</UL>
<BR>[Calls]<UL><LI><a href="#[1db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GetTick
<LI><a href="#[1e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCC_GetSysClockFreq
<LI><a href="#[1e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_InitTick
</UL>
<BR>[Called By]<UL><LI><a href="#[224]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemClock_Config
</UL>

<P><STRONG><a name="[1e6]"></a>HAL_RCC_GetClockConfig</STRONG> (Thumb, 98 bytes, Stack size 0 bytes, stm32h7xx_hal_rcc.o(i.HAL_RCC_GetClockConfig))
<BR><BR>[Called By]<UL><LI><a href="#[1e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_InitTick
</UL>

<P><STRONG><a name="[1fd]"></a>HAL_RCC_GetHCLKFreq</STRONG> (Thumb, 60 bytes, Stack size 8 bytes, stm32h7xx_hal_rcc.o(i.HAL_RCC_GetHCLKFreq))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = HAL_RCC_GetHCLKFreq &rArr; HAL_RCC_GetSysClockFreq
</UL>
<BR>[Calls]<UL><LI><a href="#[1e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCC_GetSysClockFreq
</UL>
<BR>[Called By]<UL><LI><a href="#[1e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCC_GetPCLK2Freq
</UL>

<P><STRONG><a name="[1e7]"></a>HAL_RCC_GetPCLK2Freq</STRONG> (Thumb, 26 bytes, Stack size 4 bytes, stm32h7xx_hal_rcc.o(i.HAL_RCC_GetPCLK2Freq))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = HAL_RCC_GetPCLK2Freq &rArr; HAL_RCC_GetHCLKFreq &rArr; HAL_RCC_GetSysClockFreq
</UL>
<BR>[Calls]<UL><LI><a href="#[1fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCC_GetHCLKFreq
</UL>
<BR>[Called By]<UL><LI><a href="#[1e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_InitTick
</UL>

<P><STRONG><a name="[1e3]"></a>HAL_RCC_GetSysClockFreq</STRONG> (Thumb, 524 bytes, Stack size 20 bytes, stm32h7xx_hal_rcc.o(i.HAL_RCC_GetSysClockFreq))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = HAL_RCC_GetSysClockFreq
</UL>
<BR>[Called By]<UL><LI><a href="#[1fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCC_ClockConfig
<LI><a href="#[1e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_Init
<LI><a href="#[1fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCC_GetHCLKFreq
</UL>

<P><STRONG><a name="[1fe]"></a>HAL_RCC_OscConfig</STRONG> (Thumb, 2130 bytes, Stack size 32 bytes, stm32h7xx_hal_rcc.o(i.HAL_RCC_OscConfig))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = HAL_RCC_OscConfig
</UL>
<BR>[Calls]<UL><LI><a href="#[1db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GetTick
<LI><a href="#[1ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GetREVID
</UL>
<BR>[Called By]<UL><LI><a href="#[224]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemClock_Config
</UL>

<P><STRONG><a name="[200]"></a>HAL_SDRAM_Init</STRONG> (Thumb, 76 bytes, Stack size 16 bytes, stm32h7xx_hal_sdram.o(i.HAL_SDRAM_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 304<LI>Call Chain = HAL_SDRAM_Init &rArr; HAL_SDRAM_MspInit &rArr; HAL_FMC_MspInit &rArr; HAL_RCCEx_PeriphCLKConfig &rArr; RCCEx_PLL3_Config
</UL>
<BR>[Calls]<UL><LI><a href="#[201]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SDRAM_MspInit
<LI><a href="#[203]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FMC_SDRAM_Timing_Init
<LI><a href="#[202]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FMC_SDRAM_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[217]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_FMC_Init
</UL>

<P><STRONG><a name="[201]"></a>HAL_SDRAM_MspInit</STRONG> (Thumb, 10 bytes, Stack size 8 bytes, fmc.o(i.HAL_SDRAM_MspInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 288<LI>Call Chain = HAL_SDRAM_MspInit &rArr; HAL_FMC_MspInit &rArr; HAL_RCCEx_PeriphCLKConfig &rArr; RCCEx_PLL3_Config
</UL>
<BR>[Calls]<UL><LI><a href="#[1dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_FMC_MspInit
</UL>
<BR>[Called By]<UL><LI><a href="#[200]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SDRAM_Init
</UL>

<P><STRONG><a name="[204]"></a>HAL_SDRAM_ProgramRefreshRate</STRONG> (Thumb, 54 bytes, Stack size 16 bytes, stm32h7xx_hal_sdram.o(i.HAL_SDRAM_ProgramRefreshRate))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = HAL_SDRAM_ProgramRefreshRate
</UL>
<BR>[Calls]<UL><LI><a href="#[205]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FMC_SDRAM_ProgramRefreshRate
</UL>
<BR>[Called By]<UL><LI><a href="#[218]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDRAM_Initialization_Sequence
</UL>

<P><STRONG><a name="[206]"></a>HAL_SDRAM_SendCommand</STRONG> (Thumb, 78 bytes, Stack size 24 bytes, stm32h7xx_hal_sdram.o(i.HAL_SDRAM_SendCommand))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = HAL_SDRAM_SendCommand &rArr; FMC_SDRAM_SendCommand
</UL>
<BR>[Calls]<UL><LI><a href="#[207]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FMC_SDRAM_SendCommand
</UL>
<BR>[Called By]<UL><LI><a href="#[218]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDRAM_Initialization_Sequence
</UL>

<P><STRONG><a name="[210]"></a>HAL_TIMEx_Break2Callback</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32h7xx_hal_tim_ex.o(i.HAL_TIMEx_Break2Callback))
<BR><BR>[Called By]<UL><LI><a href="#[20a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_IRQHandler
</UL>

<P><STRONG><a name="[20f]"></a>HAL_TIMEx_BreakCallback</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32h7xx_hal_tim_ex.o(i.HAL_TIMEx_BreakCallback))
<BR><BR>[Called By]<UL><LI><a href="#[20a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_IRQHandler
</UL>

<P><STRONG><a name="[212]"></a>HAL_TIMEx_CommutCallback</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32h7xx_hal_tim_ex.o(i.HAL_TIMEx_CommutCallback))
<BR><BR>[Called By]<UL><LI><a href="#[20a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_IRQHandler
</UL>

<P><STRONG><a name="[1e8]"></a>HAL_TIM_Base_Init</STRONG> (Thumb, 110 bytes, Stack size 8 bytes, stm32h7xx_hal_tim.o(i.HAL_TIM_Base_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = HAL_TIM_Base_Init &rArr; TIM_Base_SetConfig
</UL>
<BR>[Calls]<UL><LI><a href="#[208]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_Base_MspInit
<LI><a href="#[209]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_Base_SetConfig
</UL>
<BR>[Called By]<UL><LI><a href="#[1e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_InitTick
</UL>

<P><STRONG><a name="[208]"></a>HAL_TIM_Base_MspInit</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32h7xx_hal_tim.o(i.HAL_TIM_Base_MspInit))
<BR><BR>[Called By]<UL><LI><a href="#[1e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_Base_Init
</UL>

<P><STRONG><a name="[1e9]"></a>HAL_TIM_Base_Start_IT</STRONG> (Thumb, 146 bytes, Stack size 0 bytes, stm32h7xx_hal_tim.o(i.HAL_TIM_Base_Start_IT))
<BR><BR>[Called By]<UL><LI><a href="#[1e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_InitTick
</UL>

<P><STRONG><a name="[20b]"></a>HAL_TIM_IC_CaptureCallback</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32h7xx_hal_tim.o(i.HAL_TIM_IC_CaptureCallback))
<BR><BR>[Called By]<UL><LI><a href="#[20a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_IRQHandler
</UL>

<P><STRONG><a name="[20a]"></a>HAL_TIM_IRQHandler</STRONG> (Thumb, 440 bytes, Stack size 8 bytes, stm32h7xx_hal_tim.o(i.HAL_TIM_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = HAL_TIM_IRQHandler &rArr; HAL_TIM_PeriodElapsedCallback
</UL>
<BR>[Calls]<UL><LI><a href="#[20e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_PeriodElapsedCallback
<LI><a href="#[211]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_TriggerCallback
<LI><a href="#[20d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_PWM_PulseFinishedCallback
<LI><a href="#[20c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_OC_DelayElapsedCallback
<LI><a href="#[20b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_IC_CaptureCallback
<LI><a href="#[212]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIMEx_CommutCallback
<LI><a href="#[20f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIMEx_BreakCallback
<LI><a href="#[210]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIMEx_Break2Callback
</UL>
<BR>[Called By]<UL><LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM17_IRQHandler
</UL>

<P><STRONG><a name="[20c]"></a>HAL_TIM_OC_DelayElapsedCallback</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32h7xx_hal_tim.o(i.HAL_TIM_OC_DelayElapsedCallback))
<BR><BR>[Called By]<UL><LI><a href="#[20a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_IRQHandler
</UL>

<P><STRONG><a name="[20d]"></a>HAL_TIM_PWM_PulseFinishedCallback</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32h7xx_hal_tim.o(i.HAL_TIM_PWM_PulseFinishedCallback))
<BR><BR>[Called By]<UL><LI><a href="#[20a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_IRQHandler
</UL>

<P><STRONG><a name="[20e]"></a>HAL_TIM_PeriodElapsedCallback</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, main_1.o(i.HAL_TIM_PeriodElapsedCallback))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = HAL_TIM_PeriodElapsedCallback
</UL>
<BR>[Calls]<UL><LI><a href="#[213]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_IncTick
</UL>
<BR>[Called By]<UL><LI><a href="#[20a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_IRQHandler
</UL>

<P><STRONG><a name="[211]"></a>HAL_TIM_TriggerCallback</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32h7xx_hal_tim.o(i.HAL_TIM_TriggerCallback))
<BR><BR>[Called By]<UL><LI><a href="#[20a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_IRQHandler
</UL>

<P><STRONG><a name="[11]"></a>HardFault_Handler</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, stm32h7xx_it_1.o(i.HardFault_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h757xx_cm7.o(RESET)
</UL>
<P><STRONG><a name="[6e]"></a>LTDC_IRQHandler</STRONG> (Thumb, 10 bytes, Stack size 8 bytes, stm32h7xx_it_1.o(i.LTDC_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 184<LI>Call Chain = LTDC_IRQHandler &rArr; HAL_LTDC_IRQHandler &rArr; HAL_LTDC_LineEventCallback &rArr; touchgfx::OSWrappers::signalVSync() &rArr; osMessageQueuePut &rArr; xQueueGenericSend &rArr; vTaskPlaceOnEventList &rArr; prvAddCurrentTaskToDelayedList &rArr; vListInsert
</UL>
<BR>[Calls]<UL><LI><a href="#[1ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_LTDC_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h757xx_cm7.o(RESET)
</UL>
<P><STRONG><a name="[214]"></a>MX_CRC_Init</STRONG> (Thumb, 42 bytes, Stack size 8 bytes, crc.o(i.MX_CRC_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = MX_CRC_Init &rArr; HAL_CRC_Init &rArr; HAL_CRCEx_Polynomial_Set
</UL>
<BR>[Calls]<UL><LI><a href="#[1d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_CRC_Init
<LI><a href="#[1df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Error_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[1ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[215]"></a>MX_DMA2D_Init</STRONG> (Thumb, 60 bytes, Stack size 8 bytes, dma2d.o(i.MX_DMA2D_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = MX_DMA2D_Init &rArr; HAL_DMA2D_Init &rArr; HAL_DMA2D_MspInit &rArr; HAL_NVIC_SetPriority &rArr; __NVIC_SetPriority
</UL>
<BR>[Calls]<UL><LI><a href="#[1d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_DMA2D_Init
<LI><a href="#[216]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_DMA2D_ConfigLayer
<LI><a href="#[1df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Error_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[1ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[217]"></a>MX_FMC_Init</STRONG> (Thumb, 116 bytes, Stack size 32 bytes, fmc.o(i.MX_FMC_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 336<LI>Call Chain = MX_FMC_Init &rArr; HAL_SDRAM_Init &rArr; HAL_SDRAM_MspInit &rArr; HAL_FMC_MspInit &rArr; HAL_RCCEx_PeriphCLKConfig &rArr; RCCEx_PLL3_Config
</UL>
<BR>[Calls]<UL><LI><a href="#[200]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SDRAM_Init
<LI><a href="#[218]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDRAM_Initialization_Sequence
<LI><a href="#[1df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Error_Handler
<LI><a href="#[1dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[1ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[219]"></a>MX_FREERTOS_Init</STRONG> (Thumb, 32 bytes, Stack size 8 bytes, freertos.o(i.MX_FREERTOS_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 192 + Unknown Stack Size
<LI>Call Chain = MX_FREERTOS_Init &rArr; osThreadNew &rArr; xTaskCreate &rArr; pvPortMalloc &rArr; xTaskResumeAll &rArr; xTaskIncrementTick
</UL>
<BR>[Calls]<UL><LI><a href="#[21a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osThreadNew
</UL>
<BR>[Called By]<UL><LI><a href="#[1ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[21b]"></a>MX_GPIO_Init</STRONG> (Thumb, 388 bytes, Stack size 32 bytes, gpio.o(i.MX_GPIO_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = MX_GPIO_Init &rArr; HAL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[1e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_Init
<LI><a href="#[21c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_WritePin
<LI><a href="#[1dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[1ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[21d]"></a>MX_LTDC_Init</STRONG> (Thumb, 192 bytes, Stack size 56 bytes, ltdc.o(i.MX_LTDC_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 360<LI>Call Chain = MX_LTDC_Init &rArr; HAL_LTDC_Init &rArr; HAL_LTDC_MspInit &rArr; HAL_NVIC_SetPriority &rArr; __NVIC_SetPriority
</UL>
<BR>[Calls]<UL><LI><a href="#[1f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_LTDC_Init
<LI><a href="#[1ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_LTDC_ConfigLayer
<LI><a href="#[1df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Error_Handler
<LI><a href="#[1dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[1ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[21e]"></a>MX_TouchGFX_Init</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, app_touchgfx.o(i.MX_TouchGFX_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 216 + Unknown Stack Size
<LI>Call Chain = MX_TouchGFX_Init &rArr; touchgfx_init &rArr; TouchGFXHAL::initialize() &rArr; TouchGFXGeneratedHAL::initialize() &rArr; touchgfx::HAL::initialize() &rArr; touchgfx::OSWrappers::initialize() &rArr; osSemaphoreNew &rArr; xQueueCreateCountingSemaphoreStatic &rArr; xQueueGenericCreateStatic &rArr; prvInitialiseNewQueue &rArr; xQueueGenericReset &rArr; xTaskRemoveFromEventList
</UL>
<BR>[Calls]<UL><LI><a href="#[220]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx_init
<LI><a href="#[21f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx_components_init
</UL>
<BR>[Called By]<UL><LI><a href="#[1ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[2e6]"></a>MX_TouchGFX_PreOSInit</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, app_touchgfx.o(i.MX_TouchGFX_PreOSInit))
<BR><BR>[Called By]<UL><LI><a href="#[1ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[12]"></a>MemManage_Handler</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, stm32h7xx_it_1.o(i.MemManage_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h757xx_cm7.o(RESET)
</UL>
<P><STRONG><a name="[10]"></a>NMI_Handler</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, stm32h7xx_it_1.o(i.NMI_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h757xx_cm7.o(RESET)
</UL>
<P><STRONG><a name="[218]"></a>SDRAM_Initialization_Sequence</STRONG> (Thumb, 146 bytes, Stack size 16 bytes, fmc.o(i.SDRAM_Initialization_Sequence))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = SDRAM_Initialization_Sequence &rArr; HAL_SDRAM_SendCommand &rArr; FMC_SDRAM_SendCommand
</UL>
<BR>[Calls]<UL><LI><a href="#[206]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SDRAM_SendCommand
<LI><a href="#[204]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SDRAM_ProgramRefreshRate
<LI><a href="#[1da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_Delay
</UL>
<BR>[Called By]<UL><LI><a href="#[217]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_FMC_Init
</UL>

<P><STRONG><a name="[ad]"></a>StartDefaultTask</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, freertos.o(i.StartDefaultTask))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = StartDefaultTask &rArr; osDelay &rArr; vTaskDelay &rArr; xTaskResumeAll &rArr; xTaskIncrementTick
</UL>
<BR>[Calls]<UL><LI><a href="#[221]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osDelay
</UL>
<BR>[Address Reference Count : 1]<UL><LI> freertos.o(i.MX_FREERTOS_Init)
</UL>
<P><STRONG><a name="[18]"></a>SysTick_Handler</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, cmsis_os2.o(i.SysTick_Handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = SysTick_Handler &rArr; xPortSysTickHandler &rArr; xTaskIncrementTick
</UL>
<BR>[Calls]<UL><LI><a href="#[222]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskGetSchedulerState
<LI><a href="#[223]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xPortSysTickHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h757xx_cm7.o(RESET)
</UL>
<P><STRONG><a name="[224]"></a>SystemClock_Config</STRONG> (Thumb, 296 bytes, Stack size 120 bytes, main_1.o(i.SystemClock_Config))
<BR><BR>[Stack]<UL><LI>Max Depth = 248<LI>Call Chain = SystemClock_Config &rArr; HAL_RCC_ClockConfig &rArr; HAL_InitTick &rArr; HAL_NVIC_SetPriority &rArr; __NVIC_SetPriority
</UL>
<BR>[Calls]<UL><LI><a href="#[1fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCC_OscConfig
<LI><a href="#[1fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCC_ClockConfig
<LI><a href="#[1f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_PWREx_ConfigSupply
<LI><a href="#[1df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Error_Handler
<LI><a href="#[1dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[1ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[ab]"></a>SystemInit</STRONG> (Thumb, 244 bytes, Stack size 0 bytes, system_stm32h7xx_dualcore_boot_cm4_cm7.o(i.SystemInit))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h757xx_cm7.o(.text)
</UL>
<P><STRONG><a name="[8c]"></a>TIM17_IRQHandler</STRONG> (Thumb, 10 bytes, Stack size 8 bytes, stm32h7xx_it_1.o(i.TIM17_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = TIM17_IRQHandler &rArr; HAL_TIM_IRQHandler &rArr; HAL_TIM_PeriodElapsedCallback
</UL>
<BR>[Calls]<UL><LI><a href="#[20a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h757xx_cm7.o(RESET)
</UL>
<P><STRONG><a name="[209]"></a>TIM_Base_SetConfig</STRONG> (Thumb, 170 bytes, Stack size 8 bytes, stm32h7xx_hal_tim.o(i.TIM_Base_SetConfig))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = TIM_Base_SetConfig
</UL>
<BR>[Called By]<UL><LI><a href="#[1e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_Base_Init
</UL>

<P><STRONG><a name="[ae]"></a>TouchGFX_Task</STRONG> (Thumb, 10 bytes, Stack size 8 bytes, app_touchgfx.o(i.TouchGFX_Task))
<BR><BR>[Stack]<UL><LI>Max Depth = 152<LI>Call Chain = TouchGFX_Task &rArr; touchgfx_taskEntry &rArr; touchgfx::HAL::taskEntry() &rArr; touchgfx::OSWrappers::waitForVSync() &rArr; osMessageQueueGet &rArr; xQueueReceive &rArr; vTaskPlaceOnEventList &rArr; prvAddCurrentTaskToDelayedList &rArr; vListInsert
</UL>
<BR>[Calls]<UL><LI><a href="#[225]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx_taskEntry
</UL>
<BR>[Address Reference Count : 1]<UL><LI> freertos.o(i.MX_FREERTOS_Init)
</UL>
<P><STRONG><a name="[14]"></a>UsageFault_Handler</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, stm32h7xx_it_1.o(i.UsageFault_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h757xx_cm7.o(RESET)
</UL>
<P><STRONG><a name="[226]"></a>getFont_verdana_10_4bpp()</STRONG> (Thumb, 98 bytes, Stack size 64 bytes, table_verdana_10_4bpp.o(i._Z23getFont_verdana_10_4bppv))
<BR><BR>[Stack]<UL><LI>Max Depth = 188<LI>Call Chain = getFont_verdana_10_4bpp() &rArr; touchgfx::GeneratedFont::GeneratedFont(const touchgfx::GlyphNode*, unsigned short, unsigned short, unsigned short, unsigned char, unsigned char, unsigned char, unsigned char, unsigned char, unsigned char, const unsigned char*const *, const touchgfx::KerningNode*, unsigned short, unsigned short, const unsigned short*, const touchgfx::FontContextualFormsTable*) &rArr; touchgfx::ConstFont::ConstFont__sub_object(const touchgfx::GlyphNode*, unsigned short, unsigned short, unsigned short, unsigned char, unsigned char, unsigned char, unsigned char, unsigned char, unsigned char, unsigned short, unsigned short)
</UL>
<BR>[Calls]<UL><LI><a href="#[228]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::GeneratedFont::GeneratedFont(const touchgfx::GlyphNode*, unsigned short, unsigned short, unsigned short, unsigned char, unsigned char, unsigned char, unsigned char, unsigned char, unsigned char, const unsigned char*const *, const touchgfx::KerningNode*, unsigned short, unsigned short, const unsigned short*, const touchgfx::FontContextualFormsTable*)
<LI><a href="#[227]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxa_guard_acquire
<LI><a href="#[1b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_atexit
</UL>
<BR>[Called By]<UL><LI><a href="#[197]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__sti___21_typedtextdatabase_cpp_05ec7672
</UL>

<P><STRONG><a name="[229]"></a>getFont_verdana_20_4bpp()</STRONG> (Thumb, 98 bytes, Stack size 64 bytes, table_verdana_20_4bpp.o(i._Z23getFont_verdana_20_4bppv))
<BR><BR>[Stack]<UL><LI>Max Depth = 188<LI>Call Chain = getFont_verdana_20_4bpp() &rArr; touchgfx::GeneratedFont::GeneratedFont(const touchgfx::GlyphNode*, unsigned short, unsigned short, unsigned short, unsigned char, unsigned char, unsigned char, unsigned char, unsigned char, unsigned char, const unsigned char*const *, const touchgfx::KerningNode*, unsigned short, unsigned short, const unsigned short*, const touchgfx::FontContextualFormsTable*) &rArr; touchgfx::ConstFont::ConstFont__sub_object(const touchgfx::GlyphNode*, unsigned short, unsigned short, unsigned short, unsigned char, unsigned char, unsigned char, unsigned char, unsigned char, unsigned char, unsigned short, unsigned short)
</UL>
<BR>[Calls]<UL><LI><a href="#[228]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::GeneratedFont::GeneratedFont(const touchgfx::GlyphNode*, unsigned short, unsigned short, unsigned short, unsigned char, unsigned char, unsigned char, unsigned char, unsigned char, unsigned char, const unsigned char*const *, const touchgfx::KerningNode*, unsigned short, unsigned short, const unsigned short*, const touchgfx::FontContextualFormsTable*)
<LI><a href="#[227]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxa_guard_acquire
<LI><a href="#[1b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_atexit
</UL>
<BR>[Called By]<UL><LI><a href="#[197]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__sti___21_typedtextdatabase_cpp_05ec7672
</UL>

<P><STRONG><a name="[22a]"></a>getFont_verdana_40_4bpp()</STRONG> (Thumb, 98 bytes, Stack size 64 bytes, table_verdana_40_4bpp.o(i._Z23getFont_verdana_40_4bppv))
<BR><BR>[Stack]<UL><LI>Max Depth = 188<LI>Call Chain = getFont_verdana_40_4bpp() &rArr; touchgfx::GeneratedFont::GeneratedFont(const touchgfx::GlyphNode*, unsigned short, unsigned short, unsigned short, unsigned char, unsigned char, unsigned char, unsigned char, unsigned char, unsigned char, const unsigned char*const *, const touchgfx::KerningNode*, unsigned short, unsigned short, const unsigned short*, const touchgfx::FontContextualFormsTable*) &rArr; touchgfx::ConstFont::ConstFont__sub_object(const touchgfx::GlyphNode*, unsigned short, unsigned short, unsigned short, unsigned char, unsigned char, unsigned char, unsigned char, unsigned char, unsigned char, unsigned short, unsigned short)
</UL>
<BR>[Calls]<UL><LI><a href="#[228]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::GeneratedFont::GeneratedFont(const touchgfx::GlyphNode*, unsigned short, unsigned short, unsigned short, unsigned char, unsigned char, unsigned char, unsigned char, unsigned char, unsigned char, const unsigned char*const *, const touchgfx::KerningNode*, unsigned short, unsigned short, const unsigned short*, const touchgfx::FontContextualFormsTable*)
<LI><a href="#[227]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxa_guard_acquire
<LI><a href="#[1b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_atexit
</UL>
<BR>[Called By]<UL><LI><a href="#[197]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__sti___21_typedtextdatabase_cpp_05ec7672
</UL>

<P><STRONG><a name="[dd]"></a>Screen1View::setupScreen()</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, screen1view.o(i._ZN11Screen1View11setupScreenEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = Screen1View::setupScreen()
</UL>
<BR>[Calls]<UL><LI><a href="#[108]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Screen1ViewBase::setupScreen()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> screen1view.o(.constdata__ZTV11Screen1View)
</UL>
<P><STRONG><a name="[df]"></a>Screen1View::tearDownScreen()</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, screen1view.o(i._ZN11Screen1View14tearDownScreenEv))
<BR>[Address Reference Count : 1]<UL><LI> screen1view.o(.constdata__ZTV11Screen1View)
</UL>
<P><STRONG><a name="[22b]"></a>Screen1View::Screen1View()</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, screen1view.o(i._ZN11Screen1ViewC1Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 120 + Unknown Stack Size
<LI>Call Chain = Screen1View::Screen1View() &rArr; Screen1ViewBase::Screen1ViewBase() &rArr; touchgfx::Screen::add(touchgfx::Drawable&) &rArr; touchgfx::Container::add(touchgfx::Drawable&) &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[22c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Screen1ViewBase::Screen1ViewBase()
</UL>
<BR>[Called By]<UL><LI><a href="#[23f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;T2* touchgfx::makeTransition&lang;Screen1View, Screen1Presenter, touchgfx::NoTransition, Model&rang;(touchgfx::Screen**, touchgfx::Presenter**, touchgfx::MVPHeap&, touchgfx::Transition**, T4*)
</UL>

<P><STRONG><a name="[373]"></a>Screen1View::Screen1View__sub_object()</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, screen1view.o(i._ZN11Screen1ViewC1Ev), UNUSED)

<P><STRONG><a name="[db]"></a>Screen1View::~Screen1View()</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, screen1view.o(i._ZN11Screen1ViewD1Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = Screen1View::~Screen1View() &rArr; Screen1ViewBase::~Screen1ViewBase() &rArr; touchgfx::TextAreaWithOneWildcard::~TextAreaWithOneWildcard()
</UL>
<BR>[Calls]<UL><LI><a href="#[107]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Screen1ViewBase::~Screen1ViewBase()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> screen1view.o(.constdata__ZTV11Screen1View)
</UL>
<P><STRONG><a name="[374]"></a>Screen1View::~Screen1View__sub_object()</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, screen1view.o(i._ZN11Screen1ViewD1Ev), UNUSED)

<P><STRONG><a name="[fe]"></a>TouchGFXHAL::beginFrame()</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, touchgfxhal.o(i._ZN11TouchGFXHAL10beginFrameEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = TouchGFXHAL::beginFrame() &rArr; TouchGFXGeneratedHAL::beginFrame()
</UL>
<BR>[Calls]<UL><LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TouchGFXGeneratedHAL::beginFrame()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> touchgfxhal.o(.constdata__ZTV11TouchGFXHAL)
</UL>
<P><STRONG><a name="[e6]"></a>TouchGFXHAL::initialize()</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, touchgfxhal.o(i._ZN11TouchGFXHAL10initializeEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 184 + Unknown Stack Size
<LI>Call Chain = TouchGFXHAL::initialize() &rArr; TouchGFXGeneratedHAL::initialize() &rArr; touchgfx::HAL::initialize() &rArr; touchgfx::OSWrappers::initialize() &rArr; osSemaphoreNew &rArr; xQueueCreateCountingSemaphoreStatic &rArr; xQueueGenericCreateStatic &rArr; prvInitialiseNewQueue &rArr; xQueueGenericReset &rArr; xTaskRemoveFromEventList
</UL>
<BR>[Calls]<UL><LI><a href="#[11b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TouchGFXGeneratedHAL::initialize()
</UL>
<BR>[Called By]<UL><LI><a href="#[220]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx_init
</UL>
<BR>[Address Reference Count : 1]<UL><LI> touchgfxhal.o(.constdata__ZTV11TouchGFXHAL)
</UL>
<P><STRONG><a name="[f5]"></a>TouchGFXHAL::enableInterrupts()</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, touchgfxhal.o(i._ZN11TouchGFXHAL16enableInterruptsEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = TouchGFXHAL::enableInterrupts()
</UL>
<BR>[Calls]<UL><LI><a href="#[11f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TouchGFXGeneratedHAL::enableInterrupts()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> touchgfxhal.o(.constdata__ZTV11TouchGFXHAL)
</UL>
<P><STRONG><a name="[e8]"></a>TouchGFXHAL::flushFrameBuffer(const touchgfx::Rect&)</STRONG> (Thumb, 16 bytes, Stack size 16 bytes, touchgfxhal.o(i._ZN11TouchGFXHAL16flushFrameBufferERKN8touchgfx4RectE))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = TouchGFXHAL::flushFrameBuffer(const touchgfx::Rect&) &rArr; TouchGFXGeneratedHAL::flushFrameBuffer(const touchgfx::Rect&)
</UL>
<BR>[Calls]<UL><LI><a href="#[11c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TouchGFXGeneratedHAL::flushFrameBuffer(const touchgfx::Rect&)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> touchgfxhal.o(.constdata__ZTV11TouchGFXHAL)
</UL>
<P><STRONG><a name="[f6]"></a>TouchGFXHAL::disableInterrupts()</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, touchgfxhal.o(i._ZN11TouchGFXHAL17disableInterruptsEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = TouchGFXHAL::disableInterrupts() &rArr; TouchGFXGeneratedHAL::disableInterrupts()
</UL>
<BR>[Calls]<UL><LI><a href="#[120]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TouchGFXGeneratedHAL::disableInterrupts()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> touchgfxhal.o(.constdata__ZTV11TouchGFXHAL)
</UL>
<P><STRONG><a name="[100]"></a>TouchGFXHAL::setTFTFrameBuffer(unsigned short*)</STRONG> (Thumb, 16 bytes, Stack size 16 bytes, touchgfxhal.o(i._ZN11TouchGFXHAL17setTFTFrameBufferEPt))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = TouchGFXHAL::setTFTFrameBuffer(unsigned short*)
</UL>
<BR>[Calls]<UL><LI><a href="#[124]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TouchGFXGeneratedHAL::setTFTFrameBuffer(unsigned short*)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> touchgfxhal.o(.constdata__ZTV11TouchGFXHAL)
</UL>
<P><STRONG><a name="[f4]"></a>TouchGFXHAL::configureInterrupts()</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, touchgfxhal.o(i._ZN11TouchGFXHAL19configureInterruptsEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = TouchGFXHAL::configureInterrupts() &rArr; TouchGFXGeneratedHAL::configureInterrupts()
</UL>
<BR>[Calls]<UL><LI><a href="#[11e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TouchGFXGeneratedHAL::configureInterrupts()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> touchgfxhal.o(.constdata__ZTV11TouchGFXHAL)
</UL>
<P><STRONG><a name="[f7]"></a>TouchGFXHAL::enableLCDControllerInterrupt()</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, touchgfxhal.o(i._ZN11TouchGFXHAL28enableLCDControllerInterruptEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = TouchGFXHAL::enableLCDControllerInterrupt()
</UL>
<BR>[Calls]<UL><LI><a href="#[121]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TouchGFXGeneratedHAL::enableLCDControllerInterrupt()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> touchgfxhal.o(.constdata__ZTV11TouchGFXHAL)
</UL>
<P><STRONG><a name="[ff]"></a>TouchGFXHAL::endFrame()</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, touchgfxhal.o(i._ZN11TouchGFXHAL8endFrameEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = TouchGFXHAL::endFrame() &rArr; TouchGFXGeneratedHAL::endFrame() &rArr; touchgfx::HAL::endFrame()
</UL>
<BR>[Calls]<UL><LI><a href="#[123]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TouchGFXGeneratedHAL::endFrame()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> touchgfxhal.o(.constdata__ZTV11TouchGFXHAL)
</UL>
<P><STRONG><a name="[d4]"></a>TouchGFXHAL::~TouchGFXHAL()</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, touchgfxhal.o(i._ZN11TouchGFXHALD1Ev))
<BR>[Address Reference Count : 2]<UL><LI> touchgfxconfiguration.o(i.__sti___25_TouchGFXConfiguration_cpp_f5abfd34)
<LI> touchgfxhal.o(.constdata__ZTV11TouchGFXHAL)
</UL>
<P><STRONG><a name="[375]"></a>TouchGFXHAL::~TouchGFXHAL__sub_object()</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, touchgfxhal.o(i._ZN11TouchGFXHALD1Ev), UNUSED)

<P><STRONG><a name="[22d]"></a>FrontendHeap::FrontendHeap()</STRONG> (Thumb, 150 bytes, Stack size 16 bytes, touchgfxconfiguration.o(i._ZN12FrontendHeapC1Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 160<LI>Call Chain = FrontendHeap::FrontendHeap() &rArr; FrontendApplication::FrontendApplication(Model&, FrontendHeap&) &rArr; FrontendApplicationBase::FrontendApplicationBase(Model&, FrontendHeap&) &rArr; touchgfx::LCD16bpp::enableTextureMapperAll() &rArr; touchgfx::LCD16bpp::enableTextureMapperL8_ARGB8888() &rArr; touchgfx::LCD16bpp::enableTextureMapperL8_ARGB8888_BilinearInterpolation() &rArr; __aeabi_atexit &rArr; malloc &rArr; __Heap_Full &rArr; __Heap_ProvideMemory &rArr; free
</UL>
<BR>[Calls]<UL><LI><a href="#[22e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::AbstractPartition::AbstractPartition__sub_object()
<LI><a href="#[22f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Model::Model()
<LI><a href="#[230]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FrontendApplication::FrontendApplication(Model&, FrontendHeap&)
<LI><a href="#[106]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FrontendHeapBase::gotoStartScreen(FrontendApplication&)
</UL>
<BR>[Called By]<UL><LI><a href="#[220]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx_init
</UL>

<P><STRONG><a name="[376]"></a>FrontendHeap::FrontendHeap__sub_object()</STRONG> (Thumb, 0 bytes, Stack size 16 bytes, touchgfxconfiguration.o(i._ZN12FrontendHeapC1Ev), UNUSED)

<P><STRONG><a name="[d6]"></a>FrontendHeap::~FrontendHeap()</STRONG> (Thumb, 68 bytes, Stack size 16 bytes, touchgfxconfiguration.o(i._ZN12FrontendHeapD1Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = FrontendHeap::~FrontendHeap() &rArr; touchgfx::Partition&lang;touchgfx::meta::TypeList&lang;touchgfx::NoTransition, touchgfx::meta::TypeList&lang;touchgfx::meta::Nil, touchgfx::meta::Nil&rang;&rang;, (unsigned short)1&rang;::~Partition()
</UL>
<BR>[Calls]<UL><LI><a href="#[190]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Partition&lang;touchgfx::meta::TypeList&lang;touchgfx::NoTransition, touchgfx::meta::TypeList&lang;touchgfx::meta::Nil, touchgfx::meta::Nil&rang;&rang;, (unsigned short)1&rang;::~Partition()
<LI><a href="#[18d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Partition&lang;touchgfx::meta::TypeList&lang;Screen1Presenter, touchgfx::meta::TypeList&lang;touchgfx::meta::Nil, touchgfx::meta::Nil&rang;&rang;, (unsigned short)1&rang;::~Partition()
<LI><a href="#[18a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Partition&lang;touchgfx::meta::TypeList&lang;Screen1View, touchgfx::meta::TypeList&lang;touchgfx::meta::Nil, touchgfx::meta::Nil&rang;&rang;, (unsigned short)1&rang;::~Partition()
<LI><a href="#[126]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FrontendApplicationBase::~FrontendApplicationBase()
<LI><a href="#[10a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FrontendHeapBase::~FrontendHeapBase()
</UL>
<BR>[Address Reference Count : 2]<UL><LI> touchgfxconfiguration.o(i.touchgfx_init)
<LI> touchgfxconfiguration.o(.constdata__ZTV12FrontendHeap)
</UL>
<P><STRONG><a name="[377]"></a>FrontendHeap::~FrontendHeap__sub_object()</STRONG> (Thumb, 0 bytes, Stack size 16 bytes, touchgfxconfiguration.o(i._ZN12FrontendHeapD1Ev), UNUSED)

<P><STRONG><a name="[324]"></a>BitmapDatabase::getInstance()</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, bitmapdatabase.o(i._ZN14BitmapDatabase11getInstanceEv))
<BR><BR>[Called By]<UL><LI><a href="#[220]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx_init
</UL>

<P><STRONG><a name="[323]"></a>BitmapDatabase::getInstanceSize()</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, bitmapdatabase.o(i._ZN14BitmapDatabase15getInstanceSizeEv))
<BR><BR>[Called By]<UL><LI><a href="#[220]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx_init
</UL>

<P><STRONG><a name="[108]"></a>Screen1ViewBase::setupScreen()</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, screen1viewbase.o(i._ZN15Screen1ViewBase11setupScreenEv))
<BR><BR>[Called By]<UL><LI><a href="#[dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Screen1View::setupScreen()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> screen1viewbase.o(.constdata__ZTV15Screen1ViewBase)
</UL>
<P><STRONG><a name="[22c]"></a>Screen1ViewBase::Screen1ViewBase()</STRONG> (Thumb, 310 bytes, Stack size 40 bytes, screen1viewbase.o(i._ZN15Screen1ViewBaseC1Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 112 + Unknown Stack Size
<LI>Call Chain = Screen1ViewBase::Screen1ViewBase() &rArr; touchgfx::Screen::add(touchgfx::Drawable&) &rArr; touchgfx::Container::add(touchgfx::Drawable&) &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[239]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextArea::setTypedText(const touchgfx::TypedText&)
<LI><a href="#[231]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Screen::Screen()
<LI><a href="#[238]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TypedText::TypedText(unsigned short)
<LI><a href="#[233]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextArea::TextArea()
<LI><a href="#[234]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Drawable::setPosition(short, short, short, short)
<LI><a href="#[237]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Screen::add(touchgfx::Drawable&)
<LI><a href="#[235]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Color::getColorFromRGB(unsigned char, unsigned char, unsigned char)
<LI><a href="#[232]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Box::Box()
<LI><a href="#[236]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Box::setColor(touchgfx::colortype)
</UL>
<BR>[Called By]<UL><LI><a href="#[22b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Screen1View::Screen1View()
</UL>

<P><STRONG><a name="[378]"></a>Screen1ViewBase::Screen1ViewBase__sub_object()</STRONG> (Thumb, 0 bytes, Stack size 40 bytes, screen1viewbase.o(i._ZN15Screen1ViewBaseC1Ev), UNUSED)

<P><STRONG><a name="[107]"></a>Screen1ViewBase::~Screen1ViewBase()</STRONG> (Thumb, 56 bytes, Stack size 8 bytes, screen1viewbase.o(i._ZN15Screen1ViewBaseD1Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = Screen1ViewBase::~Screen1ViewBase() &rArr; touchgfx::TextAreaWithOneWildcard::~TextAreaWithOneWildcard()
</UL>
<BR>[Calls]<UL><LI><a href="#[177]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::View&lang;Screen1Presenter&rang;::~View()
<LI><a href="#[168]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Box::~Box()
<LI><a href="#[151]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextAreaWithOneWildcard::~TextAreaWithOneWildcard()
</UL>
<BR>[Called By]<UL><LI><a href="#[db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Screen1View::~Screen1View()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> screen1viewbase.o(.constdata__ZTV15Screen1ViewBase)
</UL>
<P><STRONG><a name="[379]"></a>Screen1ViewBase::~Screen1ViewBase__sub_object()</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, screen1viewbase.o(i._ZN15Screen1ViewBaseD1Ev), UNUSED)

<P><STRONG><a name="[106]"></a>FrontendHeapBase::gotoStartScreen(FrontendApplication&)</STRONG> (Thumb, 14 bytes, Stack size 16 bytes, touchgfxconfiguration.o(i._ZN16FrontendHeapBase15gotoStartScreenER19FrontendApplication))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = FrontendHeapBase::gotoStartScreen(FrontendApplication&) &rArr; FrontendApplicationBase::gotoScreen1ScreenNoTransition()
</UL>
<BR>[Calls]<UL><LI><a href="#[23a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FrontendApplicationBase::gotoScreen1ScreenNoTransition()
</UL>
<BR>[Called By]<UL><LI><a href="#[22d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FrontendHeap::FrontendHeap()
</UL>
<BR>[Address Reference Count : 2]<UL><LI> touchgfxconfiguration.o(.constdata__ZTV16FrontendHeapBase)
<LI> touchgfxconfiguration.o(.constdata__ZTV12FrontendHeap)
</UL>
<P><STRONG><a name="[10a]"></a>FrontendHeapBase::~FrontendHeapBase()</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, touchgfxconfiguration.o(i._ZN16FrontendHeapBaseD1Ev))
<BR><BR>[Called By]<UL><LI><a href="#[d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FrontendHeap::~FrontendHeap()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> touchgfxconfiguration.o(.constdata__ZTV16FrontendHeapBase)
</UL>
<P><STRONG><a name="[37a]"></a>FrontendHeapBase::~FrontendHeapBase__sub_object()</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, touchgfxconfiguration.o(i._ZN16FrontendHeapBaseD1Ev), UNUSED)

<P><STRONG><a name="[10c]"></a>Screen1Presenter::deactivate()</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, screen1presenter.o(i._ZN16Screen1Presenter10deactivateEv))
<BR>[Address Reference Count : 1]<UL><LI> screen1presenter.o(.constdata__ZTV16Screen1Presenter)
</UL>
<P><STRONG><a name="[10b]"></a>Screen1Presenter::activate()</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, screen1presenter.o(i._ZN16Screen1Presenter8activateEv))
<BR>[Address Reference Count : 1]<UL><LI> screen1presenter.o(.constdata__ZTV16Screen1Presenter)
</UL>
<P><STRONG><a name="[33a]"></a>Screen1Presenter::Screen1Presenter(Screen1View&)</STRONG> (Thumb, 38 bytes, Stack size 0 bytes, screen1presenter.o(i._ZN16Screen1PresenterC1ER11Screen1View))
<BR><BR>[Called By]<UL><LI><a href="#[23f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;T2* touchgfx::makeTransition&lang;Screen1View, Screen1Presenter, touchgfx::NoTransition, Model&rang;(touchgfx::Screen**, touchgfx::Presenter**, touchgfx::MVPHeap&, touchgfx::Transition**, T4*)
</UL>

<P><STRONG><a name="[37b]"></a>Screen1Presenter::Screen1Presenter__sub_object(Screen1View&)</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, screen1presenter.o(i._ZN16Screen1PresenterC1ER11Screen1View), UNUSED)

<P><STRONG><a name="[10d]"></a>Screen1Presenter::~Screen1Presenter()</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, screen1presenter.o(i._ZN16Screen1PresenterD1Ev))
<BR>[Address Reference Count : 1]<UL><LI> screen1presenter.o(.constdata__ZTV16Screen1Presenter)
</UL>
<P><STRONG><a name="[37c]"></a>Screen1Presenter::~Screen1Presenter__sub_object()</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, screen1presenter.o(i._ZN16Screen1PresenterD1Ev), UNUSED)

<P><STRONG><a name="[2a7]"></a>TypedTextDatabase::getInstanceSize()</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, typedtextdatabase.o(i._ZN17TypedTextDatabase15getInstanceSizeEv))
<BR><BR>[Called By]<UL><LI><a href="#[241]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Texts::setLanguage(unsigned short)
</UL>

<P><STRONG><a name="[2a6]"></a>TypedTextDatabase::getFonts()</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, typedtextdatabase.o(i._ZN17TypedTextDatabase8getFontsEv))
<BR><BR>[Called By]<UL><LI><a href="#[241]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Texts::setLanguage(unsigned short)
</UL>

<P><STRONG><a name="[112]"></a>FrontendApplication::handleTickEvent()</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, frontendapplication.o(i._ZN19FrontendApplication15handleTickEventEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 96 + Unknown Stack Size
<LI>Call Chain = FrontendApplication::handleTickEvent() &rArr; touchgfx::Application::handleTickEvent() &rArr; touchgfx::Application::TimerWidgets::compact() &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[23b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Model::tick()
<LI><a href="#[125]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Application::handleTickEvent()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> frontendapplication.o(.constdata__ZTV19FrontendApplication)
</UL>
<P><STRONG><a name="[230]"></a>FrontendApplication::FrontendApplication(Model&, FrontendHeap&)</STRONG> (Thumb, 28 bytes, Stack size 16 bytes, frontendapplication.o(i._ZN19FrontendApplicationC1ER5ModelR12FrontendHeap))
<BR><BR>[Stack]<UL><LI>Max Depth = 144<LI>Call Chain = FrontendApplication::FrontendApplication(Model&, FrontendHeap&) &rArr; FrontendApplicationBase::FrontendApplicationBase(Model&, FrontendHeap&) &rArr; touchgfx::LCD16bpp::enableTextureMapperAll() &rArr; touchgfx::LCD16bpp::enableTextureMapperL8_ARGB8888() &rArr; touchgfx::LCD16bpp::enableTextureMapperL8_ARGB8888_BilinearInterpolation() &rArr; __aeabi_atexit &rArr; malloc &rArr; __Heap_Full &rArr; __Heap_ProvideMemory &rArr; free
</UL>
<BR>[Calls]<UL><LI><a href="#[23c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FrontendApplicationBase::FrontendApplicationBase(Model&, FrontendHeap&)
</UL>
<BR>[Called By]<UL><LI><a href="#[22d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FrontendHeap::FrontendHeap()
</UL>

<P><STRONG><a name="[37d]"></a>FrontendApplication::FrontendApplication__sub_object(Model&, FrontendHeap&)</STRONG> (Thumb, 0 bytes, Stack size 16 bytes, frontendapplication.o(i._ZN19FrontendApplicationC1ER5ModelR12FrontendHeap), UNUSED)

<P><STRONG><a name="[11a]"></a>STM32TouchController::sampleTouch(int&, int&)</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, stm32touchcontroller.o(i._ZN20STM32TouchController11sampleTouchERiS0_))
<BR>[Address Reference Count : 1]<UL><LI> stm32touchcontroller.o(.constdata__ZTV20STM32TouchController)
</UL>
<P><STRONG><a name="[119]"></a>STM32TouchController::init()</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32touchcontroller.o(i._ZN20STM32TouchController4initEv))
<BR>[Address Reference Count : 1]<UL><LI> stm32touchcontroller.o(.constdata__ZTV20STM32TouchController)
</UL>
<P><STRONG><a name="[d0]"></a>STM32TouchController::~STM32TouchController()</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, stm32touchcontroller.o(i._ZN20STM32TouchControllerD1Ev))
<BR>[Address Reference Count : 2]<UL><LI> stm32touchcontroller.o(.constdata__ZTV20STM32TouchController)
<LI> touchgfxconfiguration.o(i.__sti___25_TouchGFXConfiguration_cpp_f5abfd34)
</UL>
<P><STRONG><a name="[37e]"></a>STM32TouchController::~STM32TouchController__sub_object()</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, stm32touchcontroller.o(i._ZN20STM32TouchControllerD1Ev), UNUSED)

<P><STRONG><a name="[105]"></a>TouchGFXGeneratedHAL::FlushCache()</STRONG> (Thumb, 138 bytes, Stack size 12 bytes, touchgfxgeneratedhal.o(i._ZN20TouchGFXGeneratedHAL10FlushCacheEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = TouchGFXGeneratedHAL::FlushCache()
</UL>
<BR>[Address Reference Count : 2]<UL><LI> touchgfxhal.o(.constdata__ZTV11TouchGFXHAL)
<LI> touchgfxgeneratedhal.o(.constdata__ZTV20TouchGFXGeneratedHAL)
</UL>
<P><STRONG><a name="[122]"></a>TouchGFXGeneratedHAL::beginFrame()</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, touchgfxgeneratedhal.o(i._ZN20TouchGFXGeneratedHAL10beginFrameEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = TouchGFXGeneratedHAL::beginFrame()
</UL>
<BR>[Calls]<UL><LI><a href="#[170]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::HAL::beginFrame()
</UL>
<BR>[Called By]<UL><LI><a href="#[fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TouchGFXHAL::beginFrame()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> touchgfxgeneratedhal.o(.constdata__ZTV20TouchGFXGeneratedHAL)
</UL>
<P><STRONG><a name="[11b]"></a>TouchGFXGeneratedHAL::initialize()</STRONG> (Thumb, 110 bytes, Stack size 16 bytes, touchgfxgeneratedhal.o(i._ZN20TouchGFXGeneratedHAL10initializeEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 176 + Unknown Stack Size
<LI>Call Chain = TouchGFXGeneratedHAL::initialize() &rArr; touchgfx::HAL::initialize() &rArr; touchgfx::OSWrappers::initialize() &rArr; osSemaphoreNew &rArr; xQueueCreateCountingSemaphoreStatic &rArr; xQueueGenericCreateStatic &rArr; prvInitialiseNewQueue &rArr; xQueueGenericReset &rArr; xTaskRemoveFromEventList
</UL>
<BR>[Calls]<UL><LI><a href="#[16d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::HAL::initialize()
<LI><a href="#[23d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Application::getInstance()
</UL>
<BR>[Called By]<UL><LI><a href="#[e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TouchGFXHAL::initialize()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> touchgfxgeneratedhal.o(.constdata__ZTV20TouchGFXGeneratedHAL)
</UL>
<P><STRONG><a name="[104]"></a>TouchGFXGeneratedHAL::InvalidateCache()</STRONG> (Thumb, 138 bytes, Stack size 12 bytes, touchgfxgeneratedhal.o(i._ZN20TouchGFXGeneratedHAL15InvalidateCacheEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = TouchGFXGeneratedHAL::InvalidateCache()
</UL>
<BR>[Address Reference Count : 2]<UL><LI> touchgfxhal.o(.constdata__ZTV11TouchGFXHAL)
<LI> touchgfxgeneratedhal.o(.constdata__ZTV20TouchGFXGeneratedHAL)
</UL>
<P><STRONG><a name="[11f]"></a>TouchGFXGeneratedHAL::enableInterrupts()</STRONG> (Thumb, 40 bytes, Stack size 0 bytes, touchgfxgeneratedhal.o(i._ZN20TouchGFXGeneratedHAL16enableInterruptsEv))
<BR><BR>[Called By]<UL><LI><a href="#[f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TouchGFXHAL::enableInterrupts()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> touchgfxgeneratedhal.o(.constdata__ZTV20TouchGFXGeneratedHAL)
</UL>
<P><STRONG><a name="[11c]"></a>TouchGFXGeneratedHAL::flushFrameBuffer(const touchgfx::Rect&)</STRONG> (Thumb, 16 bytes, Stack size 16 bytes, touchgfxgeneratedhal.o(i._ZN20TouchGFXGeneratedHAL16flushFrameBufferERKN8touchgfx4RectE))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = TouchGFXGeneratedHAL::flushFrameBuffer(const touchgfx::Rect&)
</UL>
<BR>[Calls]<UL><LI><a href="#[16e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::HAL::flushFrameBuffer(const touchgfx::Rect&)
</UL>
<BR>[Called By]<UL><LI><a href="#[e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TouchGFXHAL::flushFrameBuffer(const touchgfx::Rect&)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> touchgfxgeneratedhal.o(.constdata__ZTV20TouchGFXGeneratedHAL)
</UL>
<P><STRONG><a name="[120]"></a>TouchGFXGeneratedHAL::disableInterrupts()</STRONG> (Thumb, 62 bytes, Stack size 8 bytes, touchgfxgeneratedhal.o(i._ZN20TouchGFXGeneratedHAL17disableInterruptsEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = TouchGFXGeneratedHAL::disableInterrupts()
</UL>
<BR>[Called By]<UL><LI><a href="#[f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TouchGFXHAL::disableInterrupts()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> touchgfxgeneratedhal.o(.constdata__ZTV20TouchGFXGeneratedHAL)
</UL>
<P><STRONG><a name="[fc]"></a>TouchGFXGeneratedHAL::getTFTCurrentLine()</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, touchgfxgeneratedhal.o(i._ZN20TouchGFXGeneratedHAL17getTFTCurrentLineEv))
<BR>[Address Reference Count : 2]<UL><LI> touchgfxhal.o(.constdata__ZTV11TouchGFXHAL)
<LI> touchgfxgeneratedhal.o(.constdata__ZTV20TouchGFXGeneratedHAL)
</UL>
<P><STRONG><a name="[124]"></a>TouchGFXGeneratedHAL::setTFTFrameBuffer(unsigned short*)</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, touchgfxgeneratedhal.o(i._ZN20TouchGFXGeneratedHAL17setTFTFrameBufferEPt))
<BR><BR>[Called By]<UL><LI><a href="#[100]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TouchGFXHAL::setTFTFrameBuffer(unsigned short*)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> touchgfxgeneratedhal.o(.constdata__ZTV20TouchGFXGeneratedHAL)
</UL>
<P><STRONG><a name="[11e]"></a>TouchGFXGeneratedHAL::configureInterrupts()</STRONG> (Thumb, 40 bytes, Stack size 12 bytes, touchgfxgeneratedhal.o(i._ZN20TouchGFXGeneratedHAL19configureInterruptsEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = TouchGFXGeneratedHAL::configureInterrupts()
</UL>
<BR>[Called By]<UL><LI><a href="#[f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TouchGFXHAL::configureInterrupts()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> touchgfxgeneratedhal.o(.constdata__ZTV20TouchGFXGeneratedHAL)
</UL>
<P><STRONG><a name="[121]"></a>TouchGFXGeneratedHAL::enableLCDControllerInterrupt()</STRONG> (Thumb, 48 bytes, Stack size 0 bytes, touchgfxgeneratedhal.o(i._ZN20TouchGFXGeneratedHAL28enableLCDControllerInterruptEv))
<BR><BR>[Called By]<UL><LI><a href="#[f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TouchGFXHAL::enableLCDControllerInterrupt()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> touchgfxgeneratedhal.o(.constdata__ZTV20TouchGFXGeneratedHAL)
</UL>
<P><STRONG><a name="[123]"></a>TouchGFXGeneratedHAL::endFrame()</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, touchgfxgeneratedhal.o(i._ZN20TouchGFXGeneratedHAL8endFrameEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = TouchGFXGeneratedHAL::endFrame() &rArr; touchgfx::HAL::endFrame()
</UL>
<BR>[Calls]<UL><LI><a href="#[171]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::HAL::endFrame()
</UL>
<BR>[Called By]<UL><LI><a href="#[ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TouchGFXHAL::endFrame()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> touchgfxgeneratedhal.o(.constdata__ZTV20TouchGFXGeneratedHAL)
</UL>
<P><STRONG><a name="[d3]"></a>ApplicationFontProvider::~ApplicationFontProvider()</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, touchgfxconfiguration.o(i._ZN23ApplicationFontProviderD1Ev))
<BR>[Address Reference Count : 2]<UL><LI> touchgfxconfiguration.o(i.__sti___25_TouchGFXConfiguration_cpp_f5abfd34)
<LI> applicationfontprovider.o(.constdata__ZTV23ApplicationFontProvider)
</UL>
<P><STRONG><a name="[37f]"></a>ApplicationFontProvider::~ApplicationFontProvider__sub_object()</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, touchgfxconfiguration.o(i._ZN23ApplicationFontProviderD1Ev), UNUSED)

<P><STRONG><a name="[23a]"></a>FrontendApplicationBase::gotoScreen1ScreenNoTransition()</STRONG> (Thumb, 80 bytes, Stack size 48 bytes, frontendapplicationbase.o(i._ZN23FrontendApplicationBase29gotoScreen1ScreenNoTransitionEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = FrontendApplicationBase::gotoScreen1ScreenNoTransition()
</UL>
<BR>[Calls]<UL><LI><a href="#[17b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Callback&lang;FrontendApplicationBase, void, void, void&rang;::~Callback()
<LI><a href="#[23e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::GenericCallback&lang;void, void, void&rang;::GenericCallback__sub_object()
</UL>
<BR>[Called By]<UL><LI><a href="#[106]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FrontendHeapBase::gotoStartScreen(FrontendApplication&)
</UL>

<P><STRONG><a name="[da]"></a>FrontendApplicationBase::gotoScreen1ScreenNoTransitionImpl()</STRONG> (Thumb, 28 bytes, Stack size 16 bytes, frontendapplicationbase.o(i._ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 200 + Unknown Stack Size
<LI>Call Chain = FrontendApplicationBase::gotoScreen1ScreenNoTransitionImpl() &rArr; T2* touchgfx::makeTransition&lang;Screen1View, Screen1Presenter, touchgfx::NoTransition, Model&rang;(touchgfx::Screen**, touchgfx::Presenter**, touchgfx::MVPHeap&, touchgfx::Transition**, T4*) &rArr; Screen1View::Screen1View() &rArr; Screen1ViewBase::Screen1ViewBase() &rArr; touchgfx::Screen::add(touchgfx::Drawable&) &rArr; touchgfx::Container::add(touchgfx::Drawable&) &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[23f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;T2* touchgfx::makeTransition&lang;Screen1View, Screen1Presenter, touchgfx::NoTransition, Model&rang;(touchgfx::Screen**, touchgfx::Presenter**, touchgfx::MVPHeap&, touchgfx::Transition**, T4*)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> frontendapplicationbase.o(.constdata)
</UL>
<P><STRONG><a name="[23c]"></a>FrontendApplicationBase::FrontendApplicationBase(Model&, FrontendHeap&)</STRONG> (Thumb, 138 bytes, Stack size 24 bytes, frontendapplicationbase.o(i._ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = FrontendApplicationBase::FrontendApplicationBase(Model&, FrontendHeap&) &rArr; touchgfx::LCD16bpp::enableTextureMapperAll() &rArr; touchgfx::LCD16bpp::enableTextureMapperL8_ARGB8888() &rArr; touchgfx::LCD16bpp::enableTextureMapperL8_ARGB8888_BilinearInterpolation() &rArr; __aeabi_atexit &rArr; malloc &rArr; __Heap_Full &rArr; __Heap_ProvideMemory &rArr; free
</UL>
<BR>[Calls]<UL><LI><a href="#[241]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Texts::setLanguage(unsigned short)
<LI><a href="#[244]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::enableDecompressorL8_All()
<LI><a href="#[243]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::enableTextureMapperAll()
<LI><a href="#[240]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Application::Application()
<LI><a href="#[242]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::HAL::lcd()
<LI><a href="#[23e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::GenericCallback&lang;void, void, void&rang;::GenericCallback__sub_object()
</UL>
<BR>[Called By]<UL><LI><a href="#[230]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FrontendApplication::FrontendApplication(Model&, FrontendHeap&)
</UL>

<P><STRONG><a name="[380]"></a>FrontendApplicationBase::FrontendApplicationBase__sub_object(Model&, FrontendHeap&)</STRONG> (Thumb, 0 bytes, Stack size 24 bytes, frontendapplicationbase.o(i._ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap), UNUSED)

<P><STRONG><a name="[126]"></a>FrontendApplicationBase::~FrontendApplicationBase()</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, touchgfxconfiguration.o(i._ZN23FrontendApplicationBaseD1Ev))
<BR><BR>[Called By]<UL><LI><a href="#[d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FrontendHeap::~FrontendHeap()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> touchgfxconfiguration.o(.constdata__ZTV23FrontendApplicationBase)
</UL>
<P><STRONG><a name="[381]"></a>FrontendApplicationBase::~FrontendApplicationBase__sub_object()</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, touchgfxconfiguration.o(i._ZN23FrontendApplicationBaseD1Ev), UNUSED)

<P><STRONG><a name="[23b]"></a>Model::tick()</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, model.o(i._ZN5Model4tickEv))
<BR><BR>[Called By]<UL><LI><a href="#[112]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FrontendApplication::handleTickEvent()
</UL>

<P><STRONG><a name="[22f]"></a>Model::Model()</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, model.o(i._ZN5ModelC1Ev))
<BR><BR>[Called By]<UL><LI><a href="#[22d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FrontendHeap::FrontendHeap()
</UL>

<P><STRONG><a name="[382]"></a>Model::Model__sub_object()</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, model.o(i._ZN5ModelC1Ev), UNUSED)

<P><STRONG><a name="[127]"></a>STM32DMA::getBlitCaps()</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, stm32dma.o(i._ZN8STM32DMA11getBlitCapsEv))
<BR>[Address Reference Count : 1]<UL><LI> stm32dma.o(.constdata__ZTV8STM32DMA)
</UL>
<P><STRONG><a name="[12e]"></a>STM32DMA::setupDataCopy(const touchgfx::BlitOp&)</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, stm32dma.o(i._ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE))
<BR><BR>[Stack]<UL><LI>Max Depth = 64 + Unknown Stack Size
<LI>Call Chain = STM32DMA::setupDataCopy(const touchgfx::BlitOp&) &rArr; __aeabi_assert &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[1b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_assert
</UL>
<BR>[Address Reference Count : 1]<UL><LI> stm32dma.o(.constdata__ZTV8STM32DMA)
</UL>
<P><STRONG><a name="[12f]"></a>STM32DMA::setupDataFill(const touchgfx::BlitOp&)</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, stm32dma.o(i._ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE))
<BR><BR>[Stack]<UL><LI>Max Depth = 64 + Unknown Stack Size
<LI>Call Chain = STM32DMA::setupDataFill(const touchgfx::BlitOp&) &rArr; __aeabi_assert &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[1b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_assert
</UL>
<BR>[Address Reference Count : 1]<UL><LI> stm32dma.o(.constdata__ZTV8STM32DMA)
</UL>
<P><STRONG><a name="[129]"></a>STM32DMA::flush()</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32dma.o(i._ZN8STM32DMA5flushEv))
<BR>[Address Reference Count : 1]<UL><LI> stm32dma.o(.constdata__ZTV8STM32DMA)
</UL>
<P><STRONG><a name="[245]"></a>STM32DMA::STM32DMA()</STRONG> (Thumb, 72 bytes, Stack size 8 bytes, stm32dma.o(i._ZN8STM32DMAC1Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = STM32DMA::STM32DMA()
</UL>
<BR>[Calls]<UL><LI><a href="#[246]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LockFreeDMA_Queue::LockFreeDMA_Queue(touchgfx::BlitOp*, unsigned long)
</UL>
<BR>[Called By]<UL><LI><a href="#[196]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__sti___25_TouchGFXConfiguration_cpp_f5abfd34
</UL>

<P><STRONG><a name="[383]"></a>STM32DMA::STM32DMA__sub_object()</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, stm32dma.o(i._ZN8STM32DMAC1Ev), UNUSED)

<P><STRONG><a name="[d1]"></a>STM32DMA::~STM32DMA()</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, touchgfxconfiguration.o(i._ZN8STM32DMAD1Ev))
<BR>[Address Reference Count : 2]<UL><LI> touchgfxconfiguration.o(i.__sti___25_TouchGFXConfiguration_cpp_f5abfd34)
<LI> stm32dma.o(.constdata__ZTV8STM32DMA)
</UL>
<P><STRONG><a name="[384]"></a>STM32DMA::~STM32DMA__sub_object()</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, touchgfxconfiguration.o(i._ZN8STM32DMAD1Ev), UNUSED)

<P><STRONG><a name="[2ad]"></a>touchgfx::ClickEvent::ClickEvent(touchgfx::ClickEvent::ClickEventType, short, short, short)</STRONG> (Thumb, 18 bytes, Stack size 12 bytes, screen.o(i._ZN8touchgfx10ClickEventC1ENS0_14ClickEventTypeEsss))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = touchgfx::ClickEvent::ClickEvent(touchgfx::ClickEvent::ClickEventType, short, short, short)
</UL>
<BR>[Called By]<UL><LI><a href="#[e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Screen::handleClickEvent(const touchgfx::ClickEvent&)
<LI><a href="#[e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Screen::handleDragEvent(const touchgfx::DragEvent&)
</UL>

<P><STRONG><a name="[385]"></a>touchgfx::ClickEvent::ClickEvent__sub_object(touchgfx::ClickEvent::ClickEventType, short, short, short)</STRONG> (Thumb, 0 bytes, Stack size 12 bytes, screen.o(i._ZN8touchgfx10ClickEventC1ENS0_14ClickEventTypeEsss), UNUSED)

<P><STRONG><a name="[247]"></a>touchgfx::OSWrappers::initialize()</STRONG> (Thumb, 72 bytes, Stack size 8 bytes, oswrappers.o(i._ZN8touchgfx10OSWrappers10initializeEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 152 + Unknown Stack Size
<LI>Call Chain = touchgfx::OSWrappers::initialize() &rArr; osSemaphoreNew &rArr; xQueueCreateCountingSemaphoreStatic &rArr; xQueueGenericCreateStatic &rArr; prvInitialiseNewQueue &rArr; xQueueGenericReset &rArr; xTaskRemoveFromEventList
</UL>
<BR>[Calls]<UL><LI><a href="#[248]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osSemaphoreNew
<LI><a href="#[249]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osMessageQueueNew
<LI><a href="#[1b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_assert
</UL>
<BR>[Called By]<UL><LI><a href="#[16d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::HAL::initialize()
</UL>

<P><STRONG><a name="[1f3]"></a>touchgfx::OSWrappers::signalVSync()</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, oswrappers.o(i._ZN8touchgfx10OSWrappers11signalVSyncEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 144<LI>Call Chain = touchgfx::OSWrappers::signalVSync() &rArr; osMessageQueuePut &rArr; xQueueGenericSend &rArr; vTaskPlaceOnEventList &rArr; prvAddCurrentTaskToDelayedList &rArr; vListInsert
</UL>
<BR>[Calls]<UL><LI><a href="#[24a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osMessageQueuePut
</UL>
<BR>[Called By]<UL><LI><a href="#[1ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_LTDC_LineEventCallback
</UL>

<P><STRONG><a name="[24b]"></a>touchgfx::OSWrappers::waitForVSync()</STRONG> (Thumb, 34 bytes, Stack size 8 bytes, oswrappers.o(i._ZN8touchgfx10OSWrappers12waitForVSyncEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 136<LI>Call Chain = touchgfx::OSWrappers::waitForVSync() &rArr; osMessageQueueGet &rArr; xQueueReceive &rArr; vTaskPlaceOnEventList &rArr; prvAddCurrentTaskToDelayedList &rArr; vListInsert
</UL>
<BR>[Calls]<UL><LI><a href="#[24c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osMessageQueueGet
</UL>
<BR>[Called By]<UL><LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::HAL::taskEntry()
</UL>

<P><STRONG><a name="[24d]"></a>touchgfx::OSWrappers::giveFrameBufferSemaphore()</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, oswrappers.o(i._ZN8touchgfx10OSWrappers24giveFrameBufferSemaphoreEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 136<LI>Call Chain = touchgfx::OSWrappers::giveFrameBufferSemaphore() &rArr; osSemaphoreRelease &rArr; xQueueGenericSend &rArr; vTaskPlaceOnEventList &rArr; prvAddCurrentTaskToDelayedList &rArr; vListInsert
</UL>
<BR>[Calls]<UL><LI><a href="#[24e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osSemaphoreRelease
</UL>
<BR>[Called By]<UL><LI><a href="#[ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::HAL::unlockFrameBuffer()
<LI><a href="#[132]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::DMA_Interface::waitForFrameBufferSemaphore()
</UL>

<P><STRONG><a name="[24f]"></a>touchgfx::OSWrappers::takeFrameBufferSemaphore()</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, oswrappers.o(i._ZN8touchgfx10OSWrappers24takeFrameBufferSemaphoreEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = touchgfx::OSWrappers::takeFrameBufferSemaphore() &rArr; osSemaphoreAcquire &rArr; xQueueSemaphoreTake &rArr; vTaskPlaceOnEventList &rArr; prvAddCurrentTaskToDelayedList &rArr; vListInsert
</UL>
<BR>[Calls]<UL><LI><a href="#[250]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osSemaphoreAcquire
</UL>
<BR>[Called By]<UL><LI><a href="#[eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::HAL::lockFrameBuffer()
<LI><a href="#[132]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::DMA_Interface::waitForFrameBufferSemaphore()
</UL>

<P><STRONG><a name="[251]"></a>touchgfx::OSWrappers::tryTakeFrameBufferSemaphore()</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, oswrappers.o(i._ZN8touchgfx10OSWrappers27tryTakeFrameBufferSemaphoreEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = touchgfx::OSWrappers::tryTakeFrameBufferSemaphore() &rArr; osSemaphoreAcquire &rArr; xQueueSemaphoreTake &rArr; vTaskPlaceOnEventList &rArr; prvAddCurrentTaskToDelayedList &rArr; vListInsert
</UL>
<BR>[Calls]<UL><LI><a href="#[250]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osSemaphoreAcquire
</UL>
<BR>[Called By]<UL><LI><a href="#[128]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::DMA_Interface::addToQueue(const touchgfx::BlitOp&)
</UL>

<P><STRONG><a name="[b0]"></a>touchgfx::OSWrappers::taskDelay(unsigned short)</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, oswrappers.o(i._ZN8touchgfx10OSWrappers9taskDelayEt))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = touchgfx::OSWrappers::taskDelay(unsigned short) &rArr; osDelay &rArr; vTaskDelay &rArr; xTaskResumeAll &rArr; xTaskIncrementTick
</UL>
<BR>[Calls]<UL><LI><a href="#[221]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osDelay
</UL>
<BR>[Address Reference Count : 1]<UL><LI> touchgfxgeneratedhal.o(i._ZN20TouchGFXGeneratedHAL10initializeEv)
</UL>
<P><STRONG><a name="[137]"></a>touchgfx::Transition::invalidate()</STRONG> (Thumb, 20 bytes, Stack size 16 bytes, frontendapplicationbase.o(i._ZN8touchgfx10Transition10invalidateEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = touchgfx::Transition::invalidate()
</UL>
<BR>[Calls]<UL><LI><a href="#[23d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Application::getInstance()
</UL>
<BR>[Address Reference Count : 2]<UL><LI> frontendapplicationbase.o(.constdata__ZTVN8touchgfx10TransitionE)
<LI> frontendapplicationbase.o(.constdata__ZTVN8touchgfx12NoTransitionE)
</UL>
<P><STRONG><a name="[134]"></a>touchgfx::Transition::handleTickEvent()</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, frontendapplicationbase.o(i._ZN8touchgfx10Transition15handleTickEventEv))
<BR>[Address Reference Count : 1]<UL><LI> frontendapplicationbase.o(.constdata__ZTVN8touchgfx10TransitionE)
</UL>
<P><STRONG><a name="[138]"></a>touchgfx::Transition::setScreenContainer(touchgfx::Container&)</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, frontendapplicationbase.o(i._ZN8touchgfx10Transition18setScreenContainerERNS_9ContainerE))
<BR>[Address Reference Count : 2]<UL><LI> frontendapplicationbase.o(.constdata__ZTVN8touchgfx10TransitionE)
<LI> frontendapplicationbase.o(.constdata__ZTVN8touchgfx12NoTransitionE)
</UL>
<P><STRONG><a name="[136]"></a>touchgfx::Transition::init()</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, frontendapplicationbase.o(i._ZN8touchgfx10Transition4initEv))
<BR>[Address Reference Count : 2]<UL><LI> frontendapplicationbase.o(.constdata__ZTVN8touchgfx10TransitionE)
<LI> frontendapplicationbase.o(.constdata__ZTVN8touchgfx12NoTransitionE)
</UL>
<P><STRONG><a name="[135]"></a>touchgfx::Transition::tearDown()</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, frontendapplicationbase.o(i._ZN8touchgfx10Transition8tearDownEv))
<BR>[Address Reference Count : 2]<UL><LI> frontendapplicationbase.o(.constdata__ZTVN8touchgfx10TransitionE)
<LI> frontendapplicationbase.o(.constdata__ZTVN8touchgfx12NoTransitionE)
</UL>
<P><STRONG><a name="[133]"></a>touchgfx::Transition::~Transition()</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, frontendapplicationbase.o(i._ZN8touchgfx10TransitionD1Ev))
<BR>[Address Reference Count : 1]<UL><LI> frontendapplicationbase.o(.constdata__ZTVN8touchgfx10TransitionE)
</UL>
<P><STRONG><a name="[386]"></a>touchgfx::Transition::~Transition__sub_object()</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, frontendapplicationbase.o(i._ZN8touchgfx10TransitionD1Ev), UNUSED)

<P><STRONG><a name="[116]"></a>touchgfx::Application::invalidate()</STRONG> (Thumb, 42 bytes, Stack size 24 bytes, application.o(i._ZN8touchgfx11Application10invalidateEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = touchgfx::Application::invalidate() &rArr; touchgfx::Rect::Rect(short, short, short, short)
</UL>
<BR>[Calls]<UL><LI><a href="#[252]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Rect::Rect(short, short, short, short)
</UL>
<BR>[Address Reference Count : 4]<UL><LI> frontendapplication.o(.constdata__ZTV19FrontendApplication)
<LI> touchgfxconfiguration.o(.constdata__ZTV23FrontendApplicationBase)
<LI> frontendapplicationbase.o(.constdata__ZTVN8touchgfx14MVPApplicationE)
<LI> application.o(.constdata__ZTVN8touchgfx11ApplicationE)
</UL>
<P><STRONG><a name="[23d]"></a>touchgfx::Application::getInstance()</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, application.o(i._ZN8touchgfx11Application11getInstanceEv))
<BR><BR>[Called By]<UL><LI><a href="#[fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::HAL::tick()
<LI><a href="#[11b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TouchGFXGeneratedHAL::initialize()
<LI><a href="#[137]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Transition::invalidate()
<LI><a href="#[28a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::prepareTransition(touchgfx::Screen**, touchgfx::Presenter**, touchgfx::Transition**)
</UL>

<P><STRONG><a name="[261]"></a>touchgfx::Application::TimerWidgets::tickActive()</STRONG> (Thumb, 62 bytes, Stack size 16 bytes, application.o(i._ZN8touchgfx11Application12TimerWidgets10tickActiveEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = touchgfx::Application::TimerWidgets::tickActive()
</UL>
<BR>[Called By]<UL><LI><a href="#[125]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Application::handleTickEvent()
</UL>

<P><STRONG><a name="[264]"></a>touchgfx::Application::TimerWidgets::clear()</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, application.o(i._ZN8touchgfx11Application12TimerWidgets5clearEv))
<BR><BR>[Called By]<UL><LI><a href="#[240]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Application::Application()
<LI><a href="#[28a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::prepareTransition(touchgfx::Screen**, touchgfx::Presenter**, touchgfx::Transition**)
</UL>

<P><STRONG><a name="[253]"></a>touchgfx::Application::TimerWidgets::compact()</STRONG> (Thumb, 146 bytes, Stack size 24 bytes, application.o(i._ZN8touchgfx11Application12TimerWidgets7compactEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 72 + Unknown Stack Size
<LI>Call Chain = touchgfx::Application::TimerWidgets::compact() &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[1b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;abort
</UL>
<BR>[Called By]<UL><LI><a href="#[125]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Application::handleTickEvent()
</UL>

<P><STRONG><a name="[111]"></a>touchgfx::Application::handleKeyEvent(unsigned char)</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, application.o(i._ZN8touchgfx11Application14handleKeyEventEh))
<BR>[Address Reference Count : 4]<UL><LI> frontendapplication.o(.constdata__ZTV19FrontendApplication)
<LI> touchgfxconfiguration.o(.constdata__ZTV23FrontendApplicationBase)
<LI> frontendapplicationbase.o(.constdata__ZTVN8touchgfx14MVPApplicationE)
<LI> application.o(.constdata__ZTVN8touchgfx11ApplicationE)
</UL>
<P><STRONG><a name="[117]"></a>touchgfx::Application::invalidateArea(touchgfx::Rect)</STRONG> (Thumb, 1742 bytes, Stack size 64 bytes, application.o(i._ZN8touchgfx11Application14invalidateAreaENS_4RectE))
<BR><BR>[Stack]<UL><LI>Max Depth = 120 + Unknown Stack Size
<LI>Call Chain = touchgfx::Application::invalidateArea(touchgfx::Rect) &rArr; touchgfx::Vector&lang;touchgfx::Rect, (unsigned short)8&rang;::add(touchgfx::Rect) &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[25b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Vector&lang;touchgfx::Rect, (unsigned short)8&rang;::add(touchgfx::Rect)
<LI><a href="#[257]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Vector&lang;touchgfx::Rect, (unsigned short)8&rang;::quickRemoveAt(unsigned short)
<LI><a href="#[258]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Rect::intersect(const touchgfx::Rect&) const
<LI><a href="#[256]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Rect::includes(const touchgfx::Rect&) const
<LI><a href="#[25c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Rect::expandToFit(const touchgfx::Rect&)
<LI><a href="#[254]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Rect::restrictTo(short, short)
<LI><a href="#[255]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Rect::isEmpty() const
<LI><a href="#[25a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Rect::bottom() const
<LI><a href="#[259]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Rect::right() const
</UL>
<BR>[Address Reference Count : 4]<UL><LI> frontendapplication.o(.constdata__ZTV19FrontendApplication)
<LI> touchgfxconfiguration.o(.constdata__ZTV23FrontendApplicationBase)
<LI> frontendapplicationbase.o(.constdata__ZTVN8touchgfx14MVPApplicationE)
<LI> application.o(.constdata__ZTVN8touchgfx11ApplicationE)
</UL>
<P><STRONG><a name="[115]"></a>touchgfx::Application::drawCachedAreas()</STRONG> (Thumb, 1180 bytes, Stack size 144 bytes, application.o(i._ZN8touchgfx11Application15drawCachedAreasEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 200 + Unknown Stack Size
<LI>Call Chain = touchgfx::Application::drawCachedAreas() &rArr; touchgfx::Vector&lang;touchgfx::Rect, (unsigned short)8&rang;::add(touchgfx::Rect) &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Rect::Rect()
<LI><a href="#[25e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::DisplayTransformation::transformFrameBufferToDisplay(touchgfx::Rect&)
<LI><a href="#[25d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Vector&lang;touchgfx::Rect, (unsigned short)8&rang;::Vector()
<LI><a href="#[25b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Vector&lang;touchgfx::Rect, (unsigned short)8&rang;::add(touchgfx::Rect)
<LI><a href="#[257]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Vector&lang;touchgfx::Rect, (unsigned short)8&rang;::quickRemoveAt(unsigned short)
<LI><a href="#[25f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Rect::operator &=(const touchgfx::Rect&)
<LI><a href="#[260]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::DisplayTransformation::transformDisplayToFrameBuffer(touchgfx::Rect&)
<LI><a href="#[255]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Rect::isEmpty() const
<LI><a href="#[25a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Rect::bottom() const
<LI><a href="#[259]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Rect::right() const
<LI><a href="#[252]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Rect::Rect(short, short, short, short)
</UL>
<BR>[Address Reference Count : 4]<UL><LI> frontendapplication.o(.constdata__ZTV19FrontendApplication)
<LI> touchgfxconfiguration.o(.constdata__ZTV23FrontendApplicationBase)
<LI> frontendapplicationbase.o(.constdata__ZTVN8touchgfx14MVPApplicationE)
<LI> application.o(.constdata__ZTVN8touchgfx11ApplicationE)
</UL>
<P><STRONG><a name="[10f]"></a>touchgfx::Application::handleDragEvent(const touchgfx::DragEvent&)</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, application.o(i._ZN8touchgfx11Application15handleDragEventERKNS_9DragEventE))
<BR>[Address Reference Count : 4]<UL><LI> frontendapplication.o(.constdata__ZTV19FrontendApplication)
<LI> touchgfxconfiguration.o(.constdata__ZTV23FrontendApplicationBase)
<LI> frontendapplicationbase.o(.constdata__ZTVN8touchgfx14MVPApplicationE)
<LI> application.o(.constdata__ZTVN8touchgfx11ApplicationE)
</UL>
<P><STRONG><a name="[125]"></a>touchgfx::Application::handleTickEvent()</STRONG> (Thumb, 94 bytes, Stack size 16 bytes, application.o(i._ZN8touchgfx11Application15handleTickEventEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 88 + Unknown Stack Size
<LI>Call Chain = touchgfx::Application::handleTickEvent() &rArr; touchgfx::Application::TimerWidgets::compact() &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[253]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Application::TimerWidgets::compact()
<LI><a href="#[261]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Application::TimerWidgets::tickActive()
</UL>
<BR>[Called By]<UL><LI><a href="#[112]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FrontendApplication::handleTickEvent()
</UL>
<BR>[Address Reference Count : 3]<UL><LI> touchgfxconfiguration.o(.constdata__ZTV23FrontendApplicationBase)
<LI> frontendapplicationbase.o(.constdata__ZTVN8touchgfx14MVPApplicationE)
<LI> application.o(.constdata__ZTVN8touchgfx11ApplicationE)
</UL>
<P><STRONG><a name="[114]"></a>touchgfx::Application::clearCachedAreas()</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, application.o(i._ZN8touchgfx11Application16clearCachedAreasEv))
<BR>[Address Reference Count : 4]<UL><LI> frontendapplication.o(.constdata__ZTV19FrontendApplication)
<LI> touchgfxconfiguration.o(.constdata__ZTV23FrontendApplicationBase)
<LI> frontendapplicationbase.o(.constdata__ZTVN8touchgfx14MVPApplicationE)
<LI> application.o(.constdata__ZTVN8touchgfx11ApplicationE)
</UL>
<P><STRONG><a name="[10e]"></a>touchgfx::Application::handleClickEvent(const touchgfx::ClickEvent&)</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, application.o(i._ZN8touchgfx11Application16handleClickEventERKNS_10ClickEventE))
<BR>[Address Reference Count : 4]<UL><LI> frontendapplication.o(.constdata__ZTV19FrontendApplication)
<LI> touchgfxconfiguration.o(.constdata__ZTV23FrontendApplicationBase)
<LI> frontendapplicationbase.o(.constdata__ZTVN8touchgfx14MVPApplicationE)
<LI> application.o(.constdata__ZTVN8touchgfx11ApplicationE)
</UL>
<P><STRONG><a name="[110]"></a>touchgfx::Application::handleGestureEvent(const touchgfx::GestureEvent&)</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, application.o(i._ZN8touchgfx11Application18handleGestureEventERKNS_12GestureEventE))
<BR>[Address Reference Count : 4]<UL><LI> frontendapplication.o(.constdata__ZTV19FrontendApplication)
<LI> touchgfxconfiguration.o(.constdata__ZTV23FrontendApplicationBase)
<LI> frontendapplicationbase.o(.constdata__ZTVN8touchgfx14MVPApplicationE)
<LI> application.o(.constdata__ZTVN8touchgfx11ApplicationE)
</UL>
<P><STRONG><a name="[139]"></a>touchgfx::Application::handlePendingScreenTransition()</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, application.o(i._ZN8touchgfx11Application29handlePendingScreenTransitionEv))
<BR>[Address Reference Count : 1]<UL><LI> application.o(.constdata__ZTVN8touchgfx11ApplicationE)
</UL>
<P><STRONG><a name="[118]"></a>touchgfx::Application::draw(touchgfx::Rect&)</STRONG> (Thumb, 68 bytes, Stack size 16 bytes, application.o(i._ZN8touchgfx11Application4drawERNS_4RectE))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = touchgfx::Application::draw(touchgfx::Rect&) &rArr; touchgfx::Rect::restrictTo(short, short)
</UL>
<BR>[Calls]<UL><LI><a href="#[254]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Rect::restrictTo(short, short)
</UL>
<BR>[Address Reference Count : 4]<UL><LI> frontendapplication.o(.constdata__ZTV19FrontendApplication)
<LI> touchgfxconfiguration.o(.constdata__ZTV23FrontendApplicationBase)
<LI> frontendapplicationbase.o(.constdata__ZTVN8touchgfx14MVPApplicationE)
<LI> application.o(.constdata__ZTVN8touchgfx11ApplicationE)
</UL>
<P><STRONG><a name="[240]"></a>touchgfx::Application::Application()</STRONG> (Thumb, 98 bytes, Stack size 16 bytes, application.o(i._ZN8touchgfx11ApplicationC1Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = touchgfx::Application::Application() &rArr; touchgfx::Screen::draw() &rArr; touchgfx::Rect::Rect(short, short, short, short)
</UL>
<BR>[Calls]<UL><LI><a href="#[d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Rect::Rect()
<LI><a href="#[264]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Application::TimerWidgets::clear()
<LI><a href="#[263]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Screen::draw()
<LI><a href="#[262]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CRC_Lock
<LI><a href="#[25d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Vector&lang;touchgfx::Rect, (unsigned short)8&rang;::Vector()
<LI><a href="#[1dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[23c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FrontendApplicationBase::FrontendApplicationBase(Model&, FrontendHeap&)
</UL>

<P><STRONG><a name="[387]"></a>touchgfx::Application::Application__sub_object()</STRONG> (Thumb, 0 bytes, Stack size 16 bytes, application.o(i._ZN8touchgfx11ApplicationC1Ev), UNUSED)

<P><STRONG><a name="[325]"></a>touchgfx::FontManager::setFontProvider(touchgfx::FontProvider*)</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, fontmanager.o(i._ZN8touchgfx11FontManager15setFontProviderEPNS_12FontProviderE))
<BR><BR>[Called By]<UL><LI><a href="#[220]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx_init
</UL>

<P><STRONG><a name="[2b5]"></a>touchgfx::GestureEvent::GestureEvent(touchgfx::GestureEvent::GestureEventType, short, short, short)</STRONG> (Thumb, 18 bytes, Stack size 12 bytes, gestures.o(i._ZN8touchgfx12GestureEventC1ENS0_16GestureEventTypeEsss))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = touchgfx::GestureEvent::GestureEvent(touchgfx::GestureEvent::GestureEventType, short, short, short)
</UL>
<BR>[Called By]<UL><LI><a href="#[297]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Gestures::registerClickEvent(touchgfx::ClickEvent::ClickEventType, unsigned short, unsigned short)
</UL>

<P><STRONG><a name="[388]"></a>touchgfx::GestureEvent::GestureEvent__sub_object(touchgfx::GestureEvent::GestureEventType, short, short, short)</STRONG> (Thumb, 0 bytes, Stack size 12 bytes, gestures.o(i._ZN8touchgfx12GestureEventC1ENS0_16GestureEventTypeEsss), UNUSED)

<P><STRONG><a name="[13c]"></a>touchgfx::NoTransition::handleTickEvent()</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, frontendapplicationbase.o(i._ZN8touchgfx12NoTransition15handleTickEventEv))
<BR>[Address Reference Count : 1]<UL><LI> frontendapplicationbase.o(.constdata__ZTVN8touchgfx12NoTransitionE)
</UL>
<P><STRONG><a name="[13b]"></a>touchgfx::NoTransition::~NoTransition()</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, frontendapplicationbase.o(i._ZN8touchgfx12NoTransitionD1Ev))
<BR>[Address Reference Count : 1]<UL><LI> frontendapplicationbase.o(.constdata__ZTVN8touchgfx12NoTransitionE)
</UL>
<P><STRONG><a name="[389]"></a>touchgfx::NoTransition::~NoTransition__sub_object()</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, frontendapplicationbase.o(i._ZN8touchgfx12NoTransitionD1Ev), UNUSED)

<P><STRONG><a name="[265]"></a>touchgfx::TextProvider::initialize(const unsigned short*, const unsigned short*, const touchgfx::FontContextualFormsTable*, ...)</STRONG> (Thumb, 22 bytes, Stack size 32 bytes, textprovider.o(i._ZN8touchgfx12TextProvider10initializeEPKtS2_PKNS_24FontContextualFormsTableEz))
<BR><BR>[Stack]<UL><LI>Max Depth = 120 + Unknown Stack Size
<LI>Call Chain = touchgfx::TextProvider::initialize(const unsigned short*, const unsigned short*, const touchgfx::FontContextualFormsTable*, ...) &rArr; touchgfx::TextProvider::initialize(const unsigned short*, std::__va_list, const unsigned short*, const touchgfx::FontContextualFormsTable*) &rArr; touchgfx::TextProvider::initializeInternal() &rArr; touchgfx::TextProvider::fillInputBuffer() &rArr; touchgfx::TextProvider::circularBuffer&lang;(unsigned)10&rang;::pushBack(unsigned short) &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[266]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextProvider::initialize(const unsigned short*, std::__va_list, const unsigned short*, const touchgfx::FontContextualFormsTable*)
</UL>
<BR>[Called By]<UL><LI><a href="#[183]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextArea::calculateBoundingArea() const
</UL>

<P><STRONG><a name="[266]"></a>touchgfx::TextProvider::initialize(const unsigned short*, std::__va_list, const unsigned short*, const touchgfx::FontContextualFormsTable*)</STRONG> (Thumb, 42 bytes, Stack size 8 bytes, textprovider.o(i._ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE))
<BR><BR>[Stack]<UL><LI>Max Depth = 88 + Unknown Stack Size
<LI>Call Chain = touchgfx::TextProvider::initialize(const unsigned short*, std::__va_list, const unsigned short*, const touchgfx::FontContextualFormsTable*) &rArr; touchgfx::TextProvider::initializeInternal() &rArr; touchgfx::TextProvider::fillInputBuffer() &rArr; touchgfx::TextProvider::circularBuffer&lang;(unsigned)10&rang;::pushBack(unsigned short) &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[267]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextProvider::initializeInternal()
</UL>
<BR>[Called By]<UL><LI><a href="#[2df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Font::getStringWidthLTR(unsigned char, const unsigned short*, std::__va_list) const
<LI><a href="#[29a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD::drawStringLTR(const touchgfx::Rect&, const touchgfx::Rect&, const touchgfx::LCD::StringVisuals&, const unsigned short*, std::__va_list)
<LI><a href="#[163]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextArea::calculateTextHeight(const unsigned short*, ...) const
<LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextProvider::initialize(const unsigned short*, const unsigned short*, const touchgfx::FontContextualFormsTable*, ...)
</UL>

<P><STRONG><a name="[268]"></a>touchgfx::TextProvider::adjustGlyph(unsigned short, unsigned short, const touchgfx::GlyphNode*&, const touchgfx::Font*)</STRONG> (Thumb, 98 bytes, Stack size 16 bytes, textprovider.o(i._ZN8touchgfx12TextProvider11adjustGlyphEttRPKNS_9GlyphNodeEPKNS_4FontE))
<BR><BR>[Stack]<UL><LI>Max Depth = 128 + Unknown Stack Size
<LI>Call Chain = touchgfx::TextProvider::adjustGlyph(unsigned short, unsigned short, const touchgfx::GlyphNode*&, const touchgfx::Font*) &rArr; touchgfx::TextProvider::adjustThaiGlyph(const touchgfx::Font*, const touchgfx::GlyphNode*) &rArr; touchgfx::TextProvider::circularBuffer&lang;(unsigned)10&rang;::peekChar() &rArr; __aeabi_assert &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[26c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::GlyphNode::advance() const
<LI><a href="#[269]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextProvider::adjustArabicGlyph(const touchgfx::Font*, const touchgfx::GlyphNode*, unsigned short)
<LI><a href="#[26b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextProvider::adjustHindiGlyph(const touchgfx::GlyphNode*)
<LI><a href="#[26a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextProvider::adjustThaiGlyph(const touchgfx::Font*, const touchgfx::GlyphNode*)
</UL>
<BR>[Called By]<UL><LI><a href="#[27e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextProvider::getNextLigature(unsigned char, const touchgfx::Font*, const touchgfx::GlyphNode*&)
<LI><a href="#[27f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextProvider::getNextLigature(unsigned char, const touchgfx::Font*, const touchgfx::GlyphNode*&, const unsigned char*&, unsigned char&)
</UL>

<P><STRONG><a name="[26d]"></a>touchgfx::TextProvider::endOfString()</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, textprovider.o(i._ZN8touchgfx12TextProvider11endOfStringEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 80 + Unknown Stack Size
<LI>Call Chain = touchgfx::TextProvider::endOfString() &rArr; touchgfx::TextProvider::circularBuffer&lang;(unsigned)10&rang;::peekChar() &rArr; __aeabi_assert &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[26e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextProvider::circularBuffer&lang;(unsigned)10&rang;::peekChar()
</UL>
<BR>[Called By]<UL><LI><a href="#[183]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextArea::calculateBoundingArea() const
</UL>

<P><STRONG><a name="[26f]"></a>touchgfx::TextProvider::getNextChar()</STRONG> (Thumb, 84 bytes, Stack size 16 bytes, textprovider.o(i._ZN8touchgfx12TextProvider11getNextCharEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 88 + Unknown Stack Size
<LI>Call Chain = touchgfx::TextProvider::getNextChar() &rArr; touchgfx::TextProvider::fillInputBuffer() &rArr; touchgfx::TextProvider::circularBuffer&lang;(unsigned)10&rang;::pushBack(unsigned short) &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[270]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextProvider::fillInputBuffer()
<LI><a href="#[1b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;abort
</UL>
<BR>[Called By]<UL><LI><a href="#[29a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD::drawStringLTR(const touchgfx::Rect&, const touchgfx::Rect&, const touchgfx::LCD::StringVisuals&, const unsigned short*, std::__va_list)
<LI><a href="#[27c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextProvider::getNextLigature(unsigned char)
<LI><a href="#[29c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD::getNumLines(touchgfx::TextProvider&, touchgfx::WideTextAction, unsigned char, const touchgfx::Font*, short)
</UL>

<P><STRONG><a name="[271]"></a>touchgfx::TextProvider::gsubRuleMatch(const unsigned short*, unsigned short, unsigned short, unsigned short)</STRONG> (Thumb, 116 bytes, Stack size 32 bytes, textprovider.o(i._ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt))
<BR><BR>[Stack]<UL><LI>Max Depth = 88 + Unknown Stack Size
<LI>Call Chain = touchgfx::TextProvider::gsubRuleMatch(const unsigned short*, unsigned short, unsigned short, unsigned short) &rArr; touchgfx::TextProvider::circularBuffer&lang;(unsigned)10&rang;::peekChar(unsigned short) &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[272]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextProvider::circularBuffer&lang;(unsigned)10&rang;::peekChar(unsigned short)
<LI><a href="#[1b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;abort
</UL>
<BR>[Called By]<UL><LI><a href="#[273]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextProvider::applyGsubRules(const unsigned short*, unsigned short)
</UL>

<P><STRONG><a name="[273]"></a>touchgfx::TextProvider::applyGsubRules(const unsigned short*, unsigned short)</STRONG> (Thumb, 98 bytes, Stack size 40 bytes, textprovider.o(i._ZN8touchgfx12TextProvider14applyGsubRulesEPKtt))
<BR><BR>[Stack]<UL><LI>Max Depth = 152 + Unknown Stack Size
<LI>Call Chain = touchgfx::TextProvider::applyGsubRules(const unsigned short*, unsigned short) &rArr; touchgfx::TextProvider::replaceInputCharacters(unsigned short, unsigned short, const unsigned short*) &rArr; touchgfx::TextProvider::fillInputBuffer() &rArr; touchgfx::TextProvider::circularBuffer&lang;(unsigned)10&rang;::pushBack(unsigned short) &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[274]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextProvider::replaceInputCharacters(unsigned short, unsigned short, const unsigned short*)
<LI><a href="#[271]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextProvider::gsubRuleMatch(const unsigned short*, unsigned short, unsigned short, unsigned short)
</UL>
<BR>[Called By]<UL><LI><a href="#[27d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextProvider::substituteGlyphs()
</UL>

<P><STRONG><a name="[26a]"></a>touchgfx::TextProvider::adjustThaiGlyph(const touchgfx::Font*, const touchgfx::GlyphNode*)</STRONG> (Thumb, 378 bytes, Stack size 40 bytes, textprovider.o(i._ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE))
<BR><BR>[Stack]<UL><LI>Max Depth = 112 + Unknown Stack Size
<LI>Call Chain = touchgfx::TextProvider::adjustThaiGlyph(const touchgfx::Font*, const touchgfx::GlyphNode*) &rArr; touchgfx::TextProvider::circularBuffer&lang;(unsigned)10&rang;::peekChar() &rArr; __aeabi_assert &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[26e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextProvider::circularBuffer&lang;(unsigned)10&rang;::peekChar()
<LI><a href="#[275]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::GlyphNode::top() const
<LI><a href="#[26c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::GlyphNode::advance() const
<LI><a href="#[278]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextProvider::thaiLookupGlyph(const touchgfx::GlyphNode*, const touchgfx::Font*, unsigned short) const
<LI><a href="#[277]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::GlyphNode::setTop(short)
<LI><a href="#[276]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[268]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextProvider::adjustGlyph(unsigned short, unsigned short, const touchgfx::GlyphNode*&, const touchgfx::Font*)
</UL>

<P><STRONG><a name="[270]"></a>touchgfx::TextProvider::fillInputBuffer()</STRONG> (Thumb, 98 bytes, Stack size 16 bytes, textprovider.o(i._ZN8touchgfx12TextProvider15fillInputBufferEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 72 + Unknown Stack Size
<LI>Call Chain = touchgfx::TextProvider::fillInputBuffer() &rArr; touchgfx::TextProvider::circularBuffer&lang;(unsigned)10&rang;::pushBack(unsigned short) &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[27a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextProvider::circularBuffer&lang;(unsigned)10&rang;::isFull() const
<LI><a href="#[279]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextProvider::circularBuffer&lang;(unsigned)10&rang;::pushBack(unsigned short)
<LI><a href="#[27b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextProvider::getNextCharInternal()
<LI><a href="#[1b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;abort
</UL>
<BR>[Called By]<UL><LI><a href="#[26f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextProvider::getNextChar()
<LI><a href="#[267]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextProvider::initializeInternal()
<LI><a href="#[274]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextProvider::replaceInputCharacters(unsigned short, unsigned short, const unsigned short*)
</UL>

<P><STRONG><a name="[27c]"></a>touchgfx::TextProvider::getNextLigature(unsigned char)</STRONG> (Thumb, 168 bytes, Stack size 24 bytes, texts.o(i._ZN8touchgfx12TextProvider15getNextLigatureEh))
<BR><BR>[Stack]<UL><LI>Max Depth = 208 + Unknown Stack Size
<LI>Call Chain = touchgfx::TextProvider::getNextLigature(unsigned char) &rArr; touchgfx::TextProvider::substituteGlyphs() &rArr; touchgfx::TextProvider::applyGsubRules(const unsigned short*, unsigned short) &rArr; touchgfx::TextProvider::replaceInputCharacters(unsigned short, unsigned short, const unsigned short*) &rArr; touchgfx::TextProvider::fillInputBuffer() &rArr; touchgfx::TextProvider::circularBuffer&lang;(unsigned)10&rang;::pushBack(unsigned short) &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[27d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextProvider::substituteGlyphs()
<LI><a href="#[26f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextProvider::getNextChar()
<LI><a href="#[26e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextProvider::circularBuffer&lang;(unsigned)10&rang;::peekChar()
<LI><a href="#[1b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_assert
</UL>
<BR>[Called By]<UL><LI><a href="#[29a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD::drawStringLTR(const touchgfx::Rect&, const touchgfx::Rect&, const touchgfx::LCD::StringVisuals&, const unsigned short*, std::__va_list)
<LI><a href="#[27e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextProvider::getNextLigature(unsigned char, const touchgfx::Font*, const touchgfx::GlyphNode*&)
<LI><a href="#[27f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextProvider::getNextLigature(unsigned char, const touchgfx::Font*, const touchgfx::GlyphNode*&, const unsigned char*&, unsigned char&)
<LI><a href="#[2a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD::drawStringInternal(unsigned short*, const touchgfx::Rect*, short, short, const touchgfx::Rect&, const touchgfx::LCD::StringVisuals*, unsigned char, touchgfx::TextProvider&, int, bool)
</UL>

<P><STRONG><a name="[27e]"></a>touchgfx::TextProvider::getNextLigature(unsigned char, const touchgfx::Font*, const touchgfx::GlyphNode*&)</STRONG> (Thumb, 70 bytes, Stack size 32 bytes, textprovider.o(i._ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE))
<BR><BR>[Stack]<UL><LI>Max Depth = 240 + Unknown Stack Size
<LI>Call Chain = touchgfx::TextProvider::getNextLigature(unsigned char, const touchgfx::Font*, const touchgfx::GlyphNode*&) &rArr; touchgfx::TextProvider::getNextLigature(unsigned char) &rArr; touchgfx::TextProvider::substituteGlyphs() &rArr; touchgfx::TextProvider::applyGsubRules(const unsigned short*, unsigned short) &rArr; touchgfx::TextProvider::replaceInputCharacters(unsigned short, unsigned short, const unsigned short*) &rArr; touchgfx::TextProvider::fillInputBuffer() &rArr; touchgfx::TextProvider::circularBuffer&lang;(unsigned)10&rang;::pushBack(unsigned short) &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[26e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextProvider::circularBuffer&lang;(unsigned)10&rang;::peekChar()
<LI><a href="#[27c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextProvider::getNextLigature(unsigned char)
<LI><a href="#[268]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextProvider::adjustGlyph(unsigned short, unsigned short, const touchgfx::GlyphNode*&, const touchgfx::Font*)
</UL>
<BR>[Called By]<UL><LI><a href="#[2df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Font::getStringWidthLTR(unsigned char, const unsigned short*, std::__va_list) const
<LI><a href="#[29f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD::stringWidth(touchgfx::TextProvider&, const touchgfx::Font&, int, unsigned char)
<LI><a href="#[29e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD::WideTextInternalStruct::scanStringLengthForLine()
</UL>

<P><STRONG><a name="[27f]"></a>touchgfx::TextProvider::getNextLigature(unsigned char, const touchgfx::Font*, const touchgfx::GlyphNode*&, const unsigned char*&, unsigned char&)</STRONG> (Thumb, 80 bytes, Stack size 40 bytes, textprovider.o(i._ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh))
<BR><BR>[Stack]<UL><LI>Max Depth = 248 + Unknown Stack Size
<LI>Call Chain = touchgfx::TextProvider::getNextLigature(unsigned char, const touchgfx::Font*, const touchgfx::GlyphNode*&, const unsigned char*&, unsigned char&) &rArr; touchgfx::TextProvider::getNextLigature(unsigned char) &rArr; touchgfx::TextProvider::substituteGlyphs() &rArr; touchgfx::TextProvider::applyGsubRules(const unsigned short*, unsigned short) &rArr; touchgfx::TextProvider::replaceInputCharacters(unsigned short, unsigned short, const unsigned short*) &rArr; touchgfx::TextProvider::fillInputBuffer() &rArr; touchgfx::TextProvider::circularBuffer&lang;(unsigned)10&rang;::pushBack(unsigned short) &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[26e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextProvider::circularBuffer&lang;(unsigned)10&rang;::peekChar()
<LI><a href="#[27c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextProvider::getNextLigature(unsigned char)
<LI><a href="#[268]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextProvider::adjustGlyph(unsigned short, unsigned short, const touchgfx::GlyphNode*&, const touchgfx::Font*)
</UL>
<BR>[Called By]<UL><LI><a href="#[2a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD::drawStringInternal(unsigned short*, const touchgfx::Rect*, short, short, const touchgfx::Rect&, const touchgfx::LCD::StringVisuals*, unsigned char, touchgfx::TextProvider&, int, bool)
</UL>

<P><STRONG><a name="[26b]"></a>touchgfx::TextProvider::adjustHindiGlyph(const touchgfx::GlyphNode*)</STRONG> (Thumb, 38 bytes, Stack size 16 bytes, textprovider.o(i._ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = touchgfx::TextProvider::adjustHindiGlyph(const touchgfx::GlyphNode*)
</UL>
<BR>[Calls]<UL><LI><a href="#[280]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::GlyphNode::width() const
<LI><a href="#[276]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[268]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextProvider::adjustGlyph(unsigned short, unsigned short, const touchgfx::GlyphNode*&, const touchgfx::Font*)
</UL>

<P><STRONG><a name="[27d]"></a>touchgfx::TextProvider::substituteGlyphs()</STRONG> (Thumb, 74 bytes, Stack size 32 bytes, textprovider.o(i._ZN8touchgfx12TextProvider16substituteGlyphsEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 184 + Unknown Stack Size
<LI>Call Chain = touchgfx::TextProvider::substituteGlyphs() &rArr; touchgfx::TextProvider::applyGsubRules(const unsigned short*, unsigned short) &rArr; touchgfx::TextProvider::replaceInputCharacters(unsigned short, unsigned short, const unsigned short*) &rArr; touchgfx::TextProvider::fillInputBuffer() &rArr; touchgfx::TextProvider::circularBuffer&lang;(unsigned)10&rang;::pushBack(unsigned short) &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[26e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextProvider::circularBuffer&lang;(unsigned)10&rang;::peekChar()
<LI><a href="#[281]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextProvider::gsubTableBinarySearch(unsigned short, const unsigned short*, unsigned short) const
<LI><a href="#[273]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextProvider::applyGsubRules(const unsigned short*, unsigned short)
</UL>
<BR>[Called By]<UL><LI><a href="#[27c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextProvider::getNextLigature(unsigned char)
</UL>

<P><STRONG><a name="[269]"></a>touchgfx::TextProvider::adjustArabicGlyph(const touchgfx::Font*, const touchgfx::GlyphNode*, unsigned short)</STRONG> (Thumb, 598 bytes, Stack size 32 bytes, textprovider.o(i._ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = touchgfx::TextProvider::adjustArabicGlyph(const touchgfx::Font*, const touchgfx::GlyphNode*, unsigned short)
</UL>
<BR>[Calls]<UL><LI><a href="#[280]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::GlyphNode::width() const
<LI><a href="#[275]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::GlyphNode::top() const
<LI><a href="#[277]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::GlyphNode::setTop(short)
<LI><a href="#[276]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[268]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextProvider::adjustGlyph(unsigned short, unsigned short, const touchgfx::GlyphNode*&, const touchgfx::Font*)
</UL>

<P><STRONG><a name="[267]"></a>touchgfx::TextProvider::initializeInternal()</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, texts.o(i._ZN8touchgfx12TextProvider18initializeInternalEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 80 + Unknown Stack Size
<LI>Call Chain = touchgfx::TextProvider::initializeInternal() &rArr; touchgfx::TextProvider::fillInputBuffer() &rArr; touchgfx::TextProvider::circularBuffer&lang;(unsigned)10&rang;::pushBack(unsigned short) &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[270]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextProvider::fillInputBuffer()
</UL>
<BR>[Called By]<UL><LI><a href="#[283]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextProvider::TextProvider()
<LI><a href="#[266]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextProvider::initialize(const unsigned short*, std::__va_list, const unsigned short*, const touchgfx::FontContextualFormsTable*)
</UL>

<P><STRONG><a name="[27b]"></a>touchgfx::TextProvider::getNextCharInternal()</STRONG> (Thumb, 96 bytes, Stack size 0 bytes, textprovider.o(i._ZN8touchgfx12TextProvider19getNextCharInternalEv))
<BR><BR>[Calls]<UL><LI><a href="#[27b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextProvider::getNextCharInternal()
</UL>
<BR>[Called By]<UL><LI><a href="#[270]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextProvider::fillInputBuffer()
<LI><a href="#[27b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextProvider::getNextCharInternal()
</UL>

<P><STRONG><a name="[274]"></a>touchgfx::TextProvider::replaceInputCharacters(unsigned short, unsigned short, const unsigned short*)</STRONG> (Thumb, 162 bytes, Stack size 40 bytes, textprovider.o(i._ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt))
<BR><BR>[Stack]<UL><LI>Max Depth = 112 + Unknown Stack Size
<LI>Call Chain = touchgfx::TextProvider::replaceInputCharacters(unsigned short, unsigned short, const unsigned short*) &rArr; touchgfx::TextProvider::fillInputBuffer() &rArr; touchgfx::TextProvider::circularBuffer&lang;(unsigned)10&rang;::pushBack(unsigned short) &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[270]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextProvider::fillInputBuffer()
<LI><a href="#[282]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextProvider::circularBuffer&lang;(unsigned)10&rang;::dropFront(unsigned short)
<LI><a href="#[272]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextProvider::circularBuffer&lang;(unsigned)10&rang;::peekChar(unsigned short)
<LI><a href="#[1b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;abort
</UL>
<BR>[Called By]<UL><LI><a href="#[273]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextProvider::applyGsubRules(const unsigned short*, unsigned short)
</UL>

<P><STRONG><a name="[283]"></a>touchgfx::TextProvider::TextProvider()</STRONG> (Thumb, 78 bytes, Stack size 16 bytes, textprovider.o(i._ZN8touchgfx12TextProviderC1Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 96 + Unknown Stack Size
<LI>Call Chain = touchgfx::TextProvider::TextProvider() &rArr; touchgfx::TextProvider::initializeInternal() &rArr; touchgfx::TextProvider::fillInputBuffer() &rArr; touchgfx::TextProvider::circularBuffer&lang;(unsigned)10&rang;::pushBack(unsigned short) &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[267]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextProvider::initializeInternal()
<LI><a href="#[1dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[2df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Font::getStringWidthLTR(unsigned char, const unsigned short*, std::__va_list) const
<LI><a href="#[29a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD::drawStringLTR(const touchgfx::Rect&, const touchgfx::Rect&, const touchgfx::LCD::StringVisuals&, const unsigned short*, std::__va_list)
<LI><a href="#[163]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextArea::calculateTextHeight(const unsigned short*, ...) const
<LI><a href="#[183]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextArea::calculateBoundingArea() const
</UL>

<P><STRONG><a name="[38a]"></a>touchgfx::TextProvider::TextProvider__sub_object()</STRONG> (Thumb, 0 bytes, Stack size 16 bytes, textprovider.o(i._ZN8touchgfx12TextProviderC1Ev), UNUSED)

<P><STRONG><a name="[128]"></a>touchgfx::DMA_Interface::addToQueue(const touchgfx::BlitOp&)</STRONG> (Thumb, 70 bytes, Stack size 16 bytes, dma.o(i._ZN8touchgfx13DMA_Interface10addToQueueERKNS_6BlitOpE))
<BR><BR>[Stack]<UL><LI>Max Depth = 136<LI>Call Chain = touchgfx::DMA_Interface::addToQueue(const touchgfx::BlitOp&) &rArr; touchgfx::OSWrappers::tryTakeFrameBufferSemaphore() &rArr; osSemaphoreAcquire &rArr; xQueueSemaphoreTake &rArr; vTaskPlaceOnEventList &rArr; prvAddCurrentTaskToDelayedList &rArr; vListInsert
</UL>
<BR>[Calls]<UL><LI><a href="#[251]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::OSWrappers::tryTakeFrameBufferSemaphore()
<LI><a href="#[284]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::HAL::setRenderingMethod(touchgfx::HAL::RenderingMethod)
</UL>
<BR>[Address Reference Count : 2]<UL><LI> stm32dma.o(.constdata__ZTV8STM32DMA)
<LI> dma.o(.constdata__ZTVN8touchgfx13DMA_InterfaceE)
</UL>
<P><STRONG><a name="[12a]"></a>touchgfx::DMA_Interface::initialize()</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32dma.o(i._ZN8touchgfx13DMA_Interface10initializeEv))
<BR>[Address Reference Count : 2]<UL><LI> stm32dma.o(.constdata__ZTV8STM32DMA)
<LI> dma.o(.constdata__ZTVN8touchgfx13DMA_InterfaceE)
</UL>
<P><STRONG><a name="[130]"></a>touchgfx::DMA_Interface::enableAlpha(unsigned char)</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, dma.o(i._ZN8touchgfx13DMA_Interface11enableAlphaEh))
<BR>[Address Reference Count : 2]<UL><LI> stm32dma.o(.constdata__ZTV8STM32DMA)
<LI> dma.o(.constdata__ZTVN8touchgfx13DMA_InterfaceE)
</UL>
<P><STRONG><a name="[131]"></a>touchgfx::DMA_Interface::disableAlpha()</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, dma.o(i._ZN8touchgfx13DMA_Interface12disableAlphaEv))
<BR>[Address Reference Count : 2]<UL><LI> stm32dma.o(.constdata__ZTV8STM32DMA)
<LI> dma.o(.constdata__ZTVN8touchgfx13DMA_InterfaceE)
</UL>
<P><STRONG><a name="[12d]"></a>touchgfx::DMA_Interface::seedExecution()</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, dma.o(i._ZN8touchgfx13DMA_Interface13seedExecutionEv))
<BR>[Address Reference Count : 2]<UL><LI> stm32dma.o(.constdata__ZTV8STM32DMA)
<LI> dma.o(.constdata__ZTVN8touchgfx13DMA_InterfaceE)
</UL>
<P><STRONG><a name="[291]"></a>touchgfx::DMA_Interface::isDmaQueueEmpty()</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, dma.o(i._ZN8touchgfx13DMA_Interface15isDmaQueueEmptyEv))
<BR><BR>[Called By]<UL><LI><a href="#[eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::HAL::lockFrameBuffer()
</UL>

<P><STRONG><a name="[132]"></a>touchgfx::DMA_Interface::waitForFrameBufferSemaphore()</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, dma.o(i._ZN8touchgfx13DMA_Interface27waitForFrameBufferSemaphoreEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 144<LI>Call Chain = touchgfx::DMA_Interface::waitForFrameBufferSemaphore() &rArr; touchgfx::OSWrappers::giveFrameBufferSemaphore() &rArr; osSemaphoreRelease &rArr; xQueueGenericSend &rArr; vTaskPlaceOnEventList &rArr; prvAddCurrentTaskToDelayedList &rArr; vListInsert
</UL>
<BR>[Calls]<UL><LI><a href="#[24f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::OSWrappers::takeFrameBufferSemaphore()
<LI><a href="#[24d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::OSWrappers::giveFrameBufferSemaphore()
</UL>
<BR>[Address Reference Count : 2]<UL><LI> stm32dma.o(.constdata__ZTV8STM32DMA)
<LI> dma.o(.constdata__ZTVN8touchgfx13DMA_InterfaceE)
</UL>
<P><STRONG><a name="[13d]"></a>touchgfx::DMA_Interface::flush()</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, dma.o(i._ZN8touchgfx13DMA_Interface5flushEv))
<BR>[Address Reference Count : 1]<UL><LI> dma.o(.constdata__ZTVN8touchgfx13DMA_InterfaceE)
</UL>
<P><STRONG><a name="[12b]"></a>touchgfx::DMA_Interface::start()</STRONG> (Thumb, 42 bytes, Stack size 8 bytes, dma.o(i._ZN8touchgfx13DMA_Interface5startEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = touchgfx::DMA_Interface::start()
</UL>
<BR>[Address Reference Count : 2]<UL><LI> stm32dma.o(.constdata__ZTV8STM32DMA)
<LI> dma.o(.constdata__ZTVN8touchgfx13DMA_InterfaceE)
</UL>
<P><STRONG><a name="[12c]"></a>touchgfx::DMA_Interface::execute()</STRONG> (Thumb, 148 bytes, Stack size 16 bytes, dma.o(i._ZN8touchgfx13DMA_Interface7executeEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 64 + Unknown Stack Size
<LI>Call Chain = touchgfx::DMA_Interface::execute() &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[1b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;abort
</UL>
<BR>[Address Reference Count : 2]<UL><LI> stm32dma.o(.constdata__ZTV8STM32DMA)
<LI> dma.o(.constdata__ZTVN8touchgfx13DMA_InterfaceE)
</UL>
<P><STRONG><a name="[228]"></a>touchgfx::GeneratedFont::GeneratedFont(const touchgfx::GlyphNode*, unsigned short, unsigned short, unsigned short, unsigned char, unsigned char, unsigned char, unsigned char, unsigned char, unsigned char, const unsigned char*const *, const touchgfx::KerningNode*, unsigned short, unsigned short, const unsigned short*, const touchgfx::FontContextualFormsTable*)</STRONG> (Thumb, 66 bytes, Stack size 88 bytes, generatedfont.o(i._ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEttthhhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE))
<BR><BR>[Stack]<UL><LI>Max Depth = 124<LI>Call Chain = touchgfx::GeneratedFont::GeneratedFont(const touchgfx::GlyphNode*, unsigned short, unsigned short, unsigned short, unsigned char, unsigned char, unsigned char, unsigned char, unsigned char, unsigned char, const unsigned char*const *, const touchgfx::KerningNode*, unsigned short, unsigned short, const unsigned short*, const touchgfx::FontContextualFormsTable*) &rArr; touchgfx::ConstFont::ConstFont__sub_object(const touchgfx::GlyphNode*, unsigned short, unsigned short, unsigned short, unsigned char, unsigned char, unsigned char, unsigned char, unsigned char, unsigned char, unsigned short, unsigned short)
</UL>
<BR>[Calls]<UL><LI><a href="#[285]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::ConstFont::ConstFont__sub_object(const touchgfx::GlyphNode*, unsigned short, unsigned short, unsigned short, unsigned char, unsigned char, unsigned char, unsigned char, unsigned char, unsigned char, unsigned short, unsigned short)
</UL>
<BR>[Called By]<UL><LI><a href="#[22a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getFont_verdana_40_4bpp()
<LI><a href="#[229]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getFont_verdana_20_4bpp()
<LI><a href="#[226]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getFont_verdana_10_4bpp()
</UL>

<P><STRONG><a name="[38b]"></a>touchgfx::GeneratedFont::GeneratedFont__sub_object(const touchgfx::GlyphNode*, unsigned short, unsigned short, unsigned short, unsigned char, unsigned char, unsigned char, unsigned char, unsigned char, unsigned char, const unsigned char*const *, const touchgfx::KerningNode*, unsigned short, unsigned short, const unsigned short*, const touchgfx::FontContextualFormsTable*)</STRONG> (Thumb, 0 bytes, Stack size 88 bytes, generatedfont.o(i._ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEttthhhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE), UNUSED)

<P><STRONG><a name="[af]"></a>touchgfx::GeneratedFont::~GeneratedFont()</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, generatedfont.o(i._ZN8touchgfx13GeneratedFontD1Ev))
<BR>[Address Reference Count : 4]<UL><LI> table_verdana_10_4bpp.o(i._Z23getFont_verdana_10_4bppv)
<LI> table_verdana_20_4bpp.o(i._Z23getFont_verdana_20_4bppv)
<LI> generatedfont.o(.constdata__ZTVN8touchgfx13GeneratedFontE)
<LI> table_verdana_40_4bpp.o(i._Z23getFont_verdana_40_4bppv)
</UL>
<P><STRONG><a name="[38c]"></a>touchgfx::GeneratedFont::~GeneratedFont__sub_object()</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, generatedfont.o(i._ZN8touchgfx13GeneratedFontD1Ev), UNUSED)

<P><STRONG><a name="[113]"></a>touchgfx::MVPApplication::handlePendingScreenTransition()</STRONG> (Thumb, 44 bytes, Stack size 8 bytes, touchgfxconfiguration.o(i._ZN8touchgfx14MVPApplication29handlePendingScreenTransitionEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = touchgfx::MVPApplication::handlePendingScreenTransition()
</UL>
<BR>[Address Reference Count : 3]<UL><LI> frontendapplication.o(.constdata__ZTV19FrontendApplication)
<LI> touchgfxconfiguration.o(.constdata__ZTV23FrontendApplicationBase)
<LI> frontendapplicationbase.o(.constdata__ZTVN8touchgfx14MVPApplicationE)
</UL>
<P><STRONG><a name="[23e]"></a>touchgfx::GenericCallback&lang;void, void, void&rang;::GenericCallback__sub_object()</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, frontendapplicationbase.o(i._ZN8touchgfx15GenericCallbackIvvvEC2Ev))
<BR><BR>[Called By]<UL><LI><a href="#[23c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FrontendApplicationBase::FrontendApplicationBase(Model&, FrontendHeap&)
<LI><a href="#[23a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FrontendApplicationBase::gotoScreen1ScreenNoTransition()
</UL>

<P><STRONG><a name="[286]"></a>touchgfx::TouchCalibration::translatePoint(touchgfx::Point&)</STRONG> (Thumb, 116 bytes, Stack size 32 bytes, touchcalibration.o(i._ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = touchgfx::TouchCalibration::translatePoint(touchgfx::Point&) &rArr; touchgfx::TouchCalibration::muldiv(int, int, int, int, int&) &rArr; touchgfx::TouchCalibration::muldivu(unsigned, unsigned, unsigned, unsigned, unsigned, unsigned&) &rArr;  touchgfx::TouchCalibration::muldivu(unsigned, unsigned, unsigned, unsigned, unsigned, unsigned&) (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[287]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TouchCalibration::muldiv(int, int, int, int, int&)
</UL>
<BR>[Called By]<UL><LI><a href="#[101]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::HAL::touch(int, int)
</UL>

<P><STRONG><a name="[288]"></a>touchgfx::TouchCalibration::clzu(unsigned)</STRONG> (Thumb, 52 bytes, Stack size 0 bytes, touchcalibration.o(i._ZN8touchgfx16TouchCalibration4clzuEj))
<BR><BR>[Called By]<UL><LI><a href="#[289]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TouchCalibration::muldivu(unsigned, unsigned, unsigned, unsigned, unsigned, unsigned&)
<LI><a href="#[287]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TouchCalibration::muldiv(int, int, int, int, int&)
</UL>

<P><STRONG><a name="[287]"></a>touchgfx::TouchCalibration::muldiv(int, int, int, int, int&)</STRONG> (Thumb, 154 bytes, Stack size 44 bytes, touchcalibration.o(i._ZN8touchgfx16TouchCalibration6muldivEiiiiRi))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = touchgfx::TouchCalibration::muldiv(int, int, int, int, int&) &rArr; touchgfx::TouchCalibration::muldivu(unsigned, unsigned, unsigned, unsigned, unsigned, unsigned&) &rArr;  touchgfx::TouchCalibration::muldivu(unsigned, unsigned, unsigned, unsigned, unsigned, unsigned&) (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[289]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TouchCalibration::muldivu(unsigned, unsigned, unsigned, unsigned, unsigned, unsigned&)
<LI><a href="#[288]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TouchCalibration::clzu(unsigned)
</UL>
<BR>[Called By]<UL><LI><a href="#[286]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TouchCalibration::translatePoint(touchgfx::Point&)
</UL>

<P><STRONG><a name="[289]"></a>touchgfx::TouchCalibration::muldivu(unsigned, unsigned, unsigned, unsigned, unsigned, unsigned&)</STRONG> (Thumb, 234 bytes, Stack size 52 bytes, touchcalibration.o(i._ZN8touchgfx16TouchCalibration7muldivuEjjjjjRj))
<BR><BR>[Stack]<UL><LI>Max Depth = 52 + In Cycle
<LI>Call Chain = touchgfx::TouchCalibration::muldivu(unsigned, unsigned, unsigned, unsigned, unsigned, unsigned&) &rArr;  touchgfx::TouchCalibration::muldivu(unsigned, unsigned, unsigned, unsigned, unsigned, unsigned&) (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[289]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TouchCalibration::muldivu(unsigned, unsigned, unsigned, unsigned, unsigned, unsigned&)
<LI><a href="#[288]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TouchCalibration::clzu(unsigned)
</UL>
<BR>[Called By]<UL><LI><a href="#[289]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TouchCalibration::muldivu(unsigned, unsigned, unsigned, unsigned, unsigned, unsigned&)
<LI><a href="#[287]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TouchCalibration::muldiv(int, int, int, int, int&)
</UL>

<P><STRONG><a name="[22e]"></a>touchgfx::AbstractPartition::AbstractPartition__sub_object()</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, abstractpartition.o(i._ZN8touchgfx17AbstractPartitionC2Ev))
<BR><BR>[Called By]<UL><LI><a href="#[22d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FrontendHeap::FrontendHeap()
</UL>

<P><STRONG><a name="[38d]"></a>touchgfx::AbstractPartition::~AbstractPartition()</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, abstractpartition.o(i._ZN8touchgfx17AbstractPartitionD2Ev), UNUSED)

<P><STRONG><a name="[14c]"></a>touchgfx::AbstractPartition::~AbstractPartition__sub_object()</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, abstractpartition.o(i._ZN8touchgfx17AbstractPartitionD2Ev))
<BR><BR>[Called By]<UL><LI><a href="#[190]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Partition&lang;touchgfx::meta::TypeList&lang;touchgfx::NoTransition, touchgfx::meta::TypeList&lang;touchgfx::meta::Nil, touchgfx::meta::Nil&rang;&rang;, (unsigned short)1&rang;::~Partition()
<LI><a href="#[18d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Partition&lang;touchgfx::meta::TypeList&lang;Screen1Presenter, touchgfx::meta::TypeList&lang;touchgfx::meta::Nil, touchgfx::meta::Nil&rang;&rang;, (unsigned short)1&rang;::~Partition()
<LI><a href="#[18a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Partition&lang;touchgfx::meta::TypeList&lang;Screen1View, touchgfx::meta::TypeList&lang;touchgfx::meta::Nil, touchgfx::meta::Nil&rang;&rang;, (unsigned short)1&rang;::~Partition()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> abstractpartition.o(.constdata__ZTVN8touchgfx17AbstractPartitionE)
</UL>
<P><STRONG><a name="[14f]"></a>touchgfx::LockFreeDMA_Queue::pushCopyOf(const touchgfx::BlitOp&)</STRONG> (Thumb, 58 bytes, Stack size 8 bytes, dma.o(i._ZN8touchgfx17LockFreeDMA_Queue10pushCopyOfERKNS_6BlitOpE))
<BR><BR>[Stack]<UL><LI>Max Depth = 56 + Unknown Stack Size
<LI>Call Chain = touchgfx::LockFreeDMA_Queue::pushCopyOf(const touchgfx::BlitOp&) &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[1ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
<LI><a href="#[1b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;abort
</UL>
<BR>[Address Reference Count : 1]<UL><LI> dma.o(.constdata__ZTVN8touchgfx17LockFreeDMA_QueueE)
</UL>
<P><STRONG><a name="[150]"></a>touchgfx::LockFreeDMA_Queue::first()</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, dma.o(i._ZN8touchgfx17LockFreeDMA_Queue5firstEv))
<BR>[Address Reference Count : 1]<UL><LI> dma.o(.constdata__ZTVN8touchgfx17LockFreeDMA_QueueE)
</UL>
<P><STRONG><a name="[14e]"></a>touchgfx::LockFreeDMA_Queue::isFull()</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, dma.o(i._ZN8touchgfx17LockFreeDMA_Queue6isFullEv))
<BR>[Address Reference Count : 1]<UL><LI> dma.o(.constdata__ZTVN8touchgfx17LockFreeDMA_QueueE)
</UL>
<P><STRONG><a name="[14d]"></a>touchgfx::LockFreeDMA_Queue::isEmpty()</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, dma.o(i._ZN8touchgfx17LockFreeDMA_Queue7isEmptyEv))
<BR>[Address Reference Count : 1]<UL><LI> dma.o(.constdata__ZTVN8touchgfx17LockFreeDMA_QueueE)
</UL>
<P><STRONG><a name="[246]"></a>touchgfx::LockFreeDMA_Queue::LockFreeDMA_Queue(touchgfx::BlitOp*, unsigned long)</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, dma.o(i._ZN8touchgfx17LockFreeDMA_QueueC1EPNS_6BlitOpEm))
<BR><BR>[Called By]<UL><LI><a href="#[245]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;STM32DMA::STM32DMA()
</UL>

<P><STRONG><a name="[38e]"></a>touchgfx::LockFreeDMA_Queue::LockFreeDMA_Queue__sub_object(touchgfx::BlitOp*, unsigned long)</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, dma.o(i._ZN8touchgfx17LockFreeDMA_QueueC1EPNS_6BlitOpEm), UNUSED)

<P><STRONG><a name="[260]"></a>touchgfx::DisplayTransformation::transformDisplayToFrameBuffer(touchgfx::Rect&)</STRONG> (Thumb, 42 bytes, Stack size 0 bytes, displaytransformation.o(i._ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE))
<BR><BR>[Called By]<UL><LI><a href="#[115]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Application::drawCachedAreas()
<LI><a href="#[17e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::fillRect(const touchgfx::Rect&, touchgfx::colortype, unsigned char)
</UL>

<P><STRONG><a name="[2d5]"></a>touchgfx::DisplayTransformation::transformDisplayToFrameBuffer(short&, short&)</STRONG> (Thumb, 30 bytes, Stack size 0 bytes, displaytransformation.o(i._ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_))
<BR><BR>[Called By]<UL><LI><a href="#[181]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::drawGlyph(unsigned short*, touchgfx::Rect, short, short, unsigned short, unsigned short, const touchgfx::Rect&, const touchgfx::GlyphNode*, const unsigned char*, unsigned char, touchgfx::colortype, unsigned char, unsigned char, touchgfx::TextRotation)
</UL>

<P><STRONG><a name="[25e]"></a>touchgfx::DisplayTransformation::transformFrameBufferToDisplay(touchgfx::Rect&)</STRONG> (Thumb, 40 bytes, Stack size 8 bytes, displaytransformation.o(i._ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = touchgfx::DisplayTransformation::transformFrameBufferToDisplay(touchgfx::Rect&)
</UL>
<BR>[Called By]<UL><LI><a href="#[115]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Application::drawCachedAreas()
</UL>

<P><STRONG><a name="[295]"></a>touchgfx::DisplayTransformation::transformFrameBufferToDisplay(short&, short&)</STRONG> (Thumb, 32 bytes, Stack size 8 bytes, displaytransformation.o(i._ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = touchgfx::DisplayTransformation::transformFrameBufferToDisplay(short&, short&)
</UL>
<BR>[Called By]<UL><LI><a href="#[101]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::HAL::touch(int, int)
</UL>

<P><STRONG><a name="[151]"></a>touchgfx::TextAreaWithOneWildcard::~TextAreaWithOneWildcard()</STRONG> (Thumb, 32 bytes, Stack size 16 bytes, screen1viewbase.o(i._ZN8touchgfx23TextAreaWithOneWildcardD1Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = touchgfx::TextAreaWithOneWildcard::~TextAreaWithOneWildcard()
</UL>
<BR>[Calls]<UL><LI><a href="#[17a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Widget::~Widget__sub_object()
</UL>
<BR>[Called By]<UL><LI><a href="#[107]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Screen1ViewBase::~Screen1ViewBase()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> screen1viewbase.o(.constdata__ZTVN8touchgfx23TextAreaWithOneWildcardE)
</UL>
<P><STRONG><a name="[38f]"></a>touchgfx::TextAreaWithOneWildcard::~TextAreaWithOneWildcard__sub_object()</STRONG> (Thumb, 0 bytes, Stack size 16 bytes, screen1viewbase.o(i._ZN8touchgfx23TextAreaWithOneWildcardD1Ev), UNUSED)

<P><STRONG><a name="[236]"></a>touchgfx::Box::setColor(touchgfx::colortype)</STRONG> (Thumb, 8 bytes, Stack size 12 bytes, screen1viewbase.o(i._ZN8touchgfx3Box8setColorENS_9colortypeE))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = touchgfx::Box::setColor(touchgfx::colortype)
</UL>
<BR>[Called By]<UL><LI><a href="#[22c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Screen1ViewBase::Screen1ViewBase()
</UL>

<P><STRONG><a name="[232]"></a>touchgfx::Box::Box()</STRONG> (Thumb, 48 bytes, Stack size 8 bytes, screen1viewbase.o(i._ZN8touchgfx3BoxC1Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = touchgfx::Box::Box() &rArr; touchgfx::Widget::Widget__sub_object()
</UL>
<BR>[Calls]<UL><LI><a href="#[28b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Widget::Widget__sub_object()
<LI><a href="#[28c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::colortype::colortype(unsigned)
<LI><a href="#[1dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[22c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Screen1ViewBase::Screen1ViewBase()
</UL>

<P><STRONG><a name="[390]"></a>touchgfx::Box::Box__sub_object()</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, screen1viewbase.o(i._ZN8touchgfx3BoxC1Ev), UNUSED)

<P><STRONG><a name="[168]"></a>touchgfx::Box::~Box()</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, screen1viewbase.o(i._ZN8touchgfx3BoxD1Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = touchgfx::Box::~Box()
</UL>
<BR>[Calls]<UL><LI><a href="#[17a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Widget::~Widget__sub_object()
</UL>
<BR>[Called By]<UL><LI><a href="#[107]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Screen1ViewBase::~Screen1ViewBase()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> box.o(.constdata__ZTVN8touchgfx3BoxE)
</UL>
<P><STRONG><a name="[391]"></a>touchgfx::Box::~Box__sub_object()</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, screen1viewbase.o(i._ZN8touchgfx3BoxD1Ev), UNUSED)

<P><STRONG><a name="[173]"></a>touchgfx::HAL::FlushCache()</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, hal.o(i._ZN8touchgfx3HAL10FlushCacheEv))
<BR>[Address Reference Count : 1]<UL><LI> hal.o(.constdata__ZTVN8touchgfx3HALE)
</UL>
<P><STRONG><a name="[170]"></a>touchgfx::HAL::beginFrame()</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, hal.o(i._ZN8touchgfx3HAL10beginFrameEv))
<BR><BR>[Called By]<UL><LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TouchGFXGeneratedHAL::beginFrame()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> hal.o(.constdata__ZTVN8touchgfx3HALE)
</UL>
<P><STRONG><a name="[16d]"></a>touchgfx::HAL::initialize()</STRONG> (Thumb, 40 bytes, Stack size 8 bytes, hal.o(i._ZN8touchgfx3HAL10initializeEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 160 + Unknown Stack Size
<LI>Call Chain = touchgfx::HAL::initialize() &rArr; touchgfx::OSWrappers::initialize() &rArr; osSemaphoreNew &rArr; xQueueCreateCountingSemaphoreStatic &rArr; xQueueGenericCreateStatic &rArr; prvInitialiseNewQueue &rArr; xQueueGenericReset &rArr; xTaskRemoveFromEventList
</UL>
<BR>[Calls]<UL><LI><a href="#[28d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::GPIO::init()
<LI><a href="#[247]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::OSWrappers::initialize()
</UL>
<BR>[Called By]<UL><LI><a href="#[11b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TouchGFXGeneratedHAL::initialize()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> hal.o(.constdata__ZTVN8touchgfx3HALE)
</UL>
<P><STRONG><a name="[ee]"></a>touchgfx::HAL::getBlitCaps()</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, touchgfxhal.o(i._ZN8touchgfx3HAL11getBlitCapsEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = touchgfx::HAL::getBlitCaps()
</UL>
<BR>[Address Reference Count : 3]<UL><LI> touchgfxhal.o(.constdata__ZTV11TouchGFXHAL)
<LI> touchgfxgeneratedhal.o(.constdata__ZTV20TouchGFXGeneratedHAL)
<LI> hal.o(.constdata__ZTVN8touchgfx3HALE)
</UL>
<P><STRONG><a name="[ef]"></a>touchgfx::HAL::blitCopyGlyph(const unsigned char*, unsigned short, unsigned short, unsigned short, unsigned short, unsigned short, touchgfx::colortype, unsigned char, touchgfx::BlitOperations, bool)</STRONG> (Thumb, 148 bytes, Stack size 88 bytes, hal.o(i._ZN8touchgfx3HAL13blitCopyGlyphEPKhtttttNS_9colortypeEhNS_14BlitOperationsEb))
<BR><BR>[Stack]<UL><LI>Max Depth = 200 + Unknown Stack Size
<LI>Call Chain = touchgfx::HAL::blitCopyGlyph(const unsigned char*, unsigned short, unsigned short, unsigned short, unsigned short, unsigned short, touchgfx::colortype, unsigned char, touchgfx::BlitOperations, bool) &rArr; touchgfx::HAL::getDstAddress(unsigned short, unsigned short, unsigned short*) const &rArr; touchgfx::HAL::getDstAddress(unsigned short, unsigned short, unsigned short*, unsigned short, touchgfx::Bitmap::BitmapFormat) const &rArr; touchgfx::HAL::getBitDepth(touchgfx::Bitmap::BitmapFormat) const &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[242]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::HAL::lcd()
<LI><a href="#[290]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::HAL::getDstAddress(unsigned short, unsigned short, unsigned short*) const
<LI><a href="#[28e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::BlitOp::BlitOp()
<LI><a href="#[28f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::HAL::getClientFrameBuffer()
<LI><a href="#[1b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;abort
</UL>
<BR>[Address Reference Count : 3]<UL><LI> touchgfxhal.o(.constdata__ZTV11TouchGFXHAL)
<LI> touchgfxgeneratedhal.o(.constdata__ZTV20TouchGFXGeneratedHAL)
<LI> hal.o(.constdata__ZTVN8touchgfx3HALE)
</UL>
<P><STRONG><a name="[172]"></a>touchgfx::HAL::InvalidateCache()</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, hal.o(i._ZN8touchgfx3HAL15InvalidateCacheEv))
<BR>[Address Reference Count : 1]<UL><LI> hal.o(.constdata__ZTVN8touchgfx3HALE)
</UL>
<P><STRONG><a name="[f3]"></a>touchgfx::HAL::backPorchExited()</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, touchgfxhal.o(i._ZN8touchgfx3HAL15backPorchExitedEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = touchgfx::HAL::backPorchExited() &rArr; touchgfx::HAL::swapFrameBuffers() &rArr; touchgfx::HAL::getClientFrameBuffer()
</UL>
<BR>[Calls]<UL><LI><a href="#[1f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::HAL::swapFrameBuffers()
</UL>
<BR>[Address Reference Count : 3]<UL><LI> touchgfxhal.o(.constdata__ZTV11TouchGFXHAL)
<LI> touchgfxgeneratedhal.o(.constdata__ZTV20TouchGFXGeneratedHAL)
<LI> hal.o(.constdata__ZTVN8touchgfx3HALE)
</UL>
<P><STRONG><a name="[eb]"></a>touchgfx::HAL::lockFrameBuffer()</STRONG> (Thumb, 56 bytes, Stack size 8 bytes, hal.o(i._ZN8touchgfx3HAL15lockFrameBufferEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = touchgfx::HAL::lockFrameBuffer() &rArr; touchgfx::OSWrappers::takeFrameBufferSemaphore() &rArr; osSemaphoreAcquire &rArr; xQueueSemaphoreTake &rArr; vTaskPlaceOnEventList &rArr; prvAddCurrentTaskToDelayedList &rArr; vListInsert
</UL>
<BR>[Calls]<UL><LI><a href="#[24f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::OSWrappers::takeFrameBufferSemaphore()
<LI><a href="#[284]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::HAL::setRenderingMethod(touchgfx::HAL::RenderingMethod)
<LI><a href="#[291]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::DMA_Interface::isDmaQueueEmpty()
<LI><a href="#[28f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::HAL::getClientFrameBuffer()
</UL>
<BR>[Address Reference Count : 3]<UL><LI> touchgfxhal.o(.constdata__ZTV11TouchGFXHAL)
<LI> touchgfxgeneratedhal.o(.constdata__ZTV20TouchGFXGeneratedHAL)
<LI> hal.o(.constdata__ZTVN8touchgfx3HALE)
</UL>
<P><STRONG><a name="[16e]"></a>touchgfx::HAL::flushFrameBuffer(const touchgfx::Rect&)</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, hal.o(i._ZN8touchgfx3HAL16flushFrameBufferERKNS_4RectE))
<BR><BR>[Called By]<UL><LI><a href="#[11c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TouchGFXGeneratedHAL::flushFrameBuffer(const touchgfx::Rect&)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> hal.o(.constdata__ZTVN8touchgfx3HALE)
</UL>
<P><STRONG><a name="[1f4]"></a>touchgfx::HAL::swapFrameBuffers()</STRONG> (Thumb, 52 bytes, Stack size 8 bytes, hal.o(i._ZN8touchgfx3HAL16swapFrameBuffersEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = touchgfx::HAL::swapFrameBuffers() &rArr; touchgfx::HAL::getClientFrameBuffer()
</UL>
<BR>[Calls]<UL><LI><a href="#[292]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::GPIO::toggle(touchgfx::GPIO::GPIO_ID)
<LI><a href="#[28f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::HAL::getClientFrameBuffer()
</UL>
<BR>[Called By]<UL><LI><a href="#[f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::HAL::backPorchExited()
<LI><a href="#[1ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_LTDC_LineEventCallback
</UL>

<P><STRONG><a name="[e9]"></a>touchgfx::HAL::allowDMATransfers()</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, hal.o(i._ZN8touchgfx3HAL17allowDMATransfersEv))
<BR>[Address Reference Count : 3]<UL><LI> touchgfxhal.o(.constdata__ZTV11TouchGFXHAL)
<LI> touchgfxgeneratedhal.o(.constdata__ZTV20TouchGFXGeneratedHAL)
<LI> hal.o(.constdata__ZTVN8touchgfx3HALE)
</UL>
<P><STRONG><a name="[16f]"></a>touchgfx::HAL::getTFTCurrentLine()</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, hal.o(i._ZN8touchgfx3HAL17getTFTCurrentLineEv))
<BR>[Address Reference Count : 1]<UL><LI> hal.o(.constdata__ZTVN8touchgfx3HALE)
</UL>
<P><STRONG><a name="[ec]"></a>touchgfx::HAL::unlockFrameBuffer()</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, hal.o(i._ZN8touchgfx3HAL17unlockFrameBufferEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 144<LI>Call Chain = touchgfx::HAL::unlockFrameBuffer() &rArr; touchgfx::OSWrappers::giveFrameBufferSemaphore() &rArr; osSemaphoreRelease &rArr; xQueueGenericSend &rArr; vTaskPlaceOnEventList &rArr; prvAddCurrentTaskToDelayedList &rArr; vListInsert
</UL>
<BR>[Calls]<UL><LI><a href="#[24d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::OSWrappers::giveFrameBufferSemaphore()
</UL>
<BR>[Address Reference Count : 3]<UL><LI> touchgfxhal.o(.constdata__ZTV11TouchGFXHAL)
<LI> touchgfxgeneratedhal.o(.constdata__ZTV20TouchGFXGeneratedHAL)
<LI> hal.o(.constdata__ZTVN8touchgfx3HALE)
</UL>
<P><STRONG><a name="[284]"></a>touchgfx::HAL::setRenderingMethod(touchgfx::HAL::RenderingMethod)</STRONG> (Thumb, 38 bytes, Stack size 16 bytes, hal.o(i._ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = touchgfx::HAL::setRenderingMethod(touchgfx::HAL::RenderingMethod)
</UL>
<BR>[Called By]<UL><LI><a href="#[eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::HAL::lockFrameBuffer()
<LI><a href="#[128]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::DMA_Interface::addToQueue(const touchgfx::BlitOp&)
</UL>

<P><STRONG><a name="[f9]"></a>touchgfx::HAL::setAnimationStorage(void*)</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, touchgfxhal.o(i._ZN8touchgfx3HAL19setAnimationStorageEPv))
<BR>[Address Reference Count : 3]<UL><LI> touchgfxhal.o(.constdata__ZTV11TouchGFXHAL)
<LI> touchgfxgeneratedhal.o(.constdata__ZTV20TouchGFXGeneratedHAL)
<LI> hal.o(.constdata__ZTVN8touchgfx3HALE)
</UL>
<P><STRONG><a name="[28f]"></a>touchgfx::HAL::getClientFrameBuffer()</STRONG> (Thumb, 32 bytes, Stack size 8 bytes, hal.o(i._ZN8touchgfx3HAL20getClientFrameBufferEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = touchgfx::HAL::getClientFrameBuffer()
</UL>
<BR>[Called By]<UL><LI><a href="#[f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::HAL::blitFill(touchgfx::colortype, unsigned short, unsigned short, unsigned short, unsigned short, unsigned char, unsigned short, touchgfx::Bitmap::BitmapFormat, bool)
<LI><a href="#[1f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::HAL::swapFrameBuffers()
<LI><a href="#[eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::HAL::lockFrameBuffer()
<LI><a href="#[ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::HAL::blitCopyGlyph(const unsigned char*, unsigned short, unsigned short, unsigned short, unsigned short, unsigned short, touchgfx::colortype, unsigned char, touchgfx::BlitOperations, bool)
</UL>

<P><STRONG><a name="[f2]"></a>touchgfx::HAL::registerEventListener(touchgfx::UIEventListener&)</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, hal.o(i._ZN8touchgfx3HAL21registerEventListenerERNS_15UIEventListenerE))
<BR><BR>[Calls]<UL><LI><a href="#[293]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Gestures::registerEventListener(touchgfx::UIEventListener&)
</UL>
<BR>[Address Reference Count : 3]<UL><LI> touchgfxhal.o(.constdata__ZTV11TouchGFXHAL)
<LI> touchgfxgeneratedhal.o(.constdata__ZTV20TouchGFXGeneratedHAL)
<LI> hal.o(.constdata__ZTVN8touchgfx3HALE)
</UL>
<P><STRONG><a name="[e5]"></a>touchgfx::HAL::setDisplayOrientation(touchgfx::DisplayOrientation)</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, touchgfxhal.o(i._ZN8touchgfx3HAL21setDisplayOrientationENS_18DisplayOrientationE))
<BR>[Address Reference Count : 3]<UL><LI> touchgfxhal.o(.constdata__ZTV11TouchGFXHAL)
<LI> touchgfxgeneratedhal.o(.constdata__ZTV20TouchGFXGeneratedHAL)
<LI> hal.o(.constdata__ZTVN8touchgfx3HALE)
</UL>
<P><STRONG><a name="[fa]"></a>touchgfx::HAL::configurePartialFrameBuffer(unsigned short, unsigned short, unsigned short, unsigned short)</STRONG> (Thumb, 122 bytes, Stack size 40 bytes, hal.o(i._ZN8touchgfx3HAL27configurePartialFrameBufferEtttt))
<BR><BR>[Stack]<UL><LI>Max Depth = 88 + Unknown Stack Size
<LI>Call Chain = touchgfx::HAL::configurePartialFrameBuffer(unsigned short, unsigned short, unsigned short, unsigned short) &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[242]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::HAL::lcd()
<LI><a href="#[1b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;abort
</UL>
<BR>[Address Reference Count : 3]<UL><LI> touchgfxhal.o(.constdata__ZTV11TouchGFXHAL)
<LI> touchgfxgeneratedhal.o(.constdata__ZTV20TouchGFXGeneratedHAL)
<LI> hal.o(.constdata__ZTVN8touchgfx3HALE)
</UL>
<P><STRONG><a name="[f8]"></a>touchgfx::HAL::setFrameBufferStartAddresses(void*, void*, void*)</STRONG> (Thumb, 62 bytes, Stack size 24 bytes, touchgfxhal.o(i._ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_))
<BR><BR>[Stack]<UL><LI>Max Depth = 88 + Unknown Stack Size
<LI>Call Chain = touchgfx::HAL::setFrameBufferStartAddresses(void*, void*, void*) &rArr; __aeabi_assert &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[1b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_assert
</UL>
<BR>[Address Reference Count : 3]<UL><LI> touchgfxhal.o(.constdata__ZTV11TouchGFXHAL)
<LI> touchgfxgeneratedhal.o(.constdata__ZTV20TouchGFXGeneratedHAL)
<LI> hal.o(.constdata__ZTVN8touchgfx3HALE)
</UL>
<P><STRONG><a name="[103]"></a>touchgfx::HAL::performDisplayOrientationChange()</STRONG> (Thumb, 74 bytes, Stack size 0 bytes, touchgfxhal.o(i._ZN8touchgfx3HAL31performDisplayOrientationChangeEv))
<BR>[Address Reference Count : 3]<UL><LI> touchgfxhal.o(.constdata__ZTV11TouchGFXHAL)
<LI> touchgfxgeneratedhal.o(.constdata__ZTV20TouchGFXGeneratedHAL)
<LI> hal.o(.constdata__ZTVN8touchgfx3HALE)
</UL>
<P><STRONG><a name="[242]"></a>touchgfx::HAL::lcd()</STRONG> (Thumb, 34 bytes, Stack size 0 bytes, frontendapplicationbase.o(i._ZN8touchgfx3HAL3lcdEv))
<BR><BR>[Called By]<UL><LI><a href="#[f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::HAL::blitFill(touchgfx::colortype, unsigned short, unsigned short, unsigned short, unsigned short, unsigned char, bool)
<LI><a href="#[fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::HAL::configurePartialFrameBuffer(unsigned short, unsigned short, unsigned short, unsigned short)
<LI><a href="#[ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::HAL::blitCopyGlyph(const unsigned char*, unsigned short, unsigned short, unsigned short, unsigned short, unsigned short, touchgfx::colortype, unsigned char, touchgfx::BlitOperations, bool)
<LI><a href="#[23c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FrontendApplicationBase::FrontendApplicationBase(Model&, FrontendHeap&)
<LI><a href="#[290]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::HAL::getDstAddress(unsigned short, unsigned short, unsigned short*) const
</UL>

<P><STRONG><a name="[fd]"></a>touchgfx::HAL::tick()</STRONG> (Thumb, 368 bytes, Stack size 32 bytes, hal.o(i._ZN8touchgfx3HAL4tickEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = touchgfx::HAL::tick()
</UL>
<BR>[Calls]<UL><LI><a href="#[1f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::GPIO::clear(touchgfx::GPIO::GPIO_ID)
<LI><a href="#[1f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::GPIO::set(touchgfx::GPIO::GPIO_ID)
<LI><a href="#[23d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Application::getInstance()
<LI><a href="#[294]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Gestures::tick()
</UL>
<BR>[Address Reference Count : 3]<UL><LI> touchgfxhal.o(.constdata__ZTV11TouchGFXHAL)
<LI> touchgfxgeneratedhal.o(.constdata__ZTV20TouchGFXGeneratedHAL)
<LI> hal.o(.constdata__ZTVN8touchgfx3HALE)
</UL>
<P><STRONG><a name="[101]"></a>touchgfx::HAL::touch(int, int)</STRONG> (Thumb, 120 bytes, Stack size 32 bytes, hal.o(i._ZN8touchgfx3HAL5touchEii))
<BR><BR>[Stack]<UL><LI>Max Depth = 160<LI>Call Chain = touchgfx::HAL::touch(int, int) &rArr; touchgfx::TouchCalibration::translatePoint(touchgfx::Point&) &rArr; touchgfx::TouchCalibration::muldiv(int, int, int, int, int&) &rArr; touchgfx::TouchCalibration::muldivu(unsigned, unsigned, unsigned, unsigned, unsigned, unsigned&) &rArr;  touchgfx::TouchCalibration::muldivu(unsigned, unsigned, unsigned, unsigned, unsigned, unsigned&) (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[297]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Gestures::registerClickEvent(touchgfx::ClickEvent::ClickEventType, unsigned short, unsigned short)
<LI><a href="#[296]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Gestures::registerDragEvent(unsigned short, unsigned short, unsigned short, unsigned short)
<LI><a href="#[295]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::DisplayTransformation::transformFrameBufferToDisplay(short&, short&)
<LI><a href="#[286]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TouchCalibration::translatePoint(touchgfx::Point&)
</UL>
<BR>[Address Reference Count : 3]<UL><LI> touchgfxhal.o(.constdata__ZTV11TouchGFXHAL)
<LI> touchgfxgeneratedhal.o(.constdata__ZTV20TouchGFXGeneratedHAL)
<LI> hal.o(.constdata__ZTVN8touchgfx3HALE)
</UL>
<P><STRONG><a name="[102]"></a>touchgfx::HAL::noTouch()</STRONG> (Thumb, 42 bytes, Stack size 8 bytes, hal.o(i._ZN8touchgfx3HAL7noTouchEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 68<LI>Call Chain = touchgfx::HAL::noTouch() &rArr; touchgfx::Gestures::registerClickEvent(touchgfx::ClickEvent::ClickEventType, unsigned short, unsigned short) &rArr; touchgfx::GestureEvent::GestureEvent(touchgfx::GestureEvent::GestureEventType, short, short, short)
</UL>
<BR>[Calls]<UL><LI><a href="#[297]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Gestures::registerClickEvent(touchgfx::ClickEvent::ClickEventType, unsigned short, unsigned short)
</UL>
<BR>[Address Reference Count : 3]<UL><LI> touchgfxhal.o(.constdata__ZTV11TouchGFXHAL)
<LI> touchgfxgeneratedhal.o(.constdata__ZTV20TouchGFXGeneratedHAL)
<LI> hal.o(.constdata__ZTVN8touchgfx3HALE)
</UL>
<P><STRONG><a name="[f1]"></a>touchgfx::HAL::blitFill(touchgfx::colortype, unsigned short, unsigned short, unsigned short, unsigned short, unsigned char, bool)</STRONG> (Thumb, 66 bytes, Stack size 64 bytes, hal.o(i._ZN8touchgfx3HAL8blitFillENS_9colortypeEtttthb))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = touchgfx::HAL::blitFill(touchgfx::colortype, unsigned short, unsigned short, unsigned short, unsigned short, unsigned char, bool)
</UL>
<BR>[Calls]<UL><LI><a href="#[242]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::HAL::lcd()
</UL>
<BR>[Address Reference Count : 3]<UL><LI> touchgfxhal.o(.constdata__ZTV11TouchGFXHAL)
<LI> touchgfxgeneratedhal.o(.constdata__ZTV20TouchGFXGeneratedHAL)
<LI> hal.o(.constdata__ZTVN8touchgfx3HALE)
</UL>
<P><STRONG><a name="[f0]"></a>touchgfx::HAL::blitFill(touchgfx::colortype, unsigned short, unsigned short, unsigned short, unsigned short, unsigned char, unsigned short, touchgfx::Bitmap::BitmapFormat, bool)</STRONG> (Thumb, 146 bytes, Stack size 96 bytes, hal.o(i._ZN8touchgfx3HAL8blitFillENS_9colortypeEtttthtNS_6Bitmap12BitmapFormatEb))
<BR><BR>[Stack]<UL><LI>Max Depth = 176 + Unknown Stack Size
<LI>Call Chain = touchgfx::HAL::blitFill(touchgfx::colortype, unsigned short, unsigned short, unsigned short, unsigned short, unsigned char, unsigned short, touchgfx::Bitmap::BitmapFormat, bool) &rArr; touchgfx::HAL::getDstAddress(unsigned short, unsigned short, unsigned short*, unsigned short, touchgfx::Bitmap::BitmapFormat) const &rArr; touchgfx::HAL::getBitDepth(touchgfx::Bitmap::BitmapFormat) const &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[298]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::HAL::getDstAddress(unsigned short, unsigned short, unsigned short*, unsigned short, touchgfx::Bitmap::BitmapFormat) const
<LI><a href="#[28e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::BlitOp::BlitOp()
<LI><a href="#[28f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::HAL::getClientFrameBuffer()
<LI><a href="#[1b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;abort
</UL>
<BR>[Address Reference Count : 3]<UL><LI> touchgfxhal.o(.constdata__ZTV11TouchGFXHAL)
<LI> touchgfxgeneratedhal.o(.constdata__ZTV20TouchGFXGeneratedHAL)
<LI> hal.o(.constdata__ZTVN8touchgfx3HALE)
</UL>
<P><STRONG><a name="[171]"></a>touchgfx::HAL::endFrame()</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, hal.o(i._ZN8touchgfx3HAL8endFrameEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = touchgfx::HAL::endFrame()
</UL>
<BR>[Called By]<UL><LI><a href="#[123]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TouchGFXGeneratedHAL::endFrame()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> hal.o(.constdata__ZTVN8touchgfx3HALE)
</UL>
<P><STRONG><a name="[ea]"></a>touchgfx::HAL::flushDMA()</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, hal.o(i._ZN8touchgfx3HAL8flushDMAEv))
<BR>[Address Reference Count : 3]<UL><LI> touchgfxhal.o(.constdata__ZTV11TouchGFXHAL)
<LI> touchgfxgeneratedhal.o(.constdata__ZTV20TouchGFXGeneratedHAL)
<LI> hal.o(.constdata__ZTVN8touchgfx3HALE)
</UL>
<P><STRONG><a name="[fb]"></a>touchgfx::HAL::taskDelay(unsigned short)</STRONG> (Thumb, 18 bytes, Stack size 16 bytes, touchgfxhal.o(i._ZN8touchgfx3HAL9taskDelayEt))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = touchgfx::HAL::taskDelay(unsigned short)
</UL>
<BR>[Address Reference Count : 3]<UL><LI> touchgfxhal.o(.constdata__ZTV11TouchGFXHAL)
<LI> touchgfxgeneratedhal.o(.constdata__ZTV20TouchGFXGeneratedHAL)
<LI> hal.o(.constdata__ZTVN8touchgfx3HALE)
</UL>
<P><STRONG><a name="[e7]"></a>touchgfx::HAL::taskEntry()</STRONG> (Thumb, 30 bytes, Stack size 0 bytes, hal.o(i._ZN8touchgfx3HAL9taskEntryEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 136<LI>Call Chain = touchgfx::HAL::taskEntry() &rArr; touchgfx::OSWrappers::waitForVSync() &rArr; osMessageQueueGet &rArr; xQueueReceive &rArr; vTaskPlaceOnEventList &rArr; prvAddCurrentTaskToDelayedList &rArr; vListInsert
</UL>
<BR>[Calls]<UL><LI><a href="#[24b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::OSWrappers::waitForVSync()
</UL>
<BR>[Called By]<UL><LI><a href="#[225]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx_taskEntry
</UL>
<BR>[Address Reference Count : 3]<UL><LI> touchgfxhal.o(.constdata__ZTV11TouchGFXHAL)
<LI> touchgfxgeneratedhal.o(.constdata__ZTV20TouchGFXGeneratedHAL)
<LI> hal.o(.constdata__ZTVN8touchgfx3HALE)
</UL>
<P><STRONG><a name="[2e5]"></a>touchgfx::HAL::HAL__sub_object(touchgfx::DMA_Interface&, touchgfx::LCD&, touchgfx::TouchController&, unsigned short, unsigned short)</STRONG> (Thumb, 208 bytes, Stack size 20 bytes, touchgfxconfiguration.o(i._ZN8touchgfx3HALC2ERNS_13DMA_InterfaceERNS_3LCDERNS_15TouchControllerEtt))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = touchgfx::HAL::HAL__sub_object(touchgfx::DMA_Interface&, touchgfx::LCD&, touchgfx::TouchController&, unsigned short, unsigned short)
</UL>
<BR>[Called By]<UL><LI><a href="#[196]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__sti___25_TouchGFXConfiguration_cpp_f5abfd34
</UL>

<P><STRONG><a name="[299]"></a>touchgfx::LCD::drawString(touchgfx::Rect, const touchgfx::Rect&, const touchgfx::LCD::StringVisuals&, const unsigned short*, ...)</STRONG> (Thumb, 44 bytes, Stack size 48 bytes, texts.o(i._ZN8touchgfx3LCD10drawStringENS_4RectERKS1_RKNS0_13StringVisualsEPKtz))
<BR><BR>[Stack]<UL><LI>Max Depth = 864 + Unknown Stack Size
<LI>Call Chain = touchgfx::LCD::drawString(touchgfx::Rect, const touchgfx::Rect&, const touchgfx::LCD::StringVisuals&, const unsigned short*, ...) &rArr; touchgfx::LCD::drawStringLTR(const touchgfx::Rect&, const touchgfx::Rect&, const touchgfx::LCD::StringVisuals&, const unsigned short*, std::__va_list) &rArr; touchgfx::LCD::drawStringInternal(unsigned short*, const touchgfx::Rect*, short, short, const touchgfx::Rect&, const touchgfx::LCD::StringVisuals*, unsigned char, touchgfx::TextProvider&, int, bool) &rArr; touchgfx::TextProvider::getNextLigature(unsigned char, const touchgfx::Font*, const touchgfx::GlyphNode*&, const unsigned char*&, unsigned char&) &rArr; touchgfx::TextProvider::getNextLigature(unsigned char) &rArr; touchgfx::TextProvider::substituteGlyphs() &rArr; touchgfx::TextProvider::applyGsubRules(const unsigned short*, unsigned short) &rArr; touchgfx::TextProvider::replaceInputCharacters(unsigned short, unsigned short, const unsigned short*) &rArr; touchgfx::TextProvider::fillInputBuffer() &rArr; touchgfx::TextProvider::circularBuffer&lang;(unsigned)10&rang;::pushBack(unsigned short) &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[29a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD::drawStringLTR(const touchgfx::Rect&, const touchgfx::Rect&, const touchgfx::LCD::StringVisuals&, const unsigned short*, std::__va_list)
</UL>
<BR>[Called By]<UL><LI><a href="#[152]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextAreaWithWildcardBase::draw(const touchgfx::Rect&) const
<LI><a href="#[182]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextArea::draw(const touchgfx::Rect&) const
</UL>

<P><STRONG><a name="[29b]"></a>touchgfx::LCD::rotateRect(touchgfx::Rect&, const touchgfx::Rect&, touchgfx::TextRotation)</STRONG> (Thumb, 132 bytes, Stack size 48 bytes, lcd.o(i._ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = touchgfx::LCD::rotateRect(touchgfx::Rect&, const touchgfx::Rect&, touchgfx::TextRotation) &rArr; touchgfx::Rect::Rect(short, short, short, short)
</UL>
<BR>[Calls]<UL><LI><a href="#[25a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Rect::bottom() const
<LI><a href="#[259]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Rect::right() const
<LI><a href="#[252]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Rect::Rect(short, short, short, short)
</UL>
<BR>[Called By]<UL><LI><a href="#[29a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD::drawStringLTR(const touchgfx::Rect&, const touchgfx::Rect&, const touchgfx::LCD::StringVisuals&, const unsigned short*, std::__va_list)
</UL>

<P><STRONG><a name="[29c]"></a>touchgfx::LCD::getNumLines(touchgfx::TextProvider&, touchgfx::WideTextAction, unsigned char, const touchgfx::Font*, short)</STRONG> (Thumb, 104 bytes, Stack size 80 bytes, lcd.o(i._ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs))
<BR><BR>[Stack]<UL><LI>Max Depth = 376 + Unknown Stack Size
<LI>Call Chain = touchgfx::LCD::getNumLines(touchgfx::TextProvider&, touchgfx::WideTextAction, unsigned char, const touchgfx::Font*, short) &rArr; touchgfx::LCD::WideTextInternalStruct::scanStringLengthForLine() &rArr; touchgfx::TextProvider::getNextLigature(unsigned char, const touchgfx::Font*, const touchgfx::GlyphNode*&) &rArr; touchgfx::TextProvider::getNextLigature(unsigned char) &rArr; touchgfx::TextProvider::substituteGlyphs() &rArr; touchgfx::TextProvider::applyGsubRules(const unsigned short*, unsigned short) &rArr; touchgfx::TextProvider::replaceInputCharacters(unsigned short, unsigned short, const unsigned short*) &rArr; touchgfx::TextProvider::fillInputBuffer() &rArr; touchgfx::TextProvider::circularBuffer&lang;(unsigned)10&rang;::pushBack(unsigned short) &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[26f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextProvider::getNextChar()
<LI><a href="#[29d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD::WideTextInternalStruct::WideTextInternalStruct(touchgfx::TextProvider&, unsigned short, unsigned short, unsigned char, const touchgfx::Font*, short, touchgfx::WideTextAction)
<LI><a href="#[29e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD::WideTextInternalStruct::scanStringLengthForLine()
</UL>
<BR>[Called By]<UL><LI><a href="#[163]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextArea::calculateTextHeight(const unsigned short*, ...) const
</UL>

<P><STRONG><a name="[29f]"></a>touchgfx::LCD::stringWidth(touchgfx::TextProvider&, const touchgfx::Font&, int, unsigned char)</STRONG> (Thumb, 102 bytes, Stack size 56 bytes, lcd.o(i._ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih))
<BR><BR>[Stack]<UL><LI>Max Depth = 296 + Unknown Stack Size
<LI>Call Chain = touchgfx::LCD::stringWidth(touchgfx::TextProvider&, const touchgfx::Font&, int, unsigned char) &rArr; touchgfx::TextProvider::getNextLigature(unsigned char, const touchgfx::Font*, const touchgfx::GlyphNode*&) &rArr; touchgfx::TextProvider::getNextLigature(unsigned char) &rArr; touchgfx::TextProvider::substituteGlyphs() &rArr; touchgfx::TextProvider::applyGsubRules(const unsigned short*, unsigned short) &rArr; touchgfx::TextProvider::replaceInputCharacters(unsigned short, unsigned short, const unsigned short*) &rArr; touchgfx::TextProvider::fillInputBuffer() &rArr; touchgfx::TextProvider::circularBuffer&lang;(unsigned)10&rang;::pushBack(unsigned short) &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[27e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextProvider::getNextLigature(unsigned char, const touchgfx::Font*, const touchgfx::GlyphNode*&)
<LI><a href="#[26c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::GlyphNode::advance() const
<LI><a href="#[2a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Font::isInvisibleZeroWidth(unsigned short)
</UL>
<BR>[Called By]<UL><LI><a href="#[29a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD::drawStringLTR(const touchgfx::Rect&, const touchgfx::Rect&, const touchgfx::LCD::StringVisuals&, const unsigned short*, std::__va_list)
<LI><a href="#[183]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextArea::calculateBoundingArea() const
</UL>

<P><STRONG><a name="[29a]"></a>touchgfx::LCD::drawStringLTR(const touchgfx::Rect&, const touchgfx::Rect&, const touchgfx::LCD::StringVisuals&, const unsigned short*, std::__va_list)</STRONG> (Thumb, 584 bytes, Stack size 432 bytes, lcd.o(i._ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list))
<BR><BR>[Stack]<UL><LI>Max Depth = 816 + Unknown Stack Size
<LI>Call Chain = touchgfx::LCD::drawStringLTR(const touchgfx::Rect&, const touchgfx::Rect&, const touchgfx::LCD::StringVisuals&, const unsigned short*, std::__va_list) &rArr; touchgfx::LCD::drawStringInternal(unsigned short*, const touchgfx::Rect*, short, short, const touchgfx::Rect&, const touchgfx::LCD::StringVisuals*, unsigned char, touchgfx::TextProvider&, int, bool) &rArr; touchgfx::TextProvider::getNextLigature(unsigned char, const touchgfx::Font*, const touchgfx::GlyphNode*&, const unsigned char*&, unsigned char&) &rArr; touchgfx::TextProvider::getNextLigature(unsigned char) &rArr; touchgfx::TextProvider::substituteGlyphs() &rArr; touchgfx::TextProvider::applyGsubRules(const unsigned short*, unsigned short) &rArr; touchgfx::TextProvider::replaceInputCharacters(unsigned short, unsigned short, const unsigned short*) &rArr; touchgfx::TextProvider::fillInputBuffer() &rArr; touchgfx::TextProvider::circularBuffer&lang;(unsigned)10&rang;::pushBack(unsigned short) &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[26f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextProvider::getNextChar()
<LI><a href="#[283]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextProvider::TextProvider()
<LI><a href="#[27c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextProvider::getNextLigature(unsigned char)
<LI><a href="#[266]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextProvider::initialize(const unsigned short*, std::__va_list, const unsigned short*, const touchgfx::FontContextualFormsTable*)
<LI><a href="#[29f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD::stringWidth(touchgfx::TextProvider&, const touchgfx::Font&, int, unsigned char)
<LI><a href="#[25a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Rect::bottom() const
<LI><a href="#[252]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Rect::Rect(short, short, short, short)
<LI><a href="#[29d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD::WideTextInternalStruct::WideTextInternalStruct(touchgfx::TextProvider&, unsigned short, unsigned short, unsigned char, const touchgfx::Font*, short, touchgfx::WideTextAction)
<LI><a href="#[29e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD::WideTextInternalStruct::scanStringLengthForLine()
<LI><a href="#[2a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD::drawStringInternal(unsigned short*, const touchgfx::Rect*, short, short, const touchgfx::Rect&, const touchgfx::LCD::StringVisuals*, unsigned char, touchgfx::TextProvider&, int, bool)
<LI><a href="#[29b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD::rotateRect(touchgfx::Rect&, const touchgfx::Rect&, touchgfx::TextRotation)
<LI><a href="#[1ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
</UL>
<BR>[Called By]<UL><LI><a href="#[299]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD::drawString(touchgfx::Rect, const touchgfx::Rect&, const touchgfx::LCD::StringVisuals&, const unsigned short*, ...)
</UL>

<P><STRONG><a name="[2a1]"></a>touchgfx::LCD::drawStringInternal(unsigned short*, const touchgfx::Rect*, short, short, const touchgfx::Rect&, const touchgfx::LCD::StringVisuals*, unsigned char, touchgfx::TextProvider&, int, bool)</STRONG> (Thumb, 672 bytes, Stack size 136 bytes, lcd.o(i._ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib))
<BR><BR>[Stack]<UL><LI>Max Depth = 384 + Unknown Stack Size
<LI>Call Chain = touchgfx::LCD::drawStringInternal(unsigned short*, const touchgfx::Rect*, short, short, const touchgfx::Rect&, const touchgfx::LCD::StringVisuals*, unsigned char, touchgfx::TextProvider&, int, bool) &rArr; touchgfx::TextProvider::getNextLigature(unsigned char, const touchgfx::Font*, const touchgfx::GlyphNode*&, const unsigned char*&, unsigned char&) &rArr; touchgfx::TextProvider::getNextLigature(unsigned char) &rArr; touchgfx::TextProvider::substituteGlyphs() &rArr; touchgfx::TextProvider::applyGsubRules(const unsigned short*, unsigned short) &rArr; touchgfx::TextProvider::replaceInputCharacters(unsigned short, unsigned short, const unsigned short*) &rArr; touchgfx::TextProvider::fillInputBuffer() &rArr; touchgfx::TextProvider::circularBuffer&lang;(unsigned)10&rang;::pushBack(unsigned short) &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[27c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextProvider::getNextLigature(unsigned char)
<LI><a href="#[259]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Rect::right() const
<LI><a href="#[27f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextProvider::getNextLigature(unsigned char, const touchgfx::Font*, const touchgfx::GlyphNode*&, const unsigned char*&, unsigned char&)
<LI><a href="#[26c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::GlyphNode::advance() const
<LI><a href="#[2a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Font::isInvisibleZeroWidth(unsigned short)
<LI><a href="#[1b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;abort
</UL>
<BR>[Called By]<UL><LI><a href="#[29a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD::drawStringLTR(const touchgfx::Rect&, const touchgfx::Rect&, const touchgfx::LCD::StringVisuals&, const unsigned short*, std::__va_list)
</UL>

<P><STRONG><a name="[29e]"></a>touchgfx::LCD::WideTextInternalStruct::scanStringLengthForLine()</STRONG> (Thumb, 458 bytes, Stack size 56 bytes, lcd.o(i._ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 296 + Unknown Stack Size
<LI>Call Chain = touchgfx::LCD::WideTextInternalStruct::scanStringLengthForLine() &rArr; touchgfx::TextProvider::getNextLigature(unsigned char, const touchgfx::Font*, const touchgfx::GlyphNode*&) &rArr; touchgfx::TextProvider::getNextLigature(unsigned char) &rArr; touchgfx::TextProvider::substituteGlyphs() &rArr; touchgfx::TextProvider::applyGsubRules(const unsigned short*, unsigned short) &rArr; touchgfx::TextProvider::replaceInputCharacters(unsigned short, unsigned short, const unsigned short*) &rArr; touchgfx::TextProvider::fillInputBuffer() &rArr; touchgfx::TextProvider::circularBuffer&lang;(unsigned)10&rang;::pushBack(unsigned short) &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[27e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextProvider::getNextLigature(unsigned char, const touchgfx::Font*, const touchgfx::GlyphNode*&)
<LI><a href="#[26c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::GlyphNode::advance() const
<LI><a href="#[2a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Font::isInvisibleZeroWidth(unsigned short)
<LI><a href="#[2a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD::WideTextInternalStruct::isSpace(unsigned short)
<LI><a href="#[2a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD::WideTextInternalStruct::addWord(unsigned short, unsigned short, unsigned short)
<LI><a href="#[1b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;abort
</UL>
<BR>[Called By]<UL><LI><a href="#[29a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD::drawStringLTR(const touchgfx::Rect&, const touchgfx::Rect&, const touchgfx::LCD::StringVisuals&, const unsigned short*, std::__va_list)
<LI><a href="#[29c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD::getNumLines(touchgfx::TextProvider&, touchgfx::WideTextAction, unsigned char, const touchgfx::Font*, short)
<LI><a href="#[183]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextArea::calculateBoundingArea() const
</UL>

<P><STRONG><a name="[2a3]"></a>touchgfx::LCD::WideTextInternalStruct::addWord(unsigned short, unsigned short, unsigned short)</STRONG> (Thumb, 32 bytes, Stack size 12 bytes, lcd.o(i._ZN8touchgfx3LCD22WideTextInternalStruct7addWordEttt))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = touchgfx::LCD::WideTextInternalStruct::addWord(unsigned short, unsigned short, unsigned short)
</UL>
<BR>[Called By]<UL><LI><a href="#[29e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD::WideTextInternalStruct::scanStringLengthForLine()
</UL>

<P><STRONG><a name="[2a2]"></a>touchgfx::LCD::WideTextInternalStruct::isSpace(unsigned short)</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, lcd.o(i._ZN8touchgfx3LCD22WideTextInternalStruct7isSpaceEt))
<BR><BR>[Called By]<UL><LI><a href="#[29e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD::WideTextInternalStruct::scanStringLengthForLine()
</UL>

<P><STRONG><a name="[29d]"></a>touchgfx::LCD::WideTextInternalStruct::WideTextInternalStruct(touchgfx::TextProvider&, unsigned short, unsigned short, unsigned char, const touchgfx::Font*, short, touchgfx::WideTextAction)</STRONG> (Thumb, 126 bytes, Stack size 24 bytes, lcd.o(i._ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEtthPKNS_4FontEsNS_14WideTextActionE))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = touchgfx::LCD::WideTextInternalStruct::WideTextInternalStruct(touchgfx::TextProvider&, unsigned short, unsigned short, unsigned char, const touchgfx::Font*, short, touchgfx::WideTextAction)
</UL>
<BR>[Calls]<UL><LI><a href="#[26c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::GlyphNode::advance() const
</UL>
<BR>[Called By]<UL><LI><a href="#[29a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD::drawStringLTR(const touchgfx::Rect&, const touchgfx::Rect&, const touchgfx::LCD::StringVisuals&, const unsigned short*, std::__va_list)
<LI><a href="#[29c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD::getNumLines(touchgfx::TextProvider&, touchgfx::WideTextAction, unsigned char, const touchgfx::Font*, short)
<LI><a href="#[183]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextArea::calculateBoundingArea() const
</UL>

<P><STRONG><a name="[392]"></a>touchgfx::LCD::WideTextInternalStruct::WideTextInternalStruct__sub_object(touchgfx::TextProvider&, unsigned short, unsigned short, unsigned char, const touchgfx::Font*, short, touchgfx::WideTextAction)</STRONG> (Thumb, 0 bytes, Stack size 24 bytes, lcd.o(i._ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEtthPKNS_4FontEsNS_14WideTextActionE), UNUSED)

<P><STRONG><a name="[2a4]"></a>touchgfx::LCD::realX(const touchgfx::Rect&, short, short, touchgfx::TextRotation)</STRONG> (Thumb, 58 bytes, Stack size 16 bytes, lcd.o(i._ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE))
<BR><BR>[Stack]<UL><LI>Max Depth = 64 + Unknown Stack Size
<LI>Call Chain = touchgfx::LCD::realX(const touchgfx::Rect&, short, short, touchgfx::TextRotation) &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[259]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Rect::right() const
<LI><a href="#[1b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;abort
</UL>
<BR>[Called By]<UL><LI><a href="#[181]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::drawGlyph(unsigned short*, touchgfx::Rect, short, short, unsigned short, unsigned short, const touchgfx::Rect&, const touchgfx::GlyphNode*, const unsigned char*, unsigned char, touchgfx::colortype, unsigned char, unsigned char, touchgfx::TextRotation)
</UL>

<P><STRONG><a name="[2a5]"></a>touchgfx::LCD::realY(const touchgfx::Rect&, short, short, touchgfx::TextRotation)</STRONG> (Thumb, 58 bytes, Stack size 16 bytes, lcd.o(i._ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE))
<BR><BR>[Stack]<UL><LI>Max Depth = 64 + Unknown Stack Size
<LI>Call Chain = touchgfx::LCD::realY(const touchgfx::Rect&, short, short, touchgfx::TextRotation) &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[25a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Rect::bottom() const
<LI><a href="#[1b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;abort
</UL>
<BR>[Called By]<UL><LI><a href="#[181]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::drawGlyph(unsigned short*, touchgfx::Rect, short, short, unsigned short, unsigned short, const touchgfx::Rect&, const touchgfx::GlyphNode*, const unsigned char*, unsigned char, touchgfx::colortype, unsigned char, unsigned char, touchgfx::TextRotation)
</UL>

<P><STRONG><a name="[2b9]"></a>touchgfx::LCD::div255(unsigned short)</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, touchgfxgeneratedhal.o(i._ZN8touchgfx3LCD6div255Et))
<BR><BR>[Called By]<UL><LI><a href="#[181]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::drawGlyph(unsigned short*, touchgfx::Rect, short, short, unsigned short, unsigned short, const touchgfx::Rect&, const touchgfx::GlyphNode*, const unsigned char*, unsigned char, touchgfx::colortype, unsigned char, unsigned char, touchgfx::TextRotation)
<LI><a href="#[17f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::fillBuffer(unsigned char*, unsigned short, const touchgfx::Rect&, touchgfx::colortype, unsigned char)
</UL>

<P><STRONG><a name="[2a0]"></a>touchgfx::Font::isInvisibleZeroWidth(unsigned short)</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, lcd.o(i._ZN8touchgfx4Font20isInvisibleZeroWidthEt))
<BR><BR>[Called By]<UL><LI><a href="#[29f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD::stringWidth(touchgfx::TextProvider&, const touchgfx::Font&, int, unsigned char)
<LI><a href="#[29e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD::WideTextInternalStruct::scanStringLengthForLine()
<LI><a href="#[2a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD::drawStringInternal(unsigned short*, const touchgfx::Rect*, short, short, const touchgfx::Rect&, const touchgfx::LCD::StringVisuals*, unsigned char, touchgfx::TextProvider&, int, bool)
</UL>

<P><STRONG><a name="[1f5]"></a>touchgfx::GPIO::set(touchgfx::GPIO::GPIO_ID)</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, touchgfxgpio.o(i._ZN8touchgfx4GPIO3setENS0_7GPIO_IDE))
<BR><BR>[Called By]<UL><LI><a href="#[fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::HAL::tick()
<LI><a href="#[1ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_LTDC_LineEventCallback
</UL>

<P><STRONG><a name="[28d]"></a>touchgfx::GPIO::init()</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, touchgfxgpio.o(i._ZN8touchgfx4GPIO4initEv))
<BR><BR>[Called By]<UL><LI><a href="#[16d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::HAL::initialize()
</UL>

<P><STRONG><a name="[1f6]"></a>touchgfx::GPIO::clear(touchgfx::GPIO::GPIO_ID)</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, touchgfxgpio.o(i._ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE))
<BR><BR>[Called By]<UL><LI><a href="#[fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::HAL::tick()
<LI><a href="#[1ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_LTDC_LineEventCallback
</UL>

<P><STRONG><a name="[292]"></a>touchgfx::GPIO::toggle(touchgfx::GPIO::GPIO_ID)</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, touchgfxgpio.o(i._ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE))
<BR><BR>[Called By]<UL><LI><a href="#[1f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::HAL::swapFrameBuffers()
</UL>

<P><STRONG><a name="[254]"></a>touchgfx::Rect::restrictTo(short, short)</STRONG> (Thumb, 70 bytes, Stack size 12 bytes, application.o(i._ZN8touchgfx4Rect10restrictToEss))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = touchgfx::Rect::restrictTo(short, short)
</UL>
<BR>[Called By]<UL><LI><a href="#[118]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Application::draw(touchgfx::Rect&)
<LI><a href="#[117]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Application::invalidateArea(touchgfx::Rect)
</UL>

<P><STRONG><a name="[25c]"></a>touchgfx::Rect::expandToFit(const touchgfx::Rect&)</STRONG> (Thumb, 150 bytes, Stack size 32 bytes, application.o(i._ZN8touchgfx4Rect11expandToFitERKS0_))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = touchgfx::Rect::expandToFit(const touchgfx::Rect&)
</UL>
<BR>[Calls]<UL><LI><a href="#[255]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Rect::isEmpty() const
<LI><a href="#[25a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Rect::bottom() const
<LI><a href="#[259]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Rect::right() const
</UL>
<BR>[Called By]<UL><LI><a href="#[117]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Application::invalidateArea(touchgfx::Rect)
</UL>

<P><STRONG><a name="[252]"></a>touchgfx::Rect::Rect(short, short, short, short)</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, lcd16bpp.o(i._ZN8touchgfx4RectC1Essss))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = touchgfx::Rect::Rect(short, short, short, short)
</UL>
<BR>[Called By]<UL><LI><a href="#[29a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD::drawStringLTR(const touchgfx::Rect&, const touchgfx::Rect&, const touchgfx::LCD::StringVisuals&, const unsigned short*, std::__va_list)
<LI><a href="#[115]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Application::drawCachedAreas()
<LI><a href="#[116]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Application::invalidate()
<LI><a href="#[263]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Screen::draw()
<LI><a href="#[2b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Drawable::getCachedVisibleRect()
<LI><a href="#[2af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Screen::startSMOC(const touchgfx::Rect&)
<LI><a href="#[2b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Screen::JSMOC(const touchgfx::Rect&, touchgfx::Drawable*)
<LI><a href="#[29b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD::rotateRect(touchgfx::Rect&, const touchgfx::Rect&, touchgfx::TextRotation)
<LI><a href="#[183]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextArea::calculateBoundingArea() const
</UL>

<P><STRONG><a name="[393]"></a>touchgfx::Rect::Rect__sub_object(short, short, short, short)</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, lcd16bpp.o(i._ZN8touchgfx4RectC1Essss), UNUSED)

<P><STRONG><a name="[d9]"></a>touchgfx::Rect::Rect()</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, screen1viewbase.o(i._ZN8touchgfx4RectC1Ev))
<BR><BR>[Called By]<UL><LI><a href="#[231]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Screen::Screen()
<LI><a href="#[153]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextArea::getSolidRect() const
<LI><a href="#[28b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Widget::Widget__sub_object()
<LI><a href="#[115]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Application::drawCachedAreas()
<LI><a href="#[240]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Application::Application()
<LI><a href="#[198]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__sti___15_Application_cpp_63cd8d44
<LI><a href="#[185]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Container::getSolidRect() const
<LI><a href="#[2b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Screen::JSMOC(const touchgfx::Rect&, touchgfx::Drawable*)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> application.o(t._ZN8touchgfx6VectorINS_4RectELt8EEC1Ev)
</UL>
<P><STRONG><a name="[394]"></a>touchgfx::Rect::Rect__sub_object()</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, screen1viewbase.o(i._ZN8touchgfx4RectC1Ev), UNUSED)

<P><STRONG><a name="[25f]"></a>touchgfx::Rect::operator &=(const touchgfx::Rect&)</STRONG> (Thumb, 128 bytes, Stack size 24 bytes, application.o(i._ZN8touchgfx4RectaNERKS0_))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = touchgfx::Rect::operator &=(const touchgfx::Rect&) &rArr; touchgfx::Rect::intersect(const touchgfx::Rect&) const
</UL>
<BR>[Calls]<UL><LI><a href="#[258]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Rect::intersect(const touchgfx::Rect&) const
<LI><a href="#[25a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Rect::bottom() const
<LI><a href="#[259]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Rect::right() const
</UL>
<BR>[Called By]<UL><LI><a href="#[155]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Drawable::getVisibleRect(touchgfx::Rect&) const
<LI><a href="#[115]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Application::drawCachedAreas()
<LI><a href="#[2ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Rect::operator &(const touchgfx::Rect&) const
<LI><a href="#[182]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextArea::draw(const touchgfx::Rect&) const
</UL>

<P><STRONG><a name="[177]"></a>touchgfx::View&lang;Screen1Presenter&rang;::~View()</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, screen1viewbase.o(i._ZN8touchgfx4ViewI16Screen1PresenterED1Ev))
<BR><BR>[Called By]<UL><LI><a href="#[107]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Screen1ViewBase::~Screen1ViewBase()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> screen1viewbase.o(.constdata__ZTVN8touchgfx4ViewI16Screen1PresenterEE)
</UL>
<P><STRONG><a name="[395]"></a>touchgfx::View&lang;Screen1Presenter&rang;::~View__sub_object()</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, screen1viewbase.o(i._ZN8touchgfx4ViewI16Screen1PresenterED1Ev), UNUSED)

<P><STRONG><a name="[235]"></a>touchgfx::Color::getColorFromRGB(unsigned char, unsigned char, unsigned char)</STRONG> (Thumb, 34 bytes, Stack size 24 bytes, screen1viewbase.o(i._ZN8touchgfx5Color15getColorFromRGBEhhh))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = touchgfx::Color::getColorFromRGB(unsigned char, unsigned char, unsigned char)
</UL>
<BR>[Calls]<UL><LI><a href="#[28c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::colortype::colortype(unsigned)
</UL>
<BR>[Called By]<UL><LI><a href="#[22c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Screen1ViewBase::Screen1ViewBase()
</UL>

<P><STRONG><a name="[2b6]"></a>touchgfx::Color::getRedFromRGB565(unsigned short)</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, lcd16bpp.o(i._ZN8touchgfx5Color16getRedFromRGB565Et))
<BR><BR>[Called By]<UL><LI><a href="#[181]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::drawGlyph(unsigned short*, touchgfx::Rect, short, short, unsigned short, unsigned short, const touchgfx::Rect&, const touchgfx::GlyphNode*, const unsigned char*, unsigned char, touchgfx::colortype, unsigned char, unsigned char, touchgfx::TextRotation)
<LI><a href="#[17f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::fillBuffer(unsigned char*, unsigned short, const touchgfx::Rect&, touchgfx::colortype, unsigned char)
</UL>

<P><STRONG><a name="[2b8]"></a>touchgfx::Color::getBlueFromRGB565(unsigned short)</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, lcd16bpp.o(i._ZN8touchgfx5Color17getBlueFromRGB565Et))
<BR><BR>[Called By]<UL><LI><a href="#[181]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::drawGlyph(unsigned short*, touchgfx::Rect, short, short, unsigned short, unsigned short, const touchgfx::Rect&, const touchgfx::GlyphNode*, const unsigned char*, unsigned char, touchgfx::colortype, unsigned char, unsigned char, touchgfx::TextRotation)
<LI><a href="#[17f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::fillBuffer(unsigned char*, unsigned short, const touchgfx::Rect&, touchgfx::colortype, unsigned char)
</UL>

<P><STRONG><a name="[2b7]"></a>touchgfx::Color::getGreenFromRGB565(unsigned short)</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, lcd16bpp.o(i._ZN8touchgfx5Color18getGreenFromRGB565Et))
<BR><BR>[Called By]<UL><LI><a href="#[181]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::drawGlyph(unsigned short*, touchgfx::Rect, short, short, unsigned short, unsigned short, const touchgfx::Rect&, const touchgfx::GlyphNode*, const unsigned char*, unsigned char, touchgfx::colortype, unsigned char, unsigned char, touchgfx::TextRotation)
<LI><a href="#[17f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::fillBuffer(unsigned char*, unsigned short, const touchgfx::Rect&, touchgfx::colortype, unsigned char)
</UL>

<P><STRONG><a name="[241]"></a>touchgfx::Texts::setLanguage(unsigned short)</STRONG> (Thumb, 108 bytes, Stack size 24 bytes, texts.o(i._ZN8touchgfx5Texts11setLanguageEt))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = touchgfx::Texts::setLanguage(unsigned short)
</UL>
<BR>[Calls]<UL><LI><a href="#[2a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TypedTextDatabase::getFonts()
<LI><a href="#[2a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TypedTextDatabase::getInstanceSize()
</UL>
<BR>[Called By]<UL><LI><a href="#[220]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx_init
<LI><a href="#[23c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FrontendApplicationBase::FrontendApplicationBase(Model&, FrontendHeap&)
</UL>

<P><STRONG><a name="[2aa]"></a>touchgfx::Bitmap::clearCache()</STRONG> (Thumb, 128 bytes, Stack size 16 bytes, bitmap.o(i._ZN8touchgfx6Bitmap10clearCacheEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = touchgfx::Bitmap::clearCache()
</UL>
<BR>[Called By]<UL><LI><a href="#[2a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Bitmap::setCache(unsigned short*, unsigned, unsigned)
</UL>

<P><STRONG><a name="[2a8]"></a>touchgfx::Bitmap::registerBitmapDatabase(const touchgfx::Bitmap::BitmapData*, unsigned short, unsigned short*, unsigned, unsigned)</STRONG> (Thumb, 36 bytes, Stack size 16 bytes, bitmap.o(i._ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtjj))
<BR><BR>[Stack]<UL><LI>Max Depth = 72 + Unknown Stack Size
<LI>Call Chain = touchgfx::Bitmap::registerBitmapDatabase(const touchgfx::Bitmap::BitmapData*, unsigned short, unsigned short*, unsigned, unsigned) &rArr; touchgfx::Bitmap::setCache(unsigned short*, unsigned, unsigned) &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[2a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Bitmap::setCache(unsigned short*, unsigned, unsigned)
</UL>
<BR>[Called By]<UL><LI><a href="#[220]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx_init
</UL>

<P><STRONG><a name="[2a9]"></a>touchgfx::Bitmap::setCache(unsigned short*, unsigned, unsigned)</STRONG> (Thumb, 58 bytes, Stack size 8 bytes, bitmap.o(i._ZN8touchgfx6Bitmap8setCacheEPtjj))
<BR><BR>[Stack]<UL><LI>Max Depth = 56 + Unknown Stack Size
<LI>Call Chain = touchgfx::Bitmap::setCache(unsigned short*, unsigned, unsigned) &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[2aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Bitmap::clearCache()
<LI><a href="#[1b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;abort
</UL>
<BR>[Called By]<UL><LI><a href="#[2a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Bitmap::registerBitmapDatabase(const touchgfx::Bitmap::BitmapData*, unsigned short, unsigned short*, unsigned, unsigned)
</UL>

<P><STRONG><a name="[28e]"></a>touchgfx::BlitOp::BlitOp()</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, hal.o(i._ZN8touchgfx6BlitOpC1Ev))
<BR><BR>[Called By]<UL><LI><a href="#[f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::HAL::blitFill(touchgfx::colortype, unsigned short, unsigned short, unsigned short, unsigned short, unsigned char, unsigned short, touchgfx::Bitmap::BitmapFormat, bool)
<LI><a href="#[ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::HAL::blitCopyGlyph(const unsigned char*, unsigned short, unsigned short, unsigned short, unsigned short, unsigned short, touchgfx::colortype, unsigned char, touchgfx::BlitOperations, bool)
</UL>

<P><STRONG><a name="[396]"></a>touchgfx::BlitOp::BlitOp__sub_object()</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, hal.o(i._ZN8touchgfx6BlitOpC1Ev), UNUSED)

<P><STRONG><a name="[178]"></a>touchgfx::Screen::setupScreen()</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, screen1viewbase.o(i._ZN8touchgfx6Screen11setupScreenEv))
<BR>[Address Reference Count : 2]<UL><LI> screen1viewbase.o(.constdata__ZTVN8touchgfx4ViewI16Screen1PresenterEE)
<LI> screen.o(.constdata__ZTVN8touchgfx6ScreenE)
</UL>
<P><STRONG><a name="[33b]"></a>touchgfx::Screen::bindTransition(touchgfx::Transition&)</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, screen.o(i._ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE))
<BR><BR>[Called By]<UL><LI><a href="#[23f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;T2* touchgfx::makeTransition&lang;Screen1View, Screen1Presenter, touchgfx::NoTransition, Model&rang;(touchgfx::Screen**, touchgfx::Presenter**, touchgfx::MVPHeap&, touchgfx::Transition**, T4*)
</UL>

<P><STRONG><a name="[e4]"></a>touchgfx::Screen::handleKeyEvent(unsigned char)</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, screen1view.o(i._ZN8touchgfx6Screen14handleKeyEventEh))
<BR>[Address Reference Count : 4]<UL><LI> screen1view.o(.constdata__ZTV11Screen1View)
<LI> screen1viewbase.o(.constdata__ZTV15Screen1ViewBase)
<LI> screen1viewbase.o(.constdata__ZTVN8touchgfx4ViewI16Screen1PresenterEE)
<LI> screen.o(.constdata__ZTVN8touchgfx6ScreenE)
</UL>
<P><STRONG><a name="[109]"></a>touchgfx::Screen::tearDownScreen()</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, screen1viewbase.o(i._ZN8touchgfx6Screen14tearDownScreenEv))
<BR>[Address Reference Count : 3]<UL><LI> screen1viewbase.o(.constdata__ZTV15Screen1ViewBase)
<LI> screen1viewbase.o(.constdata__ZTVN8touchgfx4ViewI16Screen1PresenterEE)
<LI> screen.o(.constdata__ZTVN8touchgfx6ScreenE)
</UL>
<P><STRONG><a name="[de]"></a>touchgfx::Screen::afterTransition()</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, screen1view.o(i._ZN8touchgfx6Screen15afterTransitionEv))
<BR>[Address Reference Count : 4]<UL><LI> screen1view.o(.constdata__ZTV11Screen1View)
<LI> screen1viewbase.o(.constdata__ZTV15Screen1ViewBase)
<LI> screen1viewbase.o(.constdata__ZTVN8touchgfx4ViewI16Screen1PresenterEE)
<LI> screen.o(.constdata__ZTVN8touchgfx6ScreenE)
</UL>
<P><STRONG><a name="[e1]"></a>touchgfx::Screen::handleDragEvent(const touchgfx::DragEvent&)</STRONG> (Thumb, 200 bytes, Stack size 72 bytes, screen.o(i._ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = touchgfx::Screen::handleDragEvent(const touchgfx::DragEvent&) &rArr; touchgfx::Drawable::getAbsoluteRect() const
</UL>
<BR>[Calls]<UL><LI><a href="#[2ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Drawable::getAbsoluteRect() const
<LI><a href="#[2ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Rect::intersect(short, short) const
<LI><a href="#[2ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::ClickEvent::ClickEvent(touchgfx::ClickEvent::ClickEventType, short, short, short)
</UL>
<BR>[Address Reference Count : 4]<UL><LI> screen1view.o(.constdata__ZTV11Screen1View)
<LI> screen1viewbase.o(.constdata__ZTV15Screen1ViewBase)
<LI> screen1viewbase.o(.constdata__ZTVN8touchgfx4ViewI16Screen1PresenterEE)
<LI> screen.o(.constdata__ZTVN8touchgfx6ScreenE)
</UL>
<P><STRONG><a name="[e3]"></a>touchgfx::Screen::handleTickEvent()</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, screen1view.o(i._ZN8touchgfx6Screen15handleTickEventEv))
<BR>[Address Reference Count : 4]<UL><LI> screen1view.o(.constdata__ZTV11Screen1View)
<LI> screen1viewbase.o(.constdata__ZTV15Screen1ViewBase)
<LI> screen1viewbase.o(.constdata__ZTVN8touchgfx4ViewI16Screen1PresenterEE)
<LI> screen.o(.constdata__ZTVN8touchgfx6ScreenE)
</UL>
<P><STRONG><a name="[e0]"></a>touchgfx::Screen::handleClickEvent(const touchgfx::ClickEvent&)</STRONG> (Thumb, 158 bytes, Stack size 56 bytes, screen.o(i._ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE))
<BR><BR>[Stack]<UL><LI>Max Depth = 248<LI>Call Chain = touchgfx::Screen::handleClickEvent(const touchgfx::ClickEvent&) &rArr; touchgfx::Container::getLastChildNear(short, short, touchgfx::Drawable**, short*, short*) &rArr; touchgfx::Container::getLastChild(short, short, touchgfx::Drawable**) &rArr; touchgfx::Rect::intersect(short, short) const
</UL>
<BR>[Calls]<UL><LI><a href="#[2ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Drawable::getAbsoluteRect() const
<LI><a href="#[189]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Container::getLastChildNear(short, short, touchgfx::Drawable**, short*, short*)
<LI><a href="#[2ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::ClickEvent::ClickEvent(touchgfx::ClickEvent::ClickEventType, short, short, short)
</UL>
<BR>[Address Reference Count : 4]<UL><LI> screen1view.o(.constdata__ZTV11Screen1View)
<LI> screen1viewbase.o(.constdata__ZTV15Screen1ViewBase)
<LI> screen1viewbase.o(.constdata__ZTVN8touchgfx4ViewI16Screen1PresenterEE)
<LI> screen.o(.constdata__ZTVN8touchgfx6ScreenE)
</UL>
<P><STRONG><a name="[e2]"></a>touchgfx::Screen::handleGestureEvent(const touchgfx::GestureEvent&)</STRONG> (Thumb, 82 bytes, Stack size 32 bytes, screen.o(i._ZN8touchgfx6Screen18handleGestureEventERKNS_12GestureEventE))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = touchgfx::Screen::handleGestureEvent(const touchgfx::GestureEvent&) &rArr; touchgfx::Drawable::getAbsoluteRect() const
</UL>
<BR>[Calls]<UL><LI><a href="#[2ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Drawable::getAbsoluteRect() const
</UL>
<BR>[Address Reference Count : 4]<UL><LI> screen1view.o(.constdata__ZTV11Screen1View)
<LI> screen1viewbase.o(.constdata__ZTV15Screen1ViewBase)
<LI> screen1viewbase.o(.constdata__ZTVN8touchgfx4ViewI16Screen1PresenterEE)
<LI> screen.o(.constdata__ZTVN8touchgfx6ScreenE)
</UL>
<P><STRONG><a name="[237]"></a>touchgfx::Screen::add(touchgfx::Drawable&)</STRONG> (Thumb, 16 bytes, Stack size 16 bytes, screen1viewbase.o(i._ZN8touchgfx6Screen3addERNS_8DrawableE))
<BR><BR>[Stack]<UL><LI>Max Depth = 72 + Unknown Stack Size
<LI>Call Chain = touchgfx::Screen::add(touchgfx::Drawable&) &rArr; touchgfx::Container::add(touchgfx::Drawable&) &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[188]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Container::add(touchgfx::Drawable&)
</UL>
<BR>[Called By]<UL><LI><a href="#[22c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Screen1ViewBase::Screen1ViewBase()
</UL>

<P><STRONG><a name="[dc]"></a>touchgfx::Screen::draw(touchgfx::Rect&)</STRONG> (Thumb, 78 bytes, Stack size 24 bytes, screen.o(i._ZN8touchgfx6Screen4drawERNS_4RectE))
<BR><BR>[Stack]<UL><LI>Max Depth = 192<LI>Call Chain = touchgfx::Screen::draw(touchgfx::Rect&) &rArr; touchgfx::Screen::startSMOC(const touchgfx::Rect&) &rArr; touchgfx::Screen::JSMOC(const touchgfx::Rect&, touchgfx::Drawable*) &rArr;  touchgfx::Screen::JSMOC(const touchgfx::Rect&, touchgfx::Drawable*) (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Drawable::getAbsoluteRect() const
<LI><a href="#[184]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Container::draw(const touchgfx::Rect&) const
<LI><a href="#[2ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Rect::operator &(const touchgfx::Rect&) const
<LI><a href="#[2af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Screen::startSMOC(const touchgfx::Rect&)
</UL>
<BR>[Address Reference Count : 4]<UL><LI> screen1view.o(.constdata__ZTV11Screen1View)
<LI> screen1viewbase.o(.constdata__ZTV15Screen1ViewBase)
<LI> screen1viewbase.o(.constdata__ZTVN8touchgfx4ViewI16Screen1PresenterEE)
<LI> screen.o(.constdata__ZTVN8touchgfx6ScreenE)
</UL>
<P><STRONG><a name="[263]"></a>touchgfx::Screen::draw()</STRONG> (Thumb, 40 bytes, Stack size 24 bytes, screen.o(i._ZN8touchgfx6Screen4drawEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = touchgfx::Screen::draw() &rArr; touchgfx::Rect::Rect(short, short, short, short)
</UL>
<BR>[Calls]<UL><LI><a href="#[252]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Rect::Rect(short, short, short, short)
</UL>
<BR>[Called By]<UL><LI><a href="#[240]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Application::Application()
</UL>

<P><STRONG><a name="[2b0]"></a>touchgfx::Screen::JSMOC(const touchgfx::Rect&, touchgfx::Drawable*)</STRONG> (Thumb, 532 bytes, Stack size 72 bytes, screen.o(i._ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE))
<BR><BR>[Stack]<UL><LI>Max Depth = 128 + In Cycle
<LI>Call Chain = touchgfx::Screen::JSMOC(const touchgfx::Rect&, touchgfx::Drawable*) &rArr;  touchgfx::Screen::JSMOC(const touchgfx::Rect&, touchgfx::Drawable*) (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Rect::Rect()
<LI><a href="#[258]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Rect::intersect(const touchgfx::Rect&) const
<LI><a href="#[2ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Rect::operator &(const touchgfx::Rect&) const
<LI><a href="#[255]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Rect::isEmpty() const
<LI><a href="#[25a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Rect::bottom() const
<LI><a href="#[259]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Rect::right() const
<LI><a href="#[252]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Rect::Rect(short, short, short, short)
<LI><a href="#[2b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Drawable::getCachedVisibleRect()
<LI><a href="#[2b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Drawable::getCachedAbsY()
<LI><a href="#[2b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Drawable::getCachedAbsX()
<LI><a href="#[2b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Screen::JSMOC(const touchgfx::Rect&, touchgfx::Drawable*)
</UL>
<BR>[Called By]<UL><LI><a href="#[2af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Screen::startSMOC(const touchgfx::Rect&)
<LI><a href="#[2b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Screen::JSMOC(const touchgfx::Rect&, touchgfx::Drawable*)
</UL>

<P><STRONG><a name="[2af]"></a>touchgfx::Screen::startSMOC(const touchgfx::Rect&)</STRONG> (Thumb, 84 bytes, Stack size 40 bytes, screen.o(i._ZN8touchgfx6Screen9startSMOCERKNS_4RectE))
<BR><BR>[Stack]<UL><LI>Max Depth = 168<LI>Call Chain = touchgfx::Screen::startSMOC(const touchgfx::Rect&) &rArr; touchgfx::Screen::JSMOC(const touchgfx::Rect&, touchgfx::Drawable*) &rArr;  touchgfx::Screen::JSMOC(const touchgfx::Rect&, touchgfx::Drawable*) (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Drawable::getAbsoluteRect() const
<LI><a href="#[187]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Container::setupDrawChain(const touchgfx::Rect&, touchgfx::Drawable**)
<LI><a href="#[252]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Rect::Rect(short, short, short, short)
<LI><a href="#[2b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Screen::JSMOC(const touchgfx::Rect&, touchgfx::Drawable*)
</UL>
<BR>[Called By]<UL><LI><a href="#[dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Screen::draw(touchgfx::Rect&)
</UL>

<P><STRONG><a name="[231]"></a>touchgfx::Screen::Screen()</STRONG> (Thumb, 124 bytes, Stack size 24 bytes, screen.o(i._ZN8touchgfx6ScreenC1Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = touchgfx::Screen::Screen()
</UL>
<BR>[Calls]<UL><LI><a href="#[d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Rect::Rect()
</UL>
<BR>[Called By]<UL><LI><a href="#[22c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Screen1ViewBase::Screen1ViewBase()
</UL>

<P><STRONG><a name="[397]"></a>touchgfx::Screen::Screen__sub_object()</STRONG> (Thumb, 0 bytes, Stack size 24 bytes, screen.o(i._ZN8touchgfx6ScreenC1Ev), UNUSED)

<P><STRONG><a name="[179]"></a>touchgfx::Screen::~Screen()</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, screen.o(i._ZN8touchgfx6ScreenD1Ev))
<BR>[Address Reference Count : 1]<UL><LI> screen.o(.constdata__ZTVN8touchgfx6ScreenE)
</UL>
<P><STRONG><a name="[398]"></a>touchgfx::Screen::~Screen__sub_object()</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, screen.o(i._ZN8touchgfx6ScreenD1Ev), UNUSED)

<P><STRONG><a name="[154]"></a>touchgfx::Widget::getLastChild(short, short, touchgfx::Drawable**)</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, screen1viewbase.o(i._ZN8touchgfx6Widget12getLastChildEssPPNS_8DrawableE))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = touchgfx::Widget::getLastChild(short, short, touchgfx::Drawable**)
</UL>
<BR>[Address Reference Count : 5]<UL><LI> box.o(.constdata__ZTVN8touchgfx3BoxE)
<LI> textareawithwildcard.o(.constdata__ZTVN8touchgfx24TextAreaWithWildcardBaseE)
<LI> screen1viewbase.o(.constdata__ZTVN8touchgfx6WidgetE)
<LI> screen1viewbase.o(.constdata__ZTVN8touchgfx23TextAreaWithOneWildcardE)
<LI> textarea.o(.constdata__ZTVN8touchgfx8TextAreaE)
</UL>
<P><STRONG><a name="[28b]"></a>touchgfx::Widget::Widget__sub_object()</STRONG> (Thumb, 64 bytes, Stack size 16 bytes, screen1viewbase.o(i._ZN8touchgfx6WidgetC2Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = touchgfx::Widget::Widget__sub_object()
</UL>
<BR>[Calls]<UL><LI><a href="#[d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Rect::Rect()
</UL>
<BR>[Called By]<UL><LI><a href="#[233]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextArea::TextArea()
<LI><a href="#[232]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Box::Box()
</UL>

<P><STRONG><a name="[399]"></a>touchgfx::Widget::~Widget()</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, screen1viewbase.o(i._ZN8touchgfx6WidgetD2Ev), UNUSED)

<P><STRONG><a name="[17a]"></a>touchgfx::Widget::~Widget__sub_object()</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, screen1viewbase.o(i._ZN8touchgfx6WidgetD2Ev))
<BR><BR>[Called By]<UL><LI><a href="#[168]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Box::~Box()
<LI><a href="#[151]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextAreaWithOneWildcard::~TextAreaWithOneWildcard()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> screen1viewbase.o(.constdata__ZTVN8touchgfx6WidgetE)
</UL>
<P><STRONG><a name="[17b]"></a>touchgfx::Callback&lang;FrontendApplicationBase, void, void, void&rang;::~Callback()</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, frontendapplicationbase.o(i._ZN8touchgfx8CallbackI23FrontendApplicationBasevvvED1Ev))
<BR><BR>[Called By]<UL><LI><a href="#[23a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FrontendApplicationBase::gotoScreen1ScreenNoTransition()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> frontendapplicationbase.o(.constdata__ZTVN8touchgfx8CallbackI23FrontendApplicationBasevvvEE)
</UL>
<P><STRONG><a name="[39a]"></a>touchgfx::Callback&lang;FrontendApplicationBase, void, void, void&rang;::~Callback__sub_object()</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, frontendapplicationbase.o(i._ZN8touchgfx8CallbackI23FrontendApplicationBasevvvED1Ev), UNUSED)

<P><STRONG><a name="[234]"></a>touchgfx::Drawable::setPosition(short, short, short, short)</STRONG> (Thumb, 68 bytes, Stack size 24 bytes, screen1viewbase.o(i._ZN8touchgfx8Drawable11setPositionEssss))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = touchgfx::Drawable::setPosition(short, short, short, short)
</UL>
<BR>[Called By]<UL><LI><a href="#[22c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Screen1ViewBase::Screen1ViewBase()
</UL>

<P><STRONG><a name="[2b3]"></a>touchgfx::Drawable::getCachedAbsX()</STRONG> (Thumb, 38 bytes, Stack size 16 bytes, screen.o(i._ZN8touchgfx8Drawable13getCachedAbsXEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = touchgfx::Drawable::getCachedAbsX() &rArr; touchgfx::Drawable::getAbsoluteRect() const
</UL>
<BR>[Calls]<UL><LI><a href="#[2ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Drawable::getAbsoluteRect() const
</UL>
<BR>[Called By]<UL><LI><a href="#[2b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Screen::JSMOC(const touchgfx::Rect&, touchgfx::Drawable*)
</UL>

<P><STRONG><a name="[2b2]"></a>touchgfx::Drawable::getCachedAbsY()</STRONG> (Thumb, 38 bytes, Stack size 16 bytes, screen.o(i._ZN8touchgfx8Drawable13getCachedAbsYEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = touchgfx::Drawable::getCachedAbsY() &rArr; touchgfx::Drawable::getAbsoluteRect() const
</UL>
<BR>[Calls]<UL><LI><a href="#[2ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Drawable::getAbsoluteRect() const
</UL>
<BR>[Called By]<UL><LI><a href="#[2b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Screen::JSMOC(const touchgfx::Rect&, touchgfx::Drawable*)
</UL>

<P><STRONG><a name="[2d9]"></a>touchgfx::Drawable::setWidthHeight(short, short)</STRONG> (Thumb, 28 bytes, Stack size 16 bytes, textarea.o(i._ZN8touchgfx8Drawable14setWidthHeightEss))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = touchgfx::Drawable::setWidthHeight(short, short)
</UL>
<BR>[Called By]<UL><LI><a href="#[2d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextArea::resizeToCurrentText()
</UL>

<P><STRONG><a name="[15f]"></a>touchgfx::Drawable::setupDrawChain(const touchgfx::Rect&, touchgfx::Drawable**)</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, screen1viewbase.o(i._ZN8touchgfx8Drawable14setupDrawChainERKNS_4RectEPPS0_))
<BR>[Address Reference Count : 6]<UL><LI> box.o(.constdata__ZTVN8touchgfx3BoxE)
<LI> drawable.o(.constdata__ZTVN8touchgfx8DrawableE)
<LI> textareawithwildcard.o(.constdata__ZTVN8touchgfx24TextAreaWithWildcardBaseE)
<LI> screen1viewbase.o(.constdata__ZTVN8touchgfx6WidgetE)
<LI> screen1viewbase.o(.constdata__ZTVN8touchgfx23TextAreaWithOneWildcardE)
<LI> textarea.o(.constdata__ZTVN8touchgfx8TextAreaE)
</UL>
<P><STRONG><a name="[15d]"></a>touchgfx::Drawable::handleDragEvent(const touchgfx::DragEvent&)</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, screen1viewbase.o(i._ZN8touchgfx8Drawable15handleDragEventERKNS_9DragEventE))
<BR>[Address Reference Count : 7]<UL><LI> box.o(.constdata__ZTVN8touchgfx3BoxE)
<LI> container.o(.constdata__ZTVN8touchgfx9ContainerE)
<LI> drawable.o(.constdata__ZTVN8touchgfx8DrawableE)
<LI> textareawithwildcard.o(.constdata__ZTVN8touchgfx24TextAreaWithWildcardBaseE)
<LI> screen1viewbase.o(.constdata__ZTVN8touchgfx6WidgetE)
<LI> screen1viewbase.o(.constdata__ZTVN8touchgfx23TextAreaWithOneWildcardE)
<LI> textarea.o(.constdata__ZTVN8touchgfx8TextAreaE)
</UL>
<P><STRONG><a name="[15e]"></a>touchgfx::Drawable::handleTickEvent()</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, screen1viewbase.o(i._ZN8touchgfx8Drawable15handleTickEventEv))
<BR>[Address Reference Count : 7]<UL><LI> box.o(.constdata__ZTVN8touchgfx3BoxE)
<LI> container.o(.constdata__ZTVN8touchgfx9ContainerE)
<LI> drawable.o(.constdata__ZTVN8touchgfx8DrawableE)
<LI> textareawithwildcard.o(.constdata__ZTVN8touchgfx24TextAreaWithWildcardBaseE)
<LI> screen1viewbase.o(.constdata__ZTVN8touchgfx6WidgetE)
<LI> screen1viewbase.o(.constdata__ZTVN8touchgfx23TextAreaWithOneWildcardE)
<LI> textarea.o(.constdata__ZTVN8touchgfx8TextAreaE)
</UL>
<P><STRONG><a name="[15b]"></a>touchgfx::Drawable::handleClickEvent(const touchgfx::ClickEvent&)</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, screen1viewbase.o(i._ZN8touchgfx8Drawable16handleClickEventERKNS_10ClickEventE))
<BR>[Address Reference Count : 7]<UL><LI> box.o(.constdata__ZTVN8touchgfx3BoxE)
<LI> container.o(.constdata__ZTVN8touchgfx9ContainerE)
<LI> drawable.o(.constdata__ZTVN8touchgfx8DrawableE)
<LI> textareawithwildcard.o(.constdata__ZTVN8touchgfx24TextAreaWithWildcardBaseE)
<LI> screen1viewbase.o(.constdata__ZTVN8touchgfx6WidgetE)
<LI> screen1viewbase.o(.constdata__ZTVN8touchgfx23TextAreaWithOneWildcardE)
<LI> textarea.o(.constdata__ZTVN8touchgfx8TextAreaE)
</UL>
<P><STRONG><a name="[15c]"></a>touchgfx::Drawable::handleGestureEvent(const touchgfx::GestureEvent&)</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, screen1viewbase.o(i._ZN8touchgfx8Drawable18handleGestureEventERKNS_12GestureEventE))
<BR>[Address Reference Count : 7]<UL><LI> box.o(.constdata__ZTVN8touchgfx3BoxE)
<LI> container.o(.constdata__ZTVN8touchgfx9ContainerE)
<LI> drawable.o(.constdata__ZTVN8touchgfx8DrawableE)
<LI> textareawithwildcard.o(.constdata__ZTVN8touchgfx24TextAreaWithWildcardBaseE)
<LI> screen1viewbase.o(.constdata__ZTVN8touchgfx6WidgetE)
<LI> screen1viewbase.o(.constdata__ZTVN8touchgfx23TextAreaWithOneWildcardE)
<LI> textarea.o(.constdata__ZTVN8touchgfx8TextAreaE)
</UL>
<P><STRONG><a name="[2b1]"></a>touchgfx::Drawable::getCachedVisibleRect()</STRONG> (Thumb, 56 bytes, Stack size 24 bytes, screen.o(i._ZN8touchgfx8Drawable20getCachedVisibleRectEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = touchgfx::Drawable::getCachedVisibleRect() &rArr; touchgfx::Rect::Rect(short, short, short, short)
</UL>
<BR>[Calls]<UL><LI><a href="#[252]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Rect::Rect(short, short, short, short)
</UL>
<BR>[Called By]<UL><LI><a href="#[2b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Screen::JSMOC(const touchgfx::Rect&, touchgfx::Drawable*)
</UL>

<P><STRONG><a name="[157]"></a>touchgfx::Drawable::setX(short)</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, screen1viewbase.o(i._ZN8touchgfx8Drawable4setXEs))
<BR>[Address Reference Count : 7]<UL><LI> box.o(.constdata__ZTVN8touchgfx3BoxE)
<LI> container.o(.constdata__ZTVN8touchgfx9ContainerE)
<LI> drawable.o(.constdata__ZTVN8touchgfx8DrawableE)
<LI> textareawithwildcard.o(.constdata__ZTVN8touchgfx24TextAreaWithWildcardBaseE)
<LI> screen1viewbase.o(.constdata__ZTVN8touchgfx6WidgetE)
<LI> screen1viewbase.o(.constdata__ZTVN8touchgfx23TextAreaWithOneWildcardE)
<LI> textarea.o(.constdata__ZTVN8touchgfx8TextAreaE)
</UL>
<P><STRONG><a name="[158]"></a>touchgfx::Drawable::setY(short)</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, screen1viewbase.o(i._ZN8touchgfx8Drawable4setYEs))
<BR>[Address Reference Count : 7]<UL><LI> box.o(.constdata__ZTVN8touchgfx3BoxE)
<LI> container.o(.constdata__ZTVN8touchgfx9ContainerE)
<LI> drawable.o(.constdata__ZTVN8touchgfx8DrawableE)
<LI> textareawithwildcard.o(.constdata__ZTVN8touchgfx24TextAreaWithWildcardBaseE)
<LI> screen1viewbase.o(.constdata__ZTVN8touchgfx6WidgetE)
<LI> screen1viewbase.o(.constdata__ZTVN8touchgfx23TextAreaWithOneWildcardE)
<LI> textarea.o(.constdata__ZTVN8touchgfx8TextAreaE)
</UL>
<P><STRONG><a name="[16b]"></a>touchgfx::Drawable::setWidth(short)</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, screen1viewbase.o(i._ZN8touchgfx8Drawable8setWidthEs))
<BR><BR>[Called By]<UL><LI><a href="#[159]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextArea::setWidth(short)
</UL>
<BR>[Address Reference Count : 4]<UL><LI> box.o(.constdata__ZTVN8touchgfx3BoxE)
<LI> container.o(.constdata__ZTVN8touchgfx9ContainerE)
<LI> drawable.o(.constdata__ZTVN8touchgfx8DrawableE)
<LI> screen1viewbase.o(.constdata__ZTVN8touchgfx6WidgetE)
</UL>
<P><STRONG><a name="[16c]"></a>touchgfx::Drawable::setHeight(short)</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, screen1viewbase.o(i._ZN8touchgfx8Drawable9setHeightEs))
<BR><BR>[Called By]<UL><LI><a href="#[15a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextArea::setHeight(short)
</UL>
<BR>[Address Reference Count : 4]<UL><LI> box.o(.constdata__ZTVN8touchgfx3BoxE)
<LI> container.o(.constdata__ZTVN8touchgfx9ContainerE)
<LI> drawable.o(.constdata__ZTVN8touchgfx8DrawableE)
<LI> screen1viewbase.o(.constdata__ZTVN8touchgfx6WidgetE)
</UL>
<P><STRONG><a name="[296]"></a>touchgfx::Gestures::registerDragEvent(unsigned short, unsigned short, unsigned short, unsigned short)</STRONG> (Thumb, 122 bytes, Stack size 40 bytes, gestures.o(i._ZN8touchgfx8Gestures17registerDragEventEtttt))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = touchgfx::Gestures::registerDragEvent(unsigned short, unsigned short, unsigned short, unsigned short)
</UL>
<BR>[Calls]<UL><LI><a href="#[2b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;T1 touchgfx::abs&lang;short&rang;(T1)
</UL>
<BR>[Called By]<UL><LI><a href="#[101]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::HAL::touch(int, int)
</UL>

<P><STRONG><a name="[297]"></a>touchgfx::Gestures::registerClickEvent(touchgfx::ClickEvent::ClickEventType, unsigned short, unsigned short)</STRONG> (Thumb, 152 bytes, Stack size 48 bytes, gestures.o(i._ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt))
<BR><BR>[Stack]<UL><LI>Max Depth = 60<LI>Call Chain = touchgfx::Gestures::registerClickEvent(touchgfx::ClickEvent::ClickEventType, unsigned short, unsigned short) &rArr; touchgfx::GestureEvent::GestureEvent(touchgfx::GestureEvent::GestureEventType, short, short, short)
</UL>
<BR>[Calls]<UL><LI><a href="#[2b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::GestureEvent::GestureEvent(touchgfx::GestureEvent::GestureEventType, short, short, short)
</UL>
<BR>[Called By]<UL><LI><a href="#[102]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::HAL::noTouch()
<LI><a href="#[101]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::HAL::touch(int, int)
</UL>

<P><STRONG><a name="[293]"></a>touchgfx::Gestures::registerEventListener(touchgfx::UIEventListener&)</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, gestures.o(i._ZN8touchgfx8Gestures21registerEventListenerERNS_15UIEventListenerE))
<BR><BR>[Called By]<UL><LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::HAL::registerEventListener(touchgfx::UIEventListener&)
</UL>

<P><STRONG><a name="[294]"></a>touchgfx::Gestures::tick()</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, gestures.o(i._ZN8touchgfx8Gestures4tickEv))
<BR><BR>[Called By]<UL><LI><a href="#[fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::HAL::tick()
</UL>

<P><STRONG><a name="[17f]"></a>touchgfx::LCD16bpp::fillBuffer(unsigned char*, unsigned short, const touchgfx::Rect&, touchgfx::colortype, unsigned char)</STRONG> (Thumb, 352 bytes, Stack size 64 bytes, lcd16bpp.o(i._ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh))
<BR><BR>[Stack]<UL><LI>Max Depth = 112 + Unknown Stack Size
<LI>Call Chain = touchgfx::LCD16bpp::fillBuffer(unsigned char*, unsigned short, const touchgfx::Rect&, touchgfx::colortype, unsigned char) &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[2b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD::div255(unsigned short)
<LI><a href="#[255]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Rect::isEmpty() const
<LI><a href="#[2ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::getNativeColorFromRGB(unsigned char, unsigned char, unsigned char)
<LI><a href="#[2bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::getNativeColor(touchgfx::colortype)
<LI><a href="#[2b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Color::getGreenFromRGB565(unsigned short)
<LI><a href="#[2b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Color::getBlueFromRGB565(unsigned short)
<LI><a href="#[2b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Color::getRedFromRGB565(unsigned short)
<LI><a href="#[1b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;abort
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lcd16bpp.o(.constdata__ZTVN8touchgfx8LCD16bppE)
</UL>
<P><STRONG><a name="[2bb]"></a>touchgfx::LCD16bpp::getNativeColor(touchgfx::colortype)</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, lcd16bpp.o(i._ZN8touchgfx8LCD16bpp14getNativeColorENS_9colortypeE))
<BR><BR>[Called By]<UL><LI><a href="#[181]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::drawGlyph(unsigned short*, touchgfx::Rect, short, short, unsigned short, unsigned short, const touchgfx::Rect&, const touchgfx::GlyphNode*, const unsigned char*, unsigned char, touchgfx::colortype, unsigned char, unsigned char, touchgfx::TextRotation)
<LI><a href="#[17f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::fillBuffer(unsigned char*, unsigned short, const touchgfx::Rect&, touchgfx::colortype, unsigned char)
</UL>

<P><STRONG><a name="[b1]"></a>touchgfx::LCD16bpp::DecompressorL8_L4::~DecompressorL8_L4()</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, lcd16bpp.o(i._ZN8touchgfx8LCD16bpp17DecompressorL8_L4D1Ev))
<BR>[Address Reference Count : 2]<UL><LI> lcd16bpp.o(i._ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev)
<LI> lcd16bpp.o(.constdata__ZTVN8touchgfx8LCD16bpp17DecompressorL8_L4E)
</UL>
<P><STRONG><a name="[39b]"></a>touchgfx::LCD16bpp::DecompressorL8_L4::~DecompressorL8_L4__sub_object()</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, lcd16bpp.o(i._ZN8touchgfx8LCD16bpp17DecompressorL8_L4D1Ev), UNUSED)

<P><STRONG><a name="[b2]"></a>touchgfx::LCD16bpp::DecompressorL8_RLE::~DecompressorL8_RLE()</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, lcd16bpp.o(i._ZN8touchgfx8LCD16bpp18DecompressorL8_RLED1Ev))
<BR>[Address Reference Count : 2]<UL><LI> lcd16bpp.o(i._ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv)
<LI> lcd16bpp.o(.constdata__ZTVN8touchgfx8LCD16bpp18DecompressorL8_RLEE)
</UL>
<P><STRONG><a name="[39c]"></a>touchgfx::LCD16bpp::DecompressorL8_RLE::~DecompressorL8_RLE__sub_object()</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, lcd16bpp.o(i._ZN8touchgfx8LCD16bpp18DecompressorL8_RLED1Ev), UNUSED)

<P><STRONG><a name="[b3]"></a>touchgfx::LCD16bpp::DecompressorL8_LZW9::~DecompressorL8_LZW9()</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, lcd16bpp.o(i._ZN8touchgfx8LCD16bpp19DecompressorL8_LZW9D1Ev))
<BR>[Address Reference Count : 2]<UL><LI> lcd16bpp.o(i._ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev)
<LI> lcd16bpp.o(.constdata__ZTVN8touchgfx8LCD16bpp19DecompressorL8_LZW9E)
</UL>
<P><STRONG><a name="[39d]"></a>touchgfx::LCD16bpp::DecompressorL8_LZW9::~DecompressorL8_LZW9__sub_object()</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, lcd16bpp.o(i._ZN8touchgfx8LCD16bpp19DecompressorL8_LZW9D1Ev), UNUSED)

<P><STRONG><a name="[2bc]"></a>touchgfx::LCD16bpp::getFramebufferStride()</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, lcd16bpp.o(i._ZN8touchgfx8LCD16bpp20getFramebufferStrideEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 56 + Unknown Stack Size
<LI>Call Chain = touchgfx::LCD16bpp::getFramebufferStride() &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[1b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;abort
</UL>
<BR>[Called By]<UL><LI><a href="#[2d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::nextPixel(bool, touchgfx::TextRotation)
<LI><a href="#[2d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::nextLine(bool, touchgfx::TextRotation)
</UL>

<P><STRONG><a name="[2bd]"></a>touchgfx::LCD16bpp::enableTextureMapperA4()</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, lcd16bpp.o(i._ZN8touchgfx8LCD16bpp21enableTextureMapperA4Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = touchgfx::LCD16bpp::enableTextureMapperA4() &rArr; touchgfx::LCD16bpp::enableTextureMapperA4_BilinearInterpolation() &rArr; __aeabi_atexit &rArr; malloc &rArr; __Heap_Full &rArr; __Heap_ProvideMemory &rArr; free
</UL>
<BR>[Calls]<UL><LI><a href="#[2be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::enableTextureMapperA4_BilinearInterpolation()
<LI><a href="#[2bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::enableTextureMapperA4_NearestNeighbor()
</UL>
<BR>[Called By]<UL><LI><a href="#[243]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::enableTextureMapperAll()
</UL>

<P><STRONG><a name="[2ba]"></a>touchgfx::LCD16bpp::getNativeColorFromRGB(unsigned char, unsigned char, unsigned char)</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, lcd16bpp.o(i._ZN8touchgfx8LCD16bpp21getNativeColorFromRGBEhhh))
<BR><BR>[Called By]<UL><LI><a href="#[181]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::drawGlyph(unsigned short*, touchgfx::Rect, short, short, unsigned short, unsigned short, const touchgfx::Rect&, const touchgfx::GlyphNode*, const unsigned char*, unsigned char, touchgfx::colortype, unsigned char, unsigned char, touchgfx::TextRotation)
<LI><a href="#[17f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::fillBuffer(unsigned char*, unsigned short, const touchgfx::Rect&, touchgfx::colortype, unsigned char)
</UL>

<P><STRONG><a name="[243]"></a>touchgfx::LCD16bpp::enableTextureMapperAll()</STRONG> (Thumb, 42 bytes, Stack size 8 bytes, lcd16bpp.o(i._ZN8touchgfx8LCD16bpp22enableTextureMapperAllEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = touchgfx::LCD16bpp::enableTextureMapperAll() &rArr; touchgfx::LCD16bpp::enableTextureMapperL8_ARGB8888() &rArr; touchgfx::LCD16bpp::enableTextureMapperL8_ARGB8888_BilinearInterpolation() &rArr; __aeabi_atexit &rArr; malloc &rArr; __Heap_Full &rArr; __Heap_ProvideMemory &rArr; free
</UL>
<BR>[Calls]<UL><LI><a href="#[2c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::enableTextureMapperL8_ARGB8888()
<LI><a href="#[2c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::enableTextureMapperL8_RGB888()
<LI><a href="#[2c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::enableTextureMapperL8_RGB565()
<LI><a href="#[2c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::enableTextureMapperARGB8888()
<LI><a href="#[2c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::enableTextureMapperRGB565()
<LI><a href="#[2bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::enableTextureMapperA4()
</UL>
<BR>[Called By]<UL><LI><a href="#[23c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FrontendApplicationBase::FrontendApplicationBase(Model&, FrontendHeap&)
</UL>

<P><STRONG><a name="[2c5]"></a>touchgfx::LCD16bpp::enableDecompressorL8_L4()</STRONG> (Thumb, 56 bytes, Stack size 8 bytes, lcd16bpp.o(i._ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = touchgfx::LCD16bpp::enableDecompressorL8_L4() &rArr; __aeabi_atexit &rArr; malloc &rArr; __Heap_Full &rArr; __Heap_ProvideMemory &rArr; free
</UL>
<BR>[Calls]<UL><LI><a href="#[227]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxa_guard_acquire
<LI><a href="#[1b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_atexit
</UL>
<BR>[Called By]<UL><LI><a href="#[244]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::enableDecompressorL8_All()
</UL>

<P><STRONG><a name="[244]"></a>touchgfx::LCD16bpp::enableDecompressorL8_All()</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, lcd16bpp.o(i._ZN8touchgfx8LCD16bpp24enableDecompressorL8_AllEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = touchgfx::LCD16bpp::enableDecompressorL8_All() &rArr; touchgfx::LCD16bpp::enableDecompressorL8_LZW9() &rArr; __aeabi_atexit &rArr; malloc &rArr; __Heap_Full &rArr; __Heap_ProvideMemory &rArr; free
</UL>
<BR>[Calls]<UL><LI><a href="#[2c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::enableDecompressorL8_LZW9()
<LI><a href="#[2c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::enableDecompressorL8_RLE()
<LI><a href="#[2c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::enableDecompressorL8_L4()
</UL>
<BR>[Called By]<UL><LI><a href="#[23c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FrontendApplicationBase::FrontendApplicationBase(Model&, FrontendHeap&)
</UL>

<P><STRONG><a name="[2c6]"></a>touchgfx::LCD16bpp::enableDecompressorL8_RLE()</STRONG> (Thumb, 58 bytes, Stack size 8 bytes, lcd16bpp.o(i._ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = touchgfx::LCD16bpp::enableDecompressorL8_RLE() &rArr; __aeabi_atexit &rArr; malloc &rArr; __Heap_Full &rArr; __Heap_ProvideMemory &rArr; free
</UL>
<BR>[Calls]<UL><LI><a href="#[227]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxa_guard_acquire
<LI><a href="#[1b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_atexit
</UL>
<BR>[Called By]<UL><LI><a href="#[244]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::enableDecompressorL8_All()
</UL>

<P><STRONG><a name="[2c7]"></a>touchgfx::LCD16bpp::enableDecompressorL8_LZW9()</STRONG> (Thumb, 54 bytes, Stack size 8 bytes, lcd16bpp.o(i._ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = touchgfx::LCD16bpp::enableDecompressorL8_LZW9() &rArr; __aeabi_atexit &rArr; malloc &rArr; __Heap_Full &rArr; __Heap_ProvideMemory &rArr; free
</UL>
<BR>[Calls]<UL><LI><a href="#[227]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxa_guard_acquire
<LI><a href="#[1b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_atexit
</UL>
<BR>[Called By]<UL><LI><a href="#[244]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::enableDecompressorL8_All()
</UL>

<P><STRONG><a name="[2c4]"></a>touchgfx::LCD16bpp::enableTextureMapperRGB565()</STRONG> (Thumb, 30 bytes, Stack size 8 bytes, lcd16bpp.o(i._ZN8touchgfx8LCD16bpp25enableTextureMapperRGB565Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = touchgfx::LCD16bpp::enableTextureMapperRGB565() &rArr; touchgfx::LCD16bpp::enableTextureMapperRGB565_NonOpaque_BilinearInterpolation() &rArr; __aeabi_atexit &rArr; malloc &rArr; __Heap_Full &rArr; __Heap_ProvideMemory &rArr; free
</UL>
<BR>[Calls]<UL><LI><a href="#[2ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::enableTextureMapperRGB565_NonOpaque_BilinearInterpolation()
<LI><a href="#[2c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::enableTextureMapperRGB565_Opaque_BilinearInterpolation()
<LI><a href="#[2cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::enableTextureMapperRGB565_NonOpaque_NearestNeighbor()
<LI><a href="#[2c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::enableTextureMapperRGB565_Opaque_NearestNeighbor()
</UL>
<BR>[Called By]<UL><LI><a href="#[243]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::enableTextureMapperAll()
</UL>

<P><STRONG><a name="[2c0]"></a>touchgfx::LCD16bpp::enableTextureMapperARGB8888()</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, lcd16bpp.o(i._ZN8touchgfx8LCD16bpp27enableTextureMapperARGB8888Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = touchgfx::LCD16bpp::enableTextureMapperARGB8888() &rArr; touchgfx::LCD16bpp::enableTextureMapperARGB8888_BilinearInterpolation() &rArr; __aeabi_atexit &rArr; malloc &rArr; __Heap_Full &rArr; __Heap_ProvideMemory &rArr; free
</UL>
<BR>[Calls]<UL><LI><a href="#[2cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::enableTextureMapperARGB8888_BilinearInterpolation()
<LI><a href="#[2cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::enableTextureMapperARGB8888_NearestNeighbor()
</UL>
<BR>[Called By]<UL><LI><a href="#[243]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::enableTextureMapperAll()
</UL>

<P><STRONG><a name="[2c2]"></a>touchgfx::LCD16bpp::enableTextureMapperL8_RGB565()</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, lcd16bpp.o(i._ZN8touchgfx8LCD16bpp28enableTextureMapperL8_RGB565Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = touchgfx::LCD16bpp::enableTextureMapperL8_RGB565() &rArr; touchgfx::LCD16bpp::enableTextureMapperL8_RGB565_BilinearInterpolation() &rArr; __aeabi_atexit &rArr; malloc &rArr; __Heap_Full &rArr; __Heap_ProvideMemory &rArr; free
</UL>
<BR>[Calls]<UL><LI><a href="#[2ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::enableTextureMapperL8_RGB565_BilinearInterpolation()
<LI><a href="#[2cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::enableTextureMapperL8_RGB565_NearestNeighbor()
</UL>
<BR>[Called By]<UL><LI><a href="#[243]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::enableTextureMapperAll()
</UL>

<P><STRONG><a name="[2c3]"></a>touchgfx::LCD16bpp::enableTextureMapperL8_RGB888()</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, lcd16bpp.o(i._ZN8touchgfx8LCD16bpp28enableTextureMapperL8_RGB888Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = touchgfx::LCD16bpp::enableTextureMapperL8_RGB888() &rArr; touchgfx::LCD16bpp::enableTextureMapperL8_RGB888_BilinearInterpolation() &rArr; __aeabi_atexit &rArr; malloc &rArr; __Heap_Full &rArr; __Heap_ProvideMemory &rArr; free
</UL>
<BR>[Calls]<UL><LI><a href="#[2d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::enableTextureMapperL8_RGB888_BilinearInterpolation()
<LI><a href="#[2d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::enableTextureMapperL8_RGB888_NearestNeighbor()
</UL>
<BR>[Called By]<UL><LI><a href="#[243]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::enableTextureMapperAll()
</UL>

<P><STRONG><a name="[2c1]"></a>touchgfx::LCD16bpp::enableTextureMapperL8_ARGB8888()</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, lcd16bpp.o(i._ZN8touchgfx8LCD16bpp30enableTextureMapperL8_ARGB8888Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = touchgfx::LCD16bpp::enableTextureMapperL8_ARGB8888() &rArr; touchgfx::LCD16bpp::enableTextureMapperL8_ARGB8888_BilinearInterpolation() &rArr; __aeabi_atexit &rArr; malloc &rArr; __Heap_Full &rArr; __Heap_ProvideMemory &rArr; free
</UL>
<BR>[Calls]<UL><LI><a href="#[2d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::enableTextureMapperL8_ARGB8888_BilinearInterpolation()
<LI><a href="#[2d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::enableTextureMapperL8_ARGB8888_NearestNeighbor()
</UL>
<BR>[Called By]<UL><LI><a href="#[243]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::enableTextureMapperAll()
</UL>

<P><STRONG><a name="[b4]"></a>touchgfx::LCD16bpp::TextureMapper_A4_NearestNeighbor_GA::~TextureMapper_A4_NearestNeighbor_GA()</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, lcd16bpp.o(i._ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GAD1Ev))
<BR>[Address Reference Count : 2]<UL><LI> lcd16bpp.o(i._ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv)
<LI> lcd16bpp.o(.constdata__ZTVN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GAE)
</UL>
<P><STRONG><a name="[39e]"></a>touchgfx::LCD16bpp::TextureMapper_A4_NearestNeighbor_GA::~TextureMapper_A4_NearestNeighbor_GA__sub_object()</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, lcd16bpp.o(i._ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GAD1Ev), UNUSED)

<P><STRONG><a name="[b5]"></a>touchgfx::LCD16bpp::TextureMapper_A4_NearestNeighbor_NoGA::~TextureMapper_A4_NearestNeighbor_NoGA()</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, lcd16bpp.o(i._ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGAD1Ev))
<BR>[Address Reference Count : 2]<UL><LI> lcd16bpp.o(i._ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv)
<LI> lcd16bpp.o(.constdata__ZTVN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGAE)
</UL>
<P><STRONG><a name="[39f]"></a>touchgfx::LCD16bpp::TextureMapper_A4_NearestNeighbor_NoGA::~TextureMapper_A4_NearestNeighbor_NoGA__sub_object()</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, lcd16bpp.o(i._ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGAD1Ev), UNUSED)

<P><STRONG><a name="[2bf]"></a>touchgfx::LCD16bpp::enableTextureMapperA4_NearestNeighbor()</STRONG> (Thumb, 102 bytes, Stack size 16 bytes, lcd16bpp.o(i._ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = touchgfx::LCD16bpp::enableTextureMapperA4_NearestNeighbor() &rArr; __aeabi_atexit &rArr; malloc &rArr; __Heap_Full &rArr; __Heap_ProvideMemory &rArr; free
</UL>
<BR>[Calls]<UL><LI><a href="#[227]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxa_guard_acquire
<LI><a href="#[1b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_atexit
</UL>
<BR>[Called By]<UL><LI><a href="#[2bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::enableTextureMapperA4()
</UL>

<P><STRONG><a name="[b6]"></a>touchgfx::LCD16bpp::TextureMapper_A4_BilinearInterpolation_GA::~TextureMapper_A4_BilinearInterpolation_GA()</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, lcd16bpp.o(i._ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GAD1Ev))
<BR>[Address Reference Count : 2]<UL><LI> lcd16bpp.o(i._ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv)
<LI> lcd16bpp.o(.constdata__ZTVN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GAE)
</UL>
<P><STRONG><a name="[3a0]"></a>touchgfx::LCD16bpp::TextureMapper_A4_BilinearInterpolation_GA::~TextureMapper_A4_BilinearInterpolation_GA__sub_object()</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, lcd16bpp.o(i._ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GAD1Ev), UNUSED)

<P><STRONG><a name="[b7]"></a>touchgfx::LCD16bpp::TextureMapper_A4_BilinearInterpolation_NoGA::~TextureMapper_A4_BilinearInterpolation_NoGA()</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, lcd16bpp.o(i._ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGAD1Ev))
<BR>[Address Reference Count : 2]<UL><LI> lcd16bpp.o(i._ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv)
<LI> lcd16bpp.o(.constdata__ZTVN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGAE)
</UL>
<P><STRONG><a name="[3a1]"></a>touchgfx::LCD16bpp::TextureMapper_A4_BilinearInterpolation_NoGA::~TextureMapper_A4_BilinearInterpolation_NoGA__sub_object()</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, lcd16bpp.o(i._ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGAD1Ev), UNUSED)

<P><STRONG><a name="[2be]"></a>touchgfx::LCD16bpp::enableTextureMapperA4_BilinearInterpolation()</STRONG> (Thumb, 102 bytes, Stack size 16 bytes, lcd16bpp.o(i._ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = touchgfx::LCD16bpp::enableTextureMapperA4_BilinearInterpolation() &rArr; __aeabi_atexit &rArr; malloc &rArr; __Heap_Full &rArr; __Heap_ProvideMemory &rArr; free
</UL>
<BR>[Calls]<UL><LI><a href="#[227]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxa_guard_acquire
<LI><a href="#[1b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_atexit
</UL>
<BR>[Called By]<UL><LI><a href="#[2bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::enableTextureMapperA4()
</UL>

<P><STRONG><a name="[2cd]"></a>touchgfx::LCD16bpp::enableTextureMapperARGB8888_NearestNeighbor()</STRONG> (Thumb, 102 bytes, Stack size 16 bytes, lcd16bpp.o(i._ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = touchgfx::LCD16bpp::enableTextureMapperARGB8888_NearestNeighbor() &rArr; __aeabi_atexit &rArr; malloc &rArr; __Heap_Full &rArr; __Heap_ProvideMemory &rArr; free
</UL>
<BR>[Calls]<UL><LI><a href="#[227]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxa_guard_acquire
<LI><a href="#[1b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_atexit
</UL>
<BR>[Called By]<UL><LI><a href="#[2c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::enableTextureMapperARGB8888()
</UL>

<P><STRONG><a name="[2cf]"></a>touchgfx::LCD16bpp::enableTextureMapperL8_RGB565_NearestNeighbor()</STRONG> (Thumb, 98 bytes, Stack size 16 bytes, lcd16bpp.o(i._ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = touchgfx::LCD16bpp::enableTextureMapperL8_RGB565_NearestNeighbor() &rArr; __aeabi_atexit &rArr; malloc &rArr; __Heap_Full &rArr; __Heap_ProvideMemory &rArr; free
</UL>
<BR>[Calls]<UL><LI><a href="#[227]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxa_guard_acquire
<LI><a href="#[1b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_atexit
</UL>
<BR>[Called By]<UL><LI><a href="#[2c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::enableTextureMapperL8_RGB565()
</UL>

<P><STRONG><a name="[2d1]"></a>touchgfx::LCD16bpp::enableTextureMapperL8_RGB888_NearestNeighbor()</STRONG> (Thumb, 102 bytes, Stack size 16 bytes, lcd16bpp.o(i._ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = touchgfx::LCD16bpp::enableTextureMapperL8_RGB888_NearestNeighbor() &rArr; __aeabi_atexit &rArr; malloc &rArr; __Heap_Full &rArr; __Heap_ProvideMemory &rArr; free
</UL>
<BR>[Calls]<UL><LI><a href="#[227]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxa_guard_acquire
<LI><a href="#[1b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_atexit
</UL>
<BR>[Called By]<UL><LI><a href="#[2c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::enableTextureMapperL8_RGB888()
</UL>

<P><STRONG><a name="[c0]"></a>touchgfx::LCD16bpp::TextureMapper_RGB565_Opaque_NearestNeighbor_GA::~TextureMapper_RGB565_Opaque_NearestNeighbor_GA()</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, lcd16bpp.o(i._ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GAD1Ev))
<BR>[Address Reference Count : 2]<UL><LI> lcd16bpp.o(i._ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv)
<LI> lcd16bpp.o(.constdata__ZTVN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GAE)
</UL>
<P><STRONG><a name="[3a2]"></a>touchgfx::LCD16bpp::TextureMapper_RGB565_Opaque_NearestNeighbor_GA::~TextureMapper_RGB565_Opaque_NearestNeighbor_GA__sub_object()</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, lcd16bpp.o(i._ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GAD1Ev), UNUSED)

<P><STRONG><a name="[2d3]"></a>touchgfx::LCD16bpp::enableTextureMapperL8_ARGB8888_NearestNeighbor()</STRONG> (Thumb, 102 bytes, Stack size 16 bytes, lcd16bpp.o(i._ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = touchgfx::LCD16bpp::enableTextureMapperL8_ARGB8888_NearestNeighbor() &rArr; __aeabi_atexit &rArr; malloc &rArr; __Heap_Full &rArr; __Heap_ProvideMemory &rArr; free
</UL>
<BR>[Calls]<UL><LI><a href="#[227]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxa_guard_acquire
<LI><a href="#[1b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_atexit
</UL>
<BR>[Called By]<UL><LI><a href="#[2c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::enableTextureMapperL8_ARGB8888()
</UL>

<P><STRONG><a name="[c1]"></a>touchgfx::LCD16bpp::TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA::~TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA()</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, lcd16bpp.o(i._ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGAD1Ev))
<BR>[Address Reference Count : 2]<UL><LI> lcd16bpp.o(i._ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv)
<LI> lcd16bpp.o(.constdata__ZTVN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGAE)
</UL>
<P><STRONG><a name="[3a3]"></a>touchgfx::LCD16bpp::TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA::~TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA__sub_object()</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, lcd16bpp.o(i._ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGAD1Ev), UNUSED)

<P><STRONG><a name="[2c9]"></a>touchgfx::LCD16bpp::enableTextureMapperRGB565_Opaque_NearestNeighbor()</STRONG> (Thumb, 90 bytes, Stack size 16 bytes, lcd16bpp.o(i._ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = touchgfx::LCD16bpp::enableTextureMapperRGB565_Opaque_NearestNeighbor() &rArr; __aeabi_atexit &rArr; malloc &rArr; __Heap_Full &rArr; __Heap_ProvideMemory &rArr; free
</UL>
<BR>[Calls]<UL><LI><a href="#[227]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxa_guard_acquire
<LI><a href="#[1b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_atexit
</UL>
<BR>[Called By]<UL><LI><a href="#[2c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::enableTextureMapperRGB565()
</UL>

<P><STRONG><a name="[ba]"></a>touchgfx::LCD16bpp::TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA::~TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA()</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, lcd16bpp.o(i._ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GAD1Ev))
<BR>[Address Reference Count : 2]<UL><LI> lcd16bpp.o(i._ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv)
<LI> lcd16bpp.o(.constdata__ZTVN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GAE)
</UL>
<P><STRONG><a name="[3a4]"></a>touchgfx::LCD16bpp::TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA::~TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA__sub_object()</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, lcd16bpp.o(i._ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GAD1Ev), UNUSED)

<P><STRONG><a name="[bc]"></a>touchgfx::LCD16bpp::TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA::~TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA()</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, lcd16bpp.o(i._ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GAD1Ev))
<BR>[Address Reference Count : 2]<UL><LI> lcd16bpp.o(i._ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv)
<LI> lcd16bpp.o(.constdata__ZTVN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GAE)
</UL>
<P><STRONG><a name="[3a5]"></a>touchgfx::LCD16bpp::TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA::~TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA__sub_object()</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, lcd16bpp.o(i._ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GAD1Ev), UNUSED)

<P><STRONG><a name="[c8]"></a>touchgfx::LCD16bpp::TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA::~TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA()</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, lcd16bpp.o(i._ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GAD1Ev))
<BR>[Address Reference Count : 2]<UL><LI> lcd16bpp.o(i._ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv)
<LI> lcd16bpp.o(.constdata__ZTVN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GAE)
</UL>
<P><STRONG><a name="[3a6]"></a>touchgfx::LCD16bpp::TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA::~TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA__sub_object()</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, lcd16bpp.o(i._ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GAD1Ev), UNUSED)

<P><STRONG><a name="[2cc]"></a>touchgfx::LCD16bpp::enableTextureMapperARGB8888_BilinearInterpolation()</STRONG> (Thumb, 102 bytes, Stack size 16 bytes, lcd16bpp.o(i._ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = touchgfx::LCD16bpp::enableTextureMapperARGB8888_BilinearInterpolation() &rArr; __aeabi_atexit &rArr; malloc &rArr; __Heap_Full &rArr; __Heap_ProvideMemory &rArr; free
</UL>
<BR>[Calls]<UL><LI><a href="#[227]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxa_guard_acquire
<LI><a href="#[1b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_atexit
</UL>
<BR>[Called By]<UL><LI><a href="#[2c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::enableTextureMapperARGB8888()
</UL>

<P><STRONG><a name="[2ce]"></a>touchgfx::LCD16bpp::enableTextureMapperL8_RGB565_BilinearInterpolation()</STRONG> (Thumb, 90 bytes, Stack size 16 bytes, lcd16bpp.o(i._ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = touchgfx::LCD16bpp::enableTextureMapperL8_RGB565_BilinearInterpolation() &rArr; __aeabi_atexit &rArr; malloc &rArr; __Heap_Full &rArr; __Heap_ProvideMemory &rArr; free
</UL>
<BR>[Calls]<UL><LI><a href="#[227]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxa_guard_acquire
<LI><a href="#[1b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_atexit
</UL>
<BR>[Called By]<UL><LI><a href="#[2c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::enableTextureMapperL8_RGB565()
</UL>

<P><STRONG><a name="[2d0]"></a>touchgfx::LCD16bpp::enableTextureMapperL8_RGB888_BilinearInterpolation()</STRONG> (Thumb, 102 bytes, Stack size 16 bytes, lcd16bpp.o(i._ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = touchgfx::LCD16bpp::enableTextureMapperL8_RGB888_BilinearInterpolation() &rArr; __aeabi_atexit &rArr; malloc &rArr; __Heap_Full &rArr; __Heap_ProvideMemory &rArr; free
</UL>
<BR>[Calls]<UL><LI><a href="#[227]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxa_guard_acquire
<LI><a href="#[1b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_atexit
</UL>
<BR>[Called By]<UL><LI><a href="#[2c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::enableTextureMapperL8_RGB888()
</UL>

<P><STRONG><a name="[b8]"></a>touchgfx::LCD16bpp::TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA::~TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA()</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, lcd16bpp.o(i._ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GAD1Ev))
<BR>[Address Reference Count : 2]<UL><LI> lcd16bpp.o(i._ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv)
<LI> lcd16bpp.o(.constdata__ZTVN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GAE)
</UL>
<P><STRONG><a name="[3a7]"></a>touchgfx::LCD16bpp::TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA::~TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA__sub_object()</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, lcd16bpp.o(i._ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GAD1Ev), UNUSED)

<P><STRONG><a name="[bb]"></a>touchgfx::LCD16bpp::TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA::~TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA()</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, lcd16bpp.o(i._ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGAD1Ev))
<BR>[Address Reference Count : 2]<UL><LI> lcd16bpp.o(i._ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv)
<LI> lcd16bpp.o(.constdata__ZTVN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGAE)
</UL>
<P><STRONG><a name="[3a8]"></a>touchgfx::LCD16bpp::TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA::~TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA__sub_object()</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, lcd16bpp.o(i._ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGAD1Ev), UNUSED)

<P><STRONG><a name="[bd]"></a>touchgfx::LCD16bpp::TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA::~TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA()</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, lcd16bpp.o(i._ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGAD1Ev))
<BR>[Address Reference Count : 2]<UL><LI> lcd16bpp.o(i._ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv)
<LI> lcd16bpp.o(.constdata__ZTVN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGAE)
</UL>
<P><STRONG><a name="[3a9]"></a>touchgfx::LCD16bpp::TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA::~TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA__sub_object()</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, lcd16bpp.o(i._ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGAD1Ev), UNUSED)

<P><STRONG><a name="[c9]"></a>touchgfx::LCD16bpp::TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA::~TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA()</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, lcd16bpp.o(i._ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGAD1Ev))
<BR>[Address Reference Count : 2]<UL><LI> lcd16bpp.o(i._ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv)
<LI> lcd16bpp.o(.constdata__ZTVN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGAE)
</UL>
<P><STRONG><a name="[3aa]"></a>touchgfx::LCD16bpp::TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA::~TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA__sub_object()</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, lcd16bpp.o(i._ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGAD1Ev), UNUSED)

<P><STRONG><a name="[2cb]"></a>touchgfx::LCD16bpp::enableTextureMapperRGB565_NonOpaque_NearestNeighbor()</STRONG> (Thumb, 98 bytes, Stack size 16 bytes, lcd16bpp.o(i._ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = touchgfx::LCD16bpp::enableTextureMapperRGB565_NonOpaque_NearestNeighbor() &rArr; __aeabi_atexit &rArr; malloc &rArr; __Heap_Full &rArr; __Heap_ProvideMemory &rArr; free
</UL>
<BR>[Calls]<UL><LI><a href="#[227]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxa_guard_acquire
<LI><a href="#[1b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_atexit
</UL>
<BR>[Called By]<UL><LI><a href="#[2c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::enableTextureMapperRGB565()
</UL>

<P><STRONG><a name="[cc]"></a>touchgfx::LCD16bpp::TextureMapper_RGB565_Opaque_BilinearInterpolation_GA::~TextureMapper_RGB565_Opaque_BilinearInterpolation_GA()</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, lcd16bpp.o(i._ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GAD1Ev))
<BR>[Address Reference Count : 2]<UL><LI> lcd16bpp.o(i._ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv)
<LI> lcd16bpp.o(.constdata__ZTVN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GAE)
</UL>
<P><STRONG><a name="[3ab]"></a>touchgfx::LCD16bpp::TextureMapper_RGB565_Opaque_BilinearInterpolation_GA::~TextureMapper_RGB565_Opaque_BilinearInterpolation_GA__sub_object()</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, lcd16bpp.o(i._ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GAD1Ev), UNUSED)

<P><STRONG><a name="[2d2]"></a>touchgfx::LCD16bpp::enableTextureMapperL8_ARGB8888_BilinearInterpolation()</STRONG> (Thumb, 102 bytes, Stack size 16 bytes, lcd16bpp.o(i._ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = touchgfx::LCD16bpp::enableTextureMapperL8_ARGB8888_BilinearInterpolation() &rArr; __aeabi_atexit &rArr; malloc &rArr; __Heap_Full &rArr; __Heap_ProvideMemory &rArr; free
</UL>
<BR>[Calls]<UL><LI><a href="#[227]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxa_guard_acquire
<LI><a href="#[1b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_atexit
</UL>
<BR>[Called By]<UL><LI><a href="#[2c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::enableTextureMapperL8_ARGB8888()
</UL>

<P><STRONG><a name="[b9]"></a>touchgfx::LCD16bpp::TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA::~TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA()</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, lcd16bpp.o(i._ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGAD1Ev))
<BR>[Address Reference Count : 2]<UL><LI> lcd16bpp.o(i._ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv)
<LI> lcd16bpp.o(.constdata__ZTVN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGAE)
</UL>
<P><STRONG><a name="[3ac]"></a>touchgfx::LCD16bpp::TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA::~TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA__sub_object()</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, lcd16bpp.o(i._ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGAD1Ev), UNUSED)

<P><STRONG><a name="[be]"></a>touchgfx::LCD16bpp::TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA::~TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA()</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, lcd16bpp.o(i._ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GAD1Ev))
<BR>[Address Reference Count : 2]<UL><LI> lcd16bpp.o(i._ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv)
<LI> lcd16bpp.o(.constdata__ZTVN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GAE)
</UL>
<P><STRONG><a name="[3ad]"></a>touchgfx::LCD16bpp::TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA::~TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA__sub_object()</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, lcd16bpp.o(i._ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GAD1Ev), UNUSED)

<P><STRONG><a name="[cd]"></a>touchgfx::LCD16bpp::TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA::~TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA()</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, lcd16bpp.o(i._ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGAD1Ev))
<BR>[Address Reference Count : 2]<UL><LI> lcd16bpp.o(i._ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv)
<LI> lcd16bpp.o(.constdata__ZTVN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGAE)
</UL>
<P><STRONG><a name="[3ae]"></a>touchgfx::LCD16bpp::TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA::~TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA__sub_object()</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, lcd16bpp.o(i._ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGAD1Ev), UNUSED)

<P><STRONG><a name="[2c8]"></a>touchgfx::LCD16bpp::enableTextureMapperRGB565_Opaque_BilinearInterpolation()</STRONG> (Thumb, 102 bytes, Stack size 16 bytes, lcd16bpp.o(i._ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = touchgfx::LCD16bpp::enableTextureMapperRGB565_Opaque_BilinearInterpolation() &rArr; __aeabi_atexit &rArr; malloc &rArr; __Heap_Full &rArr; __Heap_ProvideMemory &rArr; free
</UL>
<BR>[Calls]<UL><LI><a href="#[227]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxa_guard_acquire
<LI><a href="#[1b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_atexit
</UL>
<BR>[Called By]<UL><LI><a href="#[2c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::enableTextureMapperRGB565()
</UL>

<P><STRONG><a name="[c4]"></a>touchgfx::LCD16bpp::TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA::~TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA()</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, lcd16bpp.o(i._ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GAD1Ev))
<BR>[Address Reference Count : 2]<UL><LI> lcd16bpp.o(i._ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv)
<LI> lcd16bpp.o(.constdata__ZTVN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GAE)
</UL>
<P><STRONG><a name="[3af]"></a>touchgfx::LCD16bpp::TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA::~TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA__sub_object()</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, lcd16bpp.o(i._ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GAD1Ev), UNUSED)

<P><STRONG><a name="[c6]"></a>touchgfx::LCD16bpp::TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA::~TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA()</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, lcd16bpp.o(i._ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GAD1Ev))
<BR>[Address Reference Count : 2]<UL><LI> lcd16bpp.o(i._ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv)
<LI> lcd16bpp.o(.constdata__ZTVN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GAE)
</UL>
<P><STRONG><a name="[3b0]"></a>touchgfx::LCD16bpp::TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA::~TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA__sub_object()</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, lcd16bpp.o(i._ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GAD1Ev), UNUSED)

<P><STRONG><a name="[ce]"></a>touchgfx::LCD16bpp::TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA::~TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA()</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, lcd16bpp.o(i._ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GAD1Ev))
<BR>[Address Reference Count : 2]<UL><LI> lcd16bpp.o(i._ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv)
<LI> lcd16bpp.o(.constdata__ZTVN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GAE)
</UL>
<P><STRONG><a name="[3b1]"></a>touchgfx::LCD16bpp::TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA::~TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA__sub_object()</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, lcd16bpp.o(i._ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GAD1Ev), UNUSED)

<P><STRONG><a name="[bf]"></a>touchgfx::LCD16bpp::TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA::~TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA()</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, lcd16bpp.o(i._ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGAD1Ev))
<BR>[Address Reference Count : 2]<UL><LI> lcd16bpp.o(i._ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv)
<LI> lcd16bpp.o(.constdata__ZTVN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGAE)
</UL>
<P><STRONG><a name="[3b2]"></a>touchgfx::LCD16bpp::TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA::~TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA__sub_object()</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, lcd16bpp.o(i._ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGAD1Ev), UNUSED)

<P><STRONG><a name="[c2]"></a>touchgfx::LCD16bpp::TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA::~TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA()</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, lcd16bpp.o(i._ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GAD1Ev))
<BR>[Address Reference Count : 2]<UL><LI> lcd16bpp.o(i._ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv)
<LI> lcd16bpp.o(.constdata__ZTVN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GAE)
</UL>
<P><STRONG><a name="[3b3]"></a>touchgfx::LCD16bpp::TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA::~TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA__sub_object()</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, lcd16bpp.o(i._ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GAD1Ev), UNUSED)

<P><STRONG><a name="[c5]"></a>touchgfx::LCD16bpp::TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA::~TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA()</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, lcd16bpp.o(i._ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGAD1Ev))
<BR>[Address Reference Count : 2]<UL><LI> lcd16bpp.o(i._ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv)
<LI> lcd16bpp.o(.constdata__ZTVN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGAE)
</UL>
<P><STRONG><a name="[3b4]"></a>touchgfx::LCD16bpp::TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA::~TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA__sub_object()</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, lcd16bpp.o(i._ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGAD1Ev), UNUSED)

<P><STRONG><a name="[c7]"></a>touchgfx::LCD16bpp::TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA::~TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA()</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, lcd16bpp.o(i._ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGAD1Ev))
<BR>[Address Reference Count : 2]<UL><LI> lcd16bpp.o(i._ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv)
<LI> lcd16bpp.o(.constdata__ZTVN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGAE)
</UL>
<P><STRONG><a name="[3b5]"></a>touchgfx::LCD16bpp::TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA::~TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA__sub_object()</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, lcd16bpp.o(i._ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGAD1Ev), UNUSED)

<P><STRONG><a name="[cf]"></a>touchgfx::LCD16bpp::TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA::~TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA()</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, lcd16bpp.o(i._ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGAD1Ev))
<BR>[Address Reference Count : 2]<UL><LI> lcd16bpp.o(i._ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv)
<LI> lcd16bpp.o(.constdata__ZTVN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGAE)
</UL>
<P><STRONG><a name="[3b6]"></a>touchgfx::LCD16bpp::TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA::~TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA__sub_object()</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, lcd16bpp.o(i._ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGAD1Ev), UNUSED)

<P><STRONG><a name="[2ca]"></a>touchgfx::LCD16bpp::enableTextureMapperRGB565_NonOpaque_BilinearInterpolation()</STRONG> (Thumb, 102 bytes, Stack size 16 bytes, lcd16bpp.o(i._ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = touchgfx::LCD16bpp::enableTextureMapperRGB565_NonOpaque_BilinearInterpolation() &rArr; __aeabi_atexit &rArr; malloc &rArr; __Heap_Full &rArr; __Heap_ProvideMemory &rArr; free
</UL>
<BR>[Calls]<UL><LI><a href="#[227]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxa_guard_acquire
<LI><a href="#[1b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_atexit
</UL>
<BR>[Called By]<UL><LI><a href="#[2c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::enableTextureMapperRGB565()
</UL>

<P><STRONG><a name="[c3]"></a>touchgfx::LCD16bpp::TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA::~TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA()</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, lcd16bpp.o(i._ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGAD1Ev))
<BR>[Address Reference Count : 2]<UL><LI> lcd16bpp.o(i._ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv)
<LI> lcd16bpp.o(.constdata__ZTVN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGAE)
</UL>
<P><STRONG><a name="[3b7]"></a>touchgfx::LCD16bpp::TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA::~TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA__sub_object()</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, lcd16bpp.o(i._ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGAD1Ev), UNUSED)

<P><STRONG><a name="[ca]"></a>touchgfx::LCD16bpp::TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA::~TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA()</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, lcd16bpp.o(i._ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GAD1Ev))
<BR>[Address Reference Count : 2]<UL><LI> lcd16bpp.o(i._ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv)
<LI> lcd16bpp.o(.constdata__ZTVN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GAE)
</UL>
<P><STRONG><a name="[3b8]"></a>touchgfx::LCD16bpp::TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA::~TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA__sub_object()</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, lcd16bpp.o(i._ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GAD1Ev), UNUSED)

<P><STRONG><a name="[cb]"></a>touchgfx::LCD16bpp::TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA::~TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA()</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, lcd16bpp.o(i._ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGAD1Ev))
<BR>[Address Reference Count : 2]<UL><LI> lcd16bpp.o(i._ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv)
<LI> lcd16bpp.o(.constdata__ZTVN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGAE)
</UL>
<P><STRONG><a name="[3b9]"></a>touchgfx::LCD16bpp::TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA::~TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA__sub_object()</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, lcd16bpp.o(i._ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGAD1Ev), UNUSED)

<P><STRONG><a name="[17e]"></a>touchgfx::LCD16bpp::fillRect(const touchgfx::Rect&, touchgfx::colortype, unsigned char)</STRONG> (Thumb, 138 bytes, Stack size 48 bytes, lcd16bpp.o(i._ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = touchgfx::LCD16bpp::fillRect(const touchgfx::Rect&, touchgfx::colortype, unsigned char)
</UL>
<BR>[Calls]<UL><LI><a href="#[260]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::DisplayTransformation::transformDisplayToFrameBuffer(touchgfx::Rect&)
<LI><a href="#[255]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Rect::isEmpty() const
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lcd16bpp.o(.constdata__ZTVN8touchgfx8LCD16bppE)
</UL>
<P><STRONG><a name="[2d4]"></a>touchgfx::LCD16bpp::nextLine(bool, touchgfx::TextRotation)</STRONG> (Thumb, 68 bytes, Stack size 8 bytes, lcd16bpp.o(i._ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE))
<BR><BR>[Stack]<UL><LI>Max Depth = 64 + Unknown Stack Size
<LI>Call Chain = touchgfx::LCD16bpp::nextLine(bool, touchgfx::TextRotation) &rArr; touchgfx::LCD16bpp::getFramebufferStride() &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[2bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::getFramebufferStride()
<LI><a href="#[1b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;abort
</UL>
<BR>[Called By]<UL><LI><a href="#[181]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::drawGlyph(unsigned short*, touchgfx::Rect, short, short, unsigned short, unsigned short, const touchgfx::Rect&, const touchgfx::GlyphNode*, const unsigned char*, unsigned char, touchgfx::colortype, unsigned char, unsigned char, touchgfx::TextRotation)
</UL>

<P><STRONG><a name="[181]"></a>touchgfx::LCD16bpp::drawGlyph(unsigned short*, touchgfx::Rect, short, short, unsigned short, unsigned short, const touchgfx::Rect&, const touchgfx::GlyphNode*, const unsigned char*, unsigned char, touchgfx::colortype, unsigned char, unsigned char, touchgfx::TextRotation)</STRONG> (Thumb, 808 bytes, Stack size 120 bytes, lcd16bpp.o(i._ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE))
<BR><BR>[Stack]<UL><LI>Max Depth = 184 + Unknown Stack Size
<LI>Call Chain = touchgfx::LCD16bpp::drawGlyph(unsigned short*, touchgfx::Rect, short, short, unsigned short, unsigned short, const touchgfx::Rect&, const touchgfx::GlyphNode*, const unsigned char*, unsigned char, touchgfx::colortype, unsigned char, unsigned char, touchgfx::TextRotation) &rArr; touchgfx::LCD::realY(const touchgfx::Rect&, short, short, touchgfx::TextRotation) &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[2b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD::div255(unsigned short)
<LI><a href="#[2a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD::realY(const touchgfx::Rect&, short, short, touchgfx::TextRotation)
<LI><a href="#[2a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD::realX(const touchgfx::Rect&, short, short, touchgfx::TextRotation)
<LI><a href="#[2d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::DisplayTransformation::transformDisplayToFrameBuffer(short&, short&)
<LI><a href="#[25a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Rect::bottom() const
<LI><a href="#[259]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Rect::right() const
<LI><a href="#[2d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::nextPixel(bool, touchgfx::TextRotation)
<LI><a href="#[2d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::nextLine(bool, touchgfx::TextRotation)
<LI><a href="#[2ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::getNativeColorFromRGB(unsigned char, unsigned char, unsigned char)
<LI><a href="#[2bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::getNativeColor(touchgfx::colortype)
<LI><a href="#[2b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Color::getGreenFromRGB565(unsigned short)
<LI><a href="#[2b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Color::getBlueFromRGB565(unsigned short)
<LI><a href="#[2b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Color::getRedFromRGB565(unsigned short)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lcd16bpp.o(.constdata__ZTVN8touchgfx8LCD16bppE)
</UL>
<P><STRONG><a name="[2d6]"></a>touchgfx::LCD16bpp::nextPixel(bool, touchgfx::TextRotation)</STRONG> (Thumb, 68 bytes, Stack size 8 bytes, lcd16bpp.o(i._ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE))
<BR><BR>[Stack]<UL><LI>Max Depth = 64 + Unknown Stack Size
<LI>Call Chain = touchgfx::LCD16bpp::nextPixel(bool, touchgfx::TextRotation) &rArr; touchgfx::LCD16bpp::getFramebufferStride() &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[2bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::getFramebufferStride()
<LI><a href="#[1b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;abort
</UL>
<BR>[Called By]<UL><LI><a href="#[181]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::drawGlyph(unsigned short*, touchgfx::Rect, short, short, unsigned short, unsigned short, const touchgfx::Rect&, const touchgfx::GlyphNode*, const unsigned char*, unsigned char, touchgfx::colortype, unsigned char, unsigned char, touchgfx::TextRotation)
</UL>

<P><STRONG><a name="[2e4]"></a>touchgfx::LCD16bpp::LCD16bpp()</STRONG> (Thumb, 78 bytes, Stack size 0 bytes, lcd16bpp.o(i._ZN8touchgfx8LCD16bppC1Ev))
<BR><BR>[Called By]<UL><LI><a href="#[196]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__sti___25_TouchGFXConfiguration_cpp_f5abfd34
</UL>

<P><STRONG><a name="[3ba]"></a>touchgfx::LCD16bpp::LCD16bpp__sub_object()</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, lcd16bpp.o(i._ZN8touchgfx8LCD16bppC1Ev), UNUSED)

<P><STRONG><a name="[d2]"></a>touchgfx::LCD16bpp::~LCD16bpp()</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, touchgfxconfiguration.o(i._ZN8touchgfx8LCD16bppD1Ev))
<BR>[Address Reference Count : 2]<UL><LI> touchgfxconfiguration.o(i.__sti___25_TouchGFXConfiguration_cpp_f5abfd34)
<LI> lcd16bpp.o(.constdata__ZTVN8touchgfx8LCD16bppE)
</UL>
<P><STRONG><a name="[3bb]"></a>touchgfx::LCD16bpp::~LCD16bpp__sub_object()</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, touchgfxconfiguration.o(i._ZN8touchgfx8LCD16bppD1Ev), UNUSED)

<P><STRONG><a name="[2da]"></a>touchgfx::TextArea::BoundingArea::BoundingArea()</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, screen1viewbase.o(i._ZN8touchgfx8TextArea12BoundingAreaC1Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = touchgfx::TextArea::BoundingArea::BoundingArea()
</UL>
<BR>[Called By]<UL><LI><a href="#[166]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextAreaWithWildcardBase::calculateBoundingArea() const
<LI><a href="#[233]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextArea::TextArea()
</UL>

<P><STRONG><a name="[3bc]"></a>touchgfx::TextArea::BoundingArea::BoundingArea__sub_object()</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, screen1viewbase.o(i._ZN8touchgfx8TextArea12BoundingAreaC1Ev), UNUSED)

<P><STRONG><a name="[239]"></a>touchgfx::TextArea::setTypedText(const touchgfx::TypedText&)</STRONG> (Thumb, 46 bytes, Stack size 24 bytes, textarea.o(i._ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = touchgfx::TextArea::setTypedText(const touchgfx::TypedText&) &rArr; touchgfx::TextArea::resizeToCurrentText() &rArr; touchgfx::Drawable::setWidthHeight(short, short)
</UL>
<BR>[Calls]<UL><LI><a href="#[2d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextArea::resizeToCurrentText()
</UL>
<BR>[Called By]<UL><LI><a href="#[22c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Screen1ViewBase::Screen1ViewBase()
</UL>

<P><STRONG><a name="[2d7]"></a>touchgfx::TextArea::resizeToCurrentText()</STRONG> (Thumb, 66 bytes, Stack size 16 bytes, textarea.o(i._ZN8touchgfx8TextArea19resizeToCurrentTextEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = touchgfx::TextArea::resizeToCurrentText() &rArr; touchgfx::Drawable::setWidthHeight(short, short)
</UL>
<BR>[Calls]<UL><LI><a href="#[2d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TypedText::hasValidId() const
<LI><a href="#[2d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Drawable::setWidthHeight(short, short)
</UL>
<BR>[Called By]<UL><LI><a href="#[239]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextArea::setTypedText(const touchgfx::TypedText&)
</UL>

<P><STRONG><a name="[159]"></a>touchgfx::TextArea::setWidth(short)</STRONG> (Thumb, 38 bytes, Stack size 24 bytes, screen1viewbase.o(i._ZN8touchgfx8TextArea8setWidthEs))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = touchgfx::TextArea::setWidth(short)
</UL>
<BR>[Calls]<UL><LI><a href="#[16b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Drawable::setWidth(short)
</UL>
<BR>[Address Reference Count : 3]<UL><LI> textareawithwildcard.o(.constdata__ZTVN8touchgfx24TextAreaWithWildcardBaseE)
<LI> screen1viewbase.o(.constdata__ZTVN8touchgfx23TextAreaWithOneWildcardE)
<LI> textarea.o(.constdata__ZTVN8touchgfx8TextAreaE)
</UL>
<P><STRONG><a name="[15a]"></a>touchgfx::TextArea::setHeight(short)</STRONG> (Thumb, 38 bytes, Stack size 24 bytes, screen1viewbase.o(i._ZN8touchgfx8TextArea9setHeightEs))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = touchgfx::TextArea::setHeight(short)
</UL>
<BR>[Calls]<UL><LI><a href="#[16c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Drawable::setHeight(short)
</UL>
<BR>[Address Reference Count : 3]<UL><LI> textareawithwildcard.o(.constdata__ZTVN8touchgfx24TextAreaWithWildcardBaseE)
<LI> screen1viewbase.o(.constdata__ZTVN8touchgfx23TextAreaWithOneWildcardE)
<LI> textarea.o(.constdata__ZTVN8touchgfx8TextAreaE)
</UL>
<P><STRONG><a name="[233]"></a>touchgfx::TextArea::TextArea()</STRONG> (Thumb, 90 bytes, Stack size 8 bytes, screen1viewbase.o(i._ZN8touchgfx8TextAreaC1Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = touchgfx::TextArea::TextArea() &rArr; touchgfx::Widget::Widget__sub_object()
</UL>
<BR>[Calls]<UL><LI><a href="#[238]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TypedText::TypedText(unsigned short)
<LI><a href="#[2da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextArea::BoundingArea::BoundingArea()
<LI><a href="#[28b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Widget::Widget__sub_object()
<LI><a href="#[28c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::colortype::colortype(unsigned)
<LI><a href="#[1dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[22c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Screen1ViewBase::Screen1ViewBase()
</UL>

<P><STRONG><a name="[3bd]"></a>touchgfx::TextArea::TextArea__sub_object()</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, screen1viewbase.o(i._ZN8touchgfx8TextAreaC1Ev), UNUSED)

<P><STRONG><a name="[285]"></a>touchgfx::ConstFont::ConstFont__sub_object(const touchgfx::GlyphNode*, unsigned short, unsigned short, unsigned short, unsigned char, unsigned char, unsigned char, unsigned char, unsigned char, unsigned char, unsigned short, unsigned short)</STRONG> (Thumb, 84 bytes, Stack size 36 bytes, constfont.o(i._ZN8touchgfx9ConstFontC2EPKNS_9GlyphNodeEttthhhhhhtt))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = touchgfx::ConstFont::ConstFont__sub_object(const touchgfx::GlyphNode*, unsigned short, unsigned short, unsigned short, unsigned char, unsigned char, unsigned char, unsigned char, unsigned char, unsigned char, unsigned short, unsigned short)
</UL>
<BR>[Called By]<UL><LI><a href="#[228]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::GeneratedFont::GeneratedFont(const touchgfx::GlyphNode*, unsigned short, unsigned short, unsigned short, unsigned char, unsigned char, unsigned char, unsigned char, unsigned char, unsigned char, const unsigned char*const *, const touchgfx::KerningNode*, unsigned short, unsigned short, const unsigned short*, const touchgfx::FontContextualFormsTable*)
</UL>

<P><STRONG><a name="[186]"></a>touchgfx::Container::getLastChild(short, short, touchgfx::Drawable**)</STRONG> (Thumb, 74 bytes, Stack size 24 bytes, container.o(i._ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = touchgfx::Container::getLastChild(short, short, touchgfx::Drawable**) &rArr; touchgfx::Rect::intersect(short, short) const
</UL>
<BR>[Calls]<UL><LI><a href="#[2ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Rect::intersect(short, short) const
</UL>
<BR>[Called By]<UL><LI><a href="#[189]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Container::getLastChildNear(short, short, touchgfx::Drawable**, short*, short*)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> container.o(.constdata__ZTVN8touchgfx9ContainerE)
</UL>
<P><STRONG><a name="[187]"></a>touchgfx::Container::setupDrawChain(const touchgfx::Rect&, touchgfx::Drawable**)</STRONG> (Thumb, 88 bytes, Stack size 24 bytes, container.o(i._ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = touchgfx::Container::setupDrawChain(const touchgfx::Rect&, touchgfx::Drawable**) &rArr; touchgfx::Rect::operator &(const touchgfx::Rect&) const &rArr; touchgfx::Rect::operator &=(const touchgfx::Rect&) &rArr; touchgfx::Rect::intersect(const touchgfx::Rect&) const
</UL>
<BR>[Calls]<UL><LI><a href="#[2ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Rect::operator &(const touchgfx::Rect&) const
<LI><a href="#[255]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Rect::isEmpty() const
</UL>
<BR>[Called By]<UL><LI><a href="#[2af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Screen::startSMOC(const touchgfx::Rect&)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> container.o(.constdata__ZTVN8touchgfx9ContainerE)
</UL>
<P><STRONG><a name="[189]"></a>touchgfx::Container::getLastChildNear(short, short, touchgfx::Drawable**, short*, short*)</STRONG> (Thumb, 386 bytes, Stack size 152 bytes, container.o(i._ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_))
<BR><BR>[Stack]<UL><LI>Max Depth = 192<LI>Call Chain = touchgfx::Container::getLastChildNear(short, short, touchgfx::Drawable**, short*, short*) &rArr; touchgfx::Container::getLastChild(short, short, touchgfx::Drawable**) &rArr; touchgfx::Rect::intersect(short, short) const
</UL>
<BR>[Calls]<UL><LI><a href="#[2ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Drawable::getAbsoluteRect() const
<LI><a href="#[2ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Rect::intersect(short, short) const
<LI><a href="#[186]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Container::getLastChild(short, short, touchgfx::Drawable**)
<LI><a href="#[1ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
</UL>
<BR>[Called By]<UL><LI><a href="#[e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Screen::handleClickEvent(const touchgfx::ClickEvent&)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> container.o(.constdata__ZTVN8touchgfx9ContainerE)
</UL>
<P><STRONG><a name="[188]"></a>touchgfx::Container::add(touchgfx::Drawable&)</STRONG> (Thumb, 48 bytes, Stack size 8 bytes, container.o(i._ZN8touchgfx9Container3addERNS_8DrawableE))
<BR><BR>[Stack]<UL><LI>Max Depth = 56 + Unknown Stack Size
<LI>Call Chain = touchgfx::Container::add(touchgfx::Drawable&) &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[1b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;abort
</UL>
<BR>[Called By]<UL><LI><a href="#[237]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Screen::add(touchgfx::Drawable&)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> container.o(.constdata__ZTVN8touchgfx9ContainerE)
</UL>
<P><STRONG><a name="[277]"></a>touchgfx::GlyphNode::setTop(short)</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, textprovider.o(i._ZN8touchgfx9GlyphNode6setTopEs))
<BR><BR>[Called By]<UL><LI><a href="#[269]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextProvider::adjustArabicGlyph(const touchgfx::Font*, const touchgfx::GlyphNode*, unsigned short)
<LI><a href="#[26a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextProvider::adjustThaiGlyph(const touchgfx::Font*, const touchgfx::GlyphNode*)
</UL>

<P><STRONG><a name="[18a]"></a>touchgfx::Partition&lang;touchgfx::meta::TypeList&lang;Screen1View, touchgfx::meta::TypeList&lang;touchgfx::meta::Nil, touchgfx::meta::Nil&rang;&rang;, (unsigned short)1&rang;::~Partition()</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, touchgfxconfiguration.o(i._ZN8touchgfx9PartitionINS_4meta8TypeListI11Screen1ViewNS2_INS1_3NilES4_EEEELt1EED1Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = touchgfx::Partition&lang;touchgfx::meta::TypeList&lang;Screen1View, touchgfx::meta::TypeList&lang;touchgfx::meta::Nil, touchgfx::meta::Nil&rang;&rang;, (unsigned short)1&rang;::~Partition()
</UL>
<BR>[Calls]<UL><LI><a href="#[14c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::AbstractPartition::~AbstractPartition__sub_object()
</UL>
<BR>[Called By]<UL><LI><a href="#[d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FrontendHeap::~FrontendHeap()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> touchgfxconfiguration.o(.constdata__ZTVN8touchgfx9PartitionINS_4meta8TypeListI11Screen1ViewNS2_INS1_3NilES4_EEEELt1EEE)
</UL>
<P><STRONG><a name="[3be]"></a>touchgfx::Partition&lang;touchgfx::meta::TypeList&lang;Screen1View, touchgfx::meta::TypeList&lang;touchgfx::meta::Nil, touchgfx::meta::Nil&rang;&rang;, (unsigned short)1&rang;::~Partition__sub_object()</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, touchgfxconfiguration.o(i._ZN8touchgfx9PartitionINS_4meta8TypeListI11Screen1ViewNS2_INS1_3NilES4_EEEELt1EED1Ev), UNUSED)

<P><STRONG><a name="[18d]"></a>touchgfx::Partition&lang;touchgfx::meta::TypeList&lang;Screen1Presenter, touchgfx::meta::TypeList&lang;touchgfx::meta::Nil, touchgfx::meta::Nil&rang;&rang;, (unsigned short)1&rang;::~Partition()</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, touchgfxconfiguration.o(i._ZN8touchgfx9PartitionINS_4meta8TypeListI16Screen1PresenterNS2_INS1_3NilES4_EEEELt1EED1Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = touchgfx::Partition&lang;touchgfx::meta::TypeList&lang;Screen1Presenter, touchgfx::meta::TypeList&lang;touchgfx::meta::Nil, touchgfx::meta::Nil&rang;&rang;, (unsigned short)1&rang;::~Partition()
</UL>
<BR>[Calls]<UL><LI><a href="#[14c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::AbstractPartition::~AbstractPartition__sub_object()
</UL>
<BR>[Called By]<UL><LI><a href="#[d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FrontendHeap::~FrontendHeap()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> touchgfxconfiguration.o(.constdata__ZTVN8touchgfx9PartitionINS_4meta8TypeListI16Screen1PresenterNS2_INS1_3NilES4_EEEELt1EEE)
</UL>
<P><STRONG><a name="[3bf]"></a>touchgfx::Partition&lang;touchgfx::meta::TypeList&lang;Screen1Presenter, touchgfx::meta::TypeList&lang;touchgfx::meta::Nil, touchgfx::meta::Nil&rang;&rang;, (unsigned short)1&rang;::~Partition__sub_object()</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, touchgfxconfiguration.o(i._ZN8touchgfx9PartitionINS_4meta8TypeListI16Screen1PresenterNS2_INS1_3NilES4_EEEELt1EED1Ev), UNUSED)

<P><STRONG><a name="[190]"></a>touchgfx::Partition&lang;touchgfx::meta::TypeList&lang;touchgfx::NoTransition, touchgfx::meta::TypeList&lang;touchgfx::meta::Nil, touchgfx::meta::Nil&rang;&rang;, (unsigned short)1&rang;::~Partition()</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, touchgfxconfiguration.o(i._ZN8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EED1Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = touchgfx::Partition&lang;touchgfx::meta::TypeList&lang;touchgfx::NoTransition, touchgfx::meta::TypeList&lang;touchgfx::meta::Nil, touchgfx::meta::Nil&rang;&rang;, (unsigned short)1&rang;::~Partition()
</UL>
<BR>[Calls]<UL><LI><a href="#[14c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::AbstractPartition::~AbstractPartition__sub_object()
</UL>
<BR>[Called By]<UL><LI><a href="#[d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FrontendHeap::~FrontendHeap()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> touchgfxconfiguration.o(.constdata__ZTVN8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EEE)
</UL>
<P><STRONG><a name="[3c0]"></a>touchgfx::Partition&lang;touchgfx::meta::TypeList&lang;touchgfx::NoTransition, touchgfx::meta::TypeList&lang;touchgfx::meta::Nil, touchgfx::meta::Nil&rang;&rang;, (unsigned short)1&rang;::~Partition__sub_object()</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, touchgfxconfiguration.o(i._ZN8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EED1Ev), UNUSED)

<P><STRONG><a name="[194]"></a>touchgfx::Presenter::deactivate()</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, screen1presenter.o(i._ZN8touchgfx9Presenter10deactivateEv))
<BR>[Address Reference Count : 1]<UL><LI> screen1presenter.o(.constdata__ZTVN8touchgfx9PresenterE)
</UL>
<P><STRONG><a name="[193]"></a>touchgfx::Presenter::activate()</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, screen1presenter.o(i._ZN8touchgfx9Presenter8activateEv))
<BR>[Address Reference Count : 1]<UL><LI> screen1presenter.o(.constdata__ZTVN8touchgfx9PresenterE)
</UL>
<P><STRONG><a name="[195]"></a>touchgfx::Presenter::~Presenter()</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, screen1presenter.o(i._ZN8touchgfx9PresenterD1Ev))
<BR>[Address Reference Count : 1]<UL><LI> screen1presenter.o(.constdata__ZTVN8touchgfx9PresenterE)
</UL>
<P><STRONG><a name="[3c1]"></a>touchgfx::Presenter::~Presenter__sub_object()</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, screen1presenter.o(i._ZN8touchgfx9PresenterD1Ev), UNUSED)

<P><STRONG><a name="[238]"></a>touchgfx::TypedText::TypedText(unsigned short)</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, screen1viewbase.o(i._ZN8touchgfx9TypedTextC1Et))
<BR><BR>[Called By]<UL><LI><a href="#[22c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Screen1ViewBase::Screen1ViewBase()
<LI><a href="#[233]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextArea::TextArea()
</UL>

<P><STRONG><a name="[3c2]"></a>touchgfx::TypedText::TypedText__sub_object(unsigned short)</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, screen1viewbase.o(i._ZN8touchgfx9TypedTextC1Et), UNUSED)

<P><STRONG><a name="[28c]"></a>touchgfx::colortype::colortype(unsigned)</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, touchgfxgeneratedhal.o(i._ZN8touchgfx9colortypeC1Ej))
<BR><BR>[Called By]<UL><LI><a href="#[233]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextArea::TextArea()
<LI><a href="#[235]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Color::getColorFromRGB(unsigned char, unsigned char, unsigned char)
<LI><a href="#[232]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Box::Box()
</UL>

<P><STRONG><a name="[3c3]"></a>touchgfx::colortype::colortype__sub_object(unsigned)</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, touchgfxgeneratedhal.o(i._ZN8touchgfx9colortypeC1Ej), UNUSED)

<P><STRONG><a name="[ed]"></a>TouchGFXHAL::getTFTFrameBuffer() const</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, touchgfxhal.o(i._ZNK11TouchGFXHAL17getTFTFrameBufferEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = TouchGFXHAL::getTFTFrameBuffer() const
</UL>
<BR>[Calls]<UL><LI><a href="#[11d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TouchGFXGeneratedHAL::getTFTFrameBuffer() const
</UL>
<BR>[Address Reference Count : 1]<UL><LI> touchgfxhal.o(.constdata__ZTV11TouchGFXHAL)
</UL>
<P><STRONG><a name="[11d]"></a>TouchGFXGeneratedHAL::getTFTFrameBuffer() const</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, touchgfxgeneratedhal.o(i._ZNK20TouchGFXGeneratedHAL17getTFTFrameBufferEv))
<BR><BR>[Called By]<UL><LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TouchGFXHAL::getTFTFrameBuffer() const
</UL>
<BR>[Address Reference Count : 1]<UL><LI> touchgfxgeneratedhal.o(.constdata__ZTV20TouchGFXGeneratedHAL)
</UL>
<P><STRONG><a name="[278]"></a>touchgfx::TextProvider::thaiLookupGlyph(const touchgfx::GlyphNode*, const touchgfx::Font*, unsigned short) const</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, textprovider.o(i._ZNK8touchgfx12TextProvider15thaiLookupGlyphEPKNS_9GlyphNodeEPKNS_4FontEt))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = touchgfx::TextProvider::thaiLookupGlyph(const touchgfx::GlyphNode*, const touchgfx::Font*, unsigned short) const
</UL>
<BR>[Called By]<UL><LI><a href="#[26a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextProvider::adjustThaiGlyph(const touchgfx::Font*, const touchgfx::GlyphNode*)
</UL>

<P><STRONG><a name="[281]"></a>touchgfx::TextProvider::gsubTableBinarySearch(unsigned short, const unsigned short*, unsigned short) const</STRONG> (Thumb, 64 bytes, Stack size 12 bytes, textprovider.o(i._ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = touchgfx::TextProvider::gsubTableBinarySearch(unsigned short, const unsigned short*, unsigned short) const
</UL>
<BR>[Called By]<UL><LI><a href="#[27d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextProvider::substituteGlyphs()
</UL>

<P><STRONG><a name="[147]"></a>touchgfx::GeneratedFont::getKerning(unsigned short, const touchgfx::GlyphNode*) const</STRONG> (Thumb, 72 bytes, Stack size 24 bytes, generatedfont.o(i._ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = touchgfx::GeneratedFont::getKerning(unsigned short, const touchgfx::GlyphNode*) const
</UL>
<BR>[Calls]<UL><LI><a href="#[2db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::GlyphNode::kerningTablePos() const
</UL>
<BR>[Address Reference Count : 1]<UL><LI> generatedfont.o(.constdata__ZTVN8touchgfx13GeneratedFontE)
</UL>
<P><STRONG><a name="[148]"></a>touchgfx::GeneratedFont::getGSUBTable() const</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, generatedfont.o(i._ZNK8touchgfx13GeneratedFont12getGSUBTableEv))
<BR>[Address Reference Count : 1]<UL><LI> generatedfont.o(.constdata__ZTVN8touchgfx13GeneratedFontE)
</UL>
<P><STRONG><a name="[14b]"></a>touchgfx::GeneratedFont::getPixelData(const touchgfx::GlyphNode*) const</STRONG> (Thumb, 26 bytes, Stack size 12 bytes, generatedfont.o(i._ZNK8touchgfx13GeneratedFont12getPixelDataEPKNS_9GlyphNodeE))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = touchgfx::GeneratedFont::getPixelData(const touchgfx::GlyphNode*) const
</UL>
<BR>[Address Reference Count : 1]<UL><LI> generatedfont.o(.constdata__ZTVN8touchgfx13GeneratedFontE)
</UL>
<P><STRONG><a name="[149]"></a>touchgfx::GeneratedFont::getContextualFormsTable() const</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, generatedfont.o(i._ZNK8touchgfx13GeneratedFont23getContextualFormsTableEv))
<BR>[Address Reference Count : 1]<UL><LI> generatedfont.o(.constdata__ZTVN8touchgfx13GeneratedFontE)
</UL>
<P><STRONG><a name="[164]"></a>touchgfx::TextAreaWithOneWildcard::getWildcard1() const</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, screen1viewbase.o(i._ZNK8touchgfx23TextAreaWithOneWildcard12getWildcard1Ev))
<BR>[Address Reference Count : 1]<UL><LI> screen1viewbase.o(.constdata__ZTVN8touchgfx23TextAreaWithOneWildcardE)
</UL>
<P><STRONG><a name="[166]"></a>touchgfx::TextAreaWithWildcardBase::calculateBoundingArea() const</STRONG> (Thumb, 14 bytes, Stack size 16 bytes, screen1viewbase.o(i._ZNK8touchgfx24TextAreaWithWildcardBase21calculateBoundingAreaEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = touchgfx::TextAreaWithWildcardBase::calculateBoundingArea() const &rArr; touchgfx::TextArea::BoundingArea::BoundingArea()
</UL>
<BR>[Calls]<UL><LI><a href="#[2da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextArea::BoundingArea::BoundingArea()
</UL>
<BR>[Address Reference Count : 2]<UL><LI> textareawithwildcard.o(.constdata__ZTVN8touchgfx24TextAreaWithWildcardBaseE)
<LI> screen1viewbase.o(.constdata__ZTVN8touchgfx23TextAreaWithOneWildcardE)
</UL>
<P><STRONG><a name="[152]"></a>touchgfx::TextAreaWithWildcardBase::draw(const touchgfx::Rect&) const</STRONG> (Thumb, 254 bytes, Stack size 88 bytes, textareawithwildcard.o(i._ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE))
<BR><BR>[Stack]<UL><LI>Max Depth = 952 + Unknown Stack Size
<LI>Call Chain = touchgfx::TextAreaWithWildcardBase::draw(const touchgfx::Rect&) const &rArr; touchgfx::LCD::drawString(touchgfx::Rect, const touchgfx::Rect&, const touchgfx::LCD::StringVisuals&, const unsigned short*, ...) &rArr; touchgfx::LCD::drawStringLTR(const touchgfx::Rect&, const touchgfx::Rect&, const touchgfx::LCD::StringVisuals&, const unsigned short*, std::__va_list) &rArr; touchgfx::LCD::drawStringInternal(unsigned short*, const touchgfx::Rect*, short, short, const touchgfx::Rect&, const touchgfx::LCD::StringVisuals*, unsigned char, touchgfx::TextProvider&, int, bool) &rArr; touchgfx::TextProvider::getNextLigature(unsigned char, const touchgfx::Font*, const touchgfx::GlyphNode*&, const unsigned char*&, unsigned char&) &rArr; touchgfx::TextProvider::getNextLigature(unsigned char) &rArr; touchgfx::TextProvider::substituteGlyphs() &rArr; touchgfx::TextProvider::applyGsubRules(const unsigned short*, unsigned short) &rArr; touchgfx::TextProvider::replaceInputCharacters(unsigned short, unsigned short, const unsigned short*) &rArr; touchgfx::TextProvider::fillInputBuffer() &rArr; touchgfx::TextProvider::circularBuffer&lang;(unsigned)10&rang;::pushBack(unsigned short) &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[2dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Texts::getText(unsigned short) const
<LI><a href="#[299]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD::drawString(touchgfx::Rect, const touchgfx::Rect&, const touchgfx::LCD::StringVisuals&, const unsigned short*, ...)
<LI><a href="#[2dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TypedText::getFont() const
<LI><a href="#[2d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TypedText::hasValidId() const
<LI><a href="#[2ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Drawable::getAbsoluteRect() const
<LI><a href="#[1b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;abort
</UL>
<BR>[Address Reference Count : 2]<UL><LI> textareawithwildcard.o(.constdata__ZTVN8touchgfx24TextAreaWithWildcardBaseE)
<LI> screen1viewbase.o(.constdata__ZTVN8touchgfx23TextAreaWithOneWildcardE)
</UL>
<P><STRONG><a name="[16a]"></a>touchgfx::Box::getSolidRect() const</STRONG> (Thumb, 50 bytes, Stack size 12 bytes, box.o(i._ZNK8touchgfx3Box12getSolidRectEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = touchgfx::Box::getSolidRect() const
</UL>
<BR>[Address Reference Count : 1]<UL><LI> box.o(.constdata__ZTVN8touchgfx3BoxE)
</UL>
<P><STRONG><a name="[169]"></a>touchgfx::Box::draw(const touchgfx::Rect&) const</STRONG> (Thumb, 54 bytes, Stack size 24 bytes, box.o(i._ZNK8touchgfx3Box4drawERKNS_4RectE))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = touchgfx::Box::draw(const touchgfx::Rect&) const
</UL>
<BR>[Address Reference Count : 1]<UL><LI> box.o(.constdata__ZTVN8touchgfx3BoxE)
</UL>
<P><STRONG><a name="[2de]"></a>touchgfx::HAL::getBitDepth(touchgfx::Bitmap::BitmapFormat) const</STRONG> (Thumb, 46 bytes, Stack size 8 bytes, hal.o(i._ZNK8touchgfx3HAL11getBitDepthENS_6Bitmap12BitmapFormatE))
<BR><BR>[Stack]<UL><LI>Max Depth = 56 + Unknown Stack Size
<LI>Call Chain = touchgfx::HAL::getBitDepth(touchgfx::Bitmap::BitmapFormat) const &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[1b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;abort
</UL>
<BR>[Called By]<UL><LI><a href="#[298]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::HAL::getDstAddress(unsigned short, unsigned short, unsigned short*, unsigned short, touchgfx::Bitmap::BitmapFormat) const
</UL>

<P><STRONG><a name="[290]"></a>touchgfx::HAL::getDstAddress(unsigned short, unsigned short, unsigned short*) const</STRONG> (Thumb, 46 bytes, Stack size 32 bytes, hal.o(i._ZNK8touchgfx3HAL13getDstAddressEttPt))
<BR><BR>[Stack]<UL><LI>Max Depth = 112 + Unknown Stack Size
<LI>Call Chain = touchgfx::HAL::getDstAddress(unsigned short, unsigned short, unsigned short*) const &rArr; touchgfx::HAL::getDstAddress(unsigned short, unsigned short, unsigned short*, unsigned short, touchgfx::Bitmap::BitmapFormat) const &rArr; touchgfx::HAL::getBitDepth(touchgfx::Bitmap::BitmapFormat) const &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[242]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::HAL::lcd()
<LI><a href="#[298]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::HAL::getDstAddress(unsigned short, unsigned short, unsigned short*, unsigned short, touchgfx::Bitmap::BitmapFormat) const
</UL>
<BR>[Called By]<UL><LI><a href="#[ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::HAL::blitCopyGlyph(const unsigned char*, unsigned short, unsigned short, unsigned short, unsigned short, unsigned short, touchgfx::colortype, unsigned char, touchgfx::BlitOperations, bool)
</UL>

<P><STRONG><a name="[298]"></a>touchgfx::HAL::getDstAddress(unsigned short, unsigned short, unsigned short*, unsigned short, touchgfx::Bitmap::BitmapFormat) const</STRONG> (Thumb, 32 bytes, Stack size 24 bytes, hal.o(i._ZNK8touchgfx3HAL13getDstAddressEttPttNS_6Bitmap12BitmapFormatE))
<BR><BR>[Stack]<UL><LI>Max Depth = 80 + Unknown Stack Size
<LI>Call Chain = touchgfx::HAL::getDstAddress(unsigned short, unsigned short, unsigned short*, unsigned short, touchgfx::Bitmap::BitmapFormat) const &rArr; touchgfx::HAL::getBitDepth(touchgfx::Bitmap::BitmapFormat) const &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[2de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::HAL::getBitDepth(touchgfx::Bitmap::BitmapFormat) const
</UL>
<BR>[Called By]<UL><LI><a href="#[f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::HAL::blitFill(touchgfx::colortype, unsigned short, unsigned short, unsigned short, unsigned short, unsigned char, unsigned short, touchgfx::Bitmap::BitmapFormat, bool)
<LI><a href="#[290]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::HAL::getDstAddress(unsigned short, unsigned short, unsigned short*) const
</UL>

<P><STRONG><a name="[174]"></a>touchgfx::Font::getKerning(unsigned short, const touchgfx::GlyphNode*) const</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, texts.o(i._ZNK8touchgfx4Font10getKerningEtPKNS_9GlyphNodeE))
<BR>[Address Reference Count : 1]<UL><LI> texts.o(.constdata__ZTVN8touchgfx4FontE)
</UL>
<P><STRONG><a name="[143]"></a>touchgfx::Font::getBaseline() const</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, cachedfont.o(i._ZNK8touchgfx4Font11getBaselineEv))
<BR>[Address Reference Count : 3]<UL><LI> generatedfont.o(.constdata__ZTVN8touchgfx13GeneratedFontE)
<LI> constfont.o(.constdata__ZTVN8touchgfx9ConstFontE)
<LI> texts.o(.constdata__ZTVN8touchgfx4FontE)
</UL>
<P><STRONG><a name="[175]"></a>touchgfx::Font::getGSUBTable() const</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, texts.o(i._ZNK8touchgfx4Font12getGSUBTableEv))
<BR>[Address Reference Count : 2]<UL><LI> constfont.o(.constdata__ZTVN8touchgfx9ConstFontE)
<LI> texts.o(.constdata__ZTVN8touchgfx4FontE)
</UL>
<P><STRONG><a name="[142]"></a>touchgfx::Font::getStringWidth(unsigned char, const unsigned short*, ...) const</STRONG> (Thumb, 38 bytes, Stack size 40 bytes, texts.o(i._ZNK8touchgfx4Font14getStringWidthEhPKtz))
<BR><BR>[Stack]<UL><LI>Max Depth = 440 + Unknown Stack Size
<LI>Call Chain = touchgfx::Font::getStringWidth(unsigned char, const unsigned short*, ...) const &rArr; touchgfx::Font::getStringWidthLTR(unsigned char, const unsigned short*, std::__va_list) const &rArr; touchgfx::TextProvider::getNextLigature(unsigned char, const touchgfx::Font*, const touchgfx::GlyphNode*&) &rArr; touchgfx::TextProvider::getNextLigature(unsigned char) &rArr; touchgfx::TextProvider::substituteGlyphs() &rArr; touchgfx::TextProvider::applyGsubRules(const unsigned short*, unsigned short) &rArr; touchgfx::TextProvider::replaceInputCharacters(unsigned short, unsigned short, const unsigned short*) &rArr; touchgfx::TextProvider::fillInputBuffer() &rArr; touchgfx::TextProvider::circularBuffer&lang;(unsigned)10&rang;::pushBack(unsigned short) &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[2df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Font::getStringWidthLTR(unsigned char, const unsigned short*, std::__va_list) const
</UL>
<BR>[Address Reference Count : 3]<UL><LI> generatedfont.o(.constdata__ZTVN8touchgfx13GeneratedFontE)
<LI> constfont.o(.constdata__ZTVN8touchgfx9ConstFontE)
<LI> texts.o(.constdata__ZTVN8touchgfx4FontE)
</UL>
<P><STRONG><a name="[145]"></a>touchgfx::Font::getBitsPerPixel() const</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, cachedfont.o(i._ZNK8touchgfx4Font15getBitsPerPixelEv))
<BR>[Address Reference Count : 3]<UL><LI> generatedfont.o(.constdata__ZTVN8touchgfx13GeneratedFontE)
<LI> constfont.o(.constdata__ZTVN8touchgfx9ConstFontE)
<LI> texts.o(.constdata__ZTVN8touchgfx4FontE)
</UL>
<P><STRONG><a name="[146]"></a>touchgfx::Font::getByteAlignRow() const</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, cachedfont.o(i._ZNK8touchgfx4Font15getByteAlignRowEv))
<BR>[Address Reference Count : 3]<UL><LI> generatedfont.o(.constdata__ZTVN8touchgfx13GeneratedFontE)
<LI> constfont.o(.constdata__ZTVN8touchgfx9ConstFontE)
<LI> texts.o(.constdata__ZTVN8touchgfx4FontE)
</UL>
<P><STRONG><a name="[141]"></a>touchgfx::Font::getEllipsisChar() const</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, cachedfont.o(i._ZNK8touchgfx4Font15getEllipsisCharEv))
<BR>[Address Reference Count : 3]<UL><LI> generatedfont.o(.constdata__ZTVN8touchgfx13GeneratedFontE)
<LI> constfont.o(.constdata__ZTVN8touchgfx9ConstFontE)
<LI> texts.o(.constdata__ZTVN8touchgfx4FontE)
</UL>
<P><STRONG><a name="[140]"></a>touchgfx::Font::getFallbackChar() const</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, cachedfont.o(i._ZNK8touchgfx4Font15getFallbackCharEv))
<BR>[Address Reference Count : 3]<UL><LI> generatedfont.o(.constdata__ZTVN8touchgfx13GeneratedFontE)
<LI> constfont.o(.constdata__ZTVN8touchgfx9ConstFontE)
<LI> texts.o(.constdata__ZTVN8touchgfx4FontE)
</UL>
<P><STRONG><a name="[2df]"></a>touchgfx::Font::getStringWidthLTR(unsigned char, const unsigned short*, std::__va_list) const</STRONG> (Thumb, 168 bytes, Stack size 160 bytes, font.o(i._ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list))
<BR><BR>[Stack]<UL><LI>Max Depth = 400 + Unknown Stack Size
<LI>Call Chain = touchgfx::Font::getStringWidthLTR(unsigned char, const unsigned short*, std::__va_list) const &rArr; touchgfx::TextProvider::getNextLigature(unsigned char, const touchgfx::Font*, const touchgfx::GlyphNode*&) &rArr; touchgfx::TextProvider::getNextLigature(unsigned char) &rArr; touchgfx::TextProvider::substituteGlyphs() &rArr; touchgfx::TextProvider::applyGsubRules(const unsigned short*, unsigned short) &rArr; touchgfx::TextProvider::replaceInputCharacters(unsigned short, unsigned short, const unsigned short*) &rArr; touchgfx::TextProvider::fillInputBuffer() &rArr; touchgfx::TextProvider::circularBuffer&lang;(unsigned)10&rang;::pushBack(unsigned short) &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[283]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextProvider::TextProvider()
<LI><a href="#[266]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextProvider::initialize(const unsigned short*, std::__va_list, const unsigned short*, const touchgfx::FontContextualFormsTable*)
<LI><a href="#[27e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextProvider::getNextLigature(unsigned char, const touchgfx::Font*, const touchgfx::GlyphNode*&)
</UL>
<BR>[Called By]<UL><LI><a href="#[142]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Font::getStringWidth(unsigned char, const unsigned short*, ...) const
</UL>

<P><STRONG><a name="[14a]"></a>touchgfx::Font::isVectorBasedFont() const</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, cachedfont.o(i._ZNK8touchgfx4Font17isVectorBasedFontEv))
<BR>[Address Reference Count : 3]<UL><LI> generatedfont.o(.constdata__ZTVN8touchgfx13GeneratedFontE)
<LI> constfont.o(.constdata__ZTVN8touchgfx9ConstFontE)
<LI> texts.o(.constdata__ZTVN8touchgfx4FontE)
</UL>
<P><STRONG><a name="[176]"></a>touchgfx::Font::getContextualFormsTable() const</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, texts.o(i._ZNK8touchgfx4Font23getContextualFormsTableEv))
<BR>[Address Reference Count : 2]<UL><LI> constfont.o(.constdata__ZTVN8touchgfx9ConstFontE)
<LI> texts.o(.constdata__ZTVN8touchgfx4FontE)
</UL>
<P><STRONG><a name="[13f]"></a>touchgfx::Font::getGlyph(unsigned short) const</STRONG> (Thumb, 42 bytes, Stack size 32 bytes, cachedfont.o(i._ZNK8touchgfx4Font8getGlyphEt))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = touchgfx::Font::getGlyph(unsigned short) const
</UL>
<BR>[Address Reference Count : 3]<UL><LI> generatedfont.o(.constdata__ZTVN8touchgfx13GeneratedFontE)
<LI> constfont.o(.constdata__ZTVN8touchgfx9ConstFontE)
<LI> texts.o(.constdata__ZTVN8touchgfx4FontE)
</UL>
<P><STRONG><a name="[144]"></a>touchgfx::Font::getHeight() const</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, cachedfont.o(i._ZNK8touchgfx4Font9getHeightEv))
<BR>[Address Reference Count : 3]<UL><LI> generatedfont.o(.constdata__ZTVN8touchgfx13GeneratedFontE)
<LI> constfont.o(.constdata__ZTVN8touchgfx9ConstFontE)
<LI> texts.o(.constdata__ZTVN8touchgfx4FontE)
</UL>
<P><STRONG><a name="[259]"></a>touchgfx::Rect::right() const</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, lcd16bpp.o(i._ZNK8touchgfx4Rect5rightEv))
<BR><BR>[Called By]<UL><LI><a href="#[115]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Application::drawCachedAreas()
<LI><a href="#[117]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Application::invalidateArea(touchgfx::Rect)
<LI><a href="#[258]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Rect::intersect(const touchgfx::Rect&) const
<LI><a href="#[256]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Rect::includes(const touchgfx::Rect&) const
<LI><a href="#[25f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Rect::operator &=(const touchgfx::Rect&)
<LI><a href="#[25c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Rect::expandToFit(const touchgfx::Rect&)
<LI><a href="#[2ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Rect::intersect(short, short) const
<LI><a href="#[2a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD::realX(const touchgfx::Rect&, short, short, touchgfx::TextRotation)
<LI><a href="#[181]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::drawGlyph(unsigned short*, touchgfx::Rect, short, short, unsigned short, unsigned short, const touchgfx::Rect&, const touchgfx::GlyphNode*, const unsigned char*, unsigned char, touchgfx::colortype, unsigned char, unsigned char, touchgfx::TextRotation)
<LI><a href="#[2b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Screen::JSMOC(const touchgfx::Rect&, touchgfx::Drawable*)
<LI><a href="#[2a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD::drawStringInternal(unsigned short*, const touchgfx::Rect*, short, short, const touchgfx::Rect&, const touchgfx::LCD::StringVisuals*, unsigned char, touchgfx::TextProvider&, int, bool)
<LI><a href="#[29b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD::rotateRect(touchgfx::Rect&, const touchgfx::Rect&, touchgfx::TextRotation)
<LI><a href="#[183]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextArea::calculateBoundingArea() const
</UL>

<P><STRONG><a name="[25a]"></a>touchgfx::Rect::bottom() const</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, lcd16bpp.o(i._ZNK8touchgfx4Rect6bottomEv))
<BR><BR>[Called By]<UL><LI><a href="#[29a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD::drawStringLTR(const touchgfx::Rect&, const touchgfx::Rect&, const touchgfx::LCD::StringVisuals&, const unsigned short*, std::__va_list)
<LI><a href="#[115]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Application::drawCachedAreas()
<LI><a href="#[117]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Application::invalidateArea(touchgfx::Rect)
<LI><a href="#[258]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Rect::intersect(const touchgfx::Rect&) const
<LI><a href="#[256]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Rect::includes(const touchgfx::Rect&) const
<LI><a href="#[25f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Rect::operator &=(const touchgfx::Rect&)
<LI><a href="#[25c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Rect::expandToFit(const touchgfx::Rect&)
<LI><a href="#[2ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Rect::intersect(short, short) const
<LI><a href="#[2a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD::realY(const touchgfx::Rect&, short, short, touchgfx::TextRotation)
<LI><a href="#[181]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::drawGlyph(unsigned short*, touchgfx::Rect, short, short, unsigned short, unsigned short, const touchgfx::Rect&, const touchgfx::GlyphNode*, const unsigned char*, unsigned char, touchgfx::colortype, unsigned char, unsigned char, touchgfx::TextRotation)
<LI><a href="#[2b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Screen::JSMOC(const touchgfx::Rect&, touchgfx::Drawable*)
<LI><a href="#[29b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD::rotateRect(touchgfx::Rect&, const touchgfx::Rect&, touchgfx::TextRotation)
<LI><a href="#[183]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextArea::calculateBoundingArea() const
</UL>

<P><STRONG><a name="[255]"></a>touchgfx::Rect::isEmpty() const</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, lcd16bpp.o(i._ZNK8touchgfx4Rect7isEmptyEv))
<BR><BR>[Called By]<UL><LI><a href="#[155]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Drawable::getVisibleRect(touchgfx::Rect&) const
<LI><a href="#[115]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Application::drawCachedAreas()
<LI><a href="#[117]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Application::invalidateArea(touchgfx::Rect)
<LI><a href="#[256]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Rect::includes(const touchgfx::Rect&) const
<LI><a href="#[25c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Rect::expandToFit(const touchgfx::Rect&)
<LI><a href="#[184]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Container::draw(const touchgfx::Rect&) const
<LI><a href="#[187]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Container::setupDrawChain(const touchgfx::Rect&, touchgfx::Drawable**)
<LI><a href="#[17e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::fillRect(const touchgfx::Rect&, touchgfx::colortype, unsigned char)
<LI><a href="#[17f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::fillBuffer(unsigned char*, unsigned short, const touchgfx::Rect&, touchgfx::colortype, unsigned char)
<LI><a href="#[2b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Screen::JSMOC(const touchgfx::Rect&, touchgfx::Drawable*)
<LI><a href="#[182]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextArea::draw(const touchgfx::Rect&) const
</UL>

<P><STRONG><a name="[256]"></a>touchgfx::Rect::includes(const touchgfx::Rect&) const</STRONG> (Thumb, 82 bytes, Stack size 16 bytes, application.o(i._ZNK8touchgfx4Rect8includesERKS0_))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = touchgfx::Rect::includes(const touchgfx::Rect&) const
</UL>
<BR>[Calls]<UL><LI><a href="#[255]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Rect::isEmpty() const
<LI><a href="#[25a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Rect::bottom() const
<LI><a href="#[259]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Rect::right() const
</UL>
<BR>[Called By]<UL><LI><a href="#[117]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Application::invalidateArea(touchgfx::Rect)
</UL>

<P><STRONG><a name="[258]"></a>touchgfx::Rect::intersect(const touchgfx::Rect&) const</STRONG> (Thumb, 70 bytes, Stack size 16 bytes, application.o(i._ZNK8touchgfx4Rect9intersectERKS0_))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = touchgfx::Rect::intersect(const touchgfx::Rect&) const
</UL>
<BR>[Calls]<UL><LI><a href="#[25a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Rect::bottom() const
<LI><a href="#[259]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Rect::right() const
</UL>
<BR>[Called By]<UL><LI><a href="#[117]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Application::invalidateArea(touchgfx::Rect)
<LI><a href="#[25f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Rect::operator &=(const touchgfx::Rect&)
<LI><a href="#[2b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Screen::JSMOC(const touchgfx::Rect&, touchgfx::Drawable*)
</UL>

<P><STRONG><a name="[2ac]"></a>touchgfx::Rect::intersect(short, short) const</STRONG> (Thumb, 52 bytes, Stack size 16 bytes, container.o(i._ZNK8touchgfx4Rect9intersectEss))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = touchgfx::Rect::intersect(short, short) const
</UL>
<BR>[Calls]<UL><LI><a href="#[25a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Rect::bottom() const
<LI><a href="#[259]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Rect::right() const
</UL>
<BR>[Called By]<UL><LI><a href="#[e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Screen::handleDragEvent(const touchgfx::DragEvent&)
<LI><a href="#[189]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Container::getLastChildNear(short, short, touchgfx::Drawable**, short*, short*)
<LI><a href="#[186]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Container::getLastChild(short, short, touchgfx::Drawable**)
</UL>

<P><STRONG><a name="[2ae]"></a>touchgfx::Rect::operator &(const touchgfx::Rect&) const</STRONG> (Thumb, 30 bytes, Stack size 16 bytes, lcd16bpp.o(i._ZNK8touchgfx4RectanERKS0_))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = touchgfx::Rect::operator &(const touchgfx::Rect&) const &rArr; touchgfx::Rect::operator &=(const touchgfx::Rect&) &rArr; touchgfx::Rect::intersect(const touchgfx::Rect&) const
</UL>
<BR>[Calls]<UL><LI><a href="#[25f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Rect::operator &=(const touchgfx::Rect&)
</UL>
<BR>[Called By]<UL><LI><a href="#[dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Screen::draw(touchgfx::Rect&)
<LI><a href="#[184]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Container::draw(const touchgfx::Rect&) const
<LI><a href="#[187]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Container::setupDrawChain(const touchgfx::Rect&, touchgfx::Drawable**)
<LI><a href="#[2b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Screen::JSMOC(const touchgfx::Rect&, touchgfx::Drawable*)
</UL>

<P><STRONG><a name="[2dd]"></a>touchgfx::Texts::getText(unsigned short) const</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, texts.o(i._ZNK8touchgfx5Texts7getTextEt))
<BR><BR>[Called By]<UL><LI><a href="#[152]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextAreaWithWildcardBase::draw(const touchgfx::Rect&) const
<LI><a href="#[2e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TypedText::getText() const
</UL>

<P><STRONG><a name="[155]"></a>touchgfx::Drawable::getVisibleRect(touchgfx::Rect&) const</STRONG> (Thumb, 60 bytes, Stack size 16 bytes, drawable.o(i._ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = touchgfx::Drawable::getVisibleRect(touchgfx::Rect&) const &rArr; touchgfx::Rect::operator &=(const touchgfx::Rect&) &rArr; touchgfx::Rect::intersect(const touchgfx::Rect&) const
</UL>
<BR>[Calls]<UL><LI><a href="#[25f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Rect::operator &=(const touchgfx::Rect&)
<LI><a href="#[255]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Rect::isEmpty() const
</UL>
<BR>[Address Reference Count : 7]<UL><LI> box.o(.constdata__ZTVN8touchgfx3BoxE)
<LI> container.o(.constdata__ZTVN8touchgfx9ContainerE)
<LI> drawable.o(.constdata__ZTVN8touchgfx8DrawableE)
<LI> textareawithwildcard.o(.constdata__ZTVN8touchgfx24TextAreaWithWildcardBaseE)
<LI> screen1viewbase.o(.constdata__ZTVN8touchgfx6WidgetE)
<LI> screen1viewbase.o(.constdata__ZTVN8touchgfx23TextAreaWithOneWildcardE)
<LI> textarea.o(.constdata__ZTVN8touchgfx8TextAreaE)
</UL>
<P><STRONG><a name="[2ab]"></a>touchgfx::Drawable::getAbsoluteRect() const</STRONG> (Thumb, 48 bytes, Stack size 24 bytes, drawable.o(i._ZNK8touchgfx8Drawable15getAbsoluteRectEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = touchgfx::Drawable::getAbsoluteRect() const
</UL>
<BR>[Called By]<UL><LI><a href="#[dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Screen::draw(touchgfx::Rect&)
<LI><a href="#[e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Screen::handleGestureEvent(const touchgfx::GestureEvent&)
<LI><a href="#[e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Screen::handleClickEvent(const touchgfx::ClickEvent&)
<LI><a href="#[e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Screen::handleDragEvent(const touchgfx::DragEvent&)
<LI><a href="#[152]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextAreaWithWildcardBase::draw(const touchgfx::Rect&) const
<LI><a href="#[189]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Container::getLastChildNear(short, short, touchgfx::Drawable**, short*, short*)
<LI><a href="#[2b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Drawable::getCachedAbsY()
<LI><a href="#[2b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Drawable::getCachedAbsX()
<LI><a href="#[2af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Screen::startSMOC(const touchgfx::Rect&)
<LI><a href="#[182]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextArea::draw(const touchgfx::Rect&) const
</UL>

<P><STRONG><a name="[156]"></a>touchgfx::Drawable::translateRectToAbsolute(touchgfx::Rect&) const</STRONG> (Thumb, 30 bytes, Stack size 0 bytes, drawable.o(i._ZNK8touchgfx8Drawable23translateRectToAbsoluteERNS_4RectE))
<BR>[Address Reference Count : 7]<UL><LI> box.o(.constdata__ZTVN8touchgfx3BoxE)
<LI> container.o(.constdata__ZTVN8touchgfx9ContainerE)
<LI> drawable.o(.constdata__ZTVN8touchgfx8DrawableE)
<LI> textareawithwildcard.o(.constdata__ZTVN8touchgfx24TextAreaWithWildcardBaseE)
<LI> screen1viewbase.o(.constdata__ZTVN8touchgfx6WidgetE)
<LI> screen1viewbase.o(.constdata__ZTVN8touchgfx23TextAreaWithOneWildcardE)
<LI> textarea.o(.constdata__ZTVN8touchgfx8TextAreaE)
</UL>
<P><STRONG><a name="[180]"></a>touchgfx::LCD16bpp::framebufferFormat() const</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, lcd16bpp.o(i._ZNK8touchgfx8LCD16bpp17framebufferFormatEv))
<BR>[Address Reference Count : 1]<UL><LI> lcd16bpp.o(.constdata__ZTVN8touchgfx8LCD16bppE)
</UL>
<P><STRONG><a name="[2e2]"></a>touchgfx::TextArea::BoundingArea::isValid(const unsigned short*) const</STRONG> (Thumb, 30 bytes, Stack size 0 bytes, textarea.o(i._ZNK8touchgfx8TextArea12BoundingArea7isValidEPKt))
<BR><BR>[Called By]<UL><LI><a href="#[182]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextArea::draw(const touchgfx::Rect&) const
</UL>

<P><STRONG><a name="[160]"></a>touchgfx::TextArea::getAlignment() const</STRONG> (Thumb, 48 bytes, Stack size 16 bytes, textarea.o(i._ZNK8touchgfx8TextArea12getAlignmentEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 64 + Unknown Stack Size
<LI>Call Chain = touchgfx::TextArea::getAlignment() const &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[2d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TypedText::hasValidId() const
<LI><a href="#[1b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;abort
</UL>
<BR>[Address Reference Count : 3]<UL><LI> textareawithwildcard.o(.constdata__ZTVN8touchgfx24TextAreaWithWildcardBaseE)
<LI> screen1viewbase.o(.constdata__ZTVN8touchgfx23TextAreaWithOneWildcardE)
<LI> textarea.o(.constdata__ZTVN8touchgfx8TextAreaE)
</UL>
<P><STRONG><a name="[153]"></a>touchgfx::TextArea::getSolidRect() const</STRONG> (Thumb, 14 bytes, Stack size 16 bytes, screen1viewbase.o(i._ZNK8touchgfx8TextArea12getSolidRectEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = touchgfx::TextArea::getSolidRect() const
</UL>
<BR>[Calls]<UL><LI><a href="#[d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Rect::Rect()
</UL>
<BR>[Address Reference Count : 3]<UL><LI> textareawithwildcard.o(.constdata__ZTVN8touchgfx24TextAreaWithWildcardBaseE)
<LI> screen1viewbase.o(.constdata__ZTVN8touchgfx23TextAreaWithOneWildcardE)
<LI> textarea.o(.constdata__ZTVN8touchgfx8TextAreaE)
</UL>
<P><STRONG><a name="[162]"></a>touchgfx::TextArea::getTextWidth() const</STRONG> (Thumb, 82 bytes, Stack size 32 bytes, textarea.o(i._ZNK8touchgfx8TextArea12getTextWidthEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 104 + Unknown Stack Size
<LI>Call Chain = touchgfx::TextArea::getTextWidth() const &rArr; touchgfx::TypedText::getFont() const &rArr; __aeabi_assert &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[2dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TypedText::getFont() const
<LI><a href="#[2d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TypedText::hasValidId() const
<LI><a href="#[2e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TypedText::getText() const
<LI><a href="#[2e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TypedText::getTextDirection() const
</UL>
<BR>[Address Reference Count : 3]<UL><LI> textareawithwildcard.o(.constdata__ZTVN8touchgfx24TextAreaWithWildcardBaseE)
<LI> screen1viewbase.o(.constdata__ZTVN8touchgfx23TextAreaWithOneWildcardE)
<LI> textarea.o(.constdata__ZTVN8touchgfx8TextAreaE)
</UL>
<P><STRONG><a name="[167]"></a>touchgfx::TextArea::getWildcard1() const</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, textarea.o(i._ZNK8touchgfx8TextArea12getWildcard1Ev))
<BR>[Address Reference Count : 2]<UL><LI> textareawithwildcard.o(.constdata__ZTVN8touchgfx24TextAreaWithWildcardBaseE)
<LI> textarea.o(.constdata__ZTVN8touchgfx8TextAreaE)
</UL>
<P><STRONG><a name="[165]"></a>touchgfx::TextArea::getWildcard2() const</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, screen1viewbase.o(i._ZNK8touchgfx8TextArea12getWildcard2Ev))
<BR>[Address Reference Count : 3]<UL><LI> textareawithwildcard.o(.constdata__ZTVN8touchgfx24TextAreaWithWildcardBaseE)
<LI> screen1viewbase.o(.constdata__ZTVN8touchgfx23TextAreaWithOneWildcardE)
<LI> textarea.o(.constdata__ZTVN8touchgfx8TextAreaE)
</UL>
<P><STRONG><a name="[161]"></a>touchgfx::TextArea::getTextHeight() const</STRONG> (Thumb, 70 bytes, Stack size 24 bytes, textarea.o(i._ZNK8touchgfx8TextArea13getTextHeightEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 80 + Unknown Stack Size
<LI>Call Chain = touchgfx::TextArea::getTextHeight() const &rArr; touchgfx::TypedText::getText() const &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[2d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TypedText::hasValidId() const
<LI><a href="#[2e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TypedText::getText() const
</UL>
<BR>[Address Reference Count : 3]<UL><LI> textareawithwildcard.o(.constdata__ZTVN8touchgfx24TextAreaWithWildcardBaseE)
<LI> screen1viewbase.o(.constdata__ZTVN8touchgfx23TextAreaWithOneWildcardE)
<LI> textarea.o(.constdata__ZTVN8touchgfx8TextAreaE)
</UL>
<P><STRONG><a name="[163]"></a>touchgfx::TextArea::calculateTextHeight(const unsigned short*, ...) const</STRONG> (Thumb, 164 bytes, Stack size 152 bytes, textarea.o(i._ZNK8touchgfx8TextArea19calculateTextHeightEPKtz))
<BR><BR>[Stack]<UL><LI>Max Depth = 528 + Unknown Stack Size
<LI>Call Chain = touchgfx::TextArea::calculateTextHeight(const unsigned short*, ...) const &rArr; touchgfx::LCD::getNumLines(touchgfx::TextProvider&, touchgfx::WideTextAction, unsigned char, const touchgfx::Font*, short) &rArr; touchgfx::LCD::WideTextInternalStruct::scanStringLengthForLine() &rArr; touchgfx::TextProvider::getNextLigature(unsigned char, const touchgfx::Font*, const touchgfx::GlyphNode*&) &rArr; touchgfx::TextProvider::getNextLigature(unsigned char) &rArr; touchgfx::TextProvider::substituteGlyphs() &rArr; touchgfx::TextProvider::applyGsubRules(const unsigned short*, unsigned short) &rArr; touchgfx::TextProvider::replaceInputCharacters(unsigned short, unsigned short, const unsigned short*) &rArr; touchgfx::TextProvider::fillInputBuffer() &rArr; touchgfx::TextProvider::circularBuffer&lang;(unsigned)10&rang;::pushBack(unsigned short) &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[283]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextProvider::TextProvider()
<LI><a href="#[266]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextProvider::initialize(const unsigned short*, std::__va_list, const unsigned short*, const touchgfx::FontContextualFormsTable*)
<LI><a href="#[2dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TypedText::getFont() const
<LI><a href="#[2d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TypedText::hasValidId() const
<LI><a href="#[29c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD::getNumLines(touchgfx::TextProvider&, touchgfx::WideTextAction, unsigned char, const touchgfx::Font*, short)
<LI><a href="#[2e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TypedText::getTextDirection() const
</UL>
<BR>[Address Reference Count : 3]<UL><LI> textareawithwildcard.o(.constdata__ZTVN8touchgfx24TextAreaWithWildcardBaseE)
<LI> screen1viewbase.o(.constdata__ZTVN8touchgfx23TextAreaWithOneWildcardE)
<LI> textarea.o(.constdata__ZTVN8touchgfx8TextAreaE)
</UL>
<P><STRONG><a name="[183]"></a>touchgfx::TextArea::calculateBoundingArea() const</STRONG> (Thumb, 754 bytes, Stack size 208 bytes, textarea.o(i._ZNK8touchgfx8TextArea21calculateBoundingAreaEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 504 + Unknown Stack Size
<LI>Call Chain = touchgfx::TextArea::calculateBoundingArea() const &rArr; touchgfx::LCD::stringWidth(touchgfx::TextProvider&, const touchgfx::Font&, int, unsigned char) &rArr; touchgfx::TextProvider::getNextLigature(unsigned char, const touchgfx::Font*, const touchgfx::GlyphNode*&) &rArr; touchgfx::TextProvider::getNextLigature(unsigned char) &rArr; touchgfx::TextProvider::substituteGlyphs() &rArr; touchgfx::TextProvider::applyGsubRules(const unsigned short*, unsigned short) &rArr; touchgfx::TextProvider::replaceInputCharacters(unsigned short, unsigned short, const unsigned short*) &rArr; touchgfx::TextProvider::fillInputBuffer() &rArr; touchgfx::TextProvider::circularBuffer&lang;(unsigned)10&rang;::pushBack(unsigned short) &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[283]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextProvider::TextProvider()
<LI><a href="#[2dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TypedText::getFont() const
<LI><a href="#[2d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TypedText::hasValidId() const
<LI><a href="#[29f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD::stringWidth(touchgfx::TextProvider&, const touchgfx::Font&, int, unsigned char)
<LI><a href="#[26d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextProvider::endOfString()
<LI><a href="#[25a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Rect::bottom() const
<LI><a href="#[259]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Rect::right() const
<LI><a href="#[252]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Rect::Rect(short, short, short, short)
<LI><a href="#[29d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD::WideTextInternalStruct::WideTextInternalStruct(touchgfx::TextProvider&, unsigned short, unsigned short, unsigned char, const touchgfx::Font*, short, touchgfx::WideTextAction)
<LI><a href="#[29e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD::WideTextInternalStruct::scanStringLengthForLine()
<LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextProvider::initialize(const unsigned short*, const unsigned short*, const touchgfx::FontContextualFormsTable*, ...)
<LI><a href="#[2e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TypedText::getText() const
<LI><a href="#[2e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TypedText::getTextDirection() const
</UL>
<BR>[Address Reference Count : 1]<UL><LI> textarea.o(.constdata__ZTVN8touchgfx8TextAreaE)
</UL>
<P><STRONG><a name="[182]"></a>touchgfx::TextArea::draw(const touchgfx::Rect&) const</STRONG> (Thumb, 252 bytes, Stack size 88 bytes, textarea.o(i._ZNK8touchgfx8TextArea4drawERKNS_4RectE))
<BR><BR>[Stack]<UL><LI>Max Depth = 952 + Unknown Stack Size
<LI>Call Chain = touchgfx::TextArea::draw(const touchgfx::Rect&) const &rArr; touchgfx::LCD::drawString(touchgfx::Rect, const touchgfx::Rect&, const touchgfx::LCD::StringVisuals&, const unsigned short*, ...) &rArr; touchgfx::LCD::drawStringLTR(const touchgfx::Rect&, const touchgfx::Rect&, const touchgfx::LCD::StringVisuals&, const unsigned short*, std::__va_list) &rArr; touchgfx::LCD::drawStringInternal(unsigned short*, const touchgfx::Rect*, short, short, const touchgfx::Rect&, const touchgfx::LCD::StringVisuals*, unsigned char, touchgfx::TextProvider&, int, bool) &rArr; touchgfx::TextProvider::getNextLigature(unsigned char, const touchgfx::Font*, const touchgfx::GlyphNode*&, const unsigned char*&, unsigned char&) &rArr; touchgfx::TextProvider::getNextLigature(unsigned char) &rArr; touchgfx::TextProvider::substituteGlyphs() &rArr; touchgfx::TextProvider::applyGsubRules(const unsigned short*, unsigned short) &rArr; touchgfx::TextProvider::replaceInputCharacters(unsigned short, unsigned short, const unsigned short*) &rArr; touchgfx::TextProvider::fillInputBuffer() &rArr; touchgfx::TextProvider::circularBuffer&lang;(unsigned)10&rang;::pushBack(unsigned short) &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[299]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD::drawString(touchgfx::Rect, const touchgfx::Rect&, const touchgfx::LCD::StringVisuals&, const unsigned short*, ...)
<LI><a href="#[2dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TypedText::getFont() const
<LI><a href="#[2d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TypedText::hasValidId() const
<LI><a href="#[25f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Rect::operator &=(const touchgfx::Rect&)
<LI><a href="#[2ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Drawable::getAbsoluteRect() const
<LI><a href="#[255]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Rect::isEmpty() const
<LI><a href="#[2e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TypedText::getText() const
<LI><a href="#[2e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TypedText::getTextDirection() const
<LI><a href="#[2e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextArea::BoundingArea::isValid(const unsigned short*) const
</UL>
<BR>[Address Reference Count : 1]<UL><LI> textarea.o(.constdata__ZTVN8touchgfx8TextAreaE)
</UL>
<P><STRONG><a name="[2e3]"></a>touchgfx::ConstFont::find(unsigned short) const</STRONG> (Thumb, 160 bytes, Stack size 16 bytes, constfont.o(i._ZNK8touchgfx9ConstFont4findEt))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = touchgfx::ConstFont::find(unsigned short) const
</UL>
<BR>[Called By]<UL><LI><a href="#[13e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::ConstFont::getGlyph(unsigned short, const unsigned char*&, unsigned char&) const
</UL>

<P><STRONG><a name="[13e]"></a>touchgfx::ConstFont::getGlyph(unsigned short, const unsigned char*&, unsigned char&) const</STRONG> (Thumb, 94 bytes, Stack size 24 bytes, constfont.o(i._ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = touchgfx::ConstFont::getGlyph(unsigned short, const unsigned char*&, unsigned char&) const &rArr; touchgfx::ConstFont::find(unsigned short) const
</UL>
<BR>[Calls]<UL><LI><a href="#[2e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::ConstFont::find(unsigned short) const
</UL>
<BR>[Address Reference Count : 2]<UL><LI> generatedfont.o(.constdata__ZTVN8touchgfx13GeneratedFontE)
<LI> constfont.o(.constdata__ZTVN8touchgfx9ConstFontE)
</UL>
<P><STRONG><a name="[185]"></a>touchgfx::Container::getSolidRect() const</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, container.o(i._ZNK8touchgfx9Container12getSolidRectEv))
<BR><BR>[Calls]<UL><LI><a href="#[d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Rect::Rect()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> container.o(.constdata__ZTVN8touchgfx9ContainerE)
</UL>
<P><STRONG><a name="[184]"></a>touchgfx::Container::draw(const touchgfx::Rect&) const</STRONG> (Thumb, 94 bytes, Stack size 24 bytes, container.o(i._ZNK8touchgfx9Container4drawERKNS_4RectE))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = touchgfx::Container::draw(const touchgfx::Rect&) const &rArr; touchgfx::Rect::operator &(const touchgfx::Rect&) const &rArr; touchgfx::Rect::operator &=(const touchgfx::Rect&) &rArr; touchgfx::Rect::intersect(const touchgfx::Rect&) const
</UL>
<BR>[Calls]<UL><LI><a href="#[2ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Rect::operator &(const touchgfx::Rect&) const
<LI><a href="#[255]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Rect::isEmpty() const
</UL>
<BR>[Called By]<UL><LI><a href="#[dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Screen::draw(touchgfx::Rect&)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> container.o(.constdata__ZTVN8touchgfx9ContainerE)
</UL>
<P><STRONG><a name="[2db]"></a>touchgfx::GlyphNode::kerningTablePos() const</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, generatedfont.o(i._ZNK8touchgfx9GlyphNode15kerningTablePosEv))
<BR><BR>[Called By]<UL><LI><a href="#[147]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::GeneratedFont::getKerning(unsigned short, const touchgfx::GlyphNode*) const
</UL>

<P><STRONG><a name="[275]"></a>touchgfx::GlyphNode::top() const</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, font.o(i._ZNK8touchgfx9GlyphNode3topEv))
<BR><BR>[Called By]<UL><LI><a href="#[269]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextProvider::adjustArabicGlyph(const touchgfx::Font*, const touchgfx::GlyphNode*, unsigned short)
<LI><a href="#[26a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextProvider::adjustThaiGlyph(const touchgfx::Font*, const touchgfx::GlyphNode*)
</UL>

<P><STRONG><a name="[280]"></a>touchgfx::GlyphNode::width() const</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, fontcache.o(i._ZNK8touchgfx9GlyphNode5widthEv))
<BR><BR>[Called By]<UL><LI><a href="#[269]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextProvider::adjustArabicGlyph(const touchgfx::Font*, const touchgfx::GlyphNode*, unsigned short)
<LI><a href="#[26b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextProvider::adjustHindiGlyph(const touchgfx::GlyphNode*)
</UL>

<P><STRONG><a name="[26c]"></a>touchgfx::GlyphNode::advance() const</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, lcd.o(i._ZNK8touchgfx9GlyphNode7advanceEv))
<BR><BR>[Called By]<UL><LI><a href="#[29f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD::stringWidth(touchgfx::TextProvider&, const touchgfx::Font&, int, unsigned char)
<LI><a href="#[29d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD::WideTextInternalStruct::WideTextInternalStruct(touchgfx::TextProvider&, unsigned short, unsigned short, unsigned char, const touchgfx::Font*, short, touchgfx::WideTextAction)
<LI><a href="#[29e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD::WideTextInternalStruct::scanStringLengthForLine()
<LI><a href="#[2a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD::drawStringInternal(unsigned short*, const touchgfx::Rect*, short, short, const touchgfx::Rect&, const touchgfx::LCD::StringVisuals*, unsigned char, touchgfx::TextProvider&, int, bool)
<LI><a href="#[26a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextProvider::adjustThaiGlyph(const touchgfx::Font*, const touchgfx::GlyphNode*)
<LI><a href="#[268]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextProvider::adjustGlyph(unsigned short, unsigned short, const touchgfx::GlyphNode*&, const touchgfx::Font*)
</UL>

<P><STRONG><a name="[2d8]"></a>touchgfx::TypedText::hasValidId() const</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, fontcache.o(i._ZNK8touchgfx9TypedText10hasValidIdEv))
<BR><BR>[Called By]<UL><LI><a href="#[163]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextArea::calculateTextHeight(const unsigned short*, ...) const
<LI><a href="#[161]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextArea::getTextHeight() const
<LI><a href="#[162]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextArea::getTextWidth() const
<LI><a href="#[160]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextArea::getAlignment() const
<LI><a href="#[152]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextAreaWithWildcardBase::draw(const touchgfx::Rect&) const
<LI><a href="#[2dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TypedText::getFont() const
<LI><a href="#[2e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TypedText::getText() const
<LI><a href="#[2e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TypedText::getTextDirection() const
<LI><a href="#[182]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextArea::draw(const touchgfx::Rect&) const
<LI><a href="#[183]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextArea::calculateBoundingArea() const
<LI><a href="#[2d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextArea::resizeToCurrentText()
</UL>

<P><STRONG><a name="[2e1]"></a>touchgfx::TypedText::getTextDirection() const</STRONG> (Thumb, 38 bytes, Stack size 16 bytes, textarea.o(i._ZNK8touchgfx9TypedText16getTextDirectionEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 64 + Unknown Stack Size
<LI>Call Chain = touchgfx::TypedText::getTextDirection() const &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[2d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TypedText::hasValidId() const
<LI><a href="#[1b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;abort
</UL>
<BR>[Called By]<UL><LI><a href="#[163]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextArea::calculateTextHeight(const unsigned short*, ...) const
<LI><a href="#[162]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextArea::getTextWidth() const
<LI><a href="#[182]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextArea::draw(const touchgfx::Rect&) const
<LI><a href="#[183]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextArea::calculateBoundingArea() const
</UL>

<P><STRONG><a name="[2dc]"></a>touchgfx::TypedText::getFont() const</STRONG> (Thumb, 66 bytes, Stack size 8 bytes, fontcache.o(i._ZNK8touchgfx9TypedText7getFontEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 72 + Unknown Stack Size
<LI>Call Chain = touchgfx::TypedText::getFont() const &rArr; __aeabi_assert &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[2d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TypedText::hasValidId() const
<LI><a href="#[1b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_assert
</UL>
<BR>[Called By]<UL><LI><a href="#[163]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextArea::calculateTextHeight(const unsigned short*, ...) const
<LI><a href="#[162]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextArea::getTextWidth() const
<LI><a href="#[152]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextAreaWithWildcardBase::draw(const touchgfx::Rect&) const
<LI><a href="#[182]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextArea::draw(const touchgfx::Rect&) const
<LI><a href="#[183]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextArea::calculateBoundingArea() const
</UL>

<P><STRONG><a name="[2e0]"></a>touchgfx::TypedText::getText() const</STRONG> (Thumb, 36 bytes, Stack size 8 bytes, textarea.o(i._ZNK8touchgfx9TypedText7getTextEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 56 + Unknown Stack Size
<LI>Call Chain = touchgfx::TypedText::getText() const &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[2dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Texts::getText(unsigned short) const
<LI><a href="#[2d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TypedText::hasValidId() const
<LI><a href="#[1b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;abort
</UL>
<BR>[Called By]<UL><LI><a href="#[161]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextArea::getTextHeight() const
<LI><a href="#[162]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextArea::getTextWidth() const
<LI><a href="#[182]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextArea::draw(const touchgfx::Rect&) const
<LI><a href="#[183]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextArea::calculateBoundingArea() const
</UL>

<P><STRONG><a name="[33c]"></a>__aeabi_vec_ctor_nocookie_nodtor</STRONG> (Thumb, 36 bytes, Stack size 24 bytes, aeabi_vec_ctor_nocookie_nodtor.o(i.__aeabi_vec_ctor_nocookie_nodtor))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = __aeabi_vec_ctor_nocookie_nodtor
</UL>
<BR>[Called By]<UL><LI><a href="#[25d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Vector&lang;touchgfx::Rect, (unsigned short)8&rang;::Vector()
</UL>

<P><STRONG><a name="[227]"></a>__cxa_guard_acquire</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, cxa_guard_acquire.o(i.__cxa_guard_acquire))
<BR><BR>[Called By]<UL><LI><a href="#[220]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx_init
<LI><a href="#[22a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getFont_verdana_40_4bpp()
<LI><a href="#[229]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getFont_verdana_20_4bpp()
<LI><a href="#[226]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getFont_verdana_10_4bpp()
<LI><a href="#[2ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::enableTextureMapperRGB565_NonOpaque_BilinearInterpolation()
<LI><a href="#[2c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::enableTextureMapperRGB565_Opaque_BilinearInterpolation()
<LI><a href="#[2d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::enableTextureMapperL8_ARGB8888_BilinearInterpolation()
<LI><a href="#[2cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::enableTextureMapperRGB565_NonOpaque_NearestNeighbor()
<LI><a href="#[2d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::enableTextureMapperL8_RGB888_BilinearInterpolation()
<LI><a href="#[2ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::enableTextureMapperL8_RGB565_BilinearInterpolation()
<LI><a href="#[2cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::enableTextureMapperARGB8888_BilinearInterpolation()
<LI><a href="#[2c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::enableTextureMapperRGB565_Opaque_NearestNeighbor()
<LI><a href="#[2d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::enableTextureMapperL8_ARGB8888_NearestNeighbor()
<LI><a href="#[2d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::enableTextureMapperL8_RGB888_NearestNeighbor()
<LI><a href="#[2cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::enableTextureMapperL8_RGB565_NearestNeighbor()
<LI><a href="#[2cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::enableTextureMapperARGB8888_NearestNeighbor()
<LI><a href="#[2be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::enableTextureMapperA4_BilinearInterpolation()
<LI><a href="#[2bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::enableTextureMapperA4_NearestNeighbor()
<LI><a href="#[2c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::enableDecompressorL8_LZW9()
<LI><a href="#[2c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::enableDecompressorL8_RLE()
<LI><a href="#[2c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::enableDecompressorL8_L4()
</UL>

<P><STRONG><a name="[13a]"></a>__cxa_pure_virtual</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, pure_virt.o(i.__cxa_pure_virtual))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = __cxa_pure_virtual &rArr; __rt_SIGPVFN &rArr; __rt_SIGPVFN_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[1c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_SIGPVFN
</UL>
<BR>[Address Reference Count : 10]<UL><LI> touchgfxconfiguration.o(.constdata__ZTVN8touchgfx12FontProviderE)
<LI> touchgfxconfiguration.o(.constdata__ZTVN8touchgfx15TouchControllerE)
<LI> constfont.o(.constdata__ZTVN8touchgfx9ConstFontE)
<LI> abstractpartition.o(.constdata__ZTVN8touchgfx17AbstractPartitionE)
<LI> drawable.o(.constdata__ZTVN8touchgfx8DrawableE)
<LI> frontendapplicationbase.o(.constdata__ZTVN8touchgfx15GenericCallbackIvvvEE)
<LI> screen1viewbase.o(.constdata__ZTVN8touchgfx6WidgetE)
<LI> texts.o(.constdata__ZTVN8touchgfx4FontE)
<LI> dma.o(.constdata__ZTVN8touchgfx13DMA_InterfaceE)
<LI> hal.o(.constdata__ZTVN8touchgfx3HALE)
</UL>
<P><STRONG><a name="[1ab]"></a>main</STRONG> (Thumb, 372 bytes, Stack size 0 bytes, main_1.o(i.main))
<BR><BR>[Stack]<UL><LI>Max Depth = 360 + Unknown Stack Size
<LI>Call Chain = main &rArr; MX_LTDC_Init &rArr; HAL_LTDC_Init &rArr; HAL_LTDC_MspInit &rArr; HAL_NVIC_SetPriority &rArr; __NVIC_SetPriority
</UL>
<BR>[Calls]<UL><LI><a href="#[2e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osKernelStart
<LI><a href="#[2e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osKernelInitialize
<LI><a href="#[2e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_TouchGFX_PreOSInit
<LI><a href="#[21e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_TouchGFX_Init
<LI><a href="#[21d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_LTDC_Init
<LI><a href="#[21b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_GPIO_Init
<LI><a href="#[219]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_FREERTOS_Init
<LI><a href="#[217]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_FMC_Init
<LI><a href="#[215]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_DMA2D_Init
<LI><a href="#[214]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_CRC_Init
<LI><a href="#[1e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_Init
<LI><a href="#[21c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_WritePin
<LI><a href="#[224]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemClock_Config
</UL>
<BR>[Called By]<UL><LI><a href="#[1aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry_main
</UL>

<P><STRONG><a name="[221]"></a>osDelay</STRONG> (Thumb, 30 bytes, Stack size 16 bytes, cmsis_os2.o(i.osDelay))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = osDelay &rArr; vTaskDelay &rArr; xTaskResumeAll &rArr; xTaskIncrementTick
</UL>
<BR>[Calls]<UL><LI><a href="#[2e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__get_IPSR
<LI><a href="#[2ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskDelay
</UL>
<BR>[Called By]<UL><LI><a href="#[ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;StartDefaultTask
<LI><a href="#[b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::OSWrappers::taskDelay(unsigned short)
</UL>

<P><STRONG><a name="[2e7]"></a>osKernelInitialize</STRONG> (Thumb, 38 bytes, Stack size 8 bytes, cmsis_os2.o(i.osKernelInitialize))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = osKernelInitialize
</UL>
<BR>[Calls]<UL><LI><a href="#[2e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__get_IPSR
</UL>
<BR>[Called By]<UL><LI><a href="#[1ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[2e8]"></a>osKernelStart</STRONG> (Thumb, 82 bytes, Stack size 16 bytes, cmsis_os2.o(i.osKernelStart))
<BR><BR>[Stack]<UL><LI>Max Depth = 176 + Unknown Stack Size
<LI>Call Chain = osKernelStart &rArr; vTaskStartScheduler &rArr; xTimerCreateTimerTask &rArr; prvCheckForValidListAndQueue &rArr; xQueueGenericCreateStatic &rArr; prvInitialiseNewQueue &rArr; xQueueGenericReset &rArr; xTaskRemoveFromEventList
</UL>
<BR>[Calls]<UL><LI><a href="#[2e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__get_IPSR
<LI><a href="#[2eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskStartScheduler
</UL>
<BR>[Called By]<UL><LI><a href="#[1ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[24c]"></a>osMessageQueueGet</STRONG> (Thumb, 124 bytes, Stack size 32 bytes, cmsis_os2.o(i.osMessageQueueGet))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = osMessageQueueGet &rArr; xQueueReceive &rArr; vTaskPlaceOnEventList &rArr; prvAddCurrentTaskToDelayedList &rArr; vListInsert
</UL>
<BR>[Calls]<UL><LI><a href="#[2ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueReceiveFromISR
<LI><a href="#[2ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueReceive
<LI><a href="#[2e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__get_IPSR
</UL>
<BR>[Called By]<UL><LI><a href="#[24b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::OSWrappers::waitForVSync()
</UL>

<P><STRONG><a name="[249]"></a>osMessageQueueNew</STRONG> (Thumb, 154 bytes, Stack size 32 bytes, cmsis_os2.o(i.osMessageQueueNew))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = osMessageQueueNew &rArr; xQueueGenericCreate &rArr; pvPortMalloc &rArr; xTaskResumeAll &rArr; xTaskIncrementTick
</UL>
<BR>[Calls]<UL><LI><a href="#[2ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericCreateStatic
<LI><a href="#[2ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericCreate
<LI><a href="#[2f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vQueueAddToRegistry
<LI><a href="#[2e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__get_IPSR
</UL>
<BR>[Called By]<UL><LI><a href="#[247]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::OSWrappers::initialize()
</UL>

<P><STRONG><a name="[24a]"></a>osMessageQueuePut</STRONG> (Thumb, 128 bytes, Stack size 32 bytes, cmsis_os2.o(i.osMessageQueuePut))
<BR><BR>[Stack]<UL><LI>Max Depth = 136<LI>Call Chain = osMessageQueuePut &rArr; xQueueGenericSend &rArr; vTaskPlaceOnEventList &rArr; prvAddCurrentTaskToDelayedList &rArr; vListInsert
</UL>
<BR>[Calls]<UL><LI><a href="#[2f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericSendFromISR
<LI><a href="#[2f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericSend
<LI><a href="#[2e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__get_IPSR
</UL>
<BR>[Called By]<UL><LI><a href="#[1f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::OSWrappers::signalVSync()
</UL>

<P><STRONG><a name="[250]"></a>osSemaphoreAcquire</STRONG> (Thumb, 104 bytes, Stack size 24 bytes, cmsis_os2.o(i.osSemaphoreAcquire))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = osSemaphoreAcquire &rArr; xQueueSemaphoreTake &rArr; vTaskPlaceOnEventList &rArr; prvAddCurrentTaskToDelayedList &rArr; vListInsert
</UL>
<BR>[Calls]<UL><LI><a href="#[2f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueSemaphoreTake
<LI><a href="#[2ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueReceiveFromISR
<LI><a href="#[2e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__get_IPSR
</UL>
<BR>[Called By]<UL><LI><a href="#[251]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::OSWrappers::tryTakeFrameBufferSemaphore()
<LI><a href="#[24f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::OSWrappers::takeFrameBufferSemaphore()
</UL>

<P><STRONG><a name="[248]"></a>osSemaphoreNew</STRONG> (Thumb, 204 bytes, Stack size 32 bytes, cmsis_os2.o(i.osSemaphoreNew))
<BR><BR>[Stack]<UL><LI>Max Depth = 144<LI>Call Chain = osSemaphoreNew &rArr; xQueueCreateCountingSemaphoreStatic &rArr; xQueueGenericCreateStatic &rArr; prvInitialiseNewQueue &rArr; xQueueGenericReset &rArr; xTaskRemoveFromEventList
</UL>
<BR>[Calls]<UL><LI><a href="#[2f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericSend
<LI><a href="#[2ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericCreateStatic
<LI><a href="#[2ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericCreate
<LI><a href="#[2f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueCreateCountingSemaphoreStatic
<LI><a href="#[2f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueCreateCountingSemaphore
<LI><a href="#[2f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vQueueDelete
<LI><a href="#[2f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vQueueAddToRegistry
<LI><a href="#[2e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__get_IPSR
</UL>
<BR>[Called By]<UL><LI><a href="#[247]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::OSWrappers::initialize()
</UL>

<P><STRONG><a name="[24e]"></a>osSemaphoreRelease</STRONG> (Thumb, 88 bytes, Stack size 24 bytes, cmsis_os2.o(i.osSemaphoreRelease))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = osSemaphoreRelease &rArr; xQueueGenericSend &rArr; vTaskPlaceOnEventList &rArr; prvAddCurrentTaskToDelayedList &rArr; vListInsert
</UL>
<BR>[Calls]<UL><LI><a href="#[2f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGiveFromISR
<LI><a href="#[2f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericSend
<LI><a href="#[2e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__get_IPSR
</UL>
<BR>[Called By]<UL><LI><a href="#[24d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::OSWrappers::giveFrameBufferSemaphore()
</UL>

<P><STRONG><a name="[21a]"></a>osThreadNew</STRONG> (Thumb, 184 bytes, Stack size 48 bytes, cmsis_os2.o(i.osThreadNew))
<BR><BR>[Stack]<UL><LI>Max Depth = 184 + Unknown Stack Size
<LI>Call Chain = osThreadNew &rArr; xTaskCreate &rArr; pvPortMalloc &rArr; xTaskResumeAll &rArr; xTaskIncrementTick
</UL>
<BR>[Calls]<UL><LI><a href="#[2e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__get_IPSR
<LI><a href="#[2f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskCreateStatic
<LI><a href="#[2f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskCreate
</UL>
<BR>[Called By]<UL><LI><a href="#[219]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_FREERTOS_Init
</UL>

<P><STRONG><a name="[320]"></a>pvPortMalloc</STRONG> (Thumb, 306 bytes, Stack size 24 bytes, heap_4.o(i.pvPortMalloc))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = pvPortMalloc &rArr; xTaskResumeAll &rArr; xTaskIncrementTick
</UL>
<BR>[Calls]<UL><LI><a href="#[318]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskResumeAll
<LI><a href="#[317]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskSuspendAll
<LI><a href="#[322]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvInsertBlockIntoFreeList
<LI><a href="#[321]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvHeapInit
</UL>
<BR>[Called By]<UL><LI><a href="#[2ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericCreate
<LI><a href="#[2f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskCreate
</UL>

<P><STRONG><a name="[335]"></a>pvTaskIncrementMutexHeldCount</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, tasks.o(i.pvTaskIncrementMutexHeldCount))
<BR><BR>[Called By]<UL><LI><a href="#[2f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueSemaphoreTake
</UL>

<P><STRONG><a name="[30e]"></a>pxPortInitialiseStack</STRONG> (Thumb, 38 bytes, Stack size 0 bytes, port.o(i.pxPortInitialiseStack))
<BR><BR>[Called By]<UL><LI><a href="#[30c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvInitialiseNewTask
</UL>

<P><STRONG><a name="[21f]"></a>touchgfx_components_init</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, touchgfxconfiguration.o(i.touchgfx_components_init))
<BR><BR>[Called By]<UL><LI><a href="#[21e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_TouchGFX_Init
</UL>

<P><STRONG><a name="[220]"></a>touchgfx_init</STRONG> (Thumb, 102 bytes, Stack size 24 bytes, touchgfxconfiguration.o(i.touchgfx_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 208 + Unknown Stack Size
<LI>Call Chain = touchgfx_init &rArr; TouchGFXHAL::initialize() &rArr; TouchGFXGeneratedHAL::initialize() &rArr; touchgfx::HAL::initialize() &rArr; touchgfx::OSWrappers::initialize() &rArr; osSemaphoreNew &rArr; xQueueCreateCountingSemaphoreStatic &rArr; xQueueGenericCreateStatic &rArr; prvInitialiseNewQueue &rArr; xQueueGenericReset &rArr; xTaskRemoveFromEventList
</UL>
<BR>[Calls]<UL><LI><a href="#[e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TouchGFXHAL::initialize()
<LI><a href="#[2a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Bitmap::registerBitmapDatabase(const touchgfx::Bitmap::BitmapData*, unsigned short, unsigned short*, unsigned, unsigned)
<LI><a href="#[241]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Texts::setLanguage(unsigned short)
<LI><a href="#[325]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::FontManager::setFontProvider(touchgfx::FontProvider*)
<LI><a href="#[323]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BitmapDatabase::getInstanceSize()
<LI><a href="#[324]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BitmapDatabase::getInstance()
<LI><a href="#[22d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FrontendHeap::FrontendHeap()
<LI><a href="#[227]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxa_guard_acquire
<LI><a href="#[1b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_atexit
</UL>
<BR>[Called By]<UL><LI><a href="#[21e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_TouchGFX_Init
</UL>

<P><STRONG><a name="[225]"></a>touchgfx_taskEntry</STRONG> (Thumb, 10 bytes, Stack size 8 bytes, touchgfxconfiguration.o(i.touchgfx_taskEntry))
<BR><BR>[Stack]<UL><LI>Max Depth = 144<LI>Call Chain = touchgfx_taskEntry &rArr; touchgfx::HAL::taskEntry() &rArr; touchgfx::OSWrappers::waitForVSync() &rArr; osMessageQueueGet &rArr; xQueueReceive &rArr; vTaskPlaceOnEventList &rArr; prvAddCurrentTaskToDelayedList &rArr; vListInsert
</UL>
<BR>[Calls]<UL><LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::HAL::taskEntry()
</UL>
<BR>[Called By]<UL><LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TouchGFX_Task
</UL>

<P><STRONG><a name="[2fb]"></a>uxListRemove</STRONG> (Thumb, 40 bytes, Stack size 0 bytes, list.o(i.uxListRemove))
<BR><BR>[Called By]<UL><LI><a href="#[31e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskRemoveFromEventList
<LI><a href="#[336]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskPriorityInherit
<LI><a href="#[308]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskPriorityDisinherit
<LI><a href="#[32b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskPriorityDisinheritAfterTimeout
<LI><a href="#[318]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskResumeAll
<LI><a href="#[31b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvSwitchTimerLists
<LI><a href="#[314]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvProcessReceivedCommands
<LI><a href="#[312]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvProcessExpiredTimer
<LI><a href="#[332]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskIncrementTick
<LI><a href="#[304]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvCheckTasksWaitingTermination
<LI><a href="#[2fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvAddCurrentTaskToDelayedList
</UL>

<P><STRONG><a name="[32c]"></a>vApplicationGetIdleTaskMemory</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, cmsis_os2.o(i.vApplicationGetIdleTaskMemory))
<BR><BR>[Called By]<UL><LI><a href="#[2eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskStartScheduler
</UL>

<P><STRONG><a name="[339]"></a>vApplicationGetTimerTaskMemory</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, cmsis_os2.o(i.vApplicationGetTimerTaskMemory))
<BR><BR>[Called By]<UL><LI><a href="#[32d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTimerCreateTimerTask
</UL>

<P><STRONG><a name="[303]"></a>vListInitialise</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, list.o(i.vListInitialise))
<BR><BR>[Called By]<UL><LI><a href="#[30b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericReset
<LI><a href="#[302]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvCheckForValidListAndQueue
<LI><a href="#[300]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvInitialiseTaskLists
</UL>

<P><STRONG><a name="[30d]"></a>vListInitialiseItem</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, list.o(i.vListInitialiseItem))
<BR><BR>[Called By]<UL><LI><a href="#[30c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvInitialiseNewTask
</UL>

<P><STRONG><a name="[2fd]"></a>vListInsert</STRONG> (Thumb, 52 bytes, Stack size 8 bytes, list.o(i.vListInsert))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = vListInsert
</UL>
<BR>[Called By]<UL><LI><a href="#[32a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskPlaceOnEventList
<LI><a href="#[31b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvSwitchTimerLists
<LI><a href="#[30f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvInsertTimerInActiveList
<LI><a href="#[2fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvAddCurrentTaskToDelayedList
</UL>

<P><STRONG><a name="[2fc]"></a>vListInsertEnd</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, list.o(i.vListInsertEnd))
<BR><BR>[Called By]<UL><LI><a href="#[31e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskRemoveFromEventList
<LI><a href="#[336]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskPriorityInherit
<LI><a href="#[308]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskPriorityDisinherit
<LI><a href="#[32b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskPriorityDisinheritAfterTimeout
<LI><a href="#[329]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskPlaceOnEventListRestricted
<LI><a href="#[318]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskResumeAll
<LI><a href="#[332]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskIncrementTick
<LI><a href="#[2fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvAddNewTaskToReadyList
<LI><a href="#[2fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvAddCurrentTaskToDelayedList
</UL>

<P><STRONG><a name="[2ff]"></a>vPortEnterCritical</STRONG> (Thumb, 76 bytes, Stack size 0 bytes, port.o(i.vPortEnterCritical))
<BR><BR>[Called By]<UL><LI><a href="#[334]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskCheckForTimeOut
<LI><a href="#[2f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueSemaphoreTake
<LI><a href="#[2ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueReceive
<LI><a href="#[2f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericSend
<LI><a href="#[30b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericReset
<LI><a href="#[319]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vQueueWaitForMessageRestricted
<LI><a href="#[31d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvUnlockQueue
<LI><a href="#[311]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvIsQueueFull
<LI><a href="#[310]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvIsQueueEmpty
<LI><a href="#[318]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskResumeAll
<LI><a href="#[302]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvCheckForValidListAndQueue
<LI><a href="#[304]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvCheckTasksWaitingTermination
<LI><a href="#[2fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvAddNewTaskToReadyList
</UL>

<P><STRONG><a name="[301]"></a>vPortExitCritical</STRONG> (Thumb, 56 bytes, Stack size 0 bytes, port.o(i.vPortExitCritical))
<BR><BR>[Called By]<UL><LI><a href="#[334]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskCheckForTimeOut
<LI><a href="#[2f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueSemaphoreTake
<LI><a href="#[2ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueReceive
<LI><a href="#[2f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericSend
<LI><a href="#[30b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericReset
<LI><a href="#[319]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vQueueWaitForMessageRestricted
<LI><a href="#[31d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvUnlockQueue
<LI><a href="#[311]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvIsQueueFull
<LI><a href="#[310]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvIsQueueEmpty
<LI><a href="#[318]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskResumeAll
<LI><a href="#[302]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvCheckForValidListAndQueue
<LI><a href="#[304]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvCheckTasksWaitingTermination
<LI><a href="#[2fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvAddNewTaskToReadyList
</UL>

<P><STRONG><a name="[309]"></a>vPortFree</STRONG> (Thumb, 150 bytes, Stack size 16 bytes, heap_4.o(i.vPortFree))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = vPortFree &rArr; xTaskResumeAll &rArr; xTaskIncrementTick
</UL>
<BR>[Calls]<UL><LI><a href="#[318]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskResumeAll
<LI><a href="#[317]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskSuspendAll
<LI><a href="#[322]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvInsertBlockIntoFreeList
</UL>
<BR>[Called By]<UL><LI><a href="#[2f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vQueueDelete
<LI><a href="#[314]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvProcessReceivedCommands
<LI><a href="#[2f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskCreate
<LI><a href="#[305]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvDeleteTCB
</UL>

<P><STRONG><a name="[32f]"></a>vPortSetupTimerInterrupt</STRONG> (Thumb, 36 bytes, Stack size 0 bytes, port.o(i.vPortSetupTimerInterrupt))
<BR><BR>[Called By]<UL><LI><a href="#[32e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xPortStartScheduler
</UL>

<P><STRONG><a name="[326]"></a>vPortValidateInterruptPriority</STRONG> (Thumb, 106 bytes, Stack size 16 bytes, port.o(i.vPortValidateInterruptPriority))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = vPortValidateInterruptPriority
</UL>
<BR>[Calls]<UL><LI><a href="#[327]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortGetIPSR
</UL>
<BR>[Called By]<UL><LI><a href="#[2ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueReceiveFromISR
<LI><a href="#[2f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGiveFromISR
<LI><a href="#[2f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericSendFromISR
</UL>

<P><STRONG><a name="[2f0]"></a>vQueueAddToRegistry</STRONG> (Thumb, 38 bytes, Stack size 0 bytes, queue.o(i.vQueueAddToRegistry))
<BR><BR>[Called By]<UL><LI><a href="#[302]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvCheckForValidListAndQueue
<LI><a href="#[248]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osSemaphoreNew
<LI><a href="#[249]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osMessageQueueNew
</UL>

<P><STRONG><a name="[2f4]"></a>vQueueDelete</STRONG> (Thumb, 50 bytes, Stack size 16 bytes, queue.o(i.vQueueDelete))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = vQueueDelete &rArr; vPortFree &rArr; xTaskResumeAll &rArr; xTaskIncrementTick
</UL>
<BR>[Calls]<UL><LI><a href="#[328]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vQueueUnregisterQueue
<LI><a href="#[309]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortFree
</UL>
<BR>[Called By]<UL><LI><a href="#[248]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osSemaphoreNew
</UL>

<P><STRONG><a name="[328]"></a>vQueueUnregisterQueue</STRONG> (Thumb, 44 bytes, Stack size 0 bytes, queue.o(i.vQueueUnregisterQueue))
<BR><BR>[Called By]<UL><LI><a href="#[2f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vQueueDelete
</UL>

<P><STRONG><a name="[319]"></a>vQueueWaitForMessageRestricted</STRONG> (Thumb, 74 bytes, Stack size 24 bytes, queue.o(i.vQueueWaitForMessageRestricted))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = vQueueWaitForMessageRestricted &rArr; vTaskPlaceOnEventListRestricted &rArr; prvAddCurrentTaskToDelayedList &rArr; vListInsert
</UL>
<BR>[Calls]<UL><LI><a href="#[329]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskPlaceOnEventListRestricted
<LI><a href="#[31d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvUnlockQueue
<LI><a href="#[301]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortExitCritical
<LI><a href="#[2ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortEnterCritical
</UL>
<BR>[Called By]<UL><LI><a href="#[316]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvProcessTimerOrBlockTask
</UL>

<P><STRONG><a name="[2ea]"></a>vTaskDelay</STRONG> (Thumb, 82 bytes, Stack size 16 bytes, tasks.o(i.vTaskDelay))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = vTaskDelay &rArr; xTaskResumeAll &rArr; xTaskIncrementTick
</UL>
<BR>[Calls]<UL><LI><a href="#[318]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskResumeAll
<LI><a href="#[317]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskSuspendAll
<LI><a href="#[2fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvAddCurrentTaskToDelayedList
</UL>
<BR>[Called By]<UL><LI><a href="#[221]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osDelay
</UL>

<P><STRONG><a name="[333]"></a>vTaskInternalSetTimeOutState</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, tasks.o(i.vTaskInternalSetTimeOutState))
<BR><BR>[Called By]<UL><LI><a href="#[334]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskCheckForTimeOut
<LI><a href="#[2f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueSemaphoreTake
<LI><a href="#[2ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueReceive
<LI><a href="#[2f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericSend
</UL>

<P><STRONG><a name="[31f]"></a>vTaskMissedYield</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, tasks.o(i.vTaskMissedYield))
<BR><BR>[Called By]<UL><LI><a href="#[31d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvUnlockQueue
</UL>

<P><STRONG><a name="[32a]"></a>vTaskPlaceOnEventList</STRONG> (Thumb, 52 bytes, Stack size 16 bytes, tasks.o(i.vTaskPlaceOnEventList))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = vTaskPlaceOnEventList &rArr; prvAddCurrentTaskToDelayedList &rArr; vListInsert
</UL>
<BR>[Calls]<UL><LI><a href="#[2fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vListInsert
<LI><a href="#[2fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvAddCurrentTaskToDelayedList
</UL>
<BR>[Called By]<UL><LI><a href="#[2f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueSemaphoreTake
<LI><a href="#[2ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueReceive
<LI><a href="#[2f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericSend
</UL>

<P><STRONG><a name="[329]"></a>vTaskPlaceOnEventListRestricted</STRONG> (Thumb, 60 bytes, Stack size 16 bytes, tasks.o(i.vTaskPlaceOnEventListRestricted))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = vTaskPlaceOnEventListRestricted &rArr; prvAddCurrentTaskToDelayedList &rArr; vListInsert
</UL>
<BR>[Calls]<UL><LI><a href="#[2fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vListInsertEnd
<LI><a href="#[2fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvAddCurrentTaskToDelayedList
</UL>
<BR>[Called By]<UL><LI><a href="#[319]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vQueueWaitForMessageRestricted
</UL>

<P><STRONG><a name="[32b]"></a>vTaskPriorityDisinheritAfterTimeout</STRONG> (Thumb, 194 bytes, Stack size 32 bytes, tasks.o(i.vTaskPriorityDisinheritAfterTimeout))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = vTaskPriorityDisinheritAfterTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[2fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vListInsertEnd
<LI><a href="#[2fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uxListRemove
</UL>
<BR>[Called By]<UL><LI><a href="#[2f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueSemaphoreTake
</UL>

<P><STRONG><a name="[2eb]"></a>vTaskStartScheduler</STRONG> (Thumb, 156 bytes, Stack size 32 bytes, tasks.o(i.vTaskStartScheduler))
<BR><BR>[Stack]<UL><LI>Max Depth = 160 + Unknown Stack Size
<LI>Call Chain = vTaskStartScheduler &rArr; xTimerCreateTimerTask &rArr; prvCheckForValidListAndQueue &rArr; xQueueGenericCreateStatic &rArr; prvInitialiseNewQueue &rArr; xQueueGenericReset &rArr; xTaskRemoveFromEventList
</UL>
<BR>[Calls]<UL><LI><a href="#[32d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTimerCreateTimerTask
<LI><a href="#[32e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xPortStartScheduler
<LI><a href="#[32c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vApplicationGetIdleTaskMemory
<LI><a href="#[2f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskCreateStatic
</UL>
<BR>[Called By]<UL><LI><a href="#[2e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osKernelStart
</UL>

<P><STRONG><a name="[317]"></a>vTaskSuspendAll</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, tasks.o(i.vTaskSuspendAll))
<BR><BR>[Called By]<UL><LI><a href="#[2f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueSemaphoreTake
<LI><a href="#[2ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueReceive
<LI><a href="#[2f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericSend
<LI><a href="#[309]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortFree
<LI><a href="#[320]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pvPortMalloc
<LI><a href="#[316]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvProcessTimerOrBlockTask
<LI><a href="#[2ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskDelay
</UL>

<P><STRONG><a name="[1b1]"></a>vTaskSwitchContext</STRONG> (Thumb, 122 bytes, Stack size 0 bytes, tasks.o(i.vTaskSwitchContext))
<BR><BR>[Called By]<UL><LI><a href="#[17]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PendSV_Handler
</UL>

<P><STRONG><a name="[32e]"></a>xPortStartScheduler</STRONG> (Thumb, 330 bytes, Stack size 16 bytes, port.o(i.xPortStartScheduler))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = xPortStartScheduler
</UL>
<BR>[Calls]<UL><LI><a href="#[32f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortSetupTimerInterrupt
<LI><a href="#[330]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__asm___6_port_c_39a90d8d__prvEnableVFP
<LI><a href="#[331]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__asm___6_port_c_39a90d8d__prvStartFirstTask
</UL>
<BR>[Called By]<UL><LI><a href="#[2eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskStartScheduler
</UL>

<P><STRONG><a name="[223]"></a>xPortSysTickHandler</STRONG> (Thumb, 46 bytes, Stack size 8 bytes, port.o(i.xPortSysTickHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = xPortSysTickHandler &rArr; xTaskIncrementTick
</UL>
<BR>[Calls]<UL><LI><a href="#[332]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskIncrementTick
</UL>
<BR>[Called By]<UL><LI><a href="#[18]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysTick_Handler
</UL>

<P><STRONG><a name="[2f6]"></a>xQueueCreateCountingSemaphore</STRONG> (Thumb, 92 bytes, Stack size 16 bytes, queue.o(i.xQueueCreateCountingSemaphore))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = xQueueCreateCountingSemaphore &rArr; xQueueGenericCreate &rArr; pvPortMalloc &rArr; xTaskResumeAll &rArr; xTaskIncrementTick
</UL>
<BR>[Calls]<UL><LI><a href="#[2ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericCreate
</UL>
<BR>[Called By]<UL><LI><a href="#[248]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osSemaphoreNew
</UL>

<P><STRONG><a name="[2f5]"></a>xQueueCreateCountingSemaphoreStatic</STRONG> (Thumb, 100 bytes, Stack size 24 bytes, queue.o(i.xQueueCreateCountingSemaphoreStatic))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = xQueueCreateCountingSemaphoreStatic &rArr; xQueueGenericCreateStatic &rArr; prvInitialiseNewQueue &rArr; xQueueGenericReset &rArr; xTaskRemoveFromEventList
</UL>
<BR>[Calls]<UL><LI><a href="#[2ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericCreateStatic
</UL>
<BR>[Called By]<UL><LI><a href="#[248]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osSemaphoreNew
</UL>

<P><STRONG><a name="[2ef]"></a>xQueueGenericCreate</STRONG> (Thumb, 90 bytes, Stack size 32 bytes, queue.o(i.xQueueGenericCreate))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = xQueueGenericCreate &rArr; pvPortMalloc &rArr; xTaskResumeAll &rArr; xTaskIncrementTick
</UL>
<BR>[Calls]<UL><LI><a href="#[30a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvInitialiseNewQueue
<LI><a href="#[320]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pvPortMalloc
</UL>
<BR>[Called By]<UL><LI><a href="#[2f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueCreateCountingSemaphore
<LI><a href="#[248]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osSemaphoreNew
<LI><a href="#[249]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osMessageQueueNew
</UL>

<P><STRONG><a name="[2ee]"></a>xQueueGenericCreateStatic</STRONG> (Thumb, 224 bytes, Stack size 32 bytes, queue.o(i.xQueueGenericCreateStatic))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = xQueueGenericCreateStatic &rArr; prvInitialiseNewQueue &rArr; xQueueGenericReset &rArr; xTaskRemoveFromEventList
</UL>
<BR>[Calls]<UL><LI><a href="#[30a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvInitialiseNewQueue
</UL>
<BR>[Called By]<UL><LI><a href="#[2f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueCreateCountingSemaphoreStatic
<LI><a href="#[302]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvCheckForValidListAndQueue
<LI><a href="#[248]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osSemaphoreNew
<LI><a href="#[249]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osMessageQueueNew
</UL>

<P><STRONG><a name="[30b]"></a>xQueueGenericReset</STRONG> (Thumb, 146 bytes, Stack size 16 bytes, queue.o(i.xQueueGenericReset))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = xQueueGenericReset &rArr; xTaskRemoveFromEventList
</UL>
<BR>[Calls]<UL><LI><a href="#[31e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskRemoveFromEventList
<LI><a href="#[301]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortExitCritical
<LI><a href="#[2ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortEnterCritical
<LI><a href="#[303]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vListInitialise
</UL>
<BR>[Called By]<UL><LI><a href="#[30a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvInitialiseNewQueue
</UL>

<P><STRONG><a name="[2f2]"></a>xQueueGenericSend</STRONG> (Thumb, 420 bytes, Stack size 56 bytes, queue.o(i.xQueueGenericSend))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = xQueueGenericSend &rArr; vTaskPlaceOnEventList &rArr; prvAddCurrentTaskToDelayedList &rArr; vListInsert
</UL>
<BR>[Calls]<UL><LI><a href="#[31e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskRemoveFromEventList
<LI><a href="#[334]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskCheckForTimeOut
<LI><a href="#[32a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskPlaceOnEventList
<LI><a href="#[333]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskInternalSetTimeOutState
<LI><a href="#[31d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvUnlockQueue
<LI><a href="#[311]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvIsQueueFull
<LI><a href="#[307]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvCopyDataToQueue
<LI><a href="#[318]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskResumeAll
<LI><a href="#[222]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskGetSchedulerState
<LI><a href="#[317]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskSuspendAll
<LI><a href="#[301]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortExitCritical
<LI><a href="#[2ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortEnterCritical
</UL>
<BR>[Called By]<UL><LI><a href="#[313]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTimerGenericCommand
<LI><a href="#[24e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osSemaphoreRelease
<LI><a href="#[248]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osSemaphoreNew
<LI><a href="#[24a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osMessageQueuePut
</UL>

<P><STRONG><a name="[2f1]"></a>xQueueGenericSendFromISR</STRONG> (Thumb, 252 bytes, Stack size 40 bytes, queue.o(i.xQueueGenericSendFromISR))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = xQueueGenericSendFromISR &rArr; prvCopyDataToQueue &rArr; xTaskPriorityDisinherit
</UL>
<BR>[Calls]<UL><LI><a href="#[31e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskRemoveFromEventList
<LI><a href="#[326]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortValidateInterruptPriority
<LI><a href="#[307]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvCopyDataToQueue
</UL>
<BR>[Called By]<UL><LI><a href="#[313]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTimerGenericCommand
<LI><a href="#[24a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osMessageQueuePut
</UL>

<P><STRONG><a name="[2f7]"></a>xQueueGiveFromISR</STRONG> (Thumb, 224 bytes, Stack size 32 bytes, queue.o(i.xQueueGiveFromISR))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = xQueueGiveFromISR &rArr; xTaskRemoveFromEventList
</UL>
<BR>[Calls]<UL><LI><a href="#[31e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskRemoveFromEventList
<LI><a href="#[326]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortValidateInterruptPriority
</UL>
<BR>[Called By]<UL><LI><a href="#[24e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osSemaphoreRelease
</UL>

<P><STRONG><a name="[2ed]"></a>xQueueReceive</STRONG> (Thumb, 356 bytes, Stack size 48 bytes, queue.o(i.xQueueReceive))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = xQueueReceive &rArr; vTaskPlaceOnEventList &rArr; prvAddCurrentTaskToDelayedList &rArr; vListInsert
</UL>
<BR>[Calls]<UL><LI><a href="#[31e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskRemoveFromEventList
<LI><a href="#[334]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskCheckForTimeOut
<LI><a href="#[32a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskPlaceOnEventList
<LI><a href="#[333]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskInternalSetTimeOutState
<LI><a href="#[31d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvUnlockQueue
<LI><a href="#[310]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvIsQueueEmpty
<LI><a href="#[306]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvCopyDataFromQueue
<LI><a href="#[318]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskResumeAll
<LI><a href="#[222]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskGetSchedulerState
<LI><a href="#[317]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskSuspendAll
<LI><a href="#[301]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortExitCritical
<LI><a href="#[2ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortEnterCritical
</UL>
<BR>[Called By]<UL><LI><a href="#[314]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvProcessReceivedCommands
<LI><a href="#[24c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osMessageQueueGet
</UL>

<P><STRONG><a name="[2ec]"></a>xQueueReceiveFromISR</STRONG> (Thumb, 202 bytes, Stack size 40 bytes, queue.o(i.xQueueReceiveFromISR))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = xQueueReceiveFromISR &rArr; xTaskRemoveFromEventList
</UL>
<BR>[Calls]<UL><LI><a href="#[31e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskRemoveFromEventList
<LI><a href="#[326]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortValidateInterruptPriority
<LI><a href="#[306]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvCopyDataFromQueue
</UL>
<BR>[Called By]<UL><LI><a href="#[250]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osSemaphoreAcquire
<LI><a href="#[24c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osMessageQueueGet
</UL>

<P><STRONG><a name="[2f3]"></a>xQueueSemaphoreTake</STRONG> (Thumb, 434 bytes, Stack size 40 bytes, queue.o(i.xQueueSemaphoreTake))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = xQueueSemaphoreTake &rArr; vTaskPlaceOnEventList &rArr; prvAddCurrentTaskToDelayedList &rArr; vListInsert
</UL>
<BR>[Calls]<UL><LI><a href="#[31e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskRemoveFromEventList
<LI><a href="#[336]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskPriorityInherit
<LI><a href="#[334]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskCheckForTimeOut
<LI><a href="#[32b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskPriorityDisinheritAfterTimeout
<LI><a href="#[32a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskPlaceOnEventList
<LI><a href="#[333]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskInternalSetTimeOutState
<LI><a href="#[335]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pvTaskIncrementMutexHeldCount
<LI><a href="#[31d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvUnlockQueue
<LI><a href="#[310]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvIsQueueEmpty
<LI><a href="#[337]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvGetDisinheritPriorityAfterTimeout
<LI><a href="#[318]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskResumeAll
<LI><a href="#[222]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskGetSchedulerState
<LI><a href="#[317]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskSuspendAll
<LI><a href="#[301]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortExitCritical
<LI><a href="#[2ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortEnterCritical
</UL>
<BR>[Called By]<UL><LI><a href="#[250]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osSemaphoreAcquire
</UL>

<P><STRONG><a name="[334]"></a>xTaskCheckForTimeOut</STRONG> (Thumb, 132 bytes, Stack size 16 bytes, tasks.o(i.xTaskCheckForTimeOut))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = xTaskCheckForTimeOut
</UL>
<BR>[Calls]<UL><LI><a href="#[333]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskInternalSetTimeOutState
<LI><a href="#[301]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortExitCritical
<LI><a href="#[2ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortEnterCritical
</UL>
<BR>[Called By]<UL><LI><a href="#[2f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueSemaphoreTake
<LI><a href="#[2ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueReceive
<LI><a href="#[2f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericSend
</UL>

<P><STRONG><a name="[2f9]"></a>xTaskCreate</STRONG> (Thumb, 100 bytes, Stack size 72 bytes, tasks.o(i.xTaskCreate))
<BR><BR>[Stack]<UL><LI>Max Depth = 136 + Unknown Stack Size
<LI>Call Chain = xTaskCreate &rArr; pvPortMalloc &rArr; xTaskResumeAll &rArr; xTaskIncrementTick
</UL>
<BR>[Calls]<UL><LI><a href="#[309]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortFree
<LI><a href="#[320]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pvPortMalloc
<LI><a href="#[30c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvInitialiseNewTask
<LI><a href="#[2fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvAddNewTaskToReadyList
</UL>
<BR>[Called By]<UL><LI><a href="#[21a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osThreadNew
</UL>

<P><STRONG><a name="[2f8]"></a>xTaskCreateStatic</STRONG> (Thumb, 186 bytes, Stack size 56 bytes, tasks.o(i.xTaskCreateStatic))
<BR><BR>[Stack]<UL><LI>Max Depth = 96 + Unknown Stack Size
<LI>Call Chain = xTaskCreateStatic &rArr; prvInitialiseNewTask
</UL>
<BR>[Calls]<UL><LI><a href="#[30c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvInitialiseNewTask
<LI><a href="#[2fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvAddNewTaskToReadyList
</UL>
<BR>[Called By]<UL><LI><a href="#[21a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osThreadNew
<LI><a href="#[32d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTimerCreateTimerTask
<LI><a href="#[2eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskStartScheduler
</UL>

<P><STRONG><a name="[222]"></a>xTaskGetSchedulerState</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, tasks.o(i.xTaskGetSchedulerState))
<BR><BR>[Called By]<UL><LI><a href="#[2f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueSemaphoreTake
<LI><a href="#[2ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueReceive
<LI><a href="#[2f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericSend
<LI><a href="#[313]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTimerGenericCommand
<LI><a href="#[18]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysTick_Handler
</UL>

<P><STRONG><a name="[31a]"></a>xTaskGetTickCount</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, tasks.o(i.xTaskGetTickCount))
<BR><BR>[Called By]<UL><LI><a href="#[315]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvSampleTimeNow
</UL>

<P><STRONG><a name="[332]"></a>xTaskIncrementTick</STRONG> (Thumb, 280 bytes, Stack size 24 bytes, tasks.o(i.xTaskIncrementTick))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = xTaskIncrementTick
</UL>
<BR>[Calls]<UL><LI><a href="#[2fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vListInsertEnd
<LI><a href="#[2fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uxListRemove
<LI><a href="#[338]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvResetNextTaskUnblockTime
</UL>
<BR>[Called By]<UL><LI><a href="#[318]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskResumeAll
<LI><a href="#[223]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xPortSysTickHandler
</UL>

<P><STRONG><a name="[308]"></a>xTaskPriorityDisinherit</STRONG> (Thumb, 152 bytes, Stack size 16 bytes, tasks.o(i.xTaskPriorityDisinherit))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = xTaskPriorityDisinherit
</UL>
<BR>[Calls]<UL><LI><a href="#[2fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vListInsertEnd
<LI><a href="#[2fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uxListRemove
</UL>
<BR>[Called By]<UL><LI><a href="#[307]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvCopyDataToQueue
</UL>

<P><STRONG><a name="[336]"></a>xTaskPriorityInherit</STRONG> (Thumb, 150 bytes, Stack size 16 bytes, tasks.o(i.xTaskPriorityInherit))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = xTaskPriorityInherit
</UL>
<BR>[Calls]<UL><LI><a href="#[2fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vListInsertEnd
<LI><a href="#[2fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uxListRemove
</UL>
<BR>[Called By]<UL><LI><a href="#[2f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueSemaphoreTake
</UL>

<P><STRONG><a name="[31e]"></a>xTaskRemoveFromEventList</STRONG> (Thumb, 126 bytes, Stack size 16 bytes, tasks.o(i.xTaskRemoveFromEventList))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = xTaskRemoveFromEventList
</UL>
<BR>[Calls]<UL><LI><a href="#[2fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vListInsertEnd
<LI><a href="#[2fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uxListRemove
</UL>
<BR>[Called By]<UL><LI><a href="#[2f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueSemaphoreTake
<LI><a href="#[2ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueReceiveFromISR
<LI><a href="#[2ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueReceive
<LI><a href="#[2f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGiveFromISR
<LI><a href="#[2f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericSendFromISR
<LI><a href="#[2f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericSend
<LI><a href="#[30b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericReset
<LI><a href="#[31d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvUnlockQueue
</UL>

<P><STRONG><a name="[318]"></a>xTaskResumeAll</STRONG> (Thumb, 222 bytes, Stack size 16 bytes, tasks.o(i.xTaskResumeAll))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = xTaskResumeAll &rArr; xTaskIncrementTick
</UL>
<BR>[Calls]<UL><LI><a href="#[2fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vListInsertEnd
<LI><a href="#[2fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uxListRemove
<LI><a href="#[301]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortExitCritical
<LI><a href="#[2ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortEnterCritical
<LI><a href="#[332]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskIncrementTick
<LI><a href="#[338]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvResetNextTaskUnblockTime
</UL>
<BR>[Called By]<UL><LI><a href="#[2f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueSemaphoreTake
<LI><a href="#[2ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueReceive
<LI><a href="#[2f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericSend
<LI><a href="#[309]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortFree
<LI><a href="#[320]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pvPortMalloc
<LI><a href="#[316]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvProcessTimerOrBlockTask
<LI><a href="#[2ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskDelay
</UL>

<P><STRONG><a name="[32d]"></a>xTimerCreateTimerTask</STRONG> (Thumb, 100 bytes, Stack size 32 bytes, timers.o(i.xTimerCreateTimerTask))
<BR><BR>[Stack]<UL><LI>Max Depth = 128 + Unknown Stack Size
<LI>Call Chain = xTimerCreateTimerTask &rArr; prvCheckForValidListAndQueue &rArr; xQueueGenericCreateStatic &rArr; prvInitialiseNewQueue &rArr; xQueueGenericReset &rArr; xTaskRemoveFromEventList
</UL>
<BR>[Calls]<UL><LI><a href="#[339]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vApplicationGetTimerTaskMemory
<LI><a href="#[302]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvCheckForValidListAndQueue
<LI><a href="#[2f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskCreateStatic
</UL>
<BR>[Called By]<UL><LI><a href="#[2eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskStartScheduler
</UL>

<P><STRONG><a name="[313]"></a>xTimerGenericCommand</STRONG> (Thumb, 128 bytes, Stack size 48 bytes, timers.o(i.xTimerGenericCommand))
<BR><BR>[Stack]<UL><LI>Max Depth = 152<LI>Call Chain = xTimerGenericCommand &rArr; xQueueGenericSend &rArr; vTaskPlaceOnEventList &rArr; prvAddCurrentTaskToDelayedList &rArr; vListInsert
</UL>
<BR>[Calls]<UL><LI><a href="#[2f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericSendFromISR
<LI><a href="#[2f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericSend
<LI><a href="#[222]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskGetSchedulerState
</UL>
<BR>[Called By]<UL><LI><a href="#[31b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvSwitchTimerLists
<LI><a href="#[314]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvProcessReceivedCommands
<LI><a href="#[312]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvProcessExpiredTimer
</UL>

<P><STRONG><a name="[272]"></a>touchgfx::TextProvider::circularBuffer&lang;(unsigned)10&rang;::peekChar(unsigned short)</STRONG> (Thumb, 30 bytes, Stack size 8 bytes, textprovider.o(t._ZN8touchgfx12TextProvider14circularBufferILj10EE8peekCharEt))
<BR><BR>[Stack]<UL><LI>Max Depth = 56 + Unknown Stack Size
<LI>Call Chain = touchgfx::TextProvider::circularBuffer&lang;(unsigned)10&rang;::peekChar(unsigned short) &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[1b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;abort
</UL>
<BR>[Called By]<UL><LI><a href="#[274]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextProvider::replaceInputCharacters(unsigned short, unsigned short, const unsigned short*)
<LI><a href="#[271]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextProvider::gsubRuleMatch(const unsigned short*, unsigned short, unsigned short, unsigned short)
</UL>

<P><STRONG><a name="[26e]"></a>touchgfx::TextProvider::circularBuffer&lang;(unsigned)10&rang;::peekChar()</STRONG> (Thumb, 30 bytes, Stack size 8 bytes, texts.o(t._ZN8touchgfx12TextProvider14circularBufferILj10EE8peekCharEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 72 + Unknown Stack Size
<LI>Call Chain = touchgfx::TextProvider::circularBuffer&lang;(unsigned)10&rang;::peekChar() &rArr; __aeabi_assert &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[1b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_assert
</UL>
<BR>[Called By]<UL><LI><a href="#[27d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextProvider::substituteGlyphs()
<LI><a href="#[27c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextProvider::getNextLigature(unsigned char)
<LI><a href="#[27e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextProvider::getNextLigature(unsigned char, const touchgfx::Font*, const touchgfx::GlyphNode*&)
<LI><a href="#[26d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextProvider::endOfString()
<LI><a href="#[27f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextProvider::getNextLigature(unsigned char, const touchgfx::Font*, const touchgfx::GlyphNode*&, const unsigned char*&, unsigned char&)
<LI><a href="#[26a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextProvider::adjustThaiGlyph(const touchgfx::Font*, const touchgfx::GlyphNode*)
</UL>

<P><STRONG><a name="[279]"></a>touchgfx::TextProvider::circularBuffer&lang;(unsigned)10&rang;::pushBack(unsigned short)</STRONG> (Thumb, 44 bytes, Stack size 8 bytes, textprovider.o(t._ZN8touchgfx12TextProvider14circularBufferILj10EE8pushBackEt))
<BR><BR>[Stack]<UL><LI>Max Depth = 56 + Unknown Stack Size
<LI>Call Chain = touchgfx::TextProvider::circularBuffer&lang;(unsigned)10&rang;::pushBack(unsigned short) &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[1b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;abort
</UL>
<BR>[Called By]<UL><LI><a href="#[270]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextProvider::fillInputBuffer()
</UL>

<P><STRONG><a name="[282]"></a>touchgfx::TextProvider::circularBuffer&lang;(unsigned)10&rang;::dropFront(unsigned short)</STRONG> (Thumb, 34 bytes, Stack size 8 bytes, textprovider.o(t._ZN8touchgfx12TextProvider14circularBufferILj10EE9dropFrontEt))
<BR><BR>[Stack]<UL><LI>Max Depth = 56 + Unknown Stack Size
<LI>Call Chain = touchgfx::TextProvider::circularBuffer&lang;(unsigned)10&rang;::dropFront(unsigned short) &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[1b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;abort
</UL>
<BR>[Called By]<UL><LI><a href="#[274]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextProvider::replaceInputCharacters(unsigned short, unsigned short, const unsigned short*)
</UL>

<P><STRONG><a name="[23f]"></a>T2* touchgfx::makeTransition&lang;Screen1View, Screen1Presenter, touchgfx::NoTransition, Model&rang;(touchgfx::Screen**, touchgfx::Presenter**, touchgfx::MVPHeap&, touchgfx::Transition**, T4*)</STRONG> (Thumb, 346 bytes, Stack size 64 bytes, frontendapplicationbase.o(t._ZN8touchgfx14makeTransitionI11Screen1View16Screen1PresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_))
<BR><BR>[Stack]<UL><LI>Max Depth = 184 + Unknown Stack Size
<LI>Call Chain = T2* touchgfx::makeTransition&lang;Screen1View, Screen1Presenter, touchgfx::NoTransition, Model&rang;(touchgfx::Screen**, touchgfx::Presenter**, touchgfx::MVPHeap&, touchgfx::Transition**, T4*) &rArr; Screen1View::Screen1View() &rArr; Screen1ViewBase::Screen1ViewBase() &rArr; touchgfx::Screen::add(touchgfx::Drawable&) &rArr; touchgfx::Container::add(touchgfx::Drawable&) &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[22b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Screen1View::Screen1View()
<LI><a href="#[33a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Screen1Presenter::Screen1Presenter(Screen1View&)
<LI><a href="#[33b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Screen::bindTransition(touchgfx::Transition&)
<LI><a href="#[28a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::prepareTransition(touchgfx::Screen**, touchgfx::Presenter**, touchgfx::Transition**)
<LI><a href="#[1b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_assert
</UL>
<BR>[Called By]<UL><LI><a href="#[da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FrontendApplicationBase::gotoScreen1ScreenNoTransitionImpl()
</UL>

<P><STRONG><a name="[2b4]"></a>T1 touchgfx::abs&lang;short&rang;(T1)</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, gestures.o(t._ZN8touchgfx3absIsEET_S1_))
<BR><BR>[Called By]<UL><LI><a href="#[296]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Gestures::registerDragEvent(unsigned short, unsigned short, unsigned short, unsigned short)
</UL>

<P><STRONG><a name="[257]"></a>touchgfx::Vector&lang;touchgfx::Rect, (unsigned short)8&rang;::quickRemoveAt(unsigned short)</STRONG> (Thumb, 44 bytes, Stack size 8 bytes, application.o(t._ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt))
<BR><BR>[Stack]<UL><LI>Max Depth = 56 + Unknown Stack Size
<LI>Call Chain = touchgfx::Vector&lang;touchgfx::Rect, (unsigned short)8&rang;::quickRemoveAt(unsigned short) &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[1b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;abort
</UL>
<BR>[Called By]<UL><LI><a href="#[115]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Application::drawCachedAreas()
<LI><a href="#[117]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Application::invalidateArea(touchgfx::Rect)
</UL>

<P><STRONG><a name="[25b]"></a>touchgfx::Vector&lang;touchgfx::Rect, (unsigned short)8&rang;::add(touchgfx::Rect)</STRONG> (Thumb, 30 bytes, Stack size 8 bytes, application.o(t._ZN8touchgfx6VectorINS_4RectELt8EE3addES1_))
<BR><BR>[Stack]<UL><LI>Max Depth = 56 + Unknown Stack Size
<LI>Call Chain = touchgfx::Vector&lang;touchgfx::Rect, (unsigned short)8&rang;::add(touchgfx::Rect) &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[1b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;abort
</UL>
<BR>[Called By]<UL><LI><a href="#[115]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Application::drawCachedAreas()
<LI><a href="#[117]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Application::invalidateArea(touchgfx::Rect)
</UL>

<P><STRONG><a name="[25d]"></a>touchgfx::Vector&lang;touchgfx::Rect, (unsigned short)8&rang;::Vector()</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, application.o(t._ZN8touchgfx6VectorINS_4RectELt8EEC1Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = touchgfx::Vector&lang;touchgfx::Rect, (unsigned short)8&rang;::Vector() &rArr; __aeabi_vec_ctor_nocookie_nodtor
</UL>
<BR>[Calls]<UL><LI><a href="#[33c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_vec_ctor_nocookie_nodtor
</UL>
<BR>[Called By]<UL><LI><a href="#[115]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Application::drawCachedAreas()
<LI><a href="#[240]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Application::Application()
</UL>

<P><STRONG><a name="[3c4]"></a>touchgfx::Vector&lang;touchgfx::Rect, (unsigned short)8&rang;::Vector__sub_object()</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, application.o(t._ZN8touchgfx6VectorINS_4RectELt8EEC1Ev), UNUSED)

<P><STRONG><a name="[17c]"></a>touchgfx::Callback&lang;FrontendApplicationBase, void, void, void&rang;::execute()</STRONG> (Thumb, 44 bytes, Stack size 24 bytes, frontendapplicationbase.o(t._ZN8touchgfx8CallbackI23FrontendApplicationBasevvvE7executeEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = touchgfx::Callback&lang;FrontendApplicationBase, void, void, void&rang;::execute()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> frontendapplicationbase.o(.constdata__ZTVN8touchgfx8CallbackI23FrontendApplicationBasevvvEE)
</UL>
<P><STRONG><a name="[18b]"></a>touchgfx::Partition&lang;touchgfx::meta::TypeList&lang;Screen1View, touchgfx::meta::TypeList&lang;touchgfx::meta::Nil, touchgfx::meta::Nil&rang;&rang;, (unsigned short)1&rang;::element_size()</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, touchgfxconfiguration.o(t._ZN8touchgfx9PartitionINS_4meta8TypeListI11Screen1ViewNS2_INS1_3NilES4_EEEELt1EE12element_sizeEv))
<BR>[Address Reference Count : 1]<UL><LI> touchgfxconfiguration.o(.constdata__ZTVN8touchgfx9PartitionINS_4meta8TypeListI11Screen1ViewNS2_INS1_3NilES4_EEEELt1EEE)
</UL>
<P><STRONG><a name="[18c]"></a>touchgfx::Partition&lang;touchgfx::meta::TypeList&lang;Screen1View, touchgfx::meta::TypeList&lang;touchgfx::meta::Nil, touchgfx::meta::Nil&rang;&rang;, (unsigned short)1&rang;::element(unsigned short)</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, touchgfxconfiguration.o(t._ZN8touchgfx9PartitionINS_4meta8TypeListI11Screen1ViewNS2_INS1_3NilES4_EEEELt1EE7elementEt))
<BR>[Address Reference Count : 1]<UL><LI> touchgfxconfiguration.o(.constdata__ZTVN8touchgfx9PartitionINS_4meta8TypeListI11Screen1ViewNS2_INS1_3NilES4_EEEELt1EEE)
</UL>
<P><STRONG><a name="[18e]"></a>touchgfx::Partition&lang;touchgfx::meta::TypeList&lang;Screen1Presenter, touchgfx::meta::TypeList&lang;touchgfx::meta::Nil, touchgfx::meta::Nil&rang;&rang;, (unsigned short)1&rang;::element_size()</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, touchgfxconfiguration.o(t._ZN8touchgfx9PartitionINS_4meta8TypeListI16Screen1PresenterNS2_INS1_3NilES4_EEEELt1EE12element_sizeEv))
<BR>[Address Reference Count : 1]<UL><LI> touchgfxconfiguration.o(.constdata__ZTVN8touchgfx9PartitionINS_4meta8TypeListI16Screen1PresenterNS2_INS1_3NilES4_EEEELt1EEE)
</UL>
<P><STRONG><a name="[18f]"></a>touchgfx::Partition&lang;touchgfx::meta::TypeList&lang;Screen1Presenter, touchgfx::meta::TypeList&lang;touchgfx::meta::Nil, touchgfx::meta::Nil&rang;&rang;, (unsigned short)1&rang;::element(unsigned short)</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, touchgfxconfiguration.o(t._ZN8touchgfx9PartitionINS_4meta8TypeListI16Screen1PresenterNS2_INS1_3NilES4_EEEELt1EE7elementEt))
<BR>[Address Reference Count : 1]<UL><LI> touchgfxconfiguration.o(.constdata__ZTVN8touchgfx9PartitionINS_4meta8TypeListI16Screen1PresenterNS2_INS1_3NilES4_EEEELt1EEE)
</UL>
<P><STRONG><a name="[191]"></a>touchgfx::Partition&lang;touchgfx::meta::TypeList&lang;touchgfx::NoTransition, touchgfx::meta::TypeList&lang;touchgfx::meta::Nil, touchgfx::meta::Nil&rang;&rang;, (unsigned short)1&rang;::element_size()</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, touchgfxconfiguration.o(t._ZN8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EE12element_sizeEv))
<BR>[Address Reference Count : 1]<UL><LI> touchgfxconfiguration.o(.constdata__ZTVN8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EEE)
</UL>
<P><STRONG><a name="[192]"></a>touchgfx::Partition&lang;touchgfx::meta::TypeList&lang;touchgfx::NoTransition, touchgfx::meta::TypeList&lang;touchgfx::meta::Nil, touchgfx::meta::Nil&rang;&rang;, (unsigned short)1&rang;::element(unsigned short)</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, touchgfxconfiguration.o(t._ZN8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EE7elementEt))
<BR>[Address Reference Count : 1]<UL><LI> touchgfxconfiguration.o(.constdata__ZTVN8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EEE)
</UL>
<P><STRONG><a name="[27a]"></a>touchgfx::TextProvider::circularBuffer&lang;(unsigned)10&rang;::isFull() const</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, textprovider.o(t._ZNK8touchgfx12TextProvider14circularBufferILj10EE6isFullEv))
<BR><BR>[Called By]<UL><LI><a href="#[270]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextProvider::fillInputBuffer()
</UL>

<P><STRONG><a name="[17d]"></a>touchgfx::Callback&lang;FrontendApplicationBase, void, void, void&rang;::isValid() const</STRONG> (Thumb, 36 bytes, Stack size 0 bytes, frontendapplicationbase.o(t._ZNK8touchgfx8CallbackI23FrontendApplicationBasevvvE7isValidEv))
<BR>[Address Reference Count : 1]<UL><LI> frontendapplicationbase.o(.constdata__ZTVN8touchgfx8CallbackI23FrontendApplicationBasevvvEE)
</UL>
<P><STRONG><a name="[1a0]"></a>_fp_init</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, fpinit.o(x$fpl$fpinit))
<BR><BR>[Called By]<UL><LI><a href="#[19f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_lib_init_fp_1
</UL>

<P><STRONG><a name="[3c5]"></a>__fplib_config_fpu_vfp</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, fpinit.o(x$fpl$fpinit), UNUSED)

<P><STRONG><a name="[3c6]"></a>__fplib_config_pureend_doubles</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, fpinit.o(x$fpl$fpinit), UNUSED)
<P>
<H3>
Local Symbols
</H3>
<P><STRONG><a name="[1dc]"></a>HAL_FMC_MspInit</STRONG> (Thumb, 300 bytes, Stack size 232 bytes, fmc.o(i.HAL_FMC_MspInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 280<LI>Call Chain = HAL_FMC_MspInit &rArr; HAL_RCCEx_PeriphCLKConfig &rArr; RCCEx_PLL3_Config
</UL>
<BR>[Calls]<UL><LI><a href="#[1e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_Init
<LI><a href="#[1de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCCEx_PeriphCLKConfig
<LI><a href="#[1df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Error_Handler
<LI><a href="#[1dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[201]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SDRAM_MspInit
</UL>

<P><STRONG><a name="[1f7]"></a>__NVIC_GetPriorityGrouping</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, stm32h7xx_hal_cortex.o(i.__NVIC_GetPriorityGrouping))
<BR><BR>[Called By]<UL><LI><a href="#[1d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_NVIC_SetPriority
</UL>

<P><STRONG><a name="[1f8]"></a>__NVIC_SetPriority</STRONG> (Thumb, 32 bytes, Stack size 8 bytes, stm32h7xx_hal_cortex.o(i.__NVIC_SetPriority))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = __NVIC_SetPriority
</UL>
<BR>[Called By]<UL><LI><a href="#[1d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_NVIC_SetPriority
</UL>

<P><STRONG><a name="[1fa]"></a>RCCEx_PLL2_Config</STRONG> (Thumb, 350 bytes, Stack size 24 bytes, stm32h7xx_hal_rcc_ex.o(i.RCCEx_PLL2_Config))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = RCCEx_PLL2_Config
</UL>
<BR>[Calls]<UL><LI><a href="#[1db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GetTick
</UL>
<BR>[Called By]<UL><LI><a href="#[1de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCCEx_PeriphCLKConfig
</UL>

<P><STRONG><a name="[1fb]"></a>RCCEx_PLL3_Config</STRONG> (Thumb, 350 bytes, Stack size 24 bytes, stm32h7xx_hal_rcc_ex.o(i.RCCEx_PLL3_Config))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = RCCEx_PLL3_Config
</UL>
<BR>[Calls]<UL><LI><a href="#[1db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GetTick
</UL>
<BR>[Called By]<UL><LI><a href="#[1de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCCEx_PeriphCLKConfig
</UL>

<P><STRONG><a name="[1eb]"></a>LTDC_SetConfig</STRONG> (Thumb, 528 bytes, Stack size 20 bytes, stm32h7xx_hal_ltdc.o(i.LTDC_SetConfig))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = LTDC_SetConfig
</UL>
<BR>[Called By]<UL><LI><a href="#[1ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_LTDC_ConfigLayer
</UL>

<P><STRONG><a name="[306]"></a>prvCopyDataFromQueue</STRONG> (Thumb, 42 bytes, Stack size 16 bytes, queue.o(i.prvCopyDataFromQueue))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = prvCopyDataFromQueue
</UL>
<BR>[Calls]<UL><LI><a href="#[276]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[2ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueReceiveFromISR
<LI><a href="#[2ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueReceive
</UL>

<P><STRONG><a name="[307]"></a>prvCopyDataToQueue</STRONG> (Thumb, 126 bytes, Stack size 24 bytes, queue.o(i.prvCopyDataToQueue))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = prvCopyDataToQueue &rArr; xTaskPriorityDisinherit
</UL>
<BR>[Calls]<UL><LI><a href="#[308]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskPriorityDisinherit
<LI><a href="#[276]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[2f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericSendFromISR
<LI><a href="#[2f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericSend
</UL>

<P><STRONG><a name="[337]"></a>prvGetDisinheritPriorityAfterTimeout</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, queue.o(i.prvGetDisinheritPriorityAfterTimeout))
<BR><BR>[Called By]<UL><LI><a href="#[2f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueSemaphoreTake
</UL>

<P><STRONG><a name="[30a]"></a>prvInitialiseNewQueue</STRONG> (Thumb, 42 bytes, Stack size 24 bytes, queue.o(i.prvInitialiseNewQueue))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = prvInitialiseNewQueue &rArr; xQueueGenericReset &rArr; xTaskRemoveFromEventList
</UL>
<BR>[Calls]<UL><LI><a href="#[30b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericReset
</UL>
<BR>[Called By]<UL><LI><a href="#[2ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericCreateStatic
<LI><a href="#[2ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericCreate
</UL>

<P><STRONG><a name="[310]"></a>prvIsQueueEmpty</STRONG> (Thumb, 26 bytes, Stack size 16 bytes, queue.o(i.prvIsQueueEmpty))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = prvIsQueueEmpty
</UL>
<BR>[Calls]<UL><LI><a href="#[301]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortExitCritical
<LI><a href="#[2ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortEnterCritical
</UL>
<BR>[Called By]<UL><LI><a href="#[2f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueSemaphoreTake
<LI><a href="#[2ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueReceive
</UL>

<P><STRONG><a name="[311]"></a>prvIsQueueFull</STRONG> (Thumb, 30 bytes, Stack size 16 bytes, queue.o(i.prvIsQueueFull))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = prvIsQueueFull
</UL>
<BR>[Calls]<UL><LI><a href="#[301]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortExitCritical
<LI><a href="#[2ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortEnterCritical
</UL>
<BR>[Called By]<UL><LI><a href="#[2f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericSend
</UL>

<P><STRONG><a name="[31d]"></a>prvUnlockQueue</STRONG> (Thumb, 126 bytes, Stack size 16 bytes, queue.o(i.prvUnlockQueue))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = prvUnlockQueue &rArr; xTaskRemoveFromEventList
</UL>
<BR>[Calls]<UL><LI><a href="#[31e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskRemoveFromEventList
<LI><a href="#[31f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskMissedYield
<LI><a href="#[301]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortExitCritical
<LI><a href="#[2ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortEnterCritical
</UL>
<BR>[Called By]<UL><LI><a href="#[2f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueSemaphoreTake
<LI><a href="#[2ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueReceive
<LI><a href="#[2f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericSend
<LI><a href="#[319]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vQueueWaitForMessageRestricted
</UL>

<P><STRONG><a name="[2fa]"></a>prvAddCurrentTaskToDelayedList</STRONG> (Thumb, 100 bytes, Stack size 24 bytes, tasks.o(i.prvAddCurrentTaskToDelayedList))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = prvAddCurrentTaskToDelayedList &rArr; vListInsert
</UL>
<BR>[Calls]<UL><LI><a href="#[2fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vListInsertEnd
<LI><a href="#[2fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vListInsert
<LI><a href="#[2fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uxListRemove
</UL>
<BR>[Called By]<UL><LI><a href="#[329]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskPlaceOnEventListRestricted
<LI><a href="#[32a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskPlaceOnEventList
<LI><a href="#[2ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskDelay
</UL>

<P><STRONG><a name="[2fe]"></a>prvAddNewTaskToReadyList</STRONG> (Thumb, 154 bytes, Stack size 8 bytes, tasks.o(i.prvAddNewTaskToReadyList))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = prvAddNewTaskToReadyList &rArr; prvInitialiseTaskLists
</UL>
<BR>[Calls]<UL><LI><a href="#[2fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vListInsertEnd
<LI><a href="#[301]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortExitCritical
<LI><a href="#[2ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortEnterCritical
<LI><a href="#[300]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvInitialiseTaskLists
</UL>
<BR>[Called By]<UL><LI><a href="#[2f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskCreateStatic
<LI><a href="#[2f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskCreate
</UL>

<P><STRONG><a name="[304]"></a>prvCheckTasksWaitingTermination</STRONG> (Thumb, 60 bytes, Stack size 8 bytes, tasks.o(i.prvCheckTasksWaitingTermination))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = prvCheckTasksWaitingTermination &rArr; prvDeleteTCB &rArr; vPortFree &rArr; xTaskResumeAll &rArr; xTaskIncrementTick
</UL>
<BR>[Calls]<UL><LI><a href="#[2fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uxListRemove
<LI><a href="#[301]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortExitCritical
<LI><a href="#[2ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortEnterCritical
<LI><a href="#[305]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvDeleteTCB
</UL>
<BR>[Called By]<UL><LI><a href="#[d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvIdleTask
</UL>

<P><STRONG><a name="[305]"></a>prvDeleteTCB</STRONG> (Thumb, 80 bytes, Stack size 8 bytes, tasks.o(i.prvDeleteTCB))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = prvDeleteTCB &rArr; vPortFree &rArr; xTaskResumeAll &rArr; xTaskIncrementTick
</UL>
<BR>[Calls]<UL><LI><a href="#[309]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortFree
</UL>
<BR>[Called By]<UL><LI><a href="#[304]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvCheckTasksWaitingTermination
</UL>

<P><STRONG><a name="[d7]"></a>prvIdleTask</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, tasks.o(i.prvIdleTask))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = prvIdleTask &rArr; prvCheckTasksWaitingTermination &rArr; prvDeleteTCB &rArr; vPortFree &rArr; xTaskResumeAll &rArr; xTaskIncrementTick
</UL>
<BR>[Calls]<UL><LI><a href="#[304]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvCheckTasksWaitingTermination
</UL>
<BR>[Address Reference Count : 1]<UL><LI> tasks.o(i.vTaskStartScheduler)
</UL>
<P><STRONG><a name="[30c]"></a>prvInitialiseNewTask</STRONG> (Thumb, 190 bytes, Stack size 40 bytes, tasks.o(i.prvInitialiseNewTask))
<BR><BR>[Stack]<UL><LI>Max Depth = 40 + Unknown Stack Size
<LI>Call Chain = prvInitialiseNewTask
</UL>
<BR>[Calls]<UL><LI><a href="#[30d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vListInitialiseItem
<LI><a href="#[30e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pxPortInitialiseStack
<LI><a href="#[1bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memset
</UL>
<BR>[Called By]<UL><LI><a href="#[2f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskCreateStatic
<LI><a href="#[2f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskCreate
</UL>

<P><STRONG><a name="[300]"></a>prvInitialiseTaskLists</STRONG> (Thumb, 70 bytes, Stack size 8 bytes, tasks.o(i.prvInitialiseTaskLists))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = prvInitialiseTaskLists
</UL>
<BR>[Calls]<UL><LI><a href="#[303]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vListInitialise
</UL>
<BR>[Called By]<UL><LI><a href="#[2fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvAddNewTaskToReadyList
</UL>

<P><STRONG><a name="[338]"></a>prvResetNextTaskUnblockTime</STRONG> (Thumb, 42 bytes, Stack size 0 bytes, tasks.o(i.prvResetNextTaskUnblockTime))
<BR><BR>[Called By]<UL><LI><a href="#[318]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskResumeAll
<LI><a href="#[332]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskIncrementTick
</UL>

<P><STRONG><a name="[302]"></a>prvCheckForValidListAndQueue</STRONG> (Thumb, 78 bytes, Stack size 8 bytes, timers.o(i.prvCheckForValidListAndQueue))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = prvCheckForValidListAndQueue &rArr; xQueueGenericCreateStatic &rArr; prvInitialiseNewQueue &rArr; xQueueGenericReset &rArr; xTaskRemoveFromEventList
</UL>
<BR>[Calls]<UL><LI><a href="#[2ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericCreateStatic
<LI><a href="#[2f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vQueueAddToRegistry
<LI><a href="#[301]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortExitCritical
<LI><a href="#[2ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortEnterCritical
<LI><a href="#[303]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vListInitialise
</UL>
<BR>[Called By]<UL><LI><a href="#[32d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTimerCreateTimerTask
</UL>

<P><STRONG><a name="[31c]"></a>prvGetNextExpireTime</STRONG> (Thumb, 36 bytes, Stack size 0 bytes, timers.o(i.prvGetNextExpireTime))
<BR><BR>[Called By]<UL><LI><a href="#[d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvTimerTask
</UL>

<P><STRONG><a name="[30f]"></a>prvInsertTimerInActiveList</STRONG> (Thumb, 80 bytes, Stack size 24 bytes, timers.o(i.prvInsertTimerInActiveList))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = prvInsertTimerInActiveList &rArr; vListInsert
</UL>
<BR>[Calls]<UL><LI><a href="#[2fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vListInsert
</UL>
<BR>[Called By]<UL><LI><a href="#[314]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvProcessReceivedCommands
<LI><a href="#[312]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvProcessExpiredTimer
</UL>

<P><STRONG><a name="[312]"></a>prvProcessExpiredTimer</STRONG> (Thumb, 110 bytes, Stack size 24 bytes, timers.o(i.prvProcessExpiredTimer))
<BR><BR>[Stack]<UL><LI>Max Depth = 176<LI>Call Chain = prvProcessExpiredTimer &rArr; xTimerGenericCommand &rArr; xQueueGenericSend &rArr; vTaskPlaceOnEventList &rArr; prvAddCurrentTaskToDelayedList &rArr; vListInsert
</UL>
<BR>[Calls]<UL><LI><a href="#[2fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uxListRemove
<LI><a href="#[313]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTimerGenericCommand
<LI><a href="#[30f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvInsertTimerInActiveList
</UL>
<BR>[Called By]<UL><LI><a href="#[316]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvProcessTimerOrBlockTask
</UL>

<P><STRONG><a name="[314]"></a>prvProcessReceivedCommands</STRONG> (Thumb, 350 bytes, Stack size 48 bytes, timers.o(i.prvProcessReceivedCommands))
<BR><BR>[Stack]<UL><LI>Max Depth = 248<LI>Call Chain = prvProcessReceivedCommands &rArr; prvSampleTimeNow &rArr; prvSwitchTimerLists &rArr; xTimerGenericCommand &rArr; xQueueGenericSend &rArr; vTaskPlaceOnEventList &rArr; prvAddCurrentTaskToDelayedList &rArr; vListInsert
</UL>
<BR>[Calls]<UL><LI><a href="#[2ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueReceive
<LI><a href="#[2fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uxListRemove
<LI><a href="#[309]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortFree
<LI><a href="#[313]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTimerGenericCommand
<LI><a href="#[315]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvSampleTimeNow
<LI><a href="#[30f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvInsertTimerInActiveList
</UL>
<BR>[Called By]<UL><LI><a href="#[d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvTimerTask
</UL>

<P><STRONG><a name="[316]"></a>prvProcessTimerOrBlockTask</STRONG> (Thumb, 102 bytes, Stack size 24 bytes, timers.o(i.prvProcessTimerOrBlockTask))
<BR><BR>[Stack]<UL><LI>Max Depth = 224<LI>Call Chain = prvProcessTimerOrBlockTask &rArr; prvSampleTimeNow &rArr; prvSwitchTimerLists &rArr; xTimerGenericCommand &rArr; xQueueGenericSend &rArr; vTaskPlaceOnEventList &rArr; prvAddCurrentTaskToDelayedList &rArr; vListInsert
</UL>
<BR>[Calls]<UL><LI><a href="#[319]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vQueueWaitForMessageRestricted
<LI><a href="#[318]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskResumeAll
<LI><a href="#[317]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskSuspendAll
<LI><a href="#[315]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvSampleTimeNow
<LI><a href="#[312]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvProcessExpiredTimer
</UL>
<BR>[Called By]<UL><LI><a href="#[d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvTimerTask
</UL>

<P><STRONG><a name="[315]"></a>prvSampleTimeNow</STRONG> (Thumb, 40 bytes, Stack size 16 bytes, timers.o(i.prvSampleTimeNow))
<BR><BR>[Stack]<UL><LI>Max Depth = 200<LI>Call Chain = prvSampleTimeNow &rArr; prvSwitchTimerLists &rArr; xTimerGenericCommand &rArr; xQueueGenericSend &rArr; vTaskPlaceOnEventList &rArr; prvAddCurrentTaskToDelayedList &rArr; vListInsert
</UL>
<BR>[Calls]<UL><LI><a href="#[31b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvSwitchTimerLists
<LI><a href="#[31a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskGetTickCount
</UL>
<BR>[Called By]<UL><LI><a href="#[316]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvProcessTimerOrBlockTask
<LI><a href="#[314]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvProcessReceivedCommands
</UL>

<P><STRONG><a name="[31b]"></a>prvSwitchTimerLists</STRONG> (Thumb, 154 bytes, Stack size 32 bytes, timers.o(i.prvSwitchTimerLists))
<BR><BR>[Stack]<UL><LI>Max Depth = 184<LI>Call Chain = prvSwitchTimerLists &rArr; xTimerGenericCommand &rArr; xQueueGenericSend &rArr; vTaskPlaceOnEventList &rArr; prvAddCurrentTaskToDelayedList &rArr; vListInsert
</UL>
<BR>[Calls]<UL><LI><a href="#[2fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vListInsert
<LI><a href="#[2fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uxListRemove
<LI><a href="#[313]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTimerGenericCommand
</UL>
<BR>[Called By]<UL><LI><a href="#[315]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvSampleTimeNow
</UL>

<P><STRONG><a name="[d8]"></a>prvTimerTask</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, timers.o(i.prvTimerTask))
<BR><BR>[Stack]<UL><LI>Max Depth = 256<LI>Call Chain = prvTimerTask &rArr; prvProcessReceivedCommands &rArr; prvSampleTimeNow &rArr; prvSwitchTimerLists &rArr; xTimerGenericCommand &rArr; xQueueGenericSend &rArr; vTaskPlaceOnEventList &rArr; prvAddCurrentTaskToDelayedList &rArr; vListInsert
</UL>
<BR>[Calls]<UL><LI><a href="#[316]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvProcessTimerOrBlockTask
<LI><a href="#[314]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvProcessReceivedCommands
<LI><a href="#[31c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvGetNextExpireTime
</UL>
<BR>[Address Reference Count : 1]<UL><LI> timers.o(i.xTimerCreateTimerTask)
</UL>
<P><STRONG><a name="[2e9]"></a>__get_IPSR</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, cmsis_os2.o(i.__get_IPSR))
<BR><BR>[Called By]<UL><LI><a href="#[21a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osThreadNew
<LI><a href="#[221]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osDelay
<LI><a href="#[2e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osKernelStart
<LI><a href="#[2e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osKernelInitialize
<LI><a href="#[24e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osSemaphoreRelease
<LI><a href="#[248]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osSemaphoreNew
<LI><a href="#[250]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osSemaphoreAcquire
<LI><a href="#[24a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osMessageQueuePut
<LI><a href="#[249]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osMessageQueueNew
<LI><a href="#[24c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osMessageQueueGet
</UL>

<P><STRONG><a name="[321]"></a>prvHeapInit</STRONG> (Thumb, 98 bytes, Stack size 12 bytes, heap_4.o(i.prvHeapInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = prvHeapInit
</UL>
<BR>[Called By]<UL><LI><a href="#[320]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pvPortMalloc
</UL>

<P><STRONG><a name="[322]"></a>prvInsertBlockIntoFreeList</STRONG> (Thumb, 96 bytes, Stack size 8 bytes, heap_4.o(i.prvInsertBlockIntoFreeList))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = prvInsertBlockIntoFreeList
</UL>
<BR>[Called By]<UL><LI><a href="#[309]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortFree
<LI><a href="#[320]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pvPortMalloc
</UL>

<P><STRONG><a name="[d5]"></a>prvTaskExitError</STRONG> (Thumb, 60 bytes, Stack size 0 bytes, port.o(i.prvTaskExitError))
<BR>[Address Reference Count : 1]<UL><LI> port.o(i.pxPortInitialiseStack)
</UL>
<P><STRONG><a name="[196]"></a>__sti___25_TouchGFXConfiguration_cpp_f5abfd34</STRONG> (Thumb, 148 bytes, Stack size 48 bytes, touchgfxconfiguration.o(i.__sti___25_TouchGFXConfiguration_cpp_f5abfd34))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = __sti___25_TouchGFXConfiguration_cpp_f5abfd34 &rArr; __aeabi_atexit &rArr; malloc &rArr; __Heap_Full &rArr; __Heap_ProvideMemory &rArr; free
</UL>
<BR>[Calls]<UL><LI><a href="#[2e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::LCD16bpp()
<LI><a href="#[245]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;STM32DMA::STM32DMA()
<LI><a href="#[2e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::HAL::HAL__sub_object(touchgfx::DMA_Interface&, touchgfx::LCD&, touchgfx::TouchController&, unsigned short, unsigned short)
<LI><a href="#[1b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_atexit
</UL>
<BR>[Address Reference Count : 1]<UL><LI> touchgfxconfiguration.o(.init_array)
</UL>
<P><STRONG><a name="[28a]"></a>touchgfx::prepareTransition(touchgfx::Screen**, touchgfx::Presenter**, touchgfx::Transition**)</STRONG> (Thumb, 100 bytes, Stack size 24 bytes, frontendapplicationbase.o(i._ZN8touchgfx17prepareTransitionEPPNS_6ScreenEPPNS_9PresenterEPPNS_10TransitionE))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = touchgfx::prepareTransition(touchgfx::Screen**, touchgfx::Presenter**, touchgfx::Transition**)
</UL>
<BR>[Calls]<UL><LI><a href="#[23d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Application::getInstance()
<LI><a href="#[264]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Application::TimerWidgets::clear()
</UL>
<BR>[Called By]<UL><LI><a href="#[23f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;T2* touchgfx::makeTransition&lang;Screen1View, Screen1Presenter, touchgfx::NoTransition, Model&rang;(touchgfx::Screen**, touchgfx::Presenter**, touchgfx::MVPHeap&, touchgfx::Transition**, T4*)
</UL>

<P><STRONG><a name="[197]"></a>__sti___21_typedtextdatabase_cpp_05ec7672</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, typedtextdatabase.o(i.__sti___21_typedtextdatabase_cpp_05ec7672))
<BR><BR>[Stack]<UL><LI>Max Depth = 196<LI>Call Chain = __sti___21_typedtextdatabase_cpp_05ec7672 &rArr; getFont_verdana_40_4bpp() &rArr; touchgfx::GeneratedFont::GeneratedFont(const touchgfx::GlyphNode*, unsigned short, unsigned short, unsigned short, unsigned char, unsigned char, unsigned char, unsigned char, unsigned char, unsigned char, const unsigned char*const *, const touchgfx::KerningNode*, unsigned short, unsigned short, const unsigned short*, const touchgfx::FontContextualFormsTable*) &rArr; touchgfx::ConstFont::ConstFont__sub_object(const touchgfx::GlyphNode*, unsigned short, unsigned short, unsigned short, unsigned char, unsigned char, unsigned char, unsigned char, unsigned char, unsigned char, unsigned short, unsigned short)
</UL>
<BR>[Calls]<UL><LI><a href="#[22a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getFont_verdana_40_4bpp()
<LI><a href="#[229]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getFont_verdana_20_4bpp()
<LI><a href="#[226]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getFont_verdana_10_4bpp()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> typedtextdatabase.o(.init_array)
</UL>
<P><STRONG><a name="[198]"></a>__sti___15_Application_cpp_63cd8d44</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, application.o(i.__sti___15_Application_cpp_63cd8d44))
<BR><BR>[Calls]<UL><LI><a href="#[d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Rect::Rect()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> application.o(.init_array)
</UL>
<P><STRONG><a name="[199]"></a>__sti___7_LCD_cpp_86507772</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, lcd.o(i.__sti___7_LCD_cpp_86507772))
<BR>[Address Reference Count : 1]<UL><LI> lcd.o(.init_array)
</UL><P>
<H3>
Undefined Global Symbols
</H3><HR></body></html>
