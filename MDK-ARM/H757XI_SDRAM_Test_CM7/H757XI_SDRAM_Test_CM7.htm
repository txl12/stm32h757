<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html><head>
<title>Static Call Graph - [H757XI_SDRAM_Test_CM7\H757XI_SDRAM_Test_CM7.axf]</title></head>
<body><HR>
<H1>Static Call Graph for image H757XI_SDRAM_Test_CM7\H757XI_SDRAM_Test_CM7.axf</H1><HR>
<BR><P>#&#060CALLGRAPH&#062# ARM Linker, 5060960: Last Updated: Sun Mar 17 16:18:05 2024
<BR><P>
<H3>Maximum Stack Usage =        952 bytes + Unknown(Functions without stacksize, Cycles, Untraceable Function Pointers)</H3><H3>
Call chain for Maximum Stack Depth:</H3>
touchgfx::TextAreaWithWildcardBase::draw(const touchgfx::Rect&) const &rArr; touchgfx::LCD::drawString(touchgfx::Rect, const touchgfx::Rect&, const touchgfx::LCD::StringVisuals&, const unsigned short*, ...) &rArr; touchgfx::LCD::drawStringLTR(const touchgfx::Rect&, const touchgfx::Rect&, const touchgfx::LCD::StringVisuals&, const unsigned short*, std::__va_list) &rArr; touchgfx::LCD::drawStringInternal(unsigned short*, const touchgfx::Rect*, short, short, const touchgfx::Rect&, const touchgfx::LCD::StringVisuals*, unsigned char, touchgfx::TextProvider&, int, bool) &rArr; touchgfx::TextProvider::getNextLigature(unsigned char, const touchgfx::Font*, const touchgfx::GlyphNode*&, const unsigned char*&, unsigned char&) &rArr; touchgfx::TextProvider::getNextLigature(unsigned char) &rArr; touchgfx::TextProvider::substituteGlyphs() &rArr; touchgfx::TextProvider::applyGsubRules(const unsigned short*, unsigned short) &rArr; touchgfx::TextProvider::replaceInputCharacters(unsigned short, unsigned short, const unsigned short*) &rArr; touchgfx::TextProvider::fillInputBuffer() &rArr; touchgfx::TextProvider::circularBuffer&lang;(unsigned)10&rang;::pushBack(unsigned short) &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
<P>
<H3>
Functions with no stack information
</H3><UL>
 <LI><a href="#[2c8]">__user_initial_stackheap</a>
</UL>
</UL>
<P>
<H3>
Mutually Recursive functions
</H3> <LI><a href="#[96]">ADC3_IRQHandler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[96]">ADC3_IRQHandler</a><BR>
 <LI><a href="#[451]">touchgfx::muldivu(unsigned, unsigned, unsigned, unsigned&)</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[451]">touchgfx::muldivu(unsigned, unsigned, unsigned, unsigned&)</a><BR>
 <LI><a href="#[411]">touchgfx::TouchCalibration::muldivu(unsigned, unsigned, unsigned, unsigned, unsigned, unsigned&)</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[411]">touchgfx::TouchCalibration::muldivu(unsigned, unsigned, unsigned, unsigned, unsigned, unsigned&)</a><BR>
 <LI><a href="#[44c]">touchgfx::Screen::JSMOC(const touchgfx::Rect&, touchgfx::Drawable*)</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[44c]">touchgfx::Screen::JSMOC(const touchgfx::Rect&, touchgfx::Drawable*)</a><BR>
 <LI><a href="#[401]">touchgfx::TextProvider::getNextCharInternal()</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[401]">touchgfx::TextProvider::getNextCharInternal()</a><BR>
</UL>
<P>
<H3>
Function Pointers
</H3><UL>
 <LI><a href="#[96]">ADC3_IRQHandler</a> from startup_stm32h757xx_cm7.o(.text) referenced from startup_stm32h757xx_cm7.o(RESET)
 <LI><a href="#[2c]">ADC_IRQHandler</a> from startup_stm32h757xx_cm7.o(.text) referenced from startup_stm32h757xx_cm7.o(RESET)
 <LI><a href="#[98]">BDMA_Channel0_IRQHandler</a> from startup_stm32h757xx_cm7.o(.text) referenced from startup_stm32h757xx_cm7.o(RESET)
 <LI><a href="#[99]">BDMA_Channel1_IRQHandler</a> from startup_stm32h757xx_cm7.o(.text) referenced from startup_stm32h757xx_cm7.o(RESET)
 <LI><a href="#[9a]">BDMA_Channel2_IRQHandler</a> from startup_stm32h757xx_cm7.o(.text) referenced from startup_stm32h757xx_cm7.o(RESET)
 <LI><a href="#[9b]">BDMA_Channel3_IRQHandler</a> from startup_stm32h757xx_cm7.o(.text) referenced from startup_stm32h757xx_cm7.o(RESET)
 <LI><a href="#[9c]">BDMA_Channel4_IRQHandler</a> from startup_stm32h757xx_cm7.o(.text) referenced from startup_stm32h757xx_cm7.o(RESET)
 <LI><a href="#[9d]">BDMA_Channel5_IRQHandler</a> from startup_stm32h757xx_cm7.o(.text) referenced from startup_stm32h757xx_cm7.o(RESET)
 <LI><a href="#[9e]">BDMA_Channel6_IRQHandler</a> from startup_stm32h757xx_cm7.o(.text) referenced from startup_stm32h757xx_cm7.o(RESET)
 <LI><a href="#[9f]">BDMA_Channel7_IRQHandler</a> from startup_stm32h757xx_cm7.o(.text) referenced from startup_stm32h757xx_cm7.o(RESET)
 <LI><a href="#[14]">BusFault_Handler</a> from stm32h7xx_it_1.o(i.BusFault_Handler) referenced from startup_stm32h757xx_cm7.o(RESET)
 <LI><a href="#[75]">CEC_IRQHandler</a> from startup_stm32h757xx_cm7.o(.text) referenced from startup_stm32h757xx_cm7.o(RESET)
 <LI><a href="#[5a]">CM4_SEV_IRQHandler</a> from startup_stm32h757xx_cm7.o(.text) referenced from startup_stm32h757xx_cm7.o(RESET)
 <LI><a href="#[59]">CM7_SEV_IRQHandler</a> from startup_stm32h757xx_cm7.o(.text) referenced from startup_stm32h757xx_cm7.o(RESET)
 <LI><a href="#[a0]">COMP1_IRQHandler</a> from startup_stm32h757xx_cm7.o(.text) referenced from startup_stm32h757xx_cm7.o(RESET)
 <LI><a href="#[a7]">CRS_IRQHandler</a> from startup_stm32h757xx_cm7.o(.text) referenced from startup_stm32h757xx_cm7.o(RESET)
 <LI><a href="#[66]">CRYP_IRQHandler</a> from startup_stm32h757xx_cm7.o(.text) referenced from startup_stm32h757xx_cm7.o(RESET)
 <LI><a href="#[65]">DCMI_IRQHandler</a> from startup_stm32h757xx_cm7.o(.text) referenced from startup_stm32h757xx_cm7.o(RESET)
 <LI><a href="#[85]">DFSDM1_FLT0_IRQHandler</a> from startup_stm32h757xx_cm7.o(.text) referenced from startup_stm32h757xx_cm7.o(RESET)
 <LI><a href="#[86]">DFSDM1_FLT1_IRQHandler</a> from startup_stm32h757xx_cm7.o(.text) referenced from startup_stm32h757xx_cm7.o(RESET)
 <LI><a href="#[87]">DFSDM1_FLT2_IRQHandler</a> from startup_stm32h757xx_cm7.o(.text) referenced from startup_stm32h757xx_cm7.o(RESET)
 <LI><a href="#[88]">DFSDM1_FLT3_IRQHandler</a> from startup_stm32h757xx_cm7.o(.text) referenced from startup_stm32h757xx_cm7.o(RESET)
 <LI><a href="#[25]">DMA1_Stream0_IRQHandler</a> from startup_stm32h757xx_cm7.o(.text) referenced from startup_stm32h757xx_cm7.o(RESET)
 <LI><a href="#[26]">DMA1_Stream1_IRQHandler</a> from startup_stm32h757xx_cm7.o(.text) referenced from startup_stm32h757xx_cm7.o(RESET)
 <LI><a href="#[27]">DMA1_Stream2_IRQHandler</a> from startup_stm32h757xx_cm7.o(.text) referenced from startup_stm32h757xx_cm7.o(RESET)
 <LI><a href="#[28]">DMA1_Stream3_IRQHandler</a> from startup_stm32h757xx_cm7.o(.text) referenced from startup_stm32h757xx_cm7.o(RESET)
 <LI><a href="#[29]">DMA1_Stream4_IRQHandler</a> from startup_stm32h757xx_cm7.o(.text) referenced from startup_stm32h757xx_cm7.o(RESET)
 <LI><a href="#[2a]">DMA1_Stream5_IRQHandler</a> from startup_stm32h757xx_cm7.o(.text) referenced from startup_stm32h757xx_cm7.o(RESET)
 <LI><a href="#[2b]">DMA1_Stream6_IRQHandler</a> from startup_stm32h757xx_cm7.o(.text) referenced from startup_stm32h757xx_cm7.o(RESET)
 <LI><a href="#[48]">DMA1_Stream7_IRQHandler</a> from startup_stm32h757xx_cm7.o(.text) referenced from startup_stm32h757xx_cm7.o(RESET)
 <LI><a href="#[71]">DMA2D_IRQHandler</a> from stm32h7xx_it_1.o(i.DMA2D_IRQHandler) referenced from startup_stm32h757xx_cm7.o(RESET)
 <LI><a href="#[51]">DMA2_Stream0_IRQHandler</a> from startup_stm32h757xx_cm7.o(.text) referenced from startup_stm32h757xx_cm7.o(RESET)
 <LI><a href="#[52]">DMA2_Stream1_IRQHandler</a> from startup_stm32h757xx_cm7.o(.text) referenced from startup_stm32h757xx_cm7.o(RESET)
 <LI><a href="#[53]">DMA2_Stream2_IRQHandler</a> from startup_stm32h757xx_cm7.o(.text) referenced from startup_stm32h757xx_cm7.o(RESET)
 <LI><a href="#[54]">DMA2_Stream3_IRQHandler</a> from startup_stm32h757xx_cm7.o(.text) referenced from startup_stm32h757xx_cm7.o(RESET)
 <LI><a href="#[55]">DMA2_Stream4_IRQHandler</a> from startup_stm32h757xx_cm7.o(.text) referenced from startup_stm32h757xx_cm7.o(RESET)
 <LI><a href="#[5b]">DMA2_Stream5_IRQHandler</a> from startup_stm32h757xx_cm7.o(.text) referenced from startup_stm32h757xx_cm7.o(RESET)
 <LI><a href="#[5c]">DMA2_Stream6_IRQHandler</a> from startup_stm32h757xx_cm7.o(.text) referenced from startup_stm32h757xx_cm7.o(RESET)
 <LI><a href="#[5d]">DMA2_Stream7_IRQHandler</a> from startup_stm32h757xx_cm7.o(.text) referenced from startup_stm32h757xx_cm7.o(RESET)
 <LI><a href="#[7d]">DMAMUX1_OVR_IRQHandler</a> from startup_stm32h757xx_cm7.o(.text) referenced from startup_stm32h757xx_cm7.o(RESET)
 <LI><a href="#[97]">DMAMUX2_OVR_IRQHandler</a> from startup_stm32h757xx_cm7.o(.text) referenced from startup_stm32h757xx_cm7.o(RESET)
 <LI><a href="#[92]">DSI_IRQHandler</a> from startup_stm32h757xx_cm7.o(.text) referenced from startup_stm32h757xx_cm7.o(RESET)
 <LI><a href="#[17]">DebugMon_Handler</a> from stm32h7xx_it_1.o(i.DebugMon_Handler) referenced from startup_stm32h757xx_cm7.o(RESET)
 <LI><a href="#[a8]">ECC_IRQHandler</a> from startup_stm32h757xx_cm7.o(.text) referenced from startup_stm32h757xx_cm7.o(RESET)
 <LI><a href="#[56]">ETH_IRQHandler</a> from startup_stm32h757xx_cm7.o(.text) referenced from startup_stm32h757xx_cm7.o(RESET)
 <LI><a href="#[57]">ETH_WKUP_IRQHandler</a> from startup_stm32h757xx_cm7.o(.text) referenced from startup_stm32h757xx_cm7.o(RESET)
 <LI><a href="#[20]">EXTI0_IRQHandler</a> from startup_stm32h757xx_cm7.o(.text) referenced from startup_stm32h757xx_cm7.o(RESET)
 <LI><a href="#[42]">EXTI15_10_IRQHandler</a> from startup_stm32h757xx_cm7.o(.text) referenced from startup_stm32h757xx_cm7.o(RESET)
 <LI><a href="#[21]">EXTI1_IRQHandler</a> from startup_stm32h757xx_cm7.o(.text) referenced from startup_stm32h757xx_cm7.o(RESET)
 <LI><a href="#[22]">EXTI2_IRQHandler</a> from startup_stm32h757xx_cm7.o(.text) referenced from startup_stm32h757xx_cm7.o(RESET)
 <LI><a href="#[23]">EXTI3_IRQHandler</a> from startup_stm32h757xx_cm7.o(.text) referenced from startup_stm32h757xx_cm7.o(RESET)
 <LI><a href="#[24]">EXTI4_IRQHandler</a> from startup_stm32h757xx_cm7.o(.text) referenced from startup_stm32h757xx_cm7.o(RESET)
 <LI><a href="#[31]">EXTI9_5_IRQHandler</a> from startup_stm32h757xx_cm7.o(.text) referenced from startup_stm32h757xx_cm7.o(RESET)
 <LI><a href="#[2d]">FDCAN1_IT0_IRQHandler</a> from startup_stm32h757xx_cm7.o(.text) referenced from startup_stm32h757xx_cm7.o(RESET)
 <LI><a href="#[2f]">FDCAN1_IT1_IRQHandler</a> from startup_stm32h757xx_cm7.o(.text) referenced from startup_stm32h757xx_cm7.o(RESET)
 <LI><a href="#[2e]">FDCAN2_IT0_IRQHandler</a> from startup_stm32h757xx_cm7.o(.text) referenced from startup_stm32h757xx_cm7.o(RESET)
 <LI><a href="#[30]">FDCAN2_IT1_IRQHandler</a> from startup_stm32h757xx_cm7.o(.text) referenced from startup_stm32h757xx_cm7.o(RESET)
 <LI><a href="#[58]">FDCAN_CAL_IRQHandler</a> from startup_stm32h757xx_cm7.o(.text) referenced from startup_stm32h757xx_cm7.o(RESET)
 <LI><a href="#[1e]">FLASH_IRQHandler</a> from startup_stm32h757xx_cm7.o(.text) referenced from startup_stm32h757xx_cm7.o(RESET)
 <LI><a href="#[49]">FMC_IRQHandler</a> from startup_stm32h757xx_cm7.o(.text) referenced from startup_stm32h757xx_cm7.o(RESET)
 <LI><a href="#[68]">FPU_IRQHandler</a> from startup_stm32h757xx_cm7.o(.text) referenced from startup_stm32h757xx_cm7.o(RESET)
 <LI><a href="#[67]">HASH_RNG_IRQHandler</a> from startup_stm32h757xx_cm7.o(.text) referenced from startup_stm32h757xx_cm7.o(RESET)
 <LI><a href="#[aa]">HOLD_CORE_IRQHandler</a> from startup_stm32h757xx_cm7.o(.text) referenced from startup_stm32h757xx_cm7.o(RESET)
 <LI><a href="#[84]">HRTIM1_FLT_IRQHandler</a> from startup_stm32h757xx_cm7.o(.text) referenced from startup_stm32h757xx_cm7.o(RESET)
 <LI><a href="#[7e]">HRTIM1_Master_IRQHandler</a> from startup_stm32h757xx_cm7.o(.text) referenced from startup_stm32h757xx_cm7.o(RESET)
 <LI><a href="#[7f]">HRTIM1_TIMA_IRQHandler</a> from startup_stm32h757xx_cm7.o(.text) referenced from startup_stm32h757xx_cm7.o(RESET)
 <LI><a href="#[80]">HRTIM1_TIMB_IRQHandler</a> from startup_stm32h757xx_cm7.o(.text) referenced from startup_stm32h757xx_cm7.o(RESET)
 <LI><a href="#[81]">HRTIM1_TIMC_IRQHandler</a> from startup_stm32h757xx_cm7.o(.text) referenced from startup_stm32h757xx_cm7.o(RESET)
 <LI><a href="#[82]">HRTIM1_TIMD_IRQHandler</a> from startup_stm32h757xx_cm7.o(.text) referenced from startup_stm32h757xx_cm7.o(RESET)
 <LI><a href="#[83]">HRTIM1_TIME_IRQHandler</a> from startup_stm32h757xx_cm7.o(.text) referenced from startup_stm32h757xx_cm7.o(RESET)
 <LI><a href="#[94]">HSEM1_IRQHandler</a> from startup_stm32h757xx_cm7.o(.text) referenced from startup_stm32h757xx_cm7.o(RESET)
 <LI><a href="#[95]">HSEM2_IRQHandler</a> from startup_stm32h757xx_cm7.o(.text) referenced from startup_stm32h757xx_cm7.o(RESET)
 <LI><a href="#[12]">HardFault_Handler</a> from stm32h7xx_it_1.o(i.HardFault_Handler) referenced from startup_stm32h757xx_cm7.o(RESET)
 <LI><a href="#[3a]">I2C1_ER_IRQHandler</a> from startup_stm32h757xx_cm7.o(.text) referenced from startup_stm32h757xx_cm7.o(RESET)
 <LI><a href="#[39]">I2C1_EV_IRQHandler</a> from startup_stm32h757xx_cm7.o(.text) referenced from startup_stm32h757xx_cm7.o(RESET)
 <LI><a href="#[3c]">I2C2_ER_IRQHandler</a> from startup_stm32h757xx_cm7.o(.text) referenced from startup_stm32h757xx_cm7.o(RESET)
 <LI><a href="#[3b]">I2C2_EV_IRQHandler</a> from startup_stm32h757xx_cm7.o(.text) referenced from startup_stm32h757xx_cm7.o(RESET)
 <LI><a href="#[60]">I2C3_ER_IRQHandler</a> from startup_stm32h757xx_cm7.o(.text) referenced from startup_stm32h757xx_cm7.o(RESET)
 <LI><a href="#[5f]">I2C3_EV_IRQHandler</a> from startup_stm32h757xx_cm7.o(.text) referenced from startup_stm32h757xx_cm7.o(RESET)
 <LI><a href="#[77]">I2C4_ER_IRQHandler</a> from startup_stm32h757xx_cm7.o(.text) referenced from startup_stm32h757xx_cm7.o(RESET)
 <LI><a href="#[76]">I2C4_EV_IRQHandler</a> from startup_stm32h757xx_cm7.o(.text) referenced from startup_stm32h757xx_cm7.o(RESET)
 <LI><a href="#[90]">JPEG_IRQHandler</a> from startup_stm32h757xx_cm7.o(.text) referenced from startup_stm32h757xx_cm7.o(RESET)
 <LI><a href="#[74]">LPTIM1_IRQHandler</a> from startup_stm32h757xx_cm7.o(.text) referenced from startup_stm32h757xx_cm7.o(RESET)
 <LI><a href="#[a1]">LPTIM2_IRQHandler</a> from startup_stm32h757xx_cm7.o(.text) referenced from startup_stm32h757xx_cm7.o(RESET)
 <LI><a href="#[a2]">LPTIM3_IRQHandler</a> from startup_stm32h757xx_cm7.o(.text) referenced from startup_stm32h757xx_cm7.o(RESET)
 <LI><a href="#[a3]">LPTIM4_IRQHandler</a> from startup_stm32h757xx_cm7.o(.text) referenced from startup_stm32h757xx_cm7.o(RESET)
 <LI><a href="#[a4]">LPTIM5_IRQHandler</a> from startup_stm32h757xx_cm7.o(.text) referenced from startup_stm32h757xx_cm7.o(RESET)
 <LI><a href="#[a5]">LPUART1_IRQHandler</a> from startup_stm32h757xx_cm7.o(.text) referenced from startup_stm32h757xx_cm7.o(RESET)
 <LI><a href="#[70]">LTDC_ER_IRQHandler</a> from startup_stm32h757xx_cm7.o(.text) referenced from startup_stm32h757xx_cm7.o(RESET)
 <LI><a href="#[6f]">LTDC_IRQHandler</a> from stm32h7xx_it_1.o(i.LTDC_IRQHandler) referenced from startup_stm32h757xx_cm7.o(RESET)
 <LI><a href="#[8f]">MDIOS_IRQHandler</a> from startup_stm32h757xx_cm7.o(.text) referenced from startup_stm32h757xx_cm7.o(RESET)
 <LI><a href="#[8e]">MDIOS_WKUP_IRQHandler</a> from startup_stm32h757xx_cm7.o(.text) referenced from startup_stm32h757xx_cm7.o(RESET)
 <LI><a href="#[91]">MDMA_IRQHandler</a> from startup_stm32h757xx_cm7.o(.text) referenced from startup_stm32h757xx_cm7.o(RESET)
 <LI><a href="#[13]">MemManage_Handler</a> from stm32h7xx_it_1.o(i.MemManage_Handler) referenced from startup_stm32h757xx_cm7.o(RESET)
 <LI><a href="#[11]">NMI_Handler</a> from stm32h7xx_it_1.o(i.NMI_Handler) referenced from startup_stm32h757xx_cm7.o(RESET)
 <LI><a href="#[7a]">OTG_FS_EP1_IN_IRQHandler</a> from startup_stm32h757xx_cm7.o(.text) referenced from startup_stm32h757xx_cm7.o(RESET)
 <LI><a href="#[79]">OTG_FS_EP1_OUT_IRQHandler</a> from startup_stm32h757xx_cm7.o(.text) referenced from startup_stm32h757xx_cm7.o(RESET)
 <LI><a href="#[7c]">OTG_FS_IRQHandler</a> from startup_stm32h757xx_cm7.o(.text) referenced from startup_stm32h757xx_cm7.o(RESET)
 <LI><a href="#[7b]">OTG_FS_WKUP_IRQHandler</a> from startup_stm32h757xx_cm7.o(.text) referenced from startup_stm32h757xx_cm7.o(RESET)
 <LI><a href="#[62]">OTG_HS_EP1_IN_IRQHandler</a> from startup_stm32h757xx_cm7.o(.text) referenced from startup_stm32h757xx_cm7.o(RESET)
 <LI><a href="#[61]">OTG_HS_EP1_OUT_IRQHandler</a> from startup_stm32h757xx_cm7.o(.text) referenced from startup_stm32h757xx_cm7.o(RESET)
 <LI><a href="#[64]">OTG_HS_IRQHandler</a> from startup_stm32h757xx_cm7.o(.text) referenced from startup_stm32h757xx_cm7.o(RESET)
 <LI><a href="#[63]">OTG_HS_WKUP_IRQHandler</a> from startup_stm32h757xx_cm7.o(.text) referenced from startup_stm32h757xx_cm7.o(RESET)
 <LI><a href="#[1b]">PVD_AVD_IRQHandler</a> from startup_stm32h757xx_cm7.o(.text) referenced from startup_stm32h757xx_cm7.o(RESET)
 <LI><a href="#[18]">PendSV_Handler</a> from port.o(.emb_text) referenced from startup_stm32h757xx_cm7.o(RESET)
 <LI><a href="#[73]">QUADSPI_IRQHandler</a> from startup_stm32h757xx_cm7.o(.text) referenced from startup_stm32h757xx_cm7.o(RESET)
 <LI><a href="#[1f]">RCC_IRQHandler</a> from startup_stm32h757xx_cm7.o(.text) referenced from startup_stm32h757xx_cm7.o(RESET)
 <LI><a href="#[43]">RTC_Alarm_IRQHandler</a> from startup_stm32h757xx_cm7.o(.text) referenced from startup_stm32h757xx_cm7.o(RESET)
 <LI><a href="#[1d]">RTC_WKUP_IRQHandler</a> from startup_stm32h757xx_cm7.o(.text) referenced from startup_stm32h757xx_cm7.o(RESET)
 <LI><a href="#[10]">Reset_Handler</a> from startup_stm32h757xx_cm7.o(.text) referenced from startup_stm32h757xx_cm7.o(RESET)
 <LI><a href="#[6e]">SAI1_IRQHandler</a> from startup_stm32h757xx_cm7.o(.text) referenced from startup_stm32h757xx_cm7.o(RESET)
 <LI><a href="#[72]">SAI2_IRQHandler</a> from startup_stm32h757xx_cm7.o(.text) referenced from startup_stm32h757xx_cm7.o(RESET)
 <LI><a href="#[89]">SAI3_IRQHandler</a> from startup_stm32h757xx_cm7.o(.text) referenced from startup_stm32h757xx_cm7.o(RESET)
 <LI><a href="#[a9]">SAI4_IRQHandler</a> from startup_stm32h757xx_cm7.o(.text) referenced from startup_stm32h757xx_cm7.o(RESET)
 <LI><a href="#[4a]">SDMMC1_IRQHandler</a> from startup_stm32h757xx_cm7.o(.text) referenced from startup_stm32h757xx_cm7.o(RESET)
 <LI><a href="#[93]">SDMMC2_IRQHandler</a> from startup_stm32h757xx_cm7.o(.text) referenced from startup_stm32h757xx_cm7.o(RESET)
 <LI><a href="#[78]">SPDIF_RX_IRQHandler</a> from startup_stm32h757xx_cm7.o(.text) referenced from startup_stm32h757xx_cm7.o(RESET)
 <LI><a href="#[3d]">SPI1_IRQHandler</a> from startup_stm32h757xx_cm7.o(.text) referenced from startup_stm32h757xx_cm7.o(RESET)
 <LI><a href="#[3e]">SPI2_IRQHandler</a> from startup_stm32h757xx_cm7.o(.text) referenced from startup_stm32h757xx_cm7.o(RESET)
 <LI><a href="#[4c]">SPI3_IRQHandler</a> from startup_stm32h757xx_cm7.o(.text) referenced from startup_stm32h757xx_cm7.o(RESET)
 <LI><a href="#[6b]">SPI4_IRQHandler</a> from startup_stm32h757xx_cm7.o(.text) referenced from startup_stm32h757xx_cm7.o(RESET)
 <LI><a href="#[6c]">SPI5_IRQHandler</a> from startup_stm32h757xx_cm7.o(.text) referenced from startup_stm32h757xx_cm7.o(RESET)
 <LI><a href="#[6d]">SPI6_IRQHandler</a> from startup_stm32h757xx_cm7.o(.text) referenced from startup_stm32h757xx_cm7.o(RESET)
 <LI><a href="#[16]">SVC_Handler</a> from port.o(.emb_text) referenced from startup_stm32h757xx_cm7.o(RESET)
 <LI><a href="#[8a]">SWPMI1_IRQHandler</a> from startup_stm32h757xx_cm7.o(.text) referenced from startup_stm32h757xx_cm7.o(RESET)
 <LI><a href="#[ae]">StartDefaultTask</a> from freertos.o(i.StartDefaultTask) referenced from freertos.o(i.MX_FREERTOS_Init)
 <LI><a href="#[19]">SysTick_Handler</a> from cmsis_os2.o(i.SysTick_Handler) referenced from startup_stm32h757xx_cm7.o(RESET)
 <LI><a href="#[ac]">SystemInit</a> from system_stm32h7xx_dualcore_boot_cm4_cm7.o(i.SystemInit) referenced from startup_stm32h757xx_cm7.o(.text)
 <LI><a href="#[1c]">TAMP_STAMP_IRQHandler</a> from startup_stm32h757xx_cm7.o(.text) referenced from startup_stm32h757xx_cm7.o(RESET)
 <LI><a href="#[8b]">TIM15_IRQHandler</a> from startup_stm32h757xx_cm7.o(.text) referenced from startup_stm32h757xx_cm7.o(RESET)
 <LI><a href="#[8c]">TIM16_IRQHandler</a> from startup_stm32h757xx_cm7.o(.text) referenced from startup_stm32h757xx_cm7.o(RESET)
 <LI><a href="#[8d]">TIM17_IRQHandler</a> from stm32h7xx_it_1.o(i.TIM17_IRQHandler) referenced from startup_stm32h757xx_cm7.o(RESET)
 <LI><a href="#[32]">TIM1_BRK_IRQHandler</a> from startup_stm32h757xx_cm7.o(.text) referenced from startup_stm32h757xx_cm7.o(RESET)
 <LI><a href="#[35]">TIM1_CC_IRQHandler</a> from startup_stm32h757xx_cm7.o(.text) referenced from startup_stm32h757xx_cm7.o(RESET)
 <LI><a href="#[34]">TIM1_TRG_COM_IRQHandler</a> from startup_stm32h757xx_cm7.o(.text) referenced from startup_stm32h757xx_cm7.o(RESET)
 <LI><a href="#[33]">TIM1_UP_IRQHandler</a> from startup_stm32h757xx_cm7.o(.text) referenced from startup_stm32h757xx_cm7.o(RESET)
 <LI><a href="#[36]">TIM2_IRQHandler</a> from startup_stm32h757xx_cm7.o(.text) referenced from startup_stm32h757xx_cm7.o(RESET)
 <LI><a href="#[37]">TIM3_IRQHandler</a> from startup_stm32h757xx_cm7.o(.text) referenced from startup_stm32h757xx_cm7.o(RESET)
 <LI><a href="#[38]">TIM4_IRQHandler</a> from startup_stm32h757xx_cm7.o(.text) referenced from startup_stm32h757xx_cm7.o(RESET)
 <LI><a href="#[4b]">TIM5_IRQHandler</a> from startup_stm32h757xx_cm7.o(.text) referenced from startup_stm32h757xx_cm7.o(RESET)
 <LI><a href="#[4f]">TIM6_DAC_IRQHandler</a> from startup_stm32h757xx_cm7.o(.text) referenced from startup_stm32h757xx_cm7.o(RESET)
 <LI><a href="#[50]">TIM7_IRQHandler</a> from startup_stm32h757xx_cm7.o(.text) referenced from startup_stm32h757xx_cm7.o(RESET)
 <LI><a href="#[44]">TIM8_BRK_TIM12_IRQHandler</a> from startup_stm32h757xx_cm7.o(.text) referenced from startup_stm32h757xx_cm7.o(RESET)
 <LI><a href="#[47]">TIM8_CC_IRQHandler</a> from startup_stm32h757xx_cm7.o(.text) referenced from startup_stm32h757xx_cm7.o(RESET)
 <LI><a href="#[46]">TIM8_TRG_COM_TIM14_IRQHandler</a> from startup_stm32h757xx_cm7.o(.text) referenced from startup_stm32h757xx_cm7.o(RESET)
 <LI><a href="#[45]">TIM8_UP_TIM13_IRQHandler</a> from startup_stm32h757xx_cm7.o(.text) referenced from startup_stm32h757xx_cm7.o(RESET)
 <LI><a href="#[af]">TouchGFX_Task</a> from app_touchgfx.o(i.TouchGFX_Task) referenced from freertos.o(i.MX_FREERTOS_Init)
 <LI><a href="#[4d]">UART4_IRQHandler</a> from startup_stm32h757xx_cm7.o(.text) referenced from startup_stm32h757xx_cm7.o(RESET)
 <LI><a href="#[4e]">UART5_IRQHandler</a> from startup_stm32h757xx_cm7.o(.text) referenced from startup_stm32h757xx_cm7.o(RESET)
 <LI><a href="#[69]">UART7_IRQHandler</a> from startup_stm32h757xx_cm7.o(.text) referenced from startup_stm32h757xx_cm7.o(RESET)
 <LI><a href="#[6a]">UART8_IRQHandler</a> from startup_stm32h757xx_cm7.o(.text) referenced from startup_stm32h757xx_cm7.o(RESET)
 <LI><a href="#[3f]">USART1_IRQHandler</a> from startup_stm32h757xx_cm7.o(.text) referenced from startup_stm32h757xx_cm7.o(RESET)
 <LI><a href="#[40]">USART2_IRQHandler</a> from startup_stm32h757xx_cm7.o(.text) referenced from startup_stm32h757xx_cm7.o(RESET)
 <LI><a href="#[41]">USART3_IRQHandler</a> from startup_stm32h757xx_cm7.o(.text) referenced from startup_stm32h757xx_cm7.o(RESET)
 <LI><a href="#[5e]">USART6_IRQHandler</a> from startup_stm32h757xx_cm7.o(.text) referenced from startup_stm32h757xx_cm7.o(RESET)
 <LI><a href="#[15]">UsageFault_Handler</a> from stm32h7xx_it_1.o(i.UsageFault_Handler) referenced from startup_stm32h757xx_cm7.o(RESET)
 <LI><a href="#[ab]">WAKEUP_PIN_IRQHandler</a> from startup_stm32h757xx_cm7.o(.text) referenced from startup_stm32h757xx_cm7.o(RESET)
 <LI><a href="#[1a]">WWDG_IRQHandler</a> from startup_stm32h757xx_cm7.o(.text) referenced from startup_stm32h757xx_cm7.o(RESET)
 <LI><a href="#[a6]">WWDG_RST_IRQHandler</a> from startup_stm32h757xx_cm7.o(.text) referenced from startup_stm32h757xx_cm7.o(RESET)
 <LI><a href="#[ed]">CookingView::setupScreen()</a> from cookingview.o(i._ZN11CookingView11setupScreenEv) referenced from cookingview.o(.constdata__ZTV11CookingView)
 <LI><a href="#[100]">CookingView::saveElementID(short)</a> from cookingview.o(i._ZN11CookingView13saveElementIDEs) referenced from cookingview.o(.constdata__ZTV11CookingView)
 <LI><a href="#[ef]">CookingView::tearDownScreen()</a> from cookingview.o(i._ZN11CookingView14tearDownScreenEv) referenced from cookingview.o(.constdata__ZTV11CookingView)
 <LI><a href="#[f3]">CookingView::handleTickEvent()</a> from cookingview.o(i._ZN11CookingView15handleTickEventEv) referenced from cookingview.o(.constdata__ZTV11CookingView)
 <LI><a href="#[fa]">CookingView::pressUpKeyFunction()</a> from cookingview.o(i._ZN11CookingView18pressUpKeyFunctionEv) referenced from cookingview.o(.constdata__ZTV11CookingView)
 <LI><a href="#[f9]">CookingView::pressDownKeyFunction()</a> from cookingview.o(i._ZN11CookingView20pressDownKeyFunctionEv) referenced from cookingview.o(.constdata__ZTV11CookingView)
 <LI><a href="#[fc]">CookingView::pressLeftKeyFunction()</a> from cookingview.o(i._ZN11CookingView20pressLeftKeyFunctionEv) referenced from cookingview.o(.constdata__ZTV11CookingView)
 <LI><a href="#[ff]">CookingView::pressInfoButtonAction()</a> from cookingview.o(i._ZN11CookingView21pressInfoButtonActionEv) referenced from cookingview.o(.constdata__ZTV11CookingView)
 <LI><a href="#[fb]">CookingView::pressRightKeyFunction()</a> from cookingview.o(i._ZN11CookingView21pressRightKeyFunctionEv) referenced from cookingview.o(.constdata__ZTV11CookingView)
 <LI><a href="#[f8]">CookingView::pressCenterKeyFunction()</a> from cookingview.o(i._ZN11CookingView22pressCenterKeyFunctionEv) referenced from cookingview.o(.constdata__ZTV11CookingView)
 <LI><a href="#[fd]">CookingView::pressCancelButtonAction()</a> from cookingview.o(i._ZN11CookingView23pressCancelButtonActionEv) referenced from cookingview.o(.constdata__ZTV11CookingView)
 <LI><a href="#[fe]">CookingView::pressSettingButtonAction()</a> from cookingview.o(i._ZN11CookingView24pressSettingButtonActionEv) referenced from cookingview.o(.constdata__ZTV11CookingView)
 <LI><a href="#[eb]">CookingView::~CookingView()</a> from cookingview.o(i._ZN11CookingViewD1Ev) referenced from cookingview.o(.constdata__ZTV11CookingView)
 <LI><a href="#[120]">TouchGFXHAL::beginFrame()</a> from touchgfxhal.o(i._ZN11TouchGFXHAL10beginFrameEv) referenced from touchgfxhal.o(.constdata__ZTV11TouchGFXHAL)
 <LI><a href="#[102]">TouchGFXHAL::initialize()</a> from touchgfxhal.o(i._ZN11TouchGFXHAL10initializeEv) referenced from touchgfxhal.o(.constdata__ZTV11TouchGFXHAL)
 <LI><a href="#[116]">TouchGFXHAL::enableInterrupts()</a> from touchgfxhal.o(i._ZN11TouchGFXHAL16enableInterruptsEv) referenced from touchgfxhal.o(.constdata__ZTV11TouchGFXHAL)
 <LI><a href="#[104]">TouchGFXHAL::flushFrameBuffer(const touchgfx::Rect&)</a> from touchgfxhal.o(i._ZN11TouchGFXHAL16flushFrameBufferERKN8touchgfx4RectE) referenced from touchgfxhal.o(.constdata__ZTV11TouchGFXHAL)
 <LI><a href="#[117]">TouchGFXHAL::disableInterrupts()</a> from touchgfxhal.o(i._ZN11TouchGFXHAL17disableInterruptsEv) referenced from touchgfxhal.o(.constdata__ZTV11TouchGFXHAL)
 <LI><a href="#[122]">TouchGFXHAL::setTFTFrameBuffer(unsigned short*)</a> from touchgfxhal.o(i._ZN11TouchGFXHAL17setTFTFrameBufferEPt) referenced from touchgfxhal.o(.constdata__ZTV11TouchGFXHAL)
 <LI><a href="#[115]">TouchGFXHAL::configureInterrupts()</a> from touchgfxhal.o(i._ZN11TouchGFXHAL19configureInterruptsEv) referenced from touchgfxhal.o(.constdata__ZTV11TouchGFXHAL)
 <LI><a href="#[118]">TouchGFXHAL::enableLCDControllerInterrupt()</a> from touchgfxhal.o(i._ZN11TouchGFXHAL28enableLCDControllerInterruptEv) referenced from touchgfxhal.o(.constdata__ZTV11TouchGFXHAL)
 <LI><a href="#[121]">TouchGFXHAL::endFrame()</a> from touchgfxhal.o(i._ZN11TouchGFXHAL8endFrameEv) referenced from touchgfxhal.o(.constdata__ZTV11TouchGFXHAL)
 <LI><a href="#[10a]">TouchGFXHAL::blockCopy(void*, const void*, unsigned)</a> from touchgfxhal.o(i._ZN11TouchGFXHAL9blockCopyEPvPKvj) referenced from touchgfxhal.o(.constdata__ZTV11TouchGFXHAL)
 <LI><a href="#[d7]">TouchGFXHAL::~TouchGFXHAL()</a> from touchgfxhal.o(i._ZN11TouchGFXHALD1Ev) referenced from touchgfxhal.o(.constdata__ZTV11TouchGFXHAL)
 <LI><a href="#[d7]">TouchGFXHAL::~TouchGFXHAL()</a> from touchgfxhal.o(i._ZN11TouchGFXHALD1Ev) referenced from touchgfxconfiguration.o(i.__sti___25_TouchGFXConfiguration_cpp_f5abfd34)
 <LI><a href="#[d9]">FrontendHeap::~FrontendHeap()</a> from touchgfxconfiguration.o(i._ZN12FrontendHeapD1Ev) referenced from touchgfxconfiguration.o(.constdata__ZTV12FrontendHeap)
 <LI><a href="#[d9]">FrontendHeap::~FrontendHeap()</a> from touchgfxconfiguration.o(i._ZN12FrontendHeapD1Ev) referenced from touchgfxconfiguration.o(i.touchgfx_init)
 <LI><a href="#[12a]">SettingsView::setupScreen()</a> from settingsview.o(i._ZN12SettingsView11setupScreenEv) referenced from settingsview.o(.constdata__ZTV12SettingsView)
 <LI><a href="#[137]">SettingsView::hourIsClicked()</a> from settingsview.o(i._ZN12SettingsView13hourIsClickedEv) referenced from settingsview.o(.constdata__ZTV12SettingsView)
 <LI><a href="#[12b]">SettingsView::tearDownScreen()</a> from settingsview.o(i._ZN12SettingsView14tearDownScreenEv) referenced from settingsview.o(.constdata__ZTV12SettingsView)
 <LI><a href="#[12c]">SettingsView::handleTickEvent()</a> from settingsview.o(i._ZN12SettingsView15handleTickEventEv) referenced from settingsview.o(.constdata__ZTV12SettingsView)
 <LI><a href="#[138]">SettingsView::minuteIsClicked()</a> from settingsview.o(i._ZN12SettingsView15minuteIsClickedEv) referenced from settingsview.o(.constdata__ZTV12SettingsView)
 <LI><a href="#[136]">SettingsView::clockButtonClicked()</a> from settingsview.o(i._ZN12SettingsView18clockButtonClickedEv) referenced from settingsview.o(.constdata__ZTV12SettingsView)
 <LI><a href="#[134]">SettingsView::pressUpKeyFunction()</a> from settingsview.o(i._ZN12SettingsView18pressUpKeyFunctionEv) referenced from settingsview.o(.constdata__ZTV12SettingsView)
 <LI><a href="#[131]">SettingsView::pressDownKeyFunction()</a> from settingsview.o(i._ZN12SettingsView20pressDownKeyFunctionEv) referenced from settingsview.o(.constdata__ZTV12SettingsView)
 <LI><a href="#[135]">SettingsView::languageButtonClicked()</a> from settingsview.o(i._ZN12SettingsView21languageButtonClickedEv) referenced from settingsview.o(.constdata__ZTV12SettingsView)
 <LI><a href="#[139]">SettingsView::returnButtonIsClicked()</a> from settingsview.o(i._ZN12SettingsView21returnButtonIsClickedEv) referenced from settingsview.o(.constdata__ZTV12SettingsView)
 <LI><a href="#[130]">SettingsView::pressCenterKeyFunction()</a> from settingsview.o(i._ZN12SettingsView22pressCenterKeyFunctionEv) referenced from settingsview.o(.constdata__ZTV12SettingsView)
 <LI><a href="#[129]">SettingsView::~SettingsView()</a> from settingsview.o(i._ZN12SettingsViewD1Ev) referenced from settingsview.o(.constdata__ZTV12SettingsView)
 <LI><a href="#[13b]">CookingViewBase::setupScreen()</a> from cookingviewbase.o(i._ZN15CookingViewBase11setupScreenEv) referenced from cookingviewbase.o(.constdata__ZTV15CookingViewBase)
 <LI><a href="#[f4]">CookingViewBase::handleKeyEvent(unsigned char)</a> from cookingviewbase.o(i._ZN15CookingViewBase14handleKeyEventEh) referenced from cookingview.o(.constdata__ZTV11CookingView)
 <LI><a href="#[f4]">CookingViewBase::handleKeyEvent(unsigned char)</a> from cookingviewbase.o(i._ZN15CookingViewBase14handleKeyEventEh) referenced from cookingviewbase.o(.constdata__ZTV15CookingViewBase)
 <LI><a href="#[f6]">CookingViewBase::goToSettingMenu()</a> from cookingviewbase.o(i._ZN15CookingViewBase15goToSettingMenuEv) referenced from cookingview.o(.constdata__ZTV11CookingView)
 <LI><a href="#[f6]">CookingViewBase::goToSettingMenu()</a> from cookingviewbase.o(i._ZN15CookingViewBase15goToSettingMenuEv) referenced from cookingviewbase.o(.constdata__ZTV15CookingViewBase)
 <LI><a href="#[f7]">CookingViewBase::goToSelectingMenu()</a> from cookingviewbase.o(i._ZN15CookingViewBase17goToSelectingMenuEv) referenced from cookingview.o(.constdata__ZTV11CookingView)
 <LI><a href="#[f7]">CookingViewBase::goToSelectingMenu()</a> from cookingviewbase.o(i._ZN15CookingViewBase17goToSelectingMenuEv) referenced from cookingviewbase.o(.constdata__ZTV15CookingViewBase)
 <LI><a href="#[140]">CookingViewBase::pressUpKeyFunction()</a> from cookingviewbase.o(i._ZN15CookingViewBase18pressUpKeyFunctionEv) referenced from cookingviewbase.o(.constdata__ZTV15CookingViewBase)
 <LI><a href="#[f5]">CookingViewBase::goToInformationMenu()</a> from cookingviewbase.o(i._ZN15CookingViewBase19goToInformationMenuEv) referenced from cookingview.o(.constdata__ZTV11CookingView)
 <LI><a href="#[f5]">CookingViewBase::goToInformationMenu()</a> from cookingviewbase.o(i._ZN15CookingViewBase19goToInformationMenuEv) referenced from cookingviewbase.o(.constdata__ZTV15CookingViewBase)
 <LI><a href="#[13f]">CookingViewBase::pressDownKeyFunction()</a> from cookingviewbase.o(i._ZN15CookingViewBase20pressDownKeyFunctionEv) referenced from cookingviewbase.o(.constdata__ZTV15CookingViewBase)
 <LI><a href="#[142]">CookingViewBase::pressLeftKeyFunction()</a> from cookingviewbase.o(i._ZN15CookingViewBase20pressLeftKeyFunctionEv) referenced from cookingviewbase.o(.constdata__ZTV15CookingViewBase)
 <LI><a href="#[dd]">CookingViewBase::buttonCallbackHandler(const touchgfx::AbstractButton&)</a> from cookingviewbase.o(i._ZN15CookingViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE) referenced from cookingviewbase.o(.constdata)
 <LI><a href="#[145]">CookingViewBase::pressInfoButtonAction()</a> from cookingviewbase.o(i._ZN15CookingViewBase21pressInfoButtonActionEv) referenced from cookingviewbase.o(.constdata__ZTV15CookingViewBase)
 <LI><a href="#[141]">CookingViewBase::pressRightKeyFunction()</a> from cookingviewbase.o(i._ZN15CookingViewBase21pressRightKeyFunctionEv) referenced from cookingviewbase.o(.constdata__ZTV15CookingViewBase)
 <LI><a href="#[13e]">CookingViewBase::pressCenterKeyFunction()</a> from cookingviewbase.o(i._ZN15CookingViewBase22pressCenterKeyFunctionEv) referenced from cookingviewbase.o(.constdata__ZTV15CookingViewBase)
 <LI><a href="#[143]">CookingViewBase::pressCancelButtonAction()</a> from cookingviewbase.o(i._ZN15CookingViewBase23pressCancelButtonActionEv) referenced from cookingviewbase.o(.constdata__ZTV15CookingViewBase)
 <LI><a href="#[144]">CookingViewBase::pressSettingButtonAction()</a> from cookingviewbase.o(i._ZN15CookingViewBase24pressSettingButtonActionEv) referenced from cookingviewbase.o(.constdata__ZTV15CookingViewBase)
 <LI><a href="#[13a]">CookingViewBase::~CookingViewBase()</a> from cookingviewbase.o(i._ZN15CookingViewBaseD1Ev) referenced from cookingviewbase.o(.constdata__ZTV15CookingViewBase)
 <LI><a href="#[147]">InformationView::setupScreen()</a> from informationview.o(i._ZN15InformationView11setupScreenEv) referenced from informationview.o(.constdata__ZTV15InformationView)
 <LI><a href="#[148]">InformationView::tearDownScreen()</a> from informationview.o(i._ZN15InformationView14tearDownScreenEv) referenced from informationview.o(.constdata__ZTV15InformationView)
 <LI><a href="#[149]">InformationView::handleTickEvent()</a> from informationview.o(i._ZN15InformationView15handleTickEventEv) referenced from informationview.o(.constdata__ZTV15InformationView)
 <LI><a href="#[146]">InformationView::~InformationView()</a> from informationview.o(i._ZN15InformationViewD1Ev) referenced from informationview.o(.constdata__ZTV15InformationView)
 <LI><a href="#[14d]">CookingPresenter::deactivate()</a> from cookingpresenter.o(i._ZN16CookingPresenter10deactivateEv) referenced from cookingpresenter.o(.constdata__ZTV16CookingPresenter)
 <LI><a href="#[14c]">CookingPresenter::activate()</a> from cookingpresenter.o(i._ZN16CookingPresenter8activateEv) referenced from cookingpresenter.o(.constdata__ZTV16CookingPresenter)
 <LI><a href="#[14e]">CookingPresenter::~CookingPresenter()</a> from cookingpresenter.o(i._ZN16CookingPresenterD1Ev) referenced from cookingpresenter.o(.constdata__ZTV16CookingPresenter)
 <LI><a href="#[128]">FrontendHeapBase::gotoStartScreen(FrontendApplication&)</a> from touchgfxconfiguration.o(i._ZN16FrontendHeapBase15gotoStartScreenER19FrontendApplication) referenced from touchgfxconfiguration.o(.constdata__ZTV12FrontendHeap)
 <LI><a href="#[128]">FrontendHeapBase::gotoStartScreen(FrontendApplication&)</a> from touchgfxconfiguration.o(i._ZN16FrontendHeapBase15gotoStartScreenER19FrontendApplication) referenced from touchgfxconfiguration.o(.constdata__ZTV16FrontendHeapBase)
 <LI><a href="#[14f]">FrontendHeapBase::~FrontendHeapBase()</a> from touchgfxconfiguration.o(i._ZN16FrontendHeapBaseD1Ev) referenced from touchgfxconfiguration.o(.constdata__ZTV16FrontendHeapBase)
 <LI><a href="#[151]">SettingsViewBase::setupScreen()</a> from settingsviewbase.o(i._ZN16SettingsViewBase11setupScreenEv) referenced from settingsviewbase.o(.constdata__ZTV16SettingsViewBase)
 <LI><a href="#[12e]">SettingsViewBase::goToMainMenu()</a> from settingsviewbase.o(i._ZN16SettingsViewBase12goToMainMenuEv) referenced from settingsview.o(.constdata__ZTV12SettingsView)
 <LI><a href="#[12e]">SettingsViewBase::goToMainMenu()</a> from settingsviewbase.o(i._ZN16SettingsViewBase12goToMainMenuEv) referenced from settingsviewbase.o(.constdata__ZTV16SettingsViewBase)
 <LI><a href="#[157]">SettingsViewBase::hourIsClicked()</a> from settingsviewbase.o(i._ZN16SettingsViewBase13hourIsClickedEv) referenced from settingsviewbase.o(.constdata__ZTV16SettingsViewBase)
 <LI><a href="#[12d]">SettingsViewBase::handleKeyEvent(unsigned char)</a> from settingsviewbase.o(i._ZN16SettingsViewBase14handleKeyEventEh) referenced from settingsview.o(.constdata__ZTV12SettingsView)
 <LI><a href="#[12d]">SettingsViewBase::handleKeyEvent(unsigned char)</a> from settingsviewbase.o(i._ZN16SettingsViewBase14handleKeyEventEh) referenced from settingsviewbase.o(.constdata__ZTV16SettingsViewBase)
 <LI><a href="#[12f]">SettingsViewBase::goToCookingMenu()</a> from settingsviewbase.o(i._ZN16SettingsViewBase15goToCookingMenuEv) referenced from settingsview.o(.constdata__ZTV12SettingsView)
 <LI><a href="#[12f]">SettingsViewBase::goToCookingMenu()</a> from settingsviewbase.o(i._ZN16SettingsViewBase15goToCookingMenuEv) referenced from settingsviewbase.o(.constdata__ZTV16SettingsViewBase)
 <LI><a href="#[158]">SettingsViewBase::minuteIsClicked()</a> from settingsviewbase.o(i._ZN16SettingsViewBase15minuteIsClickedEv) referenced from settingsviewbase.o(.constdata__ZTV16SettingsViewBase)
 <LI><a href="#[156]">SettingsViewBase::clockButtonClicked()</a> from settingsviewbase.o(i._ZN16SettingsViewBase18clockButtonClickedEv) referenced from settingsviewbase.o(.constdata__ZTV16SettingsViewBase)
 <LI><a href="#[154]">SettingsViewBase::pressUpKeyFunction()</a> from settingsviewbase.o(i._ZN16SettingsViewBase18pressUpKeyFunctionEv) referenced from settingsviewbase.o(.constdata__ZTV16SettingsViewBase)
 <LI><a href="#[153]">SettingsViewBase::pressDownKeyFunction()</a> from settingsviewbase.o(i._ZN16SettingsViewBase20pressDownKeyFunctionEv) referenced from settingsviewbase.o(.constdata__ZTV16SettingsViewBase)
 <LI><a href="#[132]">SettingsViewBase::pressLeftKeyFunction()</a> from settingsview.o(i._ZN16SettingsViewBase20pressLeftKeyFunctionEv) referenced from settingsview.o(.constdata__ZTV12SettingsView)
 <LI><a href="#[132]">SettingsViewBase::pressLeftKeyFunction()</a> from settingsview.o(i._ZN16SettingsViewBase20pressLeftKeyFunctionEv) referenced from settingsviewbase.o(.constdata__ZTV16SettingsViewBase)
 <LI><a href="#[e9]">SettingsViewBase::buttonCallbackHandler(const touchgfx::AbstractButton&)</a> from settingsviewbase.o(i._ZN16SettingsViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE) referenced from settingsviewbase.o(.constdata)
 <LI><a href="#[155]">SettingsViewBase::languageButtonClicked()</a> from settingsviewbase.o(i._ZN16SettingsViewBase21languageButtonClickedEv) referenced from settingsviewbase.o(.constdata__ZTV16SettingsViewBase)
 <LI><a href="#[133]">SettingsViewBase::pressRightKeyFunction()</a> from settingsview.o(i._ZN16SettingsViewBase21pressRightKeyFunctionEv) referenced from settingsview.o(.constdata__ZTV12SettingsView)
 <LI><a href="#[133]">SettingsViewBase::pressRightKeyFunction()</a> from settingsview.o(i._ZN16SettingsViewBase21pressRightKeyFunctionEv) referenced from settingsviewbase.o(.constdata__ZTV16SettingsViewBase)
 <LI><a href="#[159]">SettingsViewBase::returnButtonIsClicked()</a> from settingsviewbase.o(i._ZN16SettingsViewBase21returnButtonIsClickedEv) referenced from settingsviewbase.o(.constdata__ZTV16SettingsViewBase)
 <LI><a href="#[152]">SettingsViewBase::pressCenterKeyFunction()</a> from settingsviewbase.o(i._ZN16SettingsViewBase22pressCenterKeyFunctionEv) referenced from settingsviewbase.o(.constdata__ZTV16SettingsViewBase)
 <LI><a href="#[e8]">SettingsViewBase::flexButtonCallbackHandler(const touchgfx::AbstractButtonContainer&)</a> from settingsviewbase.o(i._ZN16SettingsViewBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE) referenced from settingsviewbase.o(.constdata)
 <LI><a href="#[150]">SettingsViewBase::~SettingsViewBase()</a> from settingsviewbase.o(i._ZN16SettingsViewBaseD1Ev) referenced from settingsviewbase.o(.constdata__ZTV16SettingsViewBase)
 <LI><a href="#[15b]">SplashScreenView::setupScreen()</a> from splashscreenview.o(i._ZN16SplashScreenView11setupScreenEv) referenced from splashscreenview.o(.constdata__ZTV16SplashScreenView)
 <LI><a href="#[15d]">SplashScreenView::tearDownScreen()</a> from splashscreenview.o(i._ZN16SplashScreenView14tearDownScreenEv) referenced from splashscreenview.o(.constdata__ZTV16SplashScreenView)
 <LI><a href="#[15a]">SplashScreenView::~SplashScreenView()</a> from splashscreenview.o(i._ZN16SplashScreenViewD1Ev) referenced from splashscreenview.o(.constdata__ZTV16SplashScreenView)
 <LI><a href="#[160]">SelectingMenuView::setupScreen()</a> from selectingmenuview.o(i._ZN17SelectingMenuView11setupScreenEv) referenced from selectingmenuview.o(.constdata__ZTV17SelectingMenuView)
 <LI><a href="#[171]">SelectingMenuView::saveElementID(short)</a> from selectingmenuview.o(i._ZN17SelectingMenuView13saveElementIDEs) referenced from selectingmenuview.o(.constdata__ZTV17SelectingMenuView)
 <LI><a href="#[161]">SelectingMenuView::tearDownScreen()</a> from selectingmenuview.o(i._ZN17SelectingMenuView14tearDownScreenEv) referenced from selectingmenuview.o(.constdata__ZTV17SelectingMenuView)
 <LI><a href="#[162]">SelectingMenuView::handleTickEvent()</a> from selectingmenuview.o(i._ZN17SelectingMenuView15handleTickEventEv) referenced from selectingmenuview.o(.constdata__ZTV17SelectingMenuView)
 <LI><a href="#[168]">SelectingMenuView::hardwareUpKeyAction()</a> from selectingmenuview.o(i._ZN17SelectingMenuView19hardwareUpKeyActionEv) referenced from selectingmenuview.o(.constdata__ZTV17SelectingMenuView)
 <LI><a href="#[167]">SelectingMenuView::hardwareDownKeyAction()</a> from selectingmenuview.o(i._ZN17SelectingMenuView21hardwareDownKeyActionEv) referenced from selectingmenuview.o(.constdata__ZTV17SelectingMenuView)
 <LI><a href="#[16a]">SelectingMenuView::hardwareLeftKeyAction()</a> from selectingmenuview.o(i._ZN17SelectingMenuView21hardwareLeftKeyActionEv) referenced from selectingmenuview.o(.constdata__ZTV17SelectingMenuView)
 <LI><a href="#[170]">SelectingMenuView::hideRemainingElements()</a> from selectingmenuview.o(i._ZN17SelectingMenuView21hideRemainingElementsEv) referenced from selectingmenuview.o(.constdata__ZTV17SelectingMenuView)
 <LI><a href="#[16e]">SelectingMenuView::pressInfoButtonAction()</a> from selectingmenuview.o(i._ZN17SelectingMenuView21pressInfoButtonActionEv) referenced from selectingmenuview.o(.constdata__ZTV17SelectingMenuView)
 <LI><a href="#[16c]">SelectingMenuView::pressLeftButtonAction()</a> from selectingmenuview.o(i._ZN17SelectingMenuView21pressLeftButtonActionEv) referenced from selectingmenuview.o(.constdata__ZTV17SelectingMenuView)
 <LI><a href="#[169]">SelectingMenuView::hardwareRightKeyAction()</a> from selectingmenuview.o(i._ZN17SelectingMenuView22hardwareRightKeyActionEv) referenced from selectingmenuview.o(.constdata__ZTV17SelectingMenuView)
 <LI><a href="#[16b]">SelectingMenuView::pressRightButtonAction()</a> from selectingmenuview.o(i._ZN17SelectingMenuView22pressRightButtonActionEv) referenced from selectingmenuview.o(.constdata__ZTV17SelectingMenuView)
 <LI><a href="#[16f]">SelectingMenuView::hardwareCenterKeyAction()</a> from selectingmenuview.o(i._ZN17SelectingMenuView23hardwareCenterKeyActionEv) referenced from selectingmenuview.o(.constdata__ZTV17SelectingMenuView)
 <LI><a href="#[16d]">SelectingMenuView::pressSettingButtonAction()</a> from selectingmenuview.o(i._ZN17SelectingMenuView24pressSettingButtonActionEv) referenced from selectingmenuview.o(.constdata__ZTV17SelectingMenuView)
 <LI><a href="#[15f]">SelectingMenuView::~SelectingMenuView()</a> from selectingmenuview.o(i._ZN17SelectingMenuViewD1Ev) referenced from selectingmenuview.o(.constdata__ZTV17SelectingMenuView)
 <LI><a href="#[173]">SettingsPresenter::deactivate()</a> from settingspresenter.o(i._ZN17SettingsPresenter10deactivateEv) referenced from settingspresenter.o(.constdata__ZTV17SettingsPresenter)
 <LI><a href="#[172]">SettingsPresenter::activate()</a> from settingspresenter.o(i._ZN17SettingsPresenter8activateEv) referenced from settingspresenter.o(.constdata__ZTV17SettingsPresenter)
 <LI><a href="#[174]">SettingsPresenter::~SettingsPresenter()</a> from settingspresenter.o(i._ZN17SettingsPresenterD1Ev) referenced from settingspresenter.o(.constdata__ZTV17SettingsPresenter)
 <LI><a href="#[179]">FrontendApplication::handleTickEvent()</a> from frontendapplication.o(i._ZN19FrontendApplication15handleTickEventEv) referenced from frontendapplication.o(.constdata__ZTV19FrontendApplication)
 <LI><a href="#[181]">InformationDemoView::setupScreen()</a> from informationdemoview.o(i._ZN19InformationDemoView11setupScreenEv) referenced from informationdemoview.o(.constdata__ZTV19InformationDemoView)
 <LI><a href="#[182]">InformationDemoView::tearDownScreen()</a> from informationdemoview.o(i._ZN19InformationDemoView14tearDownScreenEv) referenced from informationdemoview.o(.constdata__ZTV19InformationDemoView)
 <LI><a href="#[183]">InformationDemoView::handleTickEvent()</a> from informationdemoview.o(i._ZN19InformationDemoView15handleTickEventEv) referenced from informationdemoview.o(.constdata__ZTV19InformationDemoView)
 <LI><a href="#[187]">InformationDemoView::pressCenterKeyFunction()</a> from informationdemoview.o(i._ZN19InformationDemoView22pressCenterKeyFunctionEv) referenced from informationdemoview.o(.constdata__ZTV19InformationDemoView)
 <LI><a href="#[180]">InformationDemoView::~InformationDemoView()</a> from informationdemoview.o(i._ZN19InformationDemoViewD1Ev) referenced from informationdemoview.o(.constdata__ZTV19InformationDemoView)
 <LI><a href="#[189]">InformationViewBase::setupScreen()</a> from informationviewbase.o(i._ZN19InformationViewBase11setupScreenEv) referenced from informationviewbase.o(.constdata__ZTV19InformationViewBase)
 <LI><a href="#[14a]">InformationViewBase::handleKeyEvent(unsigned char)</a> from informationviewbase.o(i._ZN19InformationViewBase14handleKeyEventEh) referenced from informationview.o(.constdata__ZTV15InformationView)
 <LI><a href="#[14a]">InformationViewBase::handleKeyEvent(unsigned char)</a> from informationviewbase.o(i._ZN19InformationViewBase14handleKeyEventEh) referenced from informationviewbase.o(.constdata__ZTV19InformationViewBase)
 <LI><a href="#[14b]">InformationViewBase::goToScreenInfo2()</a> from informationviewbase.o(i._ZN19InformationViewBase15goToScreenInfo2Ev) referenced from informationview.o(.constdata__ZTV15InformationView)
 <LI><a href="#[14b]">InformationViewBase::goToScreenInfo2()</a> from informationviewbase.o(i._ZN19InformationViewBase15goToScreenInfo2Ev) referenced from informationviewbase.o(.constdata__ZTV19InformationViewBase)
 <LI><a href="#[e5]">InformationViewBase::flexButtonCallbackHandler(const touchgfx::AbstractButtonContainer&)</a> from informationviewbase.o(i._ZN19InformationViewBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE) referenced from informationviewbase.o(.constdata)
 <LI><a href="#[188]">InformationViewBase::~InformationViewBase()</a> from informationviewbase.o(i._ZN19InformationViewBaseD1Ev) referenced from informationviewbase.o(.constdata__ZTV19InformationViewBase)
 <LI><a href="#[18b]">InformationPresenter::deactivate()</a> from informationpresenter.o(i._ZN20InformationPresenter10deactivateEv) referenced from informationpresenter.o(.constdata__ZTV20InformationPresenter)
 <LI><a href="#[18a]">InformationPresenter::activate()</a> from informationpresenter.o(i._ZN20InformationPresenter8activateEv) referenced from informationpresenter.o(.constdata__ZTV20InformationPresenter)
 <LI><a href="#[18c]">InformationPresenter::~InformationPresenter()</a> from informationpresenter.o(i._ZN20InformationPresenterD1Ev) referenced from informationpresenter.o(.constdata__ZTV20InformationPresenter)
 <LI><a href="#[18e]">STM32TouchController::sampleTouch(int&, int&)</a> from stm32touchcontroller.o(i._ZN20STM32TouchController11sampleTouchERiS0_) referenced from stm32touchcontroller.o(.constdata__ZTV20STM32TouchController)
 <LI><a href="#[18d]">STM32TouchController::init()</a> from stm32touchcontroller.o(i._ZN20STM32TouchController4initEv) referenced from stm32touchcontroller.o(.constdata__ZTV20STM32TouchController)
 <LI><a href="#[d3]">STM32TouchController::~STM32TouchController()</a> from stm32touchcontroller.o(i._ZN20STM32TouchControllerD1Ev) referenced from stm32touchcontroller.o(.constdata__ZTV20STM32TouchController)
 <LI><a href="#[d3]">STM32TouchController::~STM32TouchController()</a> from stm32touchcontroller.o(i._ZN20STM32TouchControllerD1Ev) referenced from touchgfxconfiguration.o(i.__sti___25_TouchGFXConfiguration_cpp_f5abfd34)
 <LI><a href="#[190]">SplashScreenViewBase::setupScreen()</a> from splashscreenviewbase.o(i._ZN20SplashScreenViewBase11setupScreenEv) referenced from splashscreenviewbase.o(.constdata__ZTV20SplashScreenViewBase)
 <LI><a href="#[15c]">SplashScreenViewBase::afterTransition()</a> from splashscreenviewbase.o(i._ZN20SplashScreenViewBase15afterTransitionEv) referenced from splashscreenview.o(.constdata__ZTV16SplashScreenView)
 <LI><a href="#[15c]">SplashScreenViewBase::afterTransition()</a> from splashscreenviewbase.o(i._ZN20SplashScreenViewBase15afterTransitionEv) referenced from splashscreenviewbase.o(.constdata__ZTV20SplashScreenViewBase)
 <LI><a href="#[ea]">SplashScreenViewBase::fadeOutDemoNameEndedCallbackHandler(const touchgfx::FadeAnimator&lang;touchgfx::Image&rang;&)</a> from splashscreenviewbase.o(i._ZN20SplashScreenViewBase35fadeOutDemoNameEndedCallbackHandlerERKN8touchgfx12FadeAnimatorINS0_5ImageEEE) referenced from splashscreenviewbase.o(.constdata)
 <LI><a href="#[18f]">SplashScreenViewBase::~SplashScreenViewBase()</a> from splashscreenviewbase.o(i._ZN20SplashScreenViewBaseD1Ev) referenced from splashscreenviewbase.o(.constdata__ZTV20SplashScreenViewBase)
 <LI><a href="#[127]">TouchGFXGeneratedHAL::FlushCache()</a> from touchgfxgeneratedhal.o(i._ZN20TouchGFXGeneratedHAL10FlushCacheEv) referenced from touchgfxhal.o(.constdata__ZTV11TouchGFXHAL)
 <LI><a href="#[127]">TouchGFXGeneratedHAL::FlushCache()</a> from touchgfxgeneratedhal.o(i._ZN20TouchGFXGeneratedHAL10FlushCacheEv) referenced from touchgfxgeneratedhal.o(.constdata__ZTV20TouchGFXGeneratedHAL)
 <LI><a href="#[199]">TouchGFXGeneratedHAL::beginFrame()</a> from touchgfxgeneratedhal.o(i._ZN20TouchGFXGeneratedHAL10beginFrameEv) referenced from touchgfxgeneratedhal.o(.constdata__ZTV20TouchGFXGeneratedHAL)
 <LI><a href="#[191]">TouchGFXGeneratedHAL::initialize()</a> from touchgfxgeneratedhal.o(i._ZN20TouchGFXGeneratedHAL10initializeEv) referenced from touchgfxgeneratedhal.o(.constdata__ZTV20TouchGFXGeneratedHAL)
 <LI><a href="#[126]">TouchGFXGeneratedHAL::InvalidateCache()</a> from touchgfxgeneratedhal.o(i._ZN20TouchGFXGeneratedHAL15InvalidateCacheEv) referenced from touchgfxhal.o(.constdata__ZTV11TouchGFXHAL)
 <LI><a href="#[126]">TouchGFXGeneratedHAL::InvalidateCache()</a> from touchgfxgeneratedhal.o(i._ZN20TouchGFXGeneratedHAL15InvalidateCacheEv) referenced from touchgfxgeneratedhal.o(.constdata__ZTV20TouchGFXGeneratedHAL)
 <LI><a href="#[196]">TouchGFXGeneratedHAL::enableInterrupts()</a> from touchgfxgeneratedhal.o(i._ZN20TouchGFXGeneratedHAL16enableInterruptsEv) referenced from touchgfxgeneratedhal.o(.constdata__ZTV20TouchGFXGeneratedHAL)
 <LI><a href="#[192]">TouchGFXGeneratedHAL::flushFrameBuffer(const touchgfx::Rect&)</a> from touchgfxgeneratedhal.o(i._ZN20TouchGFXGeneratedHAL16flushFrameBufferERKN8touchgfx4RectE) referenced from touchgfxgeneratedhal.o(.constdata__ZTV20TouchGFXGeneratedHAL)
 <LI><a href="#[197]">TouchGFXGeneratedHAL::disableInterrupts()</a> from touchgfxgeneratedhal.o(i._ZN20TouchGFXGeneratedHAL17disableInterruptsEv) referenced from touchgfxgeneratedhal.o(.constdata__ZTV20TouchGFXGeneratedHAL)
 <LI><a href="#[11d]">TouchGFXGeneratedHAL::getTFTCurrentLine()</a> from touchgfxgeneratedhal.o(i._ZN20TouchGFXGeneratedHAL17getTFTCurrentLineEv) referenced from touchgfxhal.o(.constdata__ZTV11TouchGFXHAL)
 <LI><a href="#[11d]">TouchGFXGeneratedHAL::getTFTCurrentLine()</a> from touchgfxgeneratedhal.o(i._ZN20TouchGFXGeneratedHAL17getTFTCurrentLineEv) referenced from touchgfxgeneratedhal.o(.constdata__ZTV20TouchGFXGeneratedHAL)
 <LI><a href="#[19b]">TouchGFXGeneratedHAL::setTFTFrameBuffer(unsigned short*)</a> from touchgfxgeneratedhal.o(i._ZN20TouchGFXGeneratedHAL17setTFTFrameBufferEPt) referenced from touchgfxgeneratedhal.o(.constdata__ZTV20TouchGFXGeneratedHAL)
 <LI><a href="#[195]">TouchGFXGeneratedHAL::configureInterrupts()</a> from touchgfxgeneratedhal.o(i._ZN20TouchGFXGeneratedHAL19configureInterruptsEv) referenced from touchgfxgeneratedhal.o(.constdata__ZTV20TouchGFXGeneratedHAL)
 <LI><a href="#[198]">TouchGFXGeneratedHAL::enableLCDControllerInterrupt()</a> from touchgfxgeneratedhal.o(i._ZN20TouchGFXGeneratedHAL28enableLCDControllerInterruptEv) referenced from touchgfxgeneratedhal.o(.constdata__ZTV20TouchGFXGeneratedHAL)
 <LI><a href="#[19a]">TouchGFXGeneratedHAL::endFrame()</a> from touchgfxgeneratedhal.o(i._ZN20TouchGFXGeneratedHAL8endFrameEv) referenced from touchgfxgeneratedhal.o(.constdata__ZTV20TouchGFXGeneratedHAL)
 <LI><a href="#[194]">TouchGFXGeneratedHAL::blockCopy(void*, const void*, unsigned)</a> from touchgfxgeneratedhal.o(i._ZN20TouchGFXGeneratedHAL9blockCopyEPvPKvj) referenced from touchgfxgeneratedhal.o(.constdata__ZTV20TouchGFXGeneratedHAL)
 <LI><a href="#[19d]">SelectingMenuViewBase::setupScreen()</a> from selectingmenuviewbase.o(i._ZN21SelectingMenuViewBase11setupScreenEv) referenced from selectingmenuviewbase.o(.constdata__ZTV21SelectingMenuViewBase)
 <LI><a href="#[163]">SelectingMenuViewBase::handleKeyEvent(unsigned char)</a> from selectingmenuviewbase.o(i._ZN21SelectingMenuViewBase14handleKeyEventEh) referenced from selectingmenuview.o(.constdata__ZTV17SelectingMenuView)
 <LI><a href="#[163]">SelectingMenuViewBase::handleKeyEvent(unsigned char)</a> from selectingmenuviewbase.o(i._ZN21SelectingMenuViewBase14handleKeyEventEh) referenced from selectingmenuviewbase.o(.constdata__ZTV21SelectingMenuViewBase)
 <LI><a href="#[164]">SelectingMenuViewBase::goToCookingScreen()</a> from selectingmenuviewbase.o(i._ZN21SelectingMenuViewBase17goToCookingScreenEv) referenced from selectingmenuview.o(.constdata__ZTV17SelectingMenuView)
 <LI><a href="#[164]">SelectingMenuViewBase::goToCookingScreen()</a> from selectingmenuviewbase.o(i._ZN21SelectingMenuViewBase17goToCookingScreenEv) referenced from selectingmenuviewbase.o(.constdata__ZTV21SelectingMenuViewBase)
 <LI><a href="#[166]">SelectingMenuViewBase::goToSettingScreen()</a> from selectingmenuviewbase.o(i._ZN21SelectingMenuViewBase17goToSettingScreenEv) referenced from selectingmenuview.o(.constdata__ZTV17SelectingMenuView)
 <LI><a href="#[166]">SelectingMenuViewBase::goToSettingScreen()</a> from selectingmenuviewbase.o(i._ZN21SelectingMenuViewBase17goToSettingScreenEv) referenced from selectingmenuviewbase.o(.constdata__ZTV21SelectingMenuViewBase)
 <LI><a href="#[19f]">SelectingMenuViewBase::hardwareUpKeyAction()</a> from selectingmenuviewbase.o(i._ZN21SelectingMenuViewBase19hardwareUpKeyActionEv) referenced from selectingmenuviewbase.o(.constdata__ZTV21SelectingMenuViewBase)
 <LI><a href="#[e7]">SelectingMenuViewBase::buttonCallbackHandler(const touchgfx::AbstractButton&)</a> from selectingmenuviewbase.o(i._ZN21SelectingMenuViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE) referenced from selectingmenuviewbase.o(.constdata)
 <LI><a href="#[165]">SelectingMenuViewBase::goToInformationScreen()</a> from selectingmenuviewbase.o(i._ZN21SelectingMenuViewBase21goToInformationScreenEv) referenced from selectingmenuview.o(.constdata__ZTV17SelectingMenuView)
 <LI><a href="#[165]">SelectingMenuViewBase::goToInformationScreen()</a> from selectingmenuviewbase.o(i._ZN21SelectingMenuViewBase21goToInformationScreenEv) referenced from selectingmenuviewbase.o(.constdata__ZTV21SelectingMenuViewBase)
 <LI><a href="#[19e]">SelectingMenuViewBase::hardwareDownKeyAction()</a> from selectingmenuviewbase.o(i._ZN21SelectingMenuViewBase21hardwareDownKeyActionEv) referenced from selectingmenuviewbase.o(.constdata__ZTV21SelectingMenuViewBase)
 <LI><a href="#[1a1]">SelectingMenuViewBase::hardwareLeftKeyAction()</a> from selectingmenuviewbase.o(i._ZN21SelectingMenuViewBase21hardwareLeftKeyActionEv) referenced from selectingmenuviewbase.o(.constdata__ZTV21SelectingMenuViewBase)
 <LI><a href="#[1a7]">SelectingMenuViewBase::hideRemainingElements()</a> from selectingmenuviewbase.o(i._ZN21SelectingMenuViewBase21hideRemainingElementsEv) referenced from selectingmenuviewbase.o(.constdata__ZTV21SelectingMenuViewBase)
 <LI><a href="#[1a5]">SelectingMenuViewBase::pressInfoButtonAction()</a> from selectingmenuviewbase.o(i._ZN21SelectingMenuViewBase21pressInfoButtonActionEv) referenced from selectingmenuviewbase.o(.constdata__ZTV21SelectingMenuViewBase)
 <LI><a href="#[1a3]">SelectingMenuViewBase::pressLeftButtonAction()</a> from selectingmenuviewbase.o(i._ZN21SelectingMenuViewBase21pressLeftButtonActionEv) referenced from selectingmenuviewbase.o(.constdata__ZTV21SelectingMenuViewBase)
 <LI><a href="#[1a0]">SelectingMenuViewBase::hardwareRightKeyAction()</a> from selectingmenuviewbase.o(i._ZN21SelectingMenuViewBase22hardwareRightKeyActionEv) referenced from selectingmenuviewbase.o(.constdata__ZTV21SelectingMenuViewBase)
 <LI><a href="#[1a2]">SelectingMenuViewBase::pressRightButtonAction()</a> from selectingmenuviewbase.o(i._ZN21SelectingMenuViewBase22pressRightButtonActionEv) referenced from selectingmenuviewbase.o(.constdata__ZTV21SelectingMenuViewBase)
 <LI><a href="#[1a6]">SelectingMenuViewBase::hardwareCenterKeyAction()</a> from selectingmenuviewbase.o(i._ZN21SelectingMenuViewBase23hardwareCenterKeyActionEv) referenced from selectingmenuviewbase.o(.constdata__ZTV21SelectingMenuViewBase)
 <LI><a href="#[1a4]">SelectingMenuViewBase::pressSettingButtonAction()</a> from selectingmenuviewbase.o(i._ZN21SelectingMenuViewBase24pressSettingButtonActionEv) referenced from selectingmenuviewbase.o(.constdata__ZTV21SelectingMenuViewBase)
 <LI><a href="#[e6]">SelectingMenuViewBase::flexButtonCallbackHandler(const touchgfx::AbstractButtonContainer&)</a> from selectingmenuviewbase.o(i._ZN21SelectingMenuViewBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE) referenced from selectingmenuviewbase.o(.constdata)
 <LI><a href="#[19c]">SelectingMenuViewBase::~SelectingMenuViewBase()</a> from selectingmenuviewbase.o(i._ZN21SelectingMenuViewBaseD1Ev) referenced from selectingmenuviewbase.o(.constdata__ZTV21SelectingMenuViewBase)
 <LI><a href="#[1a9]">SplashScreenPresenter::deactivate()</a> from splashscreenpresenter.o(i._ZN21SplashScreenPresenter10deactivateEv) referenced from splashscreenpresenter.o(.constdata__ZTV21SplashScreenPresenter)
 <LI><a href="#[1a8]">SplashScreenPresenter::activate()</a> from splashscreenpresenter.o(i._ZN21SplashScreenPresenter8activateEv) referenced from splashscreenpresenter.o(.constdata__ZTV21SplashScreenPresenter)
 <LI><a href="#[1aa]">SplashScreenPresenter::~SplashScreenPresenter()</a> from splashscreenpresenter.o(i._ZN21SplashScreenPresenterD1Ev) referenced from splashscreenpresenter.o(.constdata__ZTV21SplashScreenPresenter)
 <LI><a href="#[1ac]">SelectingMenuPresenter::deactivate()</a> from selectingmenupresenter.o(i._ZN22SelectingMenuPresenter10deactivateEv) referenced from selectingmenupresenter.o(.constdata__ZTV22SelectingMenuPresenter)
 <LI><a href="#[1ab]">SelectingMenuPresenter::activate()</a> from selectingmenupresenter.o(i._ZN22SelectingMenuPresenter8activateEv) referenced from selectingmenupresenter.o(.constdata__ZTV22SelectingMenuPresenter)
 <LI><a href="#[1ad]">SelectingMenuPresenter::~SelectingMenuPresenter()</a> from selectingmenupresenter.o(i._ZN22SelectingMenuPresenterD1Ev) referenced from selectingmenupresenter.o(.constdata__ZTV22SelectingMenuPresenter)
 <LI><a href="#[d6]">ApplicationFontProvider::~ApplicationFontProvider()</a> from touchgfxconfiguration.o(i._ZN23ApplicationFontProviderD1Ev) referenced from applicationfontprovider.o(.constdata__ZTV23ApplicationFontProvider)
 <LI><a href="#[d6]">ApplicationFontProvider::~ApplicationFontProvider()</a> from touchgfxconfiguration.o(i._ZN23ApplicationFontProviderD1Ev) referenced from touchgfxconfiguration.o(i.__sti___25_TouchGFXConfiguration_cpp_f5abfd34)
 <LI><a href="#[e0]">FrontendApplicationBase::gotoCookingScreenNoTransitionImpl()</a> from frontendapplicationbase.o(i._ZN23FrontendApplicationBase33gotoCookingScreenNoTransitionImplEv) referenced from frontendapplicationbase.o(.constdata)
 <LI><a href="#[e2]">FrontendApplicationBase::gotoSettingsScreenNoTransitionImpl()</a> from frontendapplicationbase.o(i._ZN23FrontendApplicationBase34gotoSettingsScreenNoTransitionImplEv) referenced from frontendapplicationbase.o(.constdata)
 <LI><a href="#[e3]">FrontendApplicationBase::gotoInformationScreenNoTransitionImpl()</a> from frontendapplicationbase.o(i._ZN23FrontendApplicationBase37gotoInformationScreenNoTransitionImplEv) referenced from frontendapplicationbase.o(.constdata)
 <LI><a href="#[de]">FrontendApplicationBase::gotoSplashScreenScreenNoTransitionImpl()</a> from frontendapplicationbase.o(i._ZN23FrontendApplicationBase38gotoSplashScreenScreenNoTransitionImplEv) referenced from frontendapplicationbase.o(.constdata)
 <LI><a href="#[df]">FrontendApplicationBase::gotoSelectingMenuScreenNoTransitionImpl()</a> from frontendapplicationbase.o(i._ZN23FrontendApplicationBase39gotoSelectingMenuScreenNoTransitionImplEv) referenced from frontendapplicationbase.o(.constdata)
 <LI><a href="#[e1]">FrontendApplicationBase::gotoInformationDemoScreenNoTransitionImpl()</a> from frontendapplicationbase.o(i._ZN23FrontendApplicationBase41gotoInformationDemoScreenNoTransitionImplEv) referenced from frontendapplicationbase.o(.constdata)
 <LI><a href="#[1af]">FrontendApplicationBase::~FrontendApplicationBase()</a> from touchgfxconfiguration.o(i._ZN23FrontendApplicationBaseD1Ev) referenced from touchgfxconfiguration.o(.constdata__ZTV23FrontendApplicationBase)
 <LI><a href="#[1b1]">InformationDemoViewBase::setupScreen()</a> from informationdemoviewbase.o(i._ZN23InformationDemoViewBase11setupScreenEv) referenced from informationdemoviewbase.o(.constdata__ZTV23InformationDemoViewBase)
 <LI><a href="#[184]">InformationDemoViewBase::handleKeyEvent(unsigned char)</a> from informationdemoviewbase.o(i._ZN23InformationDemoViewBase14handleKeyEventEh) referenced from informationdemoview.o(.constdata__ZTV19InformationDemoView)
 <LI><a href="#[184]">InformationDemoViewBase::handleKeyEvent(unsigned char)</a> from informationdemoviewbase.o(i._ZN23InformationDemoViewBase14handleKeyEventEh) referenced from informationdemoviewbase.o(.constdata__ZTV23InformationDemoViewBase)
 <LI><a href="#[186]">InformationDemoViewBase::goToCookingMenu()</a> from informationdemoviewbase.o(i._ZN23InformationDemoViewBase15goToCookingMenuEv) referenced from informationdemoview.o(.constdata__ZTV19InformationDemoView)
 <LI><a href="#[186]">InformationDemoViewBase::goToCookingMenu()</a> from informationdemoviewbase.o(i._ZN23InformationDemoViewBase15goToCookingMenuEv) referenced from informationdemoviewbase.o(.constdata__ZTV23InformationDemoViewBase)
 <LI><a href="#[185]">InformationDemoViewBase::goToSelectingMenu()</a> from informationdemoviewbase.o(i._ZN23InformationDemoViewBase17goToSelectingMenuEv) referenced from informationdemoview.o(.constdata__ZTV19InformationDemoView)
 <LI><a href="#[185]">InformationDemoViewBase::goToSelectingMenu()</a> from informationdemoviewbase.o(i._ZN23InformationDemoViewBase17goToSelectingMenuEv) referenced from informationdemoviewbase.o(.constdata__ZTV23InformationDemoViewBase)
 <LI><a href="#[1b2]">InformationDemoViewBase::pressCenterKeyFunction()</a> from informationdemoviewbase.o(i._ZN23InformationDemoViewBase22pressCenterKeyFunctionEv) referenced from informationdemoviewbase.o(.constdata__ZTV23InformationDemoViewBase)
 <LI><a href="#[e4]">InformationDemoViewBase::flexButtonCallbackHandler(const touchgfx::AbstractButtonContainer&)</a> from informationdemoviewbase.o(i._ZN23InformationDemoViewBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE) referenced from informationdemoviewbase.o(.constdata)
 <LI><a href="#[1b0]">InformationDemoViewBase::~InformationDemoViewBase()</a> from informationdemoviewbase.o(i._ZN23InformationDemoViewBaseD1Ev) referenced from informationdemoviewbase.o(.constdata__ZTV23InformationDemoViewBase)
 <LI><a href="#[1b4]">InformationDemoPresenter::deactivate()</a> from informationdemopresenter.o(i._ZN24InformationDemoPresenter10deactivateEv) referenced from informationdemopresenter.o(.constdata__ZTV24InformationDemoPresenter)
 <LI><a href="#[1b3]">InformationDemoPresenter::activate()</a> from informationdemopresenter.o(i._ZN24InformationDemoPresenter8activateEv) referenced from informationdemopresenter.o(.constdata__ZTV24InformationDemoPresenter)
 <LI><a href="#[1b5]">InformationDemoPresenter::~InformationDemoPresenter()</a> from informationdemopresenter.o(i._ZN24InformationDemoPresenterD1Ev) referenced from informationdemopresenter.o(.constdata__ZTV24InformationDemoPresenter)
 <LI><a href="#[1b6]">STM32DMA::getBlitCaps()</a> from stm32dma.o(i._ZN8STM32DMA11getBlitCapsEv) referenced from stm32dma.o(.constdata__ZTV8STM32DMA)
 <LI><a href="#[1be]">STM32DMA::setupDataCopy(const touchgfx::BlitOp&)</a> from stm32dma.o(i._ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE) referenced from stm32dma.o(.constdata__ZTV8STM32DMA)
 <LI><a href="#[1bf]">STM32DMA::setupDataFill(const touchgfx::BlitOp&)</a> from stm32dma.o(i._ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE) referenced from stm32dma.o(.constdata__ZTV8STM32DMA)
 <LI><a href="#[1b8]">STM32DMA::flush()</a> from stm32dma.o(i._ZN8STM32DMA5flushEv) referenced from stm32dma.o(.constdata__ZTV8STM32DMA)
 <LI><a href="#[d4]">STM32DMA::~STM32DMA()</a> from touchgfxconfiguration.o(i._ZN8STM32DMAD1Ev) referenced from stm32dma.o(.constdata__ZTV8STM32DMA)
 <LI><a href="#[d4]">STM32DMA::~STM32DMA()</a> from touchgfxconfiguration.o(i._ZN8STM32DMAD1Ev) referenced from touchgfxconfiguration.o(i.__sti___25_TouchGFXConfiguration_cpp_f5abfd34)
 <LI><a href="#[b3]">touchgfx::OSWrappers::taskDelay(unsigned short)</a> from oswrappers.o(i._ZN8touchgfx10OSWrappers9taskDelayEt) referenced from touchgfxgeneratedhal.o(i._ZN20TouchGFXGeneratedHAL10initializeEv)
 <LI><a href="#[1c7]">touchgfx::Transition::invalidate()</a> from frontendapplicationbase.o(i._ZN8touchgfx10Transition10invalidateEv) referenced from frontendapplicationbase.o(.constdata__ZTVN8touchgfx10TransitionE)
 <LI><a href="#[1c7]">touchgfx::Transition::invalidate()</a> from frontendapplicationbase.o(i._ZN8touchgfx10Transition10invalidateEv) referenced from frontendapplicationbase.o(.constdata__ZTVN8touchgfx12NoTransitionE)
 <LI><a href="#[1c4]">touchgfx::Transition::handleTickEvent()</a> from frontendapplicationbase.o(i._ZN8touchgfx10Transition15handleTickEventEv) referenced from frontendapplicationbase.o(.constdata__ZTVN8touchgfx10TransitionE)
 <LI><a href="#[1c8]">touchgfx::Transition::setScreenContainer(touchgfx::Container&)</a> from frontendapplicationbase.o(i._ZN8touchgfx10Transition18setScreenContainerERNS_9ContainerE) referenced from frontendapplicationbase.o(.constdata__ZTVN8touchgfx10TransitionE)
 <LI><a href="#[1c8]">touchgfx::Transition::setScreenContainer(touchgfx::Container&)</a> from frontendapplicationbase.o(i._ZN8touchgfx10Transition18setScreenContainerERNS_9ContainerE) referenced from frontendapplicationbase.o(.constdata__ZTVN8touchgfx12NoTransitionE)
 <LI><a href="#[1c6]">touchgfx::Transition::init()</a> from frontendapplicationbase.o(i._ZN8touchgfx10Transition4initEv) referenced from frontendapplicationbase.o(.constdata__ZTVN8touchgfx10TransitionE)
 <LI><a href="#[1c6]">touchgfx::Transition::init()</a> from frontendapplicationbase.o(i._ZN8touchgfx10Transition4initEv) referenced from frontendapplicationbase.o(.constdata__ZTVN8touchgfx12NoTransitionE)
 <LI><a href="#[1c5]">touchgfx::Transition::tearDown()</a> from frontendapplicationbase.o(i._ZN8touchgfx10Transition8tearDownEv) referenced from frontendapplicationbase.o(.constdata__ZTVN8touchgfx10TransitionE)
 <LI><a href="#[1c5]">touchgfx::Transition::tearDown()</a> from frontendapplicationbase.o(i._ZN8touchgfx10Transition8tearDownEv) referenced from frontendapplicationbase.o(.constdata__ZTVN8touchgfx12NoTransitionE)
 <LI><a href="#[1c3]">touchgfx::Transition::~Transition()</a> from frontendapplicationbase.o(i._ZN8touchgfx10TransitionD1Ev) referenced from frontendapplicationbase.o(.constdata__ZTVN8touchgfx10TransitionE)
 <LI><a href="#[17d]">touchgfx::Application::invalidate()</a> from application.o(i._ZN8touchgfx11Application10invalidateEv) referenced from frontendapplication.o(.constdata__ZTV19FrontendApplication)
 <LI><a href="#[17d]">touchgfx::Application::invalidate()</a> from application.o(i._ZN8touchgfx11Application10invalidateEv) referenced from touchgfxconfiguration.o(.constdata__ZTV23FrontendApplicationBase)
 <LI><a href="#[17d]">touchgfx::Application::invalidate()</a> from application.o(i._ZN8touchgfx11Application10invalidateEv) referenced from application.o(.constdata__ZTVN8touchgfx11ApplicationE)
 <LI><a href="#[17d]">touchgfx::Application::invalidate()</a> from application.o(i._ZN8touchgfx11Application10invalidateEv) referenced from frontendapplicationbase.o(.constdata__ZTVN8touchgfx14MVPApplicationE)
 <LI><a href="#[178]">touchgfx::Application::handleKeyEvent(unsigned char)</a> from application.o(i._ZN8touchgfx11Application14handleKeyEventEh) referenced from frontendapplication.o(.constdata__ZTV19FrontendApplication)
 <LI><a href="#[178]">touchgfx::Application::handleKeyEvent(unsigned char)</a> from application.o(i._ZN8touchgfx11Application14handleKeyEventEh) referenced from touchgfxconfiguration.o(.constdata__ZTV23FrontendApplicationBase)
 <LI><a href="#[178]">touchgfx::Application::handleKeyEvent(unsigned char)</a> from application.o(i._ZN8touchgfx11Application14handleKeyEventEh) referenced from application.o(.constdata__ZTVN8touchgfx11ApplicationE)
 <LI><a href="#[178]">touchgfx::Application::handleKeyEvent(unsigned char)</a> from application.o(i._ZN8touchgfx11Application14handleKeyEventEh) referenced from frontendapplicationbase.o(.constdata__ZTVN8touchgfx14MVPApplicationE)
 <LI><a href="#[17e]">touchgfx::Application::invalidateArea(touchgfx::Rect)</a> from application.o(i._ZN8touchgfx11Application14invalidateAreaENS_4RectE) referenced from frontendapplication.o(.constdata__ZTV19FrontendApplication)
 <LI><a href="#[17e]">touchgfx::Application::invalidateArea(touchgfx::Rect)</a> from application.o(i._ZN8touchgfx11Application14invalidateAreaENS_4RectE) referenced from touchgfxconfiguration.o(.constdata__ZTV23FrontendApplicationBase)
 <LI><a href="#[17e]">touchgfx::Application::invalidateArea(touchgfx::Rect)</a> from application.o(i._ZN8touchgfx11Application14invalidateAreaENS_4RectE) referenced from application.o(.constdata__ZTVN8touchgfx11ApplicationE)
 <LI><a href="#[17e]">touchgfx::Application::invalidateArea(touchgfx::Rect)</a> from application.o(i._ZN8touchgfx11Application14invalidateAreaENS_4RectE) referenced from frontendapplicationbase.o(.constdata__ZTVN8touchgfx14MVPApplicationE)
 <LI><a href="#[17c]">touchgfx::Application::drawCachedAreas()</a> from application.o(i._ZN8touchgfx11Application15drawCachedAreasEv) referenced from frontendapplication.o(.constdata__ZTV19FrontendApplication)
 <LI><a href="#[17c]">touchgfx::Application::drawCachedAreas()</a> from application.o(i._ZN8touchgfx11Application15drawCachedAreasEv) referenced from touchgfxconfiguration.o(.constdata__ZTV23FrontendApplicationBase)
 <LI><a href="#[17c]">touchgfx::Application::drawCachedAreas()</a> from application.o(i._ZN8touchgfx11Application15drawCachedAreasEv) referenced from application.o(.constdata__ZTVN8touchgfx11ApplicationE)
 <LI><a href="#[17c]">touchgfx::Application::drawCachedAreas()</a> from application.o(i._ZN8touchgfx11Application15drawCachedAreasEv) referenced from frontendapplicationbase.o(.constdata__ZTVN8touchgfx14MVPApplicationE)
 <LI><a href="#[176]">touchgfx::Application::handleDragEvent(const touchgfx::DragEvent&)</a> from application.o(i._ZN8touchgfx11Application15handleDragEventERKNS_9DragEventE) referenced from frontendapplication.o(.constdata__ZTV19FrontendApplication)
 <LI><a href="#[176]">touchgfx::Application::handleDragEvent(const touchgfx::DragEvent&)</a> from application.o(i._ZN8touchgfx11Application15handleDragEventERKNS_9DragEventE) referenced from touchgfxconfiguration.o(.constdata__ZTV23FrontendApplicationBase)
 <LI><a href="#[176]">touchgfx::Application::handleDragEvent(const touchgfx::DragEvent&)</a> from application.o(i._ZN8touchgfx11Application15handleDragEventERKNS_9DragEventE) referenced from application.o(.constdata__ZTVN8touchgfx11ApplicationE)
 <LI><a href="#[176]">touchgfx::Application::handleDragEvent(const touchgfx::DragEvent&)</a> from application.o(i._ZN8touchgfx11Application15handleDragEventERKNS_9DragEventE) referenced from frontendapplicationbase.o(.constdata__ZTVN8touchgfx14MVPApplicationE)
 <LI><a href="#[1ae]">touchgfx::Application::handleTickEvent()</a> from application.o(i._ZN8touchgfx11Application15handleTickEventEv) referenced from touchgfxconfiguration.o(.constdata__ZTV23FrontendApplicationBase)
 <LI><a href="#[1ae]">touchgfx::Application::handleTickEvent()</a> from application.o(i._ZN8touchgfx11Application15handleTickEventEv) referenced from application.o(.constdata__ZTVN8touchgfx11ApplicationE)
 <LI><a href="#[1ae]">touchgfx::Application::handleTickEvent()</a> from application.o(i._ZN8touchgfx11Application15handleTickEventEv) referenced from frontendapplicationbase.o(.constdata__ZTVN8touchgfx14MVPApplicationE)
 <LI><a href="#[17b]">touchgfx::Application::clearCachedAreas()</a> from application.o(i._ZN8touchgfx11Application16clearCachedAreasEv) referenced from frontendapplication.o(.constdata__ZTV19FrontendApplication)
 <LI><a href="#[17b]">touchgfx::Application::clearCachedAreas()</a> from application.o(i._ZN8touchgfx11Application16clearCachedAreasEv) referenced from touchgfxconfiguration.o(.constdata__ZTV23FrontendApplicationBase)
 <LI><a href="#[17b]">touchgfx::Application::clearCachedAreas()</a> from application.o(i._ZN8touchgfx11Application16clearCachedAreasEv) referenced from application.o(.constdata__ZTVN8touchgfx11ApplicationE)
 <LI><a href="#[17b]">touchgfx::Application::clearCachedAreas()</a> from application.o(i._ZN8touchgfx11Application16clearCachedAreasEv) referenced from frontendapplicationbase.o(.constdata__ZTVN8touchgfx14MVPApplicationE)
 <LI><a href="#[175]">touchgfx::Application::handleClickEvent(const touchgfx::ClickEvent&)</a> from application.o(i._ZN8touchgfx11Application16handleClickEventERKNS_10ClickEventE) referenced from frontendapplication.o(.constdata__ZTV19FrontendApplication)
 <LI><a href="#[175]">touchgfx::Application::handleClickEvent(const touchgfx::ClickEvent&)</a> from application.o(i._ZN8touchgfx11Application16handleClickEventERKNS_10ClickEventE) referenced from touchgfxconfiguration.o(.constdata__ZTV23FrontendApplicationBase)
 <LI><a href="#[175]">touchgfx::Application::handleClickEvent(const touchgfx::ClickEvent&)</a> from application.o(i._ZN8touchgfx11Application16handleClickEventERKNS_10ClickEventE) referenced from application.o(.constdata__ZTVN8touchgfx11ApplicationE)
 <LI><a href="#[175]">touchgfx::Application::handleClickEvent(const touchgfx::ClickEvent&)</a> from application.o(i._ZN8touchgfx11Application16handleClickEventERKNS_10ClickEventE) referenced from frontendapplicationbase.o(.constdata__ZTVN8touchgfx14MVPApplicationE)
 <LI><a href="#[177]">touchgfx::Application::handleGestureEvent(const touchgfx::GestureEvent&)</a> from application.o(i._ZN8touchgfx11Application18handleGestureEventERKNS_12GestureEventE) referenced from frontendapplication.o(.constdata__ZTV19FrontendApplication)
 <LI><a href="#[177]">touchgfx::Application::handleGestureEvent(const touchgfx::GestureEvent&)</a> from application.o(i._ZN8touchgfx11Application18handleGestureEventERKNS_12GestureEventE) referenced from touchgfxconfiguration.o(.constdata__ZTV23FrontendApplicationBase)
 <LI><a href="#[177]">touchgfx::Application::handleGestureEvent(const touchgfx::GestureEvent&)</a> from application.o(i._ZN8touchgfx11Application18handleGestureEventERKNS_12GestureEventE) referenced from application.o(.constdata__ZTVN8touchgfx11ApplicationE)
 <LI><a href="#[177]">touchgfx::Application::handleGestureEvent(const touchgfx::GestureEvent&)</a> from application.o(i._ZN8touchgfx11Application18handleGestureEventERKNS_12GestureEventE) referenced from frontendapplicationbase.o(.constdata__ZTVN8touchgfx14MVPApplicationE)
 <LI><a href="#[1c9]">touchgfx::Application::handlePendingScreenTransition()</a> from application.o(i._ZN8touchgfx11Application29handlePendingScreenTransitionEv) referenced from application.o(.constdata__ZTVN8touchgfx11ApplicationE)
 <LI><a href="#[17f]">touchgfx::Application::draw(touchgfx::Rect&)</a> from application.o(i._ZN8touchgfx11Application4drawERNS_4RectE) referenced from frontendapplication.o(.constdata__ZTV19FrontendApplication)
 <LI><a href="#[17f]">touchgfx::Application::draw(touchgfx::Rect&)</a> from application.o(i._ZN8touchgfx11Application4drawERNS_4RectE) referenced from touchgfxconfiguration.o(.constdata__ZTV23FrontendApplicationBase)
 <LI><a href="#[17f]">touchgfx::Application::draw(touchgfx::Rect&)</a> from application.o(i._ZN8touchgfx11Application4drawERNS_4RectE) referenced from application.o(.constdata__ZTVN8touchgfx11ApplicationE)
 <LI><a href="#[17f]">touchgfx::Application::draw(touchgfx::Rect&)</a> from application.o(i._ZN8touchgfx11Application4drawERNS_4RectE) referenced from frontendapplicationbase.o(.constdata__ZTVN8touchgfx14MVPApplicationE)
 <LI><a href="#[1e7]">touchgfx::FadeAnimator&lang;touchgfx::TextAreaWithTwoWildcards&rang;::handleTickEvent()</a> from cookingviewbase.o(t._ZN8touchgfx12FadeAnimatorINS_24TextAreaWithTwoWildcardsEE15handleTickEventEv) referenced from cookingviewbase.o(.constdata__ZTVN8touchgfx12FadeAnimatorINS_24TextAreaWithTwoWildcardsEEE)
 <LI><a href="#[1e0]">touchgfx::FadeAnimator&lang;touchgfx::TextAreaWithTwoWildcards&rang;::~FadeAnimator()</a> from cookingviewbase.o(i._ZN8touchgfx12FadeAnimatorINS_24TextAreaWithTwoWildcardsEED1Ev) referenced from cookingviewbase.o(.constdata__ZTVN8touchgfx12FadeAnimatorINS_24TextAreaWithTwoWildcardsEEE)
 <LI><a href="#[1f4]">touchgfx::FadeAnimator&lang;touchgfx::Image&rang;::handleTickEvent()</a> from cookingviewbase.o(t._ZN8touchgfx12FadeAnimatorINS_5ImageEE15handleTickEventEv) referenced from cookingviewbase.o(.constdata__ZTVN8touchgfx12FadeAnimatorINS_5ImageEEE)
 <LI><a href="#[1f6]">touchgfx::FadeAnimator&lang;touchgfx::Image&rang;::setFadeAnimationDelay(unsigned short)</a> from cookingviewbase.o(t._ZN8touchgfx12FadeAnimatorINS_5ImageEE21setFadeAnimationDelayEt) referenced from cookingviewbase.o(.constdata__ZTVN8touchgfx12FadeAnimatorINS_5ImageEEE)
 <LI><a href="#[1f0]">touchgfx::FadeAnimator&lang;touchgfx::Image&rang;::~FadeAnimator()</a> from cookingviewbase.o(i._ZN8touchgfx12FadeAnimatorINS_5ImageEED1Ev) referenced from cookingviewbase.o(.constdata__ZTVN8touchgfx12FadeAnimatorINS_5ImageEEE)
 <LI><a href="#[1fc]">touchgfx::FadeAnimator&lang;touchgfx::Button&rang;::handleTickEvent()</a> from cookingviewbase.o(t._ZN8touchgfx12FadeAnimatorINS_6ButtonEE15handleTickEventEv) referenced from cookingviewbase.o(.constdata__ZTVN8touchgfx12FadeAnimatorINS_6ButtonEEE)
 <LI><a href="#[1f7]">touchgfx::FadeAnimator&lang;touchgfx::Button&rang;::~FadeAnimator()</a> from settingsviewbase.o(i._ZN8touchgfx12FadeAnimatorINS_6ButtonEED1Ev) referenced from cookingviewbase.o(.constdata__ZTVN8touchgfx12FadeAnimatorINS_6ButtonEEE)
 <LI><a href="#[202]">touchgfx::FadeAnimator&lang;touchgfx::TextArea&rang;::handleTickEvent()</a> from cookingviewbase.o(t._ZN8touchgfx12FadeAnimatorINS_8TextAreaEE15handleTickEventEv) referenced from cookingviewbase.o(.constdata__ZTVN8touchgfx12FadeAnimatorINS_8TextAreaEEE)
 <LI><a href="#[1ff]">touchgfx::FadeAnimator&lang;touchgfx::TextArea&rang;::~FadeAnimator()</a> from cookingviewbase.o(i._ZN8touchgfx12FadeAnimatorINS_8TextAreaEED1Ev) referenced from cookingviewbase.o(.constdata__ZTVN8touchgfx12FadeAnimatorINS_8TextAreaEEE)
 <LI><a href="#[20a]">touchgfx::MoveAnimator&lang;touchgfx::Container&rang;::handleTickEvent()</a> from selectingmenuviewbase.o(t._ZN8touchgfx12MoveAnimatorINS_9ContainerEE15handleTickEventEv) referenced from selectingmenuviewbase.o(.constdata__ZTVN8touchgfx12MoveAnimatorINS_9ContainerEEE)
 <LI><a href="#[206]">touchgfx::MoveAnimator&lang;touchgfx::Container&rang;::~MoveAnimator()</a> from selectingmenuviewbase.o(i._ZN8touchgfx12MoveAnimatorINS_9ContainerEED1Ev) referenced from selectingmenuviewbase.o(.constdata__ZTVN8touchgfx12MoveAnimatorINS_9ContainerEEE)
 <LI><a href="#[20f]">touchgfx::NoTransition::handleTickEvent()</a> from frontendapplicationbase.o(i._ZN8touchgfx12NoTransition15handleTickEventEv) referenced from frontendapplicationbase.o(.constdata__ZTVN8touchgfx12NoTransitionE)
 <LI><a href="#[20e]">touchgfx::NoTransition::~NoTransition()</a> from frontendapplicationbase.o(i._ZN8touchgfx12NoTransitionD1Ev) referenced from frontendapplicationbase.o(.constdata__ZTVN8touchgfx12NoTransitionE)
 <LI><a href="#[1b7]">touchgfx::DMA_Interface::addToQueue(const touchgfx::BlitOp&)</a> from dma.o(i._ZN8touchgfx13DMA_Interface10addToQueueERKNS_6BlitOpE) referenced from stm32dma.o(.constdata__ZTV8STM32DMA)
 <LI><a href="#[1b7]">touchgfx::DMA_Interface::addToQueue(const touchgfx::BlitOp&)</a> from dma.o(i._ZN8touchgfx13DMA_Interface10addToQueueERKNS_6BlitOpE) referenced from dma.o(.constdata__ZTVN8touchgfx13DMA_InterfaceE)
 <LI><a href="#[1bb]">touchgfx::DMA_Interface::getDMAType()</a> from stm32dma.o(i._ZN8touchgfx13DMA_Interface10getDMATypeEv) referenced from stm32dma.o(.constdata__ZTV8STM32DMA)
 <LI><a href="#[1bb]">touchgfx::DMA_Interface::getDMAType()</a> from stm32dma.o(i._ZN8touchgfx13DMA_Interface10getDMATypeEv) referenced from dma.o(.constdata__ZTVN8touchgfx13DMA_InterfaceE)
 <LI><a href="#[1b9]">touchgfx::DMA_Interface::initialize()</a> from stm32dma.o(i._ZN8touchgfx13DMA_Interface10initializeEv) referenced from stm32dma.o(.constdata__ZTV8STM32DMA)
 <LI><a href="#[1b9]">touchgfx::DMA_Interface::initialize()</a> from stm32dma.o(i._ZN8touchgfx13DMA_Interface10initializeEv) referenced from dma.o(.constdata__ZTVN8touchgfx13DMA_InterfaceE)
 <LI><a href="#[1c0]">touchgfx::DMA_Interface::enableAlpha(unsigned char)</a> from dma.o(i._ZN8touchgfx13DMA_Interface11enableAlphaEh) referenced from stm32dma.o(.constdata__ZTV8STM32DMA)
 <LI><a href="#[1c0]">touchgfx::DMA_Interface::enableAlpha(unsigned char)</a> from dma.o(i._ZN8touchgfx13DMA_Interface11enableAlphaEh) referenced from dma.o(.constdata__ZTVN8touchgfx13DMA_InterfaceE)
 <LI><a href="#[1c1]">touchgfx::DMA_Interface::disableAlpha()</a> from dma.o(i._ZN8touchgfx13DMA_Interface12disableAlphaEv) referenced from stm32dma.o(.constdata__ZTV8STM32DMA)
 <LI><a href="#[1c1]">touchgfx::DMA_Interface::disableAlpha()</a> from dma.o(i._ZN8touchgfx13DMA_Interface12disableAlphaEv) referenced from dma.o(.constdata__ZTVN8touchgfx13DMA_InterfaceE)
 <LI><a href="#[1bd]">touchgfx::DMA_Interface::seedExecution()</a> from dma.o(i._ZN8touchgfx13DMA_Interface13seedExecutionEv) referenced from stm32dma.o(.constdata__ZTV8STM32DMA)
 <LI><a href="#[1bd]">touchgfx::DMA_Interface::seedExecution()</a> from dma.o(i._ZN8touchgfx13DMA_Interface13seedExecutionEv) referenced from dma.o(.constdata__ZTVN8touchgfx13DMA_InterfaceE)
 <LI><a href="#[1c2]">touchgfx::DMA_Interface::waitForFrameBufferSemaphore()</a> from dma.o(i._ZN8touchgfx13DMA_Interface27waitForFrameBufferSemaphoreEv) referenced from stm32dma.o(.constdata__ZTV8STM32DMA)
 <LI><a href="#[1c2]">touchgfx::DMA_Interface::waitForFrameBufferSemaphore()</a> from dma.o(i._ZN8touchgfx13DMA_Interface27waitForFrameBufferSemaphoreEv) referenced from dma.o(.constdata__ZTVN8touchgfx13DMA_InterfaceE)
 <LI><a href="#[213]">touchgfx::DMA_Interface::flush()</a> from dma.o(i._ZN8touchgfx13DMA_Interface5flushEv) referenced from dma.o(.constdata__ZTVN8touchgfx13DMA_InterfaceE)
 <LI><a href="#[1ba]">touchgfx::DMA_Interface::start()</a> from dma.o(i._ZN8touchgfx13DMA_Interface5startEv) referenced from stm32dma.o(.constdata__ZTV8STM32DMA)
 <LI><a href="#[1ba]">touchgfx::DMA_Interface::start()</a> from dma.o(i._ZN8touchgfx13DMA_Interface5startEv) referenced from dma.o(.constdata__ZTVN8touchgfx13DMA_InterfaceE)
 <LI><a href="#[1bc]">touchgfx::DMA_Interface::execute()</a> from dma.o(i._ZN8touchgfx13DMA_Interface7executeEv) referenced from stm32dma.o(.constdata__ZTV8STM32DMA)
 <LI><a href="#[1bc]">touchgfx::DMA_Interface::execute()</a> from dma.o(i._ZN8touchgfx13DMA_Interface7executeEv) referenced from dma.o(.constdata__ZTVN8touchgfx13DMA_InterfaceE)
 <LI><a href="#[b0]">touchgfx::GeneratedFont::~GeneratedFont()</a> from generatedfont.o(i._ZN8touchgfx13GeneratedFontD1Ev) referenced from generatedfont.o(.constdata__ZTVN8touchgfx13GeneratedFontE)
 <LI><a href="#[b0]">touchgfx::GeneratedFont::~GeneratedFont()</a> from generatedfont.o(i._ZN8touchgfx13GeneratedFontD1Ev) referenced from table_gilb_____ttf_24_4bpp.o(i._Z28getFont_GILB_____TTF_24_4bppv)
 <LI><a href="#[b0]">touchgfx::GeneratedFont::~GeneratedFont()</a> from generatedfont.o(i._ZN8touchgfx13GeneratedFontD1Ev) referenced from table_chinese_msyh_14_4bpp.o(i._Z28getFont_chinese_msyh_14_4bppv)
 <LI><a href="#[b0]">touchgfx::GeneratedFont::~GeneratedFont()</a> from generatedfont.o(i._ZN8touchgfx13GeneratedFontD1Ev) referenced from table_chinese_msyh_25_4bpp.o(i._Z28getFont_chinese_msyh_25_4bppv)
 <LI><a href="#[b0]">touchgfx::GeneratedFont::~GeneratedFont()</a> from generatedfont.o(i._ZN8touchgfx13GeneratedFontD1Ev) referenced from table_chinese_msyh_28_4bpp.o(i._Z28getFont_chinese_msyh_28_4bppv)
 <LI><a href="#[b0]">touchgfx::GeneratedFont::~GeneratedFont()</a> from generatedfont.o(i._ZN8touchgfx13GeneratedFontD1Ev) referenced from table_gommesansw04bold_14_4bpp.o(i._Z32getFont_GommeSansW04Bold_14_4bppv)
 <LI><a href="#[b0]">touchgfx::GeneratedFont::~GeneratedFont()</a> from generatedfont.o(i._ZN8touchgfx13GeneratedFontD1Ev) referenced from table_gommesansw04bold_20_4bpp.o(i._Z32getFont_GommeSansW04Bold_20_4bppv)
 <LI><a href="#[b0]">touchgfx::GeneratedFont::~GeneratedFont()</a> from generatedfont.o(i._ZN8touchgfx13GeneratedFontD1Ev) referenced from table_gommesansw04bold_24_4bpp.o(i._Z32getFont_GommeSansW04Bold_24_4bppv)
 <LI><a href="#[b0]">touchgfx::GeneratedFont::~GeneratedFont()</a> from generatedfont.o(i._ZN8touchgfx13GeneratedFontD1Ev) referenced from table_gommesansw04bold_25_4bpp.o(i._Z32getFont_GommeSansW04Bold_25_4bppv)
 <LI><a href="#[b0]">touchgfx::GeneratedFont::~GeneratedFont()</a> from generatedfont.o(i._ZN8touchgfx13GeneratedFontD1Ev) referenced from table_gommesansw04bold_28_4bpp.o(i._Z32getFont_GommeSansW04Bold_28_4bppv)
 <LI><a href="#[b0]">touchgfx::GeneratedFont::~GeneratedFont()</a> from generatedfont.o(i._ZN8touchgfx13GeneratedFontD1Ev) referenced from table_gommesansw04bold_30_4bpp.o(i._Z32getFont_GommeSansW04Bold_30_4bppv)
 <LI><a href="#[b0]">touchgfx::GeneratedFont::~GeneratedFont()</a> from generatedfont.o(i._ZN8touchgfx13GeneratedFontD1Ev) referenced from table_nanum_gothic_bold_700_14_4bpp.o(i._Z37getFont_Nanum_Gothic_Bold_700_14_4bppv)
 <LI><a href="#[b0]">touchgfx::GeneratedFont::~GeneratedFont()</a> from generatedfont.o(i._ZN8touchgfx13GeneratedFontD1Ev) referenced from table_nanum_gothic_bold_700_25_4bpp.o(i._Z37getFont_Nanum_Gothic_Bold_700_25_4bppv)
 <LI><a href="#[b0]">touchgfx::GeneratedFont::~GeneratedFont()</a> from generatedfont.o(i._ZN8touchgfx13GeneratedFontD1Ev) referenced from table_nanum_gothic_bold_700_28_4bpp.o(i._Z37getFont_Nanum_Gothic_Bold_700_28_4bppv)
 <LI><a href="#[1fd]">touchgfx::AbstractButton::executeAction()</a> from cookingviewbase.o(i._ZN8touchgfx14AbstractButton13executeActionEv) referenced from cookingviewbase.o(.constdata__ZTVN8touchgfx12FadeAnimatorINS_6ButtonEEE)
 <LI><a href="#[1fd]">touchgfx::AbstractButton::executeAction()</a> from cookingviewbase.o(i._ZN8touchgfx14AbstractButton13executeActionEv) referenced from abstractbutton.o(.constdata__ZTVN8touchgfx14AbstractButtonE)
 <LI><a href="#[1fd]">touchgfx::AbstractButton::executeAction()</a> from cookingviewbase.o(i._ZN8touchgfx14AbstractButton13executeActionEv) referenced from button.o(.constdata__ZTVN8touchgfx6ButtonE)
 <LI><a href="#[1fb]">touchgfx::AbstractButton::handleClickEvent(const touchgfx::ClickEvent&)</a> from abstractbutton.o(i._ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE) referenced from cookingviewbase.o(.constdata__ZTVN8touchgfx12FadeAnimatorINS_6ButtonEEE)
 <LI><a href="#[1fb]">touchgfx::AbstractButton::handleClickEvent(const touchgfx::ClickEvent&)</a> from abstractbutton.o(i._ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE) referenced from abstractbutton.o(.constdata__ZTVN8touchgfx14AbstractButtonE)
 <LI><a href="#[1fb]">touchgfx::AbstractButton::handleClickEvent(const touchgfx::ClickEvent&)</a> from abstractbutton.o(i._ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE) referenced from button.o(.constdata__ZTVN8touchgfx6ButtonE)
 <LI><a href="#[17a]">touchgfx::MVPApplication::handlePendingScreenTransition()</a> from touchgfxconfiguration.o(i._ZN8touchgfx14MVPApplication29handlePendingScreenTransitionEv) referenced from frontendapplication.o(.constdata__ZTV19FrontendApplication)
 <LI><a href="#[17a]">touchgfx::MVPApplication::handlePendingScreenTransition()</a> from touchgfxconfiguration.o(i._ZN8touchgfx14MVPApplication29handlePendingScreenTransitionEv) referenced from touchgfxconfiguration.o(.constdata__ZTV23FrontendApplicationBase)
 <LI><a href="#[17a]">touchgfx::MVPApplication::handlePendingScreenTransition()</a> from touchgfxconfiguration.o(i._ZN8touchgfx14MVPApplication29handlePendingScreenTransitionEv) referenced from frontendapplicationbase.o(.constdata__ZTVN8touchgfx14MVPApplicationE)
 <LI><a href="#[b2]">touchgfx::EasingEquations::linearEaseIn(unsigned short, short, short, unsigned short)</a> from easingequations.o(i._ZN8touchgfx15EasingEquations12linearEaseInEtsst) referenced from splashscreenviewbase.o(i._ZN20SplashScreenViewBase15afterTransitionEv)
 <LI><a href="#[b1]">touchgfx::EasingEquations::linearEaseNone(unsigned short, short, short, unsigned short)</a> from easingequations.o(i._ZN8touchgfx15EasingEquations14linearEaseNoneEtsst) referenced from cookingview.o(i._ZN11CookingView23EXITSCREEN_STATEMACHINEEv)
 <LI><a href="#[b1]">touchgfx::EasingEquations::linearEaseNone(unsigned short, short, short, unsigned short)</a> from easingequations.o(i._ZN8touchgfx15EasingEquations14linearEaseNoneEtsst) referenced from cookingview.o(i._ZN11CookingView24ENTERSCREEN_STATEMACHINEEv)
 <LI><a href="#[b1]">touchgfx::EasingEquations::linearEaseNone(unsigned short, short, short, unsigned short)</a> from easingequations.o(i._ZN8touchgfx15EasingEquations14linearEaseNoneEtsst) referenced from settingsview.o(i._ZN12SettingsView23EXITSCREEN_STATEMACHINEEv)
 <LI><a href="#[b1]">touchgfx::EasingEquations::linearEaseNone(unsigned short, short, short, unsigned short)</a> from easingequations.o(i._ZN8touchgfx15EasingEquations14linearEaseNoneEtsst) referenced from settingsview.o(i._ZN12SettingsView24ENTERSCREEN_STATEMACHINEEv)
 <LI><a href="#[b1]">touchgfx::EasingEquations::linearEaseNone(unsigned short, short, short, unsigned short)</a> from easingequations.o(i._ZN8touchgfx15EasingEquations14linearEaseNoneEtsst) referenced from selectingmenuview.o(i._ZN17SelectingMenuView11fadeInTextsEv)
 <LI><a href="#[b1]">touchgfx::EasingEquations::linearEaseNone(unsigned short, short, short, unsigned short)</a> from easingequations.o(i._ZN8touchgfx15EasingEquations14linearEaseNoneEtsst) referenced from selectingmenuview.o(i._ZN17SelectingMenuView20screenEnterAnimationEv)
 <LI><a href="#[b1]">touchgfx::EasingEquations::linearEaseNone(unsigned short, short, short, unsigned short)</a> from easingequations.o(i._ZN8touchgfx15EasingEquations14linearEaseNoneEtsst) referenced from selectingmenuview.o(i._ZN17SelectingMenuView21hideRemainingElementsEv)
 <LI><a href="#[b1]">touchgfx::EasingEquations::linearEaseNone(unsigned short, short, short, unsigned short)</a> from easingequations.o(i._ZN8touchgfx15EasingEquations14linearEaseNoneEtsst) referenced from selectingmenuview.o(i._ZN17SelectingMenuView23EXITSCREEN_STATEMACHINEEv)
 <LI><a href="#[b1]">touchgfx::EasingEquations::linearEaseNone(unsigned short, short, short, unsigned short)</a> from easingequations.o(i._ZN8touchgfx15EasingEquations14linearEaseNoneEtsst) referenced from selectingmenuview.o(i._ZN17SelectingMenuView23fadeInRemainingElementsEv)
 <LI><a href="#[b1]">touchgfx::EasingEquations::linearEaseNone(unsigned short, short, short, unsigned short)</a> from easingequations.o(i._ZN8touchgfx15EasingEquations14linearEaseNoneEtsst) referenced from selectingmenuview.o(i._ZN17SelectingMenuView24ENTERSCREEN_STATEMACHINEEv)
 <LI><a href="#[b1]">touchgfx::EasingEquations::linearEaseNone(unsigned short, short, short, unsigned short)</a> from easingequations.o(i._ZN8touchgfx15EasingEquations14linearEaseNoneEtsst) referenced from selectingmenuview.o(i._ZN17SelectingMenuView29ANIMATION_CHANGE_STATEMACHINEEv)
 <LI><a href="#[228]">touchgfx::AbstractPartition::~AbstractPartition__sub_object()</a> from abstractpartition.o(i._ZN8touchgfx17AbstractPartitionD2Ev) referenced from abstractpartition.o(.constdata__ZTVN8touchgfx17AbstractPartitionE)
 <LI><a href="#[22b]">touchgfx::LockFreeDMA_Queue::pushCopyOf(const touchgfx::BlitOp&)</a> from dma.o(i._ZN8touchgfx17LockFreeDMA_Queue10pushCopyOfERKNS_6BlitOpE) referenced from dma.o(.constdata__ZTVN8touchgfx17LockFreeDMA_QueueE)
 <LI><a href="#[22c]">touchgfx::LockFreeDMA_Queue::first()</a> from dma.o(i._ZN8touchgfx17LockFreeDMA_Queue5firstEv) referenced from dma.o(.constdata__ZTVN8touchgfx17LockFreeDMA_QueueE)
 <LI><a href="#[22a]">touchgfx::LockFreeDMA_Queue::isFull()</a> from dma.o(i._ZN8touchgfx17LockFreeDMA_Queue6isFullEv) referenced from dma.o(.constdata__ZTVN8touchgfx17LockFreeDMA_QueueE)
 <LI><a href="#[229]">touchgfx::LockFreeDMA_Queue::isEmpty()</a> from dma.o(i._ZN8touchgfx17LockFreeDMA_Queue7isEmptyEv) referenced from dma.o(.constdata__ZTVN8touchgfx17LockFreeDMA_QueueE)
 <LI><a href="#[22e]">touchgfx::ClickButtonTrigger::handleClickEvent(const touchgfx::ClickEvent&)</a> from informationdemoviewbase.o(i._ZN8touchgfx18ClickButtonTrigger16handleClickEventERKNS_10ClickEventE) referenced from informationdemoviewbase.o(.constdata__ZTVN8touchgfx18ClickButtonTriggerE)
 <LI><a href="#[22e]">touchgfx::ClickButtonTrigger::handleClickEvent(const touchgfx::ClickEvent&)</a> from informationdemoviewbase.o(i._ZN8touchgfx18ClickButtonTrigger16handleClickEventERKNS_10ClickEventE) referenced from informationdemoviewbase.o(.constdata__ZTVN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEE)
 <LI><a href="#[22d]">touchgfx::ClickButtonTrigger::~ClickButtonTrigger()</a> from informationdemoviewbase.o(i._ZN8touchgfx18ClickButtonTriggerD1Ev) referenced from informationdemoviewbase.o(.constdata__ZTVN8touchgfx18ClickButtonTriggerE)
 <LI><a href="#[232]">touchgfx::AbstractPainterColor::setColor(touchgfx::colortype)</a> from cookingviewbase.o(i._ZN8touchgfx20AbstractPainterColor8setColorENS_9colortypeE) referenced from cookingviewbase.o(.constdata__ZTVN8touchgfx20AbstractPainterColorE)
 <LI><a href="#[233]">touchgfx::AbstractPainterRGB565::~AbstractPainterRGB565__sub_object()</a> from cookingviewbase.o(i._ZN8touchgfx21AbstractPainterRGB565D2Ev) referenced from cookingviewbase.o(.constdata__ZTVN8touchgfx21AbstractPainterRGB565E)
 <LI><a href="#[22f]">touchgfx::AbstractButtonContainer::executeAction()</a> from informationdemoviewbase.o(i._ZN8touchgfx23AbstractButtonContainer13executeActionEv) referenced from informationdemoviewbase.o(.constdata__ZTVN8touchgfx18ClickButtonTriggerE)
 <LI><a href="#[22f]">touchgfx::AbstractButtonContainer::executeAction()</a> from informationdemoviewbase.o(i._ZN8touchgfx23AbstractButtonContainer13executeActionEv) referenced from informationdemoviewbase.o(.constdata__ZTVN8touchgfx23AbstractButtonContainerE)
 <LI><a href="#[22f]">touchgfx::AbstractButtonContainer::executeAction()</a> from informationdemoviewbase.o(i._ZN8touchgfx23AbstractButtonContainer13executeActionEv) referenced from informationdemoviewbase.o(.constdata__ZTVN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEE)
 <LI><a href="#[231]">touchgfx::AbstractButtonContainer::handleAlphaUpdated()</a> from informationdemoviewbase.o(i._ZN8touchgfx23AbstractButtonContainer18handleAlphaUpdatedEv) referenced from informationdemoviewbase.o(.constdata__ZTVN8touchgfx18ClickButtonTriggerE)
 <LI><a href="#[231]">touchgfx::AbstractButtonContainer::handleAlphaUpdated()</a> from informationdemoviewbase.o(i._ZN8touchgfx23AbstractButtonContainer18handleAlphaUpdatedEv) referenced from informationdemoviewbase.o(.constdata__ZTVN8touchgfx23AbstractButtonContainerE)
 <LI><a href="#[230]">touchgfx::AbstractButtonContainer::handlePressedUpdated()</a> from informationdemoviewbase.o(i._ZN8touchgfx23AbstractButtonContainer20handlePressedUpdatedEv) referenced from informationdemoviewbase.o(.constdata__ZTVN8touchgfx18ClickButtonTriggerE)
 <LI><a href="#[230]">touchgfx::AbstractButtonContainer::handlePressedUpdated()</a> from informationdemoviewbase.o(i._ZN8touchgfx23AbstractButtonContainer20handlePressedUpdatedEv) referenced from informationdemoviewbase.o(.constdata__ZTVN8touchgfx23AbstractButtonContainerE)
 <LI><a href="#[234]">touchgfx::AbstractButtonContainer::~AbstractButtonContainer()</a> from informationdemoviewbase.o(i._ZN8touchgfx23AbstractButtonContainerD1Ev) referenced from informationdemoviewbase.o(.constdata__ZTVN8touchgfx23AbstractButtonContainerE)
 <LI><a href="#[235]">touchgfx::TextAreaWithOneWildcard::~TextAreaWithOneWildcard()</a> from settingsviewbase.o(i._ZN8touchgfx23TextAreaWithOneWildcardD1Ev) referenced from settingsviewbase.o(.constdata__ZTVN8touchgfx23TextAreaWithOneWildcardE)
 <LI><a href="#[239]">touchgfx::BoxWithBorderButtonStyle&lang;touchgfx::ClickButtonTrigger&rang;::handleAlphaUpdated()</a> from informationdemoviewbase.o(t._ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEE18handleAlphaUpdatedEv) referenced from informationdemoviewbase.o(.constdata__ZTVN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEE)
 <LI><a href="#[238]">touchgfx::BoxWithBorderButtonStyle&lang;touchgfx::ClickButtonTrigger&rang;::handlePressedUpdated()</a> from informationdemoviewbase.o(t._ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEE20handlePressedUpdatedEv) referenced from informationdemoviewbase.o(.constdata__ZTVN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEE)
 <LI><a href="#[237]">touchgfx::BoxWithBorderButtonStyle&lang;touchgfx::ClickButtonTrigger&rang;::~BoxWithBorderButtonStyle()</a> from informationdemoviewbase.o(i._ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEED1Ev) referenced from informationdemoviewbase.o(.constdata__ZTVN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEE)
 <LI><a href="#[23a]">touchgfx::TextAreaWithTwoWildcards::~TextAreaWithTwoWildcards()</a> from cookingviewbase.o(i._ZN8touchgfx24TextAreaWithTwoWildcardsD1Ev) referenced from cookingviewbase.o(.constdata__ZTVN8touchgfx24TextAreaWithTwoWildcardsE)
 <LI><a href="#[23b]">touchgfx::Box::~Box()</a> from informationdemoviewbase.o(i._ZN8touchgfx3BoxD1Ev) referenced from box.o(.constdata__ZTVN8touchgfx3BoxE)
 <LI><a href="#[244]">touchgfx::HAL::FlushCache()</a> from hal.o(i._ZN8touchgfx3HAL10FlushCacheEv) referenced from hal.o(.constdata__ZTVN8touchgfx3HALE)
 <LI><a href="#[241]">touchgfx::HAL::beginFrame()</a> from hal.o(i._ZN8touchgfx3HAL10beginFrameEv) referenced from hal.o(.constdata__ZTVN8touchgfx3HALE)
 <LI><a href="#[11e]">touchgfx::HAL::getDMAType()</a> from touchgfxhal.o(i._ZN8touchgfx3HAL10getDMATypeEv) referenced from touchgfxhal.o(.constdata__ZTV11TouchGFXHAL)
 <LI><a href="#[11e]">touchgfx::HAL::getDMAType()</a> from touchgfxhal.o(i._ZN8touchgfx3HAL10getDMATypeEv) referenced from touchgfxgeneratedhal.o(.constdata__ZTV20TouchGFXGeneratedHAL)
 <LI><a href="#[11e]">touchgfx::HAL::getDMAType()</a> from touchgfxhal.o(i._ZN8touchgfx3HAL10getDMATypeEv) referenced from hal.o(.constdata__ZTVN8touchgfx3HALE)
 <LI><a href="#[23d]">touchgfx::HAL::initialize()</a> from hal.o(i._ZN8touchgfx3HAL10initializeEv) referenced from hal.o(.constdata__ZTVN8touchgfx3HALE)
 <LI><a href="#[10b]">touchgfx::HAL::getBlitCaps()</a> from touchgfxhal.o(i._ZN8touchgfx3HAL11getBlitCapsEv) referenced from touchgfxhal.o(.constdata__ZTV11TouchGFXHAL)
 <LI><a href="#[10b]">touchgfx::HAL::getBlitCaps()</a> from touchgfxhal.o(i._ZN8touchgfx3HAL11getBlitCapsEv) referenced from touchgfxgeneratedhal.o(.constdata__ZTV20TouchGFXGeneratedHAL)
 <LI><a href="#[10b]">touchgfx::HAL::getBlitCaps()</a> from touchgfxhal.o(i._ZN8touchgfx3HAL11getBlitCapsEv) referenced from hal.o(.constdata__ZTVN8touchgfx3HALE)
 <LI><a href="#[110]">touchgfx::HAL::blitCopyGlyph(const unsigned char*, unsigned short, unsigned short, unsigned short, unsigned short, unsigned short, touchgfx::colortype, unsigned char, touchgfx::BlitOperations, bool)</a> from hal.o(i._ZN8touchgfx3HAL13blitCopyGlyphEPKhtttttNS_9colortypeEhNS_14BlitOperationsEb) referenced from touchgfxhal.o(.constdata__ZTV11TouchGFXHAL)
 <LI><a href="#[110]">touchgfx::HAL::blitCopyGlyph(const unsigned char*, unsigned short, unsigned short, unsigned short, unsigned short, unsigned short, touchgfx::colortype, unsigned char, touchgfx::BlitOperations, bool)</a> from hal.o(i._ZN8touchgfx3HAL13blitCopyGlyphEPKhtttttNS_9colortypeEhNS_14BlitOperationsEb) referenced from touchgfxgeneratedhal.o(.constdata__ZTV20TouchGFXGeneratedHAL)
 <LI><a href="#[110]">touchgfx::HAL::blitCopyGlyph(const unsigned char*, unsigned short, unsigned short, unsigned short, unsigned short, unsigned short, touchgfx::colortype, unsigned char, touchgfx::BlitOperations, bool)</a> from hal.o(i._ZN8touchgfx3HAL13blitCopyGlyphEPKhtttttNS_9colortypeEhNS_14BlitOperationsEb) referenced from hal.o(.constdata__ZTVN8touchgfx3HALE)
 <LI><a href="#[243]">touchgfx::HAL::InvalidateCache()</a> from hal.o(i._ZN8touchgfx3HAL15InvalidateCacheEv) referenced from hal.o(.constdata__ZTVN8touchgfx3HALE)
 <LI><a href="#[114]">touchgfx::HAL::backPorchExited()</a> from touchgfxhal.o(i._ZN8touchgfx3HAL15backPorchExitedEv) referenced from touchgfxhal.o(.constdata__ZTV11TouchGFXHAL)
 <LI><a href="#[114]">touchgfx::HAL::backPorchExited()</a> from touchgfxhal.o(i._ZN8touchgfx3HAL15backPorchExitedEv) referenced from touchgfxgeneratedhal.o(.constdata__ZTV20TouchGFXGeneratedHAL)
 <LI><a href="#[114]">touchgfx::HAL::backPorchExited()</a> from touchgfxhal.o(i._ZN8touchgfx3HAL15backPorchExitedEv) referenced from hal.o(.constdata__ZTVN8touchgfx3HALE)
 <LI><a href="#[107]">touchgfx::HAL::lockFrameBuffer()</a> from hal.o(i._ZN8touchgfx3HAL15lockFrameBufferEv) referenced from touchgfxhal.o(.constdata__ZTV11TouchGFXHAL)
 <LI><a href="#[107]">touchgfx::HAL::lockFrameBuffer()</a> from hal.o(i._ZN8touchgfx3HAL15lockFrameBufferEv) referenced from touchgfxgeneratedhal.o(.constdata__ZTV20TouchGFXGeneratedHAL)
 <LI><a href="#[107]">touchgfx::HAL::lockFrameBuffer()</a> from hal.o(i._ZN8touchgfx3HAL15lockFrameBufferEv) referenced from hal.o(.constdata__ZTVN8touchgfx3HALE)
 <LI><a href="#[10f]">touchgfx::HAL::blitCopyARGB8888(const unsigned short*, unsigned short, unsigned short, unsigned short, unsigned short, unsigned short, unsigned char, bool)</a> from hal.o(i._ZN8touchgfx3HAL16blitCopyARGB8888EPKtttttthb) referenced from touchgfxhal.o(.constdata__ZTV11TouchGFXHAL)
 <LI><a href="#[10f]">touchgfx::HAL::blitCopyARGB8888(const unsigned short*, unsigned short, unsigned short, unsigned short, unsigned short, unsigned short, unsigned char, bool)</a> from hal.o(i._ZN8touchgfx3HAL16blitCopyARGB8888EPKtttttthb) referenced from touchgfxgeneratedhal.o(.constdata__ZTV20TouchGFXGeneratedHAL)
 <LI><a href="#[10f]">touchgfx::HAL::blitCopyARGB8888(const unsigned short*, unsigned short, unsigned short, unsigned short, unsigned short, unsigned short, unsigned char, bool)</a> from hal.o(i._ZN8touchgfx3HAL16blitCopyARGB8888EPKtttttthb) referenced from hal.o(.constdata__ZTVN8touchgfx3HALE)
 <LI><a href="#[23e]">touchgfx::HAL::flushFrameBuffer(const touchgfx::Rect&)</a> from hal.o(i._ZN8touchgfx3HAL16flushFrameBufferERKNS_4RectE) referenced from hal.o(.constdata__ZTVN8touchgfx3HALE)
 <LI><a href="#[105]">touchgfx::HAL::allowDMATransfers()</a> from hal.o(i._ZN8touchgfx3HAL17allowDMATransfersEv) referenced from touchgfxhal.o(.constdata__ZTV11TouchGFXHAL)
 <LI><a href="#[105]">touchgfx::HAL::allowDMATransfers()</a> from hal.o(i._ZN8touchgfx3HAL17allowDMATransfersEv) referenced from touchgfxgeneratedhal.o(.constdata__ZTV20TouchGFXGeneratedHAL)
 <LI><a href="#[105]">touchgfx::HAL::allowDMATransfers()</a> from hal.o(i._ZN8touchgfx3HAL17allowDMATransfersEv) referenced from hal.o(.constdata__ZTVN8touchgfx3HALE)
 <LI><a href="#[240]">touchgfx::HAL::getTFTCurrentLine()</a> from hal.o(i._ZN8touchgfx3HAL17getTFTCurrentLineEv) referenced from hal.o(.constdata__ZTVN8touchgfx3HALE)
 <LI><a href="#[108]">touchgfx::HAL::unlockFrameBuffer()</a> from hal.o(i._ZN8touchgfx3HAL17unlockFrameBufferEv) referenced from touchgfxhal.o(.constdata__ZTV11TouchGFXHAL)
 <LI><a href="#[108]">touchgfx::HAL::unlockFrameBuffer()</a> from hal.o(i._ZN8touchgfx3HAL17unlockFrameBufferEv) referenced from touchgfxgeneratedhal.o(.constdata__ZTV20TouchGFXGeneratedHAL)
 <LI><a href="#[108]">touchgfx::HAL::unlockFrameBuffer()</a> from hal.o(i._ZN8touchgfx3HAL17unlockFrameBufferEv) referenced from hal.o(.constdata__ZTVN8touchgfx3HALE)
 <LI><a href="#[11a]">touchgfx::HAL::setAnimationStorage(void*)</a> from touchgfxhal.o(i._ZN8touchgfx3HAL19setAnimationStorageEPv) referenced from touchgfxhal.o(.constdata__ZTV11TouchGFXHAL)
 <LI><a href="#[11a]">touchgfx::HAL::setAnimationStorage(void*)</a> from touchgfxhal.o(i._ZN8touchgfx3HAL19setAnimationStorageEPv) referenced from touchgfxgeneratedhal.o(.constdata__ZTV20TouchGFXGeneratedHAL)
 <LI><a href="#[11a]">touchgfx::HAL::setAnimationStorage(void*)</a> from touchgfxhal.o(i._ZN8touchgfx3HAL19setAnimationStorageEPv) referenced from hal.o(.constdata__ZTVN8touchgfx3HALE)
 <LI><a href="#[113]">touchgfx::HAL::registerEventListener(touchgfx::UIEventListener&)</a> from hal.o(i._ZN8touchgfx3HAL21registerEventListenerERNS_15UIEventListenerE) referenced from touchgfxhal.o(.constdata__ZTV11TouchGFXHAL)
 <LI><a href="#[113]">touchgfx::HAL::registerEventListener(touchgfx::UIEventListener&)</a> from hal.o(i._ZN8touchgfx3HAL21registerEventListenerERNS_15UIEventListenerE) referenced from touchgfxgeneratedhal.o(.constdata__ZTV20TouchGFXGeneratedHAL)
 <LI><a href="#[113]">touchgfx::HAL::registerEventListener(touchgfx::UIEventListener&)</a> from hal.o(i._ZN8touchgfx3HAL21registerEventListenerERNS_15UIEventListenerE) referenced from hal.o(.constdata__ZTVN8touchgfx3HALE)
 <LI><a href="#[101]">touchgfx::HAL::setDisplayOrientation(touchgfx::DisplayOrientation)</a> from touchgfxhal.o(i._ZN8touchgfx3HAL21setDisplayOrientationENS_18DisplayOrientationE) referenced from touchgfxhal.o(.constdata__ZTV11TouchGFXHAL)
 <LI><a href="#[101]">touchgfx::HAL::setDisplayOrientation(touchgfx::DisplayOrientation)</a> from touchgfxhal.o(i._ZN8touchgfx3HAL21setDisplayOrientationENS_18DisplayOrientationE) referenced from touchgfxgeneratedhal.o(.constdata__ZTV20TouchGFXGeneratedHAL)
 <LI><a href="#[101]">touchgfx::HAL::setDisplayOrientation(touchgfx::DisplayOrientation)</a> from touchgfxhal.o(i._ZN8touchgfx3HAL21setDisplayOrientationENS_18DisplayOrientationE) referenced from hal.o(.constdata__ZTVN8touchgfx3HALE)
 <LI><a href="#[11b]">touchgfx::HAL::configurePartialFrameBuffer(unsigned short, unsigned short, unsigned short, unsigned short)</a> from hal.o(i._ZN8touchgfx3HAL27configurePartialFrameBufferEtttt) referenced from touchgfxhal.o(.constdata__ZTV11TouchGFXHAL)
 <LI><a href="#[11b]">touchgfx::HAL::configurePartialFrameBuffer(unsigned short, unsigned short, unsigned short, unsigned short)</a> from hal.o(i._ZN8touchgfx3HAL27configurePartialFrameBufferEtttt) referenced from touchgfxgeneratedhal.o(.constdata__ZTV20TouchGFXGeneratedHAL)
 <LI><a href="#[11b]">touchgfx::HAL::configurePartialFrameBuffer(unsigned short, unsigned short, unsigned short, unsigned short)</a> from hal.o(i._ZN8touchgfx3HAL27configurePartialFrameBufferEtttt) referenced from hal.o(.constdata__ZTVN8touchgfx3HALE)
 <LI><a href="#[119]">touchgfx::HAL::setFrameBufferStartAddresses(void*, void*, void*)</a> from touchgfxhal.o(i._ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_) referenced from touchgfxhal.o(.constdata__ZTV11TouchGFXHAL)
 <LI><a href="#[119]">touchgfx::HAL::setFrameBufferStartAddresses(void*, void*, void*)</a> from touchgfxhal.o(i._ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_) referenced from touchgfxgeneratedhal.o(.constdata__ZTV20TouchGFXGeneratedHAL)
 <LI><a href="#[119]">touchgfx::HAL::setFrameBufferStartAddresses(void*, void*, void*)</a> from touchgfxhal.o(i._ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_) referenced from hal.o(.constdata__ZTVN8touchgfx3HALE)
 <LI><a href="#[125]">touchgfx::HAL::performDisplayOrientationChange()</a> from touchgfxhal.o(i._ZN8touchgfx3HAL31performDisplayOrientationChangeEv) referenced from touchgfxhal.o(.constdata__ZTV11TouchGFXHAL)
 <LI><a href="#[125]">touchgfx::HAL::performDisplayOrientationChange()</a> from touchgfxhal.o(i._ZN8touchgfx3HAL31performDisplayOrientationChangeEv) referenced from touchgfxgeneratedhal.o(.constdata__ZTV20TouchGFXGeneratedHAL)
 <LI><a href="#[125]">touchgfx::HAL::performDisplayOrientationChange()</a> from touchgfxhal.o(i._ZN8touchgfx3HAL31performDisplayOrientationChangeEv) referenced from hal.o(.constdata__ZTVN8touchgfx3HALE)
 <LI><a href="#[11f]">touchgfx::HAL::tick()</a> from hal.o(i._ZN8touchgfx3HAL4tickEv) referenced from touchgfxhal.o(.constdata__ZTV11TouchGFXHAL)
 <LI><a href="#[11f]">touchgfx::HAL::tick()</a> from hal.o(i._ZN8touchgfx3HAL4tickEv) referenced from touchgfxgeneratedhal.o(.constdata__ZTV20TouchGFXGeneratedHAL)
 <LI><a href="#[11f]">touchgfx::HAL::tick()</a> from hal.o(i._ZN8touchgfx3HAL4tickEv) referenced from hal.o(.constdata__ZTVN8touchgfx3HALE)
 <LI><a href="#[123]">touchgfx::HAL::touch(int, int)</a> from hal.o(i._ZN8touchgfx3HAL5touchEii) referenced from touchgfxhal.o(.constdata__ZTV11TouchGFXHAL)
 <LI><a href="#[123]">touchgfx::HAL::touch(int, int)</a> from hal.o(i._ZN8touchgfx3HAL5touchEii) referenced from touchgfxgeneratedhal.o(.constdata__ZTV20TouchGFXGeneratedHAL)
 <LI><a href="#[123]">touchgfx::HAL::touch(int, int)</a> from hal.o(i._ZN8touchgfx3HAL5touchEii) referenced from hal.o(.constdata__ZTVN8touchgfx3HALE)
 <LI><a href="#[124]">touchgfx::HAL::noTouch()</a> from hal.o(i._ZN8touchgfx3HAL7noTouchEv) referenced from touchgfxhal.o(.constdata__ZTV11TouchGFXHAL)
 <LI><a href="#[124]">touchgfx::HAL::noTouch()</a> from hal.o(i._ZN8touchgfx3HAL7noTouchEv) referenced from touchgfxgeneratedhal.o(.constdata__ZTV20TouchGFXGeneratedHAL)
 <LI><a href="#[124]">touchgfx::HAL::noTouch()</a> from hal.o(i._ZN8touchgfx3HAL7noTouchEv) referenced from hal.o(.constdata__ZTVN8touchgfx3HALE)
 <LI><a href="#[10c]">touchgfx::HAL::blitCopy(const unsigned short*, const unsigned char*, unsigned short, unsigned short, unsigned short, unsigned short, unsigned short, unsigned char, bool, unsigned short, touchgfx::Bitmap::BitmapFormat, touchgfx::Bitmap::BitmapFormat, bool)</a> from hal.o(i._ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b) referenced from touchgfxhal.o(.constdata__ZTV11TouchGFXHAL)
 <LI><a href="#[10c]">touchgfx::HAL::blitCopy(const unsigned short*, const unsigned char*, unsigned short, unsigned short, unsigned short, unsigned short, unsigned short, unsigned char, bool, unsigned short, touchgfx::Bitmap::BitmapFormat, touchgfx::Bitmap::BitmapFormat, bool)</a> from hal.o(i._ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b) referenced from touchgfxgeneratedhal.o(.constdata__ZTV20TouchGFXGeneratedHAL)
 <LI><a href="#[10c]">touchgfx::HAL::blitCopy(const unsigned short*, const unsigned char*, unsigned short, unsigned short, unsigned short, unsigned short, unsigned short, unsigned char, bool, unsigned short, touchgfx::Bitmap::BitmapFormat, touchgfx::Bitmap::BitmapFormat, bool)</a> from hal.o(i._ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b) referenced from hal.o(.constdata__ZTVN8touchgfx3HALE)
 <LI><a href="#[10e]">touchgfx::HAL::blitCopy(const unsigned short*, unsigned short, unsigned short, unsigned short, unsigned short, unsigned short, unsigned char, bool, bool)</a> from hal.o(i._ZN8touchgfx3HAL8blitCopyEPKtttttthbb) referenced from touchgfxhal.o(.constdata__ZTV11TouchGFXHAL)
 <LI><a href="#[10e]">touchgfx::HAL::blitCopy(const unsigned short*, unsigned short, unsigned short, unsigned short, unsigned short, unsigned short, unsigned char, bool, bool)</a> from hal.o(i._ZN8touchgfx3HAL8blitCopyEPKtttttthbb) referenced from touchgfxgeneratedhal.o(.constdata__ZTV20TouchGFXGeneratedHAL)
 <LI><a href="#[10e]">touchgfx::HAL::blitCopy(const unsigned short*, unsigned short, unsigned short, unsigned short, unsigned short, unsigned short, unsigned char, bool, bool)</a> from hal.o(i._ZN8touchgfx3HAL8blitCopyEPKtttttthbb) referenced from hal.o(.constdata__ZTVN8touchgfx3HALE)
 <LI><a href="#[10d]">touchgfx::HAL::blitCopy(const unsigned short*, unsigned short, unsigned short, unsigned short, unsigned short, unsigned short, unsigned char, bool, unsigned short, touchgfx::Bitmap::BitmapFormat, touchgfx::Bitmap::BitmapFormat, bool)</a> from hal.o(i._ZN8touchgfx3HAL8blitCopyEPKtttttthbtNS_6Bitmap12BitmapFormatES4_b) referenced from touchgfxhal.o(.constdata__ZTV11TouchGFXHAL)
 <LI><a href="#[10d]">touchgfx::HAL::blitCopy(const unsigned short*, unsigned short, unsigned short, unsigned short, unsigned short, unsigned short, unsigned char, bool, unsigned short, touchgfx::Bitmap::BitmapFormat, touchgfx::Bitmap::BitmapFormat, bool)</a> from hal.o(i._ZN8touchgfx3HAL8blitCopyEPKtttttthbtNS_6Bitmap12BitmapFormatES4_b) referenced from touchgfxgeneratedhal.o(.constdata__ZTV20TouchGFXGeneratedHAL)
 <LI><a href="#[10d]">touchgfx::HAL::blitCopy(const unsigned short*, unsigned short, unsigned short, unsigned short, unsigned short, unsigned short, unsigned char, bool, unsigned short, touchgfx::Bitmap::BitmapFormat, touchgfx::Bitmap::BitmapFormat, bool)</a> from hal.o(i._ZN8touchgfx3HAL8blitCopyEPKtttttthbtNS_6Bitmap12BitmapFormatES4_b) referenced from hal.o(.constdata__ZTVN8touchgfx3HALE)
 <LI><a href="#[112]">touchgfx::HAL::blitFill(touchgfx::colortype, unsigned short, unsigned short, unsigned short, unsigned short, unsigned char, bool)</a> from hal.o(i._ZN8touchgfx3HAL8blitFillENS_9colortypeEtttthb) referenced from touchgfxhal.o(.constdata__ZTV11TouchGFXHAL)
 <LI><a href="#[112]">touchgfx::HAL::blitFill(touchgfx::colortype, unsigned short, unsigned short, unsigned short, unsigned short, unsigned char, bool)</a> from hal.o(i._ZN8touchgfx3HAL8blitFillENS_9colortypeEtttthb) referenced from touchgfxgeneratedhal.o(.constdata__ZTV20TouchGFXGeneratedHAL)
 <LI><a href="#[112]">touchgfx::HAL::blitFill(touchgfx::colortype, unsigned short, unsigned short, unsigned short, unsigned short, unsigned char, bool)</a> from hal.o(i._ZN8touchgfx3HAL8blitFillENS_9colortypeEtttthb) referenced from hal.o(.constdata__ZTVN8touchgfx3HALE)
 <LI><a href="#[111]">touchgfx::HAL::blitFill(touchgfx::colortype, unsigned short, unsigned short, unsigned short, unsigned short, unsigned char, unsigned short, touchgfx::Bitmap::BitmapFormat, bool)</a> from hal.o(i._ZN8touchgfx3HAL8blitFillENS_9colortypeEtttthtNS_6Bitmap12BitmapFormatEb) referenced from touchgfxhal.o(.constdata__ZTV11TouchGFXHAL)
 <LI><a href="#[111]">touchgfx::HAL::blitFill(touchgfx::colortype, unsigned short, unsigned short, unsigned short, unsigned short, unsigned char, unsigned short, touchgfx::Bitmap::BitmapFormat, bool)</a> from hal.o(i._ZN8touchgfx3HAL8blitFillENS_9colortypeEtttthtNS_6Bitmap12BitmapFormatEb) referenced from touchgfxgeneratedhal.o(.constdata__ZTV20TouchGFXGeneratedHAL)
 <LI><a href="#[111]">touchgfx::HAL::blitFill(touchgfx::colortype, unsigned short, unsigned short, unsigned short, unsigned short, unsigned char, unsigned short, touchgfx::Bitmap::BitmapFormat, bool)</a> from hal.o(i._ZN8touchgfx3HAL8blitFillENS_9colortypeEtttthtNS_6Bitmap12BitmapFormatEb) referenced from hal.o(.constdata__ZTVN8touchgfx3HALE)
 <LI><a href="#[242]">touchgfx::HAL::endFrame()</a> from hal.o(i._ZN8touchgfx3HAL8endFrameEv) referenced from hal.o(.constdata__ZTVN8touchgfx3HALE)
 <LI><a href="#[106]">touchgfx::HAL::flushDMA()</a> from hal.o(i._ZN8touchgfx3HAL8flushDMAEv) referenced from touchgfxhal.o(.constdata__ZTV11TouchGFXHAL)
 <LI><a href="#[106]">touchgfx::HAL::flushDMA()</a> from hal.o(i._ZN8touchgfx3HAL8flushDMAEv) referenced from touchgfxgeneratedhal.o(.constdata__ZTV20TouchGFXGeneratedHAL)
 <LI><a href="#[106]">touchgfx::HAL::flushDMA()</a> from hal.o(i._ZN8touchgfx3HAL8flushDMAEv) referenced from hal.o(.constdata__ZTVN8touchgfx3HALE)
 <LI><a href="#[23f]">touchgfx::HAL::blockCopy(void*, const void*, unsigned)</a> from hal.o(i._ZN8touchgfx3HAL9blockCopyEPvPKvj) referenced from hal.o(.constdata__ZTVN8touchgfx3HALE)
 <LI><a href="#[11c]">touchgfx::HAL::taskDelay(unsigned short)</a> from touchgfxhal.o(i._ZN8touchgfx3HAL9taskDelayEt) referenced from touchgfxhal.o(.constdata__ZTV11TouchGFXHAL)
 <LI><a href="#[11c]">touchgfx::HAL::taskDelay(unsigned short)</a> from touchgfxhal.o(i._ZN8touchgfx3HAL9taskDelayEt) referenced from touchgfxgeneratedhal.o(.constdata__ZTV20TouchGFXGeneratedHAL)
 <LI><a href="#[11c]">touchgfx::HAL::taskDelay(unsigned short)</a> from touchgfxhal.o(i._ZN8touchgfx3HAL9taskDelayEt) referenced from hal.o(.constdata__ZTVN8touchgfx3HALE)
 <LI><a href="#[103]">touchgfx::HAL::taskEntry()</a> from hal.o(i._ZN8touchgfx3HAL9taskEntryEv) referenced from touchgfxhal.o(.constdata__ZTV11TouchGFXHAL)
 <LI><a href="#[103]">touchgfx::HAL::taskEntry()</a> from hal.o(i._ZN8touchgfx3HAL9taskEntryEv) referenced from touchgfxgeneratedhal.o(.constdata__ZTV20TouchGFXGeneratedHAL)
 <LI><a href="#[103]">touchgfx::HAL::taskEntry()</a> from hal.o(i._ZN8touchgfx3HAL9taskEntryEv) referenced from hal.o(.constdata__ZTVN8touchgfx3HALE)
 <LI><a href="#[dc]">touchgfx::Rect::Rect()</a> from cookingviewbase.o(i._ZN8touchgfx4RectC1Ev) referenced from application.o(t._ZN8touchgfx6VectorINS_4RectELt8EEC1Ev)
 <LI><a href="#[248]">touchgfx::View&lang;CookingPresenter&rang;::~View()</a> from cookingviewbase.o(i._ZN8touchgfx4ViewI16CookingPresenterED1Ev) referenced from cookingviewbase.o(.constdata__ZTVN8touchgfx4ViewI16CookingPresenterEE)
 <LI><a href="#[24a]">touchgfx::View&lang;SettingsPresenter&rang;::~View()</a> from settingsviewbase.o(i._ZN8touchgfx4ViewI17SettingsPresenterED1Ev) referenced from settingsviewbase.o(.constdata__ZTVN8touchgfx4ViewI17SettingsPresenterEE)
 <LI><a href="#[24b]">touchgfx::View&lang;InformationPresenter&rang;::~View()</a> from informationviewbase.o(i._ZN8touchgfx4ViewI20InformationPresenterED1Ev) referenced from informationviewbase.o(.constdata__ZTVN8touchgfx4ViewI20InformationPresenterEE)
 <LI><a href="#[24c]">touchgfx::View&lang;SplashScreenPresenter&rang;::~View()</a> from splashscreenviewbase.o(i._ZN8touchgfx4ViewI21SplashScreenPresenterED1Ev) referenced from splashscreenviewbase.o(.constdata__ZTVN8touchgfx4ViewI21SplashScreenPresenterEE)
 <LI><a href="#[24d]">touchgfx::View&lang;SelectingMenuPresenter&rang;::~View()</a> from selectingmenuviewbase.o(i._ZN8touchgfx4ViewI22SelectingMenuPresenterED1Ev) referenced from selectingmenuviewbase.o(.constdata__ZTVN8touchgfx4ViewI22SelectingMenuPresenterEE)
 <LI><a href="#[24e]">touchgfx::View&lang;InformationDemoPresenter&rang;::~View()</a> from informationdemoviewbase.o(i._ZN8touchgfx4ViewI24InformationDemoPresenterED1Ev) referenced from informationdemoviewbase.o(.constdata__ZTVN8touchgfx4ViewI24InformationDemoPresenterEE)
 <LI><a href="#[1f5]">touchgfx::Image::setBitmap(const touchgfx::Bitmap&)</a> from image.o(i._ZN8touchgfx5Image9setBitmapERKNS_6BitmapE) referenced from cookingviewbase.o(.constdata__ZTVN8touchgfx12FadeAnimatorINS_5ImageEEE)
 <LI><a href="#[1f5]">touchgfx::Image::setBitmap(const touchgfx::Bitmap&)</a> from image.o(i._ZN8touchgfx5Image9setBitmapERKNS_6BitmapE) referenced from image.o(.constdata__ZTVN8touchgfx5ImageE)
 <LI><a href="#[24f]">touchgfx::Image::~Image()</a> from cookingviewbase.o(i._ZN8touchgfx5ImageD1Ev) referenced from image.o(.constdata__ZTVN8touchgfx5ImageE)
 <LI><a href="#[1fe]">touchgfx::Button::setBitmaps(const touchgfx::Bitmap&, const touchgfx::Bitmap&)</a> from button.o(i._ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_) referenced from cookingviewbase.o(.constdata__ZTVN8touchgfx12FadeAnimatorINS_6ButtonEEE)
 <LI><a href="#[1fe]">touchgfx::Button::setBitmaps(const touchgfx::Bitmap&, const touchgfx::Bitmap&)</a> from button.o(i._ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_) referenced from button.o(.constdata__ZTVN8touchgfx6ButtonE)
 <LI><a href="#[250]">touchgfx::Button::~Button()</a> from settingsviewbase.o(i._ZN8touchgfx6ButtonD1Ev) referenced from button.o(.constdata__ZTVN8touchgfx6ButtonE)
 <LI><a href="#[252]">touchgfx::Canvas::lineTo(touchgfx::CWRUtil::Q5, touchgfx::CWRUtil::Q5)</a> from canvas.o(i._ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_) referenced from canvas.o(.constdata__ZTVN8touchgfx6CanvasE)
 <LI><a href="#[251]">touchgfx::Canvas::~Canvas()</a> from circle.o(i._ZN8touchgfx6CanvasD1Ev) referenced from canvas.o(.constdata__ZTVN8touchgfx6CanvasE)
 <LI><a href="#[249]">touchgfx::Screen::setupScreen()</a> from cookingviewbase.o(i._ZN8touchgfx6Screen11setupScreenEv) referenced from cookingviewbase.o(.constdata__ZTVN8touchgfx4ViewI16CookingPresenterEE)
 <LI><a href="#[249]">touchgfx::Screen::setupScreen()</a> from cookingviewbase.o(i._ZN8touchgfx6Screen11setupScreenEv) referenced from settingsviewbase.o(.constdata__ZTVN8touchgfx4ViewI17SettingsPresenterEE)
 <LI><a href="#[249]">touchgfx::Screen::setupScreen()</a> from cookingviewbase.o(i._ZN8touchgfx6Screen11setupScreenEv) referenced from informationviewbase.o(.constdata__ZTVN8touchgfx4ViewI20InformationPresenterEE)
 <LI><a href="#[249]">touchgfx::Screen::setupScreen()</a> from cookingviewbase.o(i._ZN8touchgfx6Screen11setupScreenEv) referenced from splashscreenviewbase.o(.constdata__ZTVN8touchgfx4ViewI21SplashScreenPresenterEE)
 <LI><a href="#[249]">touchgfx::Screen::setupScreen()</a> from cookingviewbase.o(i._ZN8touchgfx6Screen11setupScreenEv) referenced from selectingmenuviewbase.o(.constdata__ZTVN8touchgfx4ViewI22SelectingMenuPresenterEE)
 <LI><a href="#[249]">touchgfx::Screen::setupScreen()</a> from cookingviewbase.o(i._ZN8touchgfx6Screen11setupScreenEv) referenced from informationdemoviewbase.o(.constdata__ZTVN8touchgfx4ViewI24InformationDemoPresenterEE)
 <LI><a href="#[249]">touchgfx::Screen::setupScreen()</a> from cookingviewbase.o(i._ZN8touchgfx6Screen11setupScreenEv) referenced from screen.o(.constdata__ZTVN8touchgfx6ScreenE)
 <LI><a href="#[15e]">touchgfx::Screen::handleKeyEvent(unsigned char)</a> from splashscreenview.o(i._ZN8touchgfx6Screen14handleKeyEventEh) referenced from splashscreenview.o(.constdata__ZTV16SplashScreenView)
 <LI><a href="#[15e]">touchgfx::Screen::handleKeyEvent(unsigned char)</a> from splashscreenview.o(i._ZN8touchgfx6Screen14handleKeyEventEh) referenced from splashscreenviewbase.o(.constdata__ZTV20SplashScreenViewBase)
 <LI><a href="#[15e]">touchgfx::Screen::handleKeyEvent(unsigned char)</a> from splashscreenview.o(i._ZN8touchgfx6Screen14handleKeyEventEh) referenced from cookingviewbase.o(.constdata__ZTVN8touchgfx4ViewI16CookingPresenterEE)
 <LI><a href="#[15e]">touchgfx::Screen::handleKeyEvent(unsigned char)</a> from splashscreenview.o(i._ZN8touchgfx6Screen14handleKeyEventEh) referenced from settingsviewbase.o(.constdata__ZTVN8touchgfx4ViewI17SettingsPresenterEE)
 <LI><a href="#[15e]">touchgfx::Screen::handleKeyEvent(unsigned char)</a> from splashscreenview.o(i._ZN8touchgfx6Screen14handleKeyEventEh) referenced from informationviewbase.o(.constdata__ZTVN8touchgfx4ViewI20InformationPresenterEE)
 <LI><a href="#[15e]">touchgfx::Screen::handleKeyEvent(unsigned char)</a> from splashscreenview.o(i._ZN8touchgfx6Screen14handleKeyEventEh) referenced from splashscreenviewbase.o(.constdata__ZTVN8touchgfx4ViewI21SplashScreenPresenterEE)
 <LI><a href="#[15e]">touchgfx::Screen::handleKeyEvent(unsigned char)</a> from splashscreenview.o(i._ZN8touchgfx6Screen14handleKeyEventEh) referenced from selectingmenuviewbase.o(.constdata__ZTVN8touchgfx4ViewI22SelectingMenuPresenterEE)
 <LI><a href="#[15e]">touchgfx::Screen::handleKeyEvent(unsigned char)</a> from splashscreenview.o(i._ZN8touchgfx6Screen14handleKeyEventEh) referenced from informationdemoviewbase.o(.constdata__ZTVN8touchgfx4ViewI24InformationDemoPresenterEE)
 <LI><a href="#[15e]">touchgfx::Screen::handleKeyEvent(unsigned char)</a> from splashscreenview.o(i._ZN8touchgfx6Screen14handleKeyEventEh) referenced from screen.o(.constdata__ZTVN8touchgfx6ScreenE)
 <LI><a href="#[13c]">touchgfx::Screen::tearDownScreen()</a> from cookingviewbase.o(i._ZN8touchgfx6Screen14tearDownScreenEv) referenced from cookingviewbase.o(.constdata__ZTV15CookingViewBase)
 <LI><a href="#[13c]">touchgfx::Screen::tearDownScreen()</a> from cookingviewbase.o(i._ZN8touchgfx6Screen14tearDownScreenEv) referenced from settingsviewbase.o(.constdata__ZTV16SettingsViewBase)
 <LI><a href="#[13c]">touchgfx::Screen::tearDownScreen()</a> from cookingviewbase.o(i._ZN8touchgfx6Screen14tearDownScreenEv) referenced from informationviewbase.o(.constdata__ZTV19InformationViewBase)
 <LI><a href="#[13c]">touchgfx::Screen::tearDownScreen()</a> from cookingviewbase.o(i._ZN8touchgfx6Screen14tearDownScreenEv) referenced from splashscreenviewbase.o(.constdata__ZTV20SplashScreenViewBase)
 <LI><a href="#[13c]">touchgfx::Screen::tearDownScreen()</a> from cookingviewbase.o(i._ZN8touchgfx6Screen14tearDownScreenEv) referenced from selectingmenuviewbase.o(.constdata__ZTV21SelectingMenuViewBase)
 <LI><a href="#[13c]">touchgfx::Screen::tearDownScreen()</a> from cookingviewbase.o(i._ZN8touchgfx6Screen14tearDownScreenEv) referenced from informationdemoviewbase.o(.constdata__ZTV23InformationDemoViewBase)
 <LI><a href="#[13c]">touchgfx::Screen::tearDownScreen()</a> from cookingviewbase.o(i._ZN8touchgfx6Screen14tearDownScreenEv) referenced from cookingviewbase.o(.constdata__ZTVN8touchgfx4ViewI16CookingPresenterEE)
 <LI><a href="#[13c]">touchgfx::Screen::tearDownScreen()</a> from cookingviewbase.o(i._ZN8touchgfx6Screen14tearDownScreenEv) referenced from settingsviewbase.o(.constdata__ZTVN8touchgfx4ViewI17SettingsPresenterEE)
 <LI><a href="#[13c]">touchgfx::Screen::tearDownScreen()</a> from cookingviewbase.o(i._ZN8touchgfx6Screen14tearDownScreenEv) referenced from informationviewbase.o(.constdata__ZTVN8touchgfx4ViewI20InformationPresenterEE)
 <LI><a href="#[13c]">touchgfx::Screen::tearDownScreen()</a> from cookingviewbase.o(i._ZN8touchgfx6Screen14tearDownScreenEv) referenced from splashscreenviewbase.o(.constdata__ZTVN8touchgfx4ViewI21SplashScreenPresenterEE)
 <LI><a href="#[13c]">touchgfx::Screen::tearDownScreen()</a> from cookingviewbase.o(i._ZN8touchgfx6Screen14tearDownScreenEv) referenced from selectingmenuviewbase.o(.constdata__ZTVN8touchgfx4ViewI22SelectingMenuPresenterEE)
 <LI><a href="#[13c]">touchgfx::Screen::tearDownScreen()</a> from cookingviewbase.o(i._ZN8touchgfx6Screen14tearDownScreenEv) referenced from informationdemoviewbase.o(.constdata__ZTVN8touchgfx4ViewI24InformationDemoPresenterEE)
 <LI><a href="#[13c]">touchgfx::Screen::tearDownScreen()</a> from cookingviewbase.o(i._ZN8touchgfx6Screen14tearDownScreenEv) referenced from screen.o(.constdata__ZTVN8touchgfx6ScreenE)
 <LI><a href="#[ee]">touchgfx::Screen::afterTransition()</a> from cookingview.o(i._ZN8touchgfx6Screen15afterTransitionEv) referenced from cookingview.o(.constdata__ZTV11CookingView)
 <LI><a href="#[ee]">touchgfx::Screen::afterTransition()</a> from cookingview.o(i._ZN8touchgfx6Screen15afterTransitionEv) referenced from settingsview.o(.constdata__ZTV12SettingsView)
 <LI><a href="#[ee]">touchgfx::Screen::afterTransition()</a> from cookingview.o(i._ZN8touchgfx6Screen15afterTransitionEv) referenced from cookingviewbase.o(.constdata__ZTV15CookingViewBase)
 <LI><a href="#[ee]">touchgfx::Screen::afterTransition()</a> from cookingview.o(i._ZN8touchgfx6Screen15afterTransitionEv) referenced from informationview.o(.constdata__ZTV15InformationView)
 <LI><a href="#[ee]">touchgfx::Screen::afterTransition()</a> from cookingview.o(i._ZN8touchgfx6Screen15afterTransitionEv) referenced from settingsviewbase.o(.constdata__ZTV16SettingsViewBase)
 <LI><a href="#[ee]">touchgfx::Screen::afterTransition()</a> from cookingview.o(i._ZN8touchgfx6Screen15afterTransitionEv) referenced from selectingmenuview.o(.constdata__ZTV17SelectingMenuView)
 <LI><a href="#[ee]">touchgfx::Screen::afterTransition()</a> from cookingview.o(i._ZN8touchgfx6Screen15afterTransitionEv) referenced from informationdemoview.o(.constdata__ZTV19InformationDemoView)
 <LI><a href="#[ee]">touchgfx::Screen::afterTransition()</a> from cookingview.o(i._ZN8touchgfx6Screen15afterTransitionEv) referenced from informationviewbase.o(.constdata__ZTV19InformationViewBase)
 <LI><a href="#[ee]">touchgfx::Screen::afterTransition()</a> from cookingview.o(i._ZN8touchgfx6Screen15afterTransitionEv) referenced from selectingmenuviewbase.o(.constdata__ZTV21SelectingMenuViewBase)
 <LI><a href="#[ee]">touchgfx::Screen::afterTransition()</a> from cookingview.o(i._ZN8touchgfx6Screen15afterTransitionEv) referenced from informationdemoviewbase.o(.constdata__ZTV23InformationDemoViewBase)
 <LI><a href="#[ee]">touchgfx::Screen::afterTransition()</a> from cookingview.o(i._ZN8touchgfx6Screen15afterTransitionEv) referenced from cookingviewbase.o(.constdata__ZTVN8touchgfx4ViewI16CookingPresenterEE)
 <LI><a href="#[ee]">touchgfx::Screen::afterTransition()</a> from cookingview.o(i._ZN8touchgfx6Screen15afterTransitionEv) referenced from settingsviewbase.o(.constdata__ZTVN8touchgfx4ViewI17SettingsPresenterEE)
 <LI><a href="#[ee]">touchgfx::Screen::afterTransition()</a> from cookingview.o(i._ZN8touchgfx6Screen15afterTransitionEv) referenced from informationviewbase.o(.constdata__ZTVN8touchgfx4ViewI20InformationPresenterEE)
 <LI><a href="#[ee]">touchgfx::Screen::afterTransition()</a> from cookingview.o(i._ZN8touchgfx6Screen15afterTransitionEv) referenced from splashscreenviewbase.o(.constdata__ZTVN8touchgfx4ViewI21SplashScreenPresenterEE)
 <LI><a href="#[ee]">touchgfx::Screen::afterTransition()</a> from cookingview.o(i._ZN8touchgfx6Screen15afterTransitionEv) referenced from selectingmenuviewbase.o(.constdata__ZTVN8touchgfx4ViewI22SelectingMenuPresenterEE)
 <LI><a href="#[ee]">touchgfx::Screen::afterTransition()</a> from cookingview.o(i._ZN8touchgfx6Screen15afterTransitionEv) referenced from informationdemoviewbase.o(.constdata__ZTVN8touchgfx4ViewI24InformationDemoPresenterEE)
 <LI><a href="#[ee]">touchgfx::Screen::afterTransition()</a> from cookingview.o(i._ZN8touchgfx6Screen15afterTransitionEv) referenced from screen.o(.constdata__ZTVN8touchgfx6ScreenE)
 <LI><a href="#[f1]">touchgfx::Screen::handleDragEvent(const touchgfx::DragEvent&)</a> from screen.o(i._ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE) referenced from cookingview.o(.constdata__ZTV11CookingView)
 <LI><a href="#[f1]">touchgfx::Screen::handleDragEvent(const touchgfx::DragEvent&)</a> from screen.o(i._ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE) referenced from settingsview.o(.constdata__ZTV12SettingsView)
 <LI><a href="#[f1]">touchgfx::Screen::handleDragEvent(const touchgfx::DragEvent&)</a> from screen.o(i._ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE) referenced from cookingviewbase.o(.constdata__ZTV15CookingViewBase)
 <LI><a href="#[f1]">touchgfx::Screen::handleDragEvent(const touchgfx::DragEvent&)</a> from screen.o(i._ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE) referenced from informationview.o(.constdata__ZTV15InformationView)
 <LI><a href="#[f1]">touchgfx::Screen::handleDragEvent(const touchgfx::DragEvent&)</a> from screen.o(i._ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE) referenced from settingsviewbase.o(.constdata__ZTV16SettingsViewBase)
 <LI><a href="#[f1]">touchgfx::Screen::handleDragEvent(const touchgfx::DragEvent&)</a> from screen.o(i._ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE) referenced from splashscreenview.o(.constdata__ZTV16SplashScreenView)
 <LI><a href="#[f1]">touchgfx::Screen::handleDragEvent(const touchgfx::DragEvent&)</a> from screen.o(i._ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE) referenced from selectingmenuview.o(.constdata__ZTV17SelectingMenuView)
 <LI><a href="#[f1]">touchgfx::Screen::handleDragEvent(const touchgfx::DragEvent&)</a> from screen.o(i._ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE) referenced from informationdemoview.o(.constdata__ZTV19InformationDemoView)
 <LI><a href="#[f1]">touchgfx::Screen::handleDragEvent(const touchgfx::DragEvent&)</a> from screen.o(i._ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE) referenced from informationviewbase.o(.constdata__ZTV19InformationViewBase)
 <LI><a href="#[f1]">touchgfx::Screen::handleDragEvent(const touchgfx::DragEvent&)</a> from screen.o(i._ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE) referenced from splashscreenviewbase.o(.constdata__ZTV20SplashScreenViewBase)
 <LI><a href="#[f1]">touchgfx::Screen::handleDragEvent(const touchgfx::DragEvent&)</a> from screen.o(i._ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE) referenced from selectingmenuviewbase.o(.constdata__ZTV21SelectingMenuViewBase)
 <LI><a href="#[f1]">touchgfx::Screen::handleDragEvent(const touchgfx::DragEvent&)</a> from screen.o(i._ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE) referenced from informationdemoviewbase.o(.constdata__ZTV23InformationDemoViewBase)
 <LI><a href="#[f1]">touchgfx::Screen::handleDragEvent(const touchgfx::DragEvent&)</a> from screen.o(i._ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE) referenced from cookingviewbase.o(.constdata__ZTVN8touchgfx4ViewI16CookingPresenterEE)
 <LI><a href="#[f1]">touchgfx::Screen::handleDragEvent(const touchgfx::DragEvent&)</a> from screen.o(i._ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE) referenced from settingsviewbase.o(.constdata__ZTVN8touchgfx4ViewI17SettingsPresenterEE)
 <LI><a href="#[f1]">touchgfx::Screen::handleDragEvent(const touchgfx::DragEvent&)</a> from screen.o(i._ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE) referenced from informationviewbase.o(.constdata__ZTVN8touchgfx4ViewI20InformationPresenterEE)
 <LI><a href="#[f1]">touchgfx::Screen::handleDragEvent(const touchgfx::DragEvent&)</a> from screen.o(i._ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE) referenced from splashscreenviewbase.o(.constdata__ZTVN8touchgfx4ViewI21SplashScreenPresenterEE)
 <LI><a href="#[f1]">touchgfx::Screen::handleDragEvent(const touchgfx::DragEvent&)</a> from screen.o(i._ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE) referenced from selectingmenuviewbase.o(.constdata__ZTVN8touchgfx4ViewI22SelectingMenuPresenterEE)
 <LI><a href="#[f1]">touchgfx::Screen::handleDragEvent(const touchgfx::DragEvent&)</a> from screen.o(i._ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE) referenced from informationdemoviewbase.o(.constdata__ZTVN8touchgfx4ViewI24InformationDemoPresenterEE)
 <LI><a href="#[f1]">touchgfx::Screen::handleDragEvent(const touchgfx::DragEvent&)</a> from screen.o(i._ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE) referenced from screen.o(.constdata__ZTVN8touchgfx6ScreenE)
 <LI><a href="#[13d]">touchgfx::Screen::handleTickEvent()</a> from splashscreenview.o(i._ZN8touchgfx6Screen15handleTickEventEv) referenced from cookingviewbase.o(.constdata__ZTV15CookingViewBase)
 <LI><a href="#[13d]">touchgfx::Screen::handleTickEvent()</a> from splashscreenview.o(i._ZN8touchgfx6Screen15handleTickEventEv) referenced from settingsviewbase.o(.constdata__ZTV16SettingsViewBase)
 <LI><a href="#[13d]">touchgfx::Screen::handleTickEvent()</a> from splashscreenview.o(i._ZN8touchgfx6Screen15handleTickEventEv) referenced from splashscreenview.o(.constdata__ZTV16SplashScreenView)
 <LI><a href="#[13d]">touchgfx::Screen::handleTickEvent()</a> from splashscreenview.o(i._ZN8touchgfx6Screen15handleTickEventEv) referenced from informationviewbase.o(.constdata__ZTV19InformationViewBase)
 <LI><a href="#[13d]">touchgfx::Screen::handleTickEvent()</a> from splashscreenview.o(i._ZN8touchgfx6Screen15handleTickEventEv) referenced from splashscreenviewbase.o(.constdata__ZTV20SplashScreenViewBase)
 <LI><a href="#[13d]">touchgfx::Screen::handleTickEvent()</a> from splashscreenview.o(i._ZN8touchgfx6Screen15handleTickEventEv) referenced from selectingmenuviewbase.o(.constdata__ZTV21SelectingMenuViewBase)
 <LI><a href="#[13d]">touchgfx::Screen::handleTickEvent()</a> from splashscreenview.o(i._ZN8touchgfx6Screen15handleTickEventEv) referenced from informationdemoviewbase.o(.constdata__ZTV23InformationDemoViewBase)
 <LI><a href="#[13d]">touchgfx::Screen::handleTickEvent()</a> from splashscreenview.o(i._ZN8touchgfx6Screen15handleTickEventEv) referenced from cookingviewbase.o(.constdata__ZTVN8touchgfx4ViewI16CookingPresenterEE)
 <LI><a href="#[13d]">touchgfx::Screen::handleTickEvent()</a> from splashscreenview.o(i._ZN8touchgfx6Screen15handleTickEventEv) referenced from settingsviewbase.o(.constdata__ZTVN8touchgfx4ViewI17SettingsPresenterEE)
 <LI><a href="#[13d]">touchgfx::Screen::handleTickEvent()</a> from splashscreenview.o(i._ZN8touchgfx6Screen15handleTickEventEv) referenced from informationviewbase.o(.constdata__ZTVN8touchgfx4ViewI20InformationPresenterEE)
 <LI><a href="#[13d]">touchgfx::Screen::handleTickEvent()</a> from splashscreenview.o(i._ZN8touchgfx6Screen15handleTickEventEv) referenced from splashscreenviewbase.o(.constdata__ZTVN8touchgfx4ViewI21SplashScreenPresenterEE)
 <LI><a href="#[13d]">touchgfx::Screen::handleTickEvent()</a> from splashscreenview.o(i._ZN8touchgfx6Screen15handleTickEventEv) referenced from selectingmenuviewbase.o(.constdata__ZTVN8touchgfx4ViewI22SelectingMenuPresenterEE)
 <LI><a href="#[13d]">touchgfx::Screen::handleTickEvent()</a> from splashscreenview.o(i._ZN8touchgfx6Screen15handleTickEventEv) referenced from informationdemoviewbase.o(.constdata__ZTVN8touchgfx4ViewI24InformationDemoPresenterEE)
 <LI><a href="#[13d]">touchgfx::Screen::handleTickEvent()</a> from splashscreenview.o(i._ZN8touchgfx6Screen15handleTickEventEv) referenced from screen.o(.constdata__ZTVN8touchgfx6ScreenE)
 <LI><a href="#[f0]">touchgfx::Screen::handleClickEvent(const touchgfx::ClickEvent&)</a> from screen.o(i._ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE) referenced from cookingview.o(.constdata__ZTV11CookingView)
 <LI><a href="#[f0]">touchgfx::Screen::handleClickEvent(const touchgfx::ClickEvent&)</a> from screen.o(i._ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE) referenced from settingsview.o(.constdata__ZTV12SettingsView)
 <LI><a href="#[f0]">touchgfx::Screen::handleClickEvent(const touchgfx::ClickEvent&)</a> from screen.o(i._ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE) referenced from cookingviewbase.o(.constdata__ZTV15CookingViewBase)
 <LI><a href="#[f0]">touchgfx::Screen::handleClickEvent(const touchgfx::ClickEvent&)</a> from screen.o(i._ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE) referenced from informationview.o(.constdata__ZTV15InformationView)
 <LI><a href="#[f0]">touchgfx::Screen::handleClickEvent(const touchgfx::ClickEvent&)</a> from screen.o(i._ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE) referenced from settingsviewbase.o(.constdata__ZTV16SettingsViewBase)
 <LI><a href="#[f0]">touchgfx::Screen::handleClickEvent(const touchgfx::ClickEvent&)</a> from screen.o(i._ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE) referenced from splashscreenview.o(.constdata__ZTV16SplashScreenView)
 <LI><a href="#[f0]">touchgfx::Screen::handleClickEvent(const touchgfx::ClickEvent&)</a> from screen.o(i._ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE) referenced from selectingmenuview.o(.constdata__ZTV17SelectingMenuView)
 <LI><a href="#[f0]">touchgfx::Screen::handleClickEvent(const touchgfx::ClickEvent&)</a> from screen.o(i._ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE) referenced from informationdemoview.o(.constdata__ZTV19InformationDemoView)
 <LI><a href="#[f0]">touchgfx::Screen::handleClickEvent(const touchgfx::ClickEvent&)</a> from screen.o(i._ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE) referenced from informationviewbase.o(.constdata__ZTV19InformationViewBase)
 <LI><a href="#[f0]">touchgfx::Screen::handleClickEvent(const touchgfx::ClickEvent&)</a> from screen.o(i._ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE) referenced from splashscreenviewbase.o(.constdata__ZTV20SplashScreenViewBase)
 <LI><a href="#[f0]">touchgfx::Screen::handleClickEvent(const touchgfx::ClickEvent&)</a> from screen.o(i._ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE) referenced from selectingmenuviewbase.o(.constdata__ZTV21SelectingMenuViewBase)
 <LI><a href="#[f0]">touchgfx::Screen::handleClickEvent(const touchgfx::ClickEvent&)</a> from screen.o(i._ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE) referenced from informationdemoviewbase.o(.constdata__ZTV23InformationDemoViewBase)
 <LI><a href="#[f0]">touchgfx::Screen::handleClickEvent(const touchgfx::ClickEvent&)</a> from screen.o(i._ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE) referenced from cookingviewbase.o(.constdata__ZTVN8touchgfx4ViewI16CookingPresenterEE)
 <LI><a href="#[f0]">touchgfx::Screen::handleClickEvent(const touchgfx::ClickEvent&)</a> from screen.o(i._ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE) referenced from settingsviewbase.o(.constdata__ZTVN8touchgfx4ViewI17SettingsPresenterEE)
 <LI><a href="#[f0]">touchgfx::Screen::handleClickEvent(const touchgfx::ClickEvent&)</a> from screen.o(i._ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE) referenced from informationviewbase.o(.constdata__ZTVN8touchgfx4ViewI20InformationPresenterEE)
 <LI><a href="#[f0]">touchgfx::Screen::handleClickEvent(const touchgfx::ClickEvent&)</a> from screen.o(i._ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE) referenced from splashscreenviewbase.o(.constdata__ZTVN8touchgfx4ViewI21SplashScreenPresenterEE)
 <LI><a href="#[f0]">touchgfx::Screen::handleClickEvent(const touchgfx::ClickEvent&)</a> from screen.o(i._ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE) referenced from selectingmenuviewbase.o(.constdata__ZTVN8touchgfx4ViewI22SelectingMenuPresenterEE)
 <LI><a href="#[f0]">touchgfx::Screen::handleClickEvent(const touchgfx::ClickEvent&)</a> from screen.o(i._ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE) referenced from informationdemoviewbase.o(.constdata__ZTVN8touchgfx4ViewI24InformationDemoPresenterEE)
 <LI><a href="#[f0]">touchgfx::Screen::handleClickEvent(const touchgfx::ClickEvent&)</a> from screen.o(i._ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE) referenced from screen.o(.constdata__ZTVN8touchgfx6ScreenE)
 <LI><a href="#[f2]">touchgfx::Screen::handleGestureEvent(const touchgfx::GestureEvent&)</a> from screen.o(i._ZN8touchgfx6Screen18handleGestureEventERKNS_12GestureEventE) referenced from cookingview.o(.constdata__ZTV11CookingView)
 <LI><a href="#[f2]">touchgfx::Screen::handleGestureEvent(const touchgfx::GestureEvent&)</a> from screen.o(i._ZN8touchgfx6Screen18handleGestureEventERKNS_12GestureEventE) referenced from settingsview.o(.constdata__ZTV12SettingsView)
 <LI><a href="#[f2]">touchgfx::Screen::handleGestureEvent(const touchgfx::GestureEvent&)</a> from screen.o(i._ZN8touchgfx6Screen18handleGestureEventERKNS_12GestureEventE) referenced from cookingviewbase.o(.constdata__ZTV15CookingViewBase)
 <LI><a href="#[f2]">touchgfx::Screen::handleGestureEvent(const touchgfx::GestureEvent&)</a> from screen.o(i._ZN8touchgfx6Screen18handleGestureEventERKNS_12GestureEventE) referenced from informationview.o(.constdata__ZTV15InformationView)
 <LI><a href="#[f2]">touchgfx::Screen::handleGestureEvent(const touchgfx::GestureEvent&)</a> from screen.o(i._ZN8touchgfx6Screen18handleGestureEventERKNS_12GestureEventE) referenced from settingsviewbase.o(.constdata__ZTV16SettingsViewBase)
 <LI><a href="#[f2]">touchgfx::Screen::handleGestureEvent(const touchgfx::GestureEvent&)</a> from screen.o(i._ZN8touchgfx6Screen18handleGestureEventERKNS_12GestureEventE) referenced from splashscreenview.o(.constdata__ZTV16SplashScreenView)
 <LI><a href="#[f2]">touchgfx::Screen::handleGestureEvent(const touchgfx::GestureEvent&)</a> from screen.o(i._ZN8touchgfx6Screen18handleGestureEventERKNS_12GestureEventE) referenced from selectingmenuview.o(.constdata__ZTV17SelectingMenuView)
 <LI><a href="#[f2]">touchgfx::Screen::handleGestureEvent(const touchgfx::GestureEvent&)</a> from screen.o(i._ZN8touchgfx6Screen18handleGestureEventERKNS_12GestureEventE) referenced from informationdemoview.o(.constdata__ZTV19InformationDemoView)
 <LI><a href="#[f2]">touchgfx::Screen::handleGestureEvent(const touchgfx::GestureEvent&)</a> from screen.o(i._ZN8touchgfx6Screen18handleGestureEventERKNS_12GestureEventE) referenced from informationviewbase.o(.constdata__ZTV19InformationViewBase)
 <LI><a href="#[f2]">touchgfx::Screen::handleGestureEvent(const touchgfx::GestureEvent&)</a> from screen.o(i._ZN8touchgfx6Screen18handleGestureEventERKNS_12GestureEventE) referenced from splashscreenviewbase.o(.constdata__ZTV20SplashScreenViewBase)
 <LI><a href="#[f2]">touchgfx::Screen::handleGestureEvent(const touchgfx::GestureEvent&)</a> from screen.o(i._ZN8touchgfx6Screen18handleGestureEventERKNS_12GestureEventE) referenced from selectingmenuviewbase.o(.constdata__ZTV21SelectingMenuViewBase)
 <LI><a href="#[f2]">touchgfx::Screen::handleGestureEvent(const touchgfx::GestureEvent&)</a> from screen.o(i._ZN8touchgfx6Screen18handleGestureEventERKNS_12GestureEventE) referenced from informationdemoviewbase.o(.constdata__ZTV23InformationDemoViewBase)
 <LI><a href="#[f2]">touchgfx::Screen::handleGestureEvent(const touchgfx::GestureEvent&)</a> from screen.o(i._ZN8touchgfx6Screen18handleGestureEventERKNS_12GestureEventE) referenced from cookingviewbase.o(.constdata__ZTVN8touchgfx4ViewI16CookingPresenterEE)
 <LI><a href="#[f2]">touchgfx::Screen::handleGestureEvent(const touchgfx::GestureEvent&)</a> from screen.o(i._ZN8touchgfx6Screen18handleGestureEventERKNS_12GestureEventE) referenced from settingsviewbase.o(.constdata__ZTVN8touchgfx4ViewI17SettingsPresenterEE)
 <LI><a href="#[f2]">touchgfx::Screen::handleGestureEvent(const touchgfx::GestureEvent&)</a> from screen.o(i._ZN8touchgfx6Screen18handleGestureEventERKNS_12GestureEventE) referenced from informationviewbase.o(.constdata__ZTVN8touchgfx4ViewI20InformationPresenterEE)
 <LI><a href="#[f2]">touchgfx::Screen::handleGestureEvent(const touchgfx::GestureEvent&)</a> from screen.o(i._ZN8touchgfx6Screen18handleGestureEventERKNS_12GestureEventE) referenced from splashscreenviewbase.o(.constdata__ZTVN8touchgfx4ViewI21SplashScreenPresenterEE)
 <LI><a href="#[f2]">touchgfx::Screen::handleGestureEvent(const touchgfx::GestureEvent&)</a> from screen.o(i._ZN8touchgfx6Screen18handleGestureEventERKNS_12GestureEventE) referenced from selectingmenuviewbase.o(.constdata__ZTVN8touchgfx4ViewI22SelectingMenuPresenterEE)
 <LI><a href="#[f2]">touchgfx::Screen::handleGestureEvent(const touchgfx::GestureEvent&)</a> from screen.o(i._ZN8touchgfx6Screen18handleGestureEventERKNS_12GestureEventE) referenced from informationdemoviewbase.o(.constdata__ZTVN8touchgfx4ViewI24InformationDemoPresenterEE)
 <LI><a href="#[f2]">touchgfx::Screen::handleGestureEvent(const touchgfx::GestureEvent&)</a> from screen.o(i._ZN8touchgfx6Screen18handleGestureEventERKNS_12GestureEventE) referenced from screen.o(.constdata__ZTVN8touchgfx6ScreenE)
 <LI><a href="#[ec]">touchgfx::Screen::draw(touchgfx::Rect&)</a> from screen.o(i._ZN8touchgfx6Screen4drawERNS_4RectE) referenced from cookingview.o(.constdata__ZTV11CookingView)
 <LI><a href="#[ec]">touchgfx::Screen::draw(touchgfx::Rect&)</a> from screen.o(i._ZN8touchgfx6Screen4drawERNS_4RectE) referenced from settingsview.o(.constdata__ZTV12SettingsView)
 <LI><a href="#[ec]">touchgfx::Screen::draw(touchgfx::Rect&)</a> from screen.o(i._ZN8touchgfx6Screen4drawERNS_4RectE) referenced from cookingviewbase.o(.constdata__ZTV15CookingViewBase)
 <LI><a href="#[ec]">touchgfx::Screen::draw(touchgfx::Rect&)</a> from screen.o(i._ZN8touchgfx6Screen4drawERNS_4RectE) referenced from informationview.o(.constdata__ZTV15InformationView)
 <LI><a href="#[ec]">touchgfx::Screen::draw(touchgfx::Rect&)</a> from screen.o(i._ZN8touchgfx6Screen4drawERNS_4RectE) referenced from settingsviewbase.o(.constdata__ZTV16SettingsViewBase)
 <LI><a href="#[ec]">touchgfx::Screen::draw(touchgfx::Rect&)</a> from screen.o(i._ZN8touchgfx6Screen4drawERNS_4RectE) referenced from splashscreenview.o(.constdata__ZTV16SplashScreenView)
 <LI><a href="#[ec]">touchgfx::Screen::draw(touchgfx::Rect&)</a> from screen.o(i._ZN8touchgfx6Screen4drawERNS_4RectE) referenced from selectingmenuview.o(.constdata__ZTV17SelectingMenuView)
 <LI><a href="#[ec]">touchgfx::Screen::draw(touchgfx::Rect&)</a> from screen.o(i._ZN8touchgfx6Screen4drawERNS_4RectE) referenced from informationdemoview.o(.constdata__ZTV19InformationDemoView)
 <LI><a href="#[ec]">touchgfx::Screen::draw(touchgfx::Rect&)</a> from screen.o(i._ZN8touchgfx6Screen4drawERNS_4RectE) referenced from informationviewbase.o(.constdata__ZTV19InformationViewBase)
 <LI><a href="#[ec]">touchgfx::Screen::draw(touchgfx::Rect&)</a> from screen.o(i._ZN8touchgfx6Screen4drawERNS_4RectE) referenced from splashscreenviewbase.o(.constdata__ZTV20SplashScreenViewBase)
 <LI><a href="#[ec]">touchgfx::Screen::draw(touchgfx::Rect&)</a> from screen.o(i._ZN8touchgfx6Screen4drawERNS_4RectE) referenced from selectingmenuviewbase.o(.constdata__ZTV21SelectingMenuViewBase)
 <LI><a href="#[ec]">touchgfx::Screen::draw(touchgfx::Rect&)</a> from screen.o(i._ZN8touchgfx6Screen4drawERNS_4RectE) referenced from informationdemoviewbase.o(.constdata__ZTV23InformationDemoViewBase)
 <LI><a href="#[ec]">touchgfx::Screen::draw(touchgfx::Rect&)</a> from screen.o(i._ZN8touchgfx6Screen4drawERNS_4RectE) referenced from cookingviewbase.o(.constdata__ZTVN8touchgfx4ViewI16CookingPresenterEE)
 <LI><a href="#[ec]">touchgfx::Screen::draw(touchgfx::Rect&)</a> from screen.o(i._ZN8touchgfx6Screen4drawERNS_4RectE) referenced from settingsviewbase.o(.constdata__ZTVN8touchgfx4ViewI17SettingsPresenterEE)
 <LI><a href="#[ec]">touchgfx::Screen::draw(touchgfx::Rect&)</a> from screen.o(i._ZN8touchgfx6Screen4drawERNS_4RectE) referenced from informationviewbase.o(.constdata__ZTVN8touchgfx4ViewI20InformationPresenterEE)
 <LI><a href="#[ec]">touchgfx::Screen::draw(touchgfx::Rect&)</a> from screen.o(i._ZN8touchgfx6Screen4drawERNS_4RectE) referenced from splashscreenviewbase.o(.constdata__ZTVN8touchgfx4ViewI21SplashScreenPresenterEE)
 <LI><a href="#[ec]">touchgfx::Screen::draw(touchgfx::Rect&)</a> from screen.o(i._ZN8touchgfx6Screen4drawERNS_4RectE) referenced from selectingmenuviewbase.o(.constdata__ZTVN8touchgfx4ViewI22SelectingMenuPresenterEE)
 <LI><a href="#[ec]">touchgfx::Screen::draw(touchgfx::Rect&)</a> from screen.o(i._ZN8touchgfx6Screen4drawERNS_4RectE) referenced from informationdemoviewbase.o(.constdata__ZTVN8touchgfx4ViewI24InformationDemoPresenterEE)
 <LI><a href="#[ec]">touchgfx::Screen::draw(touchgfx::Rect&)</a> from screen.o(i._ZN8touchgfx6Screen4drawERNS_4RectE) referenced from screen.o(.constdata__ZTVN8touchgfx6ScreenE)
 <LI><a href="#[255]">touchgfx::Screen::~Screen()</a> from screen.o(i._ZN8touchgfx6ScreenD1Ev) referenced from screen.o(.constdata__ZTVN8touchgfx6ScreenE)
 <LI><a href="#[1cf]">touchgfx::Widget::getLastChild(short, short, touchgfx::Drawable**)</a> from cookingviewbase.o(i._ZN8touchgfx6Widget12getLastChildEssPPNS_8DrawableE) referenced from canvaswidget.o(.constdata__ZTVN8touchgfx12CanvasWidgetE)
 <LI><a href="#[1cf]">touchgfx::Widget::getLastChild(short, short, touchgfx::Drawable**)</a> from cookingviewbase.o(i._ZN8touchgfx6Widget12getLastChildEssPPNS_8DrawableE) referenced from cookingviewbase.o(.constdata__ZTVN8touchgfx12FadeAnimatorINS_24TextAreaWithTwoWildcardsEEE)
 <LI><a href="#[1cf]">touchgfx::Widget::getLastChild(short, short, touchgfx::Drawable**)</a> from cookingviewbase.o(i._ZN8touchgfx6Widget12getLastChildEssPPNS_8DrawableE) referenced from cookingviewbase.o(.constdata__ZTVN8touchgfx12FadeAnimatorINS_5ImageEEE)
 <LI><a href="#[1cf]">touchgfx::Widget::getLastChild(short, short, touchgfx::Drawable**)</a> from cookingviewbase.o(i._ZN8touchgfx6Widget12getLastChildEssPPNS_8DrawableE) referenced from cookingviewbase.o(.constdata__ZTVN8touchgfx12FadeAnimatorINS_6ButtonEEE)
 <LI><a href="#[1cf]">touchgfx::Widget::getLastChild(short, short, touchgfx::Drawable**)</a> from cookingviewbase.o(i._ZN8touchgfx6Widget12getLastChildEssPPNS_8DrawableE) referenced from cookingviewbase.o(.constdata__ZTVN8touchgfx12FadeAnimatorINS_8TextAreaEEE)
 <LI><a href="#[1cf]">touchgfx::Widget::getLastChild(short, short, touchgfx::Drawable**)</a> from cookingviewbase.o(i._ZN8touchgfx6Widget12getLastChildEssPPNS_8DrawableE) referenced from boxwithborder.o(.constdata__ZTVN8touchgfx13BoxWithBorderE)
 <LI><a href="#[1cf]">touchgfx::Widget::getLastChild(short, short, touchgfx::Drawable**)</a> from cookingviewbase.o(i._ZN8touchgfx6Widget12getLastChildEssPPNS_8DrawableE) referenced from abstractbutton.o(.constdata__ZTVN8touchgfx14AbstractButtonE)
 <LI><a href="#[1cf]">touchgfx::Widget::getLastChild(short, short, touchgfx::Drawable**)</a> from cookingviewbase.o(i._ZN8touchgfx6Widget12getLastChildEssPPNS_8DrawableE) referenced from settingsviewbase.o(.constdata__ZTVN8touchgfx23TextAreaWithOneWildcardE)
 <LI><a href="#[1cf]">touchgfx::Widget::getLastChild(short, short, touchgfx::Drawable**)</a> from cookingviewbase.o(i._ZN8touchgfx6Widget12getLastChildEssPPNS_8DrawableE) referenced from cookingviewbase.o(.constdata__ZTVN8touchgfx24TextAreaWithTwoWildcardsE)
 <LI><a href="#[1cf]">touchgfx::Widget::getLastChild(short, short, touchgfx::Drawable**)</a> from cookingviewbase.o(i._ZN8touchgfx6Widget12getLastChildEssPPNS_8DrawableE) referenced from textareawithwildcard.o(.constdata__ZTVN8touchgfx24TextAreaWithWildcardBaseE)
 <LI><a href="#[1cf]">touchgfx::Widget::getLastChild(short, short, touchgfx::Drawable**)</a> from cookingviewbase.o(i._ZN8touchgfx6Widget12getLastChildEssPPNS_8DrawableE) referenced from box.o(.constdata__ZTVN8touchgfx3BoxE)
 <LI><a href="#[1cf]">touchgfx::Widget::getLastChild(short, short, touchgfx::Drawable**)</a> from cookingviewbase.o(i._ZN8touchgfx6Widget12getLastChildEssPPNS_8DrawableE) referenced from image.o(.constdata__ZTVN8touchgfx5ImageE)
 <LI><a href="#[1cf]">touchgfx::Widget::getLastChild(short, short, touchgfx::Drawable**)</a> from cookingviewbase.o(i._ZN8touchgfx6Widget12getLastChildEssPPNS_8DrawableE) referenced from button.o(.constdata__ZTVN8touchgfx6ButtonE)
 <LI><a href="#[1cf]">touchgfx::Widget::getLastChild(short, short, touchgfx::Drawable**)</a> from cookingviewbase.o(i._ZN8touchgfx6Widget12getLastChildEssPPNS_8DrawableE) referenced from circle.o(.constdata__ZTVN8touchgfx6CircleE)
 <LI><a href="#[1cf]">touchgfx::Widget::getLastChild(short, short, touchgfx::Drawable**)</a> from cookingviewbase.o(i._ZN8touchgfx6Widget12getLastChildEssPPNS_8DrawableE) referenced from cookingviewbase.o(.constdata__ZTVN8touchgfx6WidgetE)
 <LI><a href="#[1cf]">touchgfx::Widget::getLastChild(short, short, touchgfx::Drawable**)</a> from cookingviewbase.o(i._ZN8touchgfx6Widget12getLastChildEssPPNS_8DrawableE) referenced from textarea.o(.constdata__ZTVN8touchgfx8TextAreaE)
 <LI><a href="#[256]">touchgfx::Widget::~Widget__sub_object()</a> from cookingviewbase.o(i._ZN8touchgfx6WidgetD2Ev) referenced from cookingviewbase.o(.constdata__ZTVN8touchgfx6WidgetE)
 <LI><a href="#[257]">touchgfx::Outline::~Outline()</a> from outline.o(i._ZN8touchgfx7OutlineD1Ev) referenced from outline.o(.constdata__ZTVN8touchgfx7OutlineE)
 <LI><a href="#[259]">touchgfx::Callback&lang;CookingViewBase, const touchgfx::AbstractButton&, void, void&rang;::execute(const touchgfx::AbstractButton&)</a> from cookingviewbase.o(t._ZN8touchgfx8CallbackI15CookingViewBaseRKNS_14AbstractButtonEvvE7executeES4_) referenced from cookingviewbase.o(.constdata__ZTVN8touchgfx8CallbackI15CookingViewBaseRKNS_14AbstractButtonEvvEE)
 <LI><a href="#[258]">touchgfx::Callback&lang;CookingViewBase, const touchgfx::AbstractButton&, void, void&rang;::~Callback()</a> from cookingviewbase.o(i._ZN8touchgfx8CallbackI15CookingViewBaseRKNS_14AbstractButtonEvvED1Ev) referenced from cookingviewbase.o(.constdata__ZTVN8touchgfx8CallbackI15CookingViewBaseRKNS_14AbstractButtonEvvEE)
 <LI><a href="#[25c]">touchgfx::Callback&lang;SettingsViewBase, const touchgfx::AbstractButton&, void, void&rang;::execute(const touchgfx::AbstractButton&)</a> from settingsviewbase.o(t._ZN8touchgfx8CallbackI16SettingsViewBaseRKNS_14AbstractButtonEvvE7executeES4_) referenced from settingsviewbase.o(.constdata__ZTVN8touchgfx8CallbackI16SettingsViewBaseRKNS_14AbstractButtonEvvEE)
 <LI><a href="#[25b]">touchgfx::Callback&lang;SettingsViewBase, const touchgfx::AbstractButton&, void, void&rang;::~Callback()</a> from settingsviewbase.o(i._ZN8touchgfx8CallbackI16SettingsViewBaseRKNS_14AbstractButtonEvvED1Ev) referenced from settingsviewbase.o(.constdata__ZTVN8touchgfx8CallbackI16SettingsViewBaseRKNS_14AbstractButtonEvvEE)
 <LI><a href="#[25f]">touchgfx::Callback&lang;SettingsViewBase, const touchgfx::AbstractButtonContainer&, void, void&rang;::execute(const touchgfx::AbstractButtonContainer&)</a> from settingsviewbase.o(t._ZN8touchgfx8CallbackI16SettingsViewBaseRKNS_23AbstractButtonContainerEvvE7executeES4_) referenced from settingsviewbase.o(.constdata__ZTVN8touchgfx8CallbackI16SettingsViewBaseRKNS_23AbstractButtonContainerEvvEE)
 <LI><a href="#[25e]">touchgfx::Callback&lang;SettingsViewBase, const touchgfx::AbstractButtonContainer&, void, void&rang;::~Callback()</a> from settingsviewbase.o(i._ZN8touchgfx8CallbackI16SettingsViewBaseRKNS_23AbstractButtonContainerEvvED1Ev) referenced from settingsviewbase.o(.constdata__ZTVN8touchgfx8CallbackI16SettingsViewBaseRKNS_23AbstractButtonContainerEvvEE)
 <LI><a href="#[262]">touchgfx::Callback&lang;InformationViewBase, const touchgfx::AbstractButtonContainer&, void, void&rang;::execute(const touchgfx::AbstractButtonContainer&)</a> from informationviewbase.o(t._ZN8touchgfx8CallbackI19InformationViewBaseRKNS_23AbstractButtonContainerEvvE7executeES4_) referenced from informationviewbase.o(.constdata__ZTVN8touchgfx8CallbackI19InformationViewBaseRKNS_23AbstractButtonContainerEvvEE)
 <LI><a href="#[261]">touchgfx::Callback&lang;InformationViewBase, const touchgfx::AbstractButtonContainer&, void, void&rang;::~Callback()</a> from informationviewbase.o(i._ZN8touchgfx8CallbackI19InformationViewBaseRKNS_23AbstractButtonContainerEvvED1Ev) referenced from informationviewbase.o(.constdata__ZTVN8touchgfx8CallbackI19InformationViewBaseRKNS_23AbstractButtonContainerEvvEE)
 <LI><a href="#[265]">touchgfx::Callback&lang;SplashScreenViewBase, const touchgfx::FadeAnimator&lang;touchgfx::Image&rang;&, void, void&rang;::execute(const touchgfx::FadeAnimator&lang;touchgfx::Image&rang;&)</a> from splashscreenviewbase.o(t._ZN8touchgfx8CallbackI20SplashScreenViewBaseRKNS_12FadeAnimatorINS_5ImageEEEvvE7executeES6_) referenced from splashscreenviewbase.o(.constdata__ZTVN8touchgfx8CallbackI20SplashScreenViewBaseRKNS_12FadeAnimatorINS_5ImageEEEvvEE)
 <LI><a href="#[264]">touchgfx::Callback&lang;SplashScreenViewBase, const touchgfx::FadeAnimator&lang;touchgfx::Image&rang;&, void, void&rang;::~Callback()</a> from splashscreenviewbase.o(i._ZN8touchgfx8CallbackI20SplashScreenViewBaseRKNS_12FadeAnimatorINS_5ImageEEEvvED1Ev) referenced from splashscreenviewbase.o(.constdata__ZTVN8touchgfx8CallbackI20SplashScreenViewBaseRKNS_12FadeAnimatorINS_5ImageEEEvvEE)
 <LI><a href="#[268]">touchgfx::Callback&lang;SelectingMenuViewBase, const touchgfx::AbstractButton&, void, void&rang;::execute(const touchgfx::AbstractButton&)</a> from selectingmenuviewbase.o(t._ZN8touchgfx8CallbackI21SelectingMenuViewBaseRKNS_14AbstractButtonEvvE7executeES4_) referenced from selectingmenuviewbase.o(.constdata__ZTVN8touchgfx8CallbackI21SelectingMenuViewBaseRKNS_14AbstractButtonEvvEE)
 <LI><a href="#[267]">touchgfx::Callback&lang;SelectingMenuViewBase, const touchgfx::AbstractButton&, void, void&rang;::~Callback()</a> from selectingmenuviewbase.o(i._ZN8touchgfx8CallbackI21SelectingMenuViewBaseRKNS_14AbstractButtonEvvED1Ev) referenced from selectingmenuviewbase.o(.constdata__ZTVN8touchgfx8CallbackI21SelectingMenuViewBaseRKNS_14AbstractButtonEvvEE)
 <LI><a href="#[26b]">touchgfx::Callback&lang;SelectingMenuViewBase, const touchgfx::AbstractButtonContainer&, void, void&rang;::execute(const touchgfx::AbstractButtonContainer&)</a> from selectingmenuviewbase.o(t._ZN8touchgfx8CallbackI21SelectingMenuViewBaseRKNS_23AbstractButtonContainerEvvE7executeES4_) referenced from selectingmenuviewbase.o(.constdata__ZTVN8touchgfx8CallbackI21SelectingMenuViewBaseRKNS_23AbstractButtonContainerEvvEE)
 <LI><a href="#[26a]">touchgfx::Callback&lang;SelectingMenuViewBase, const touchgfx::AbstractButtonContainer&, void, void&rang;::~Callback()</a> from selectingmenuviewbase.o(i._ZN8touchgfx8CallbackI21SelectingMenuViewBaseRKNS_23AbstractButtonContainerEvvED1Ev) referenced from selectingmenuviewbase.o(.constdata__ZTVN8touchgfx8CallbackI21SelectingMenuViewBaseRKNS_23AbstractButtonContainerEvvEE)
 <LI><a href="#[26e]">touchgfx::Callback&lang;FrontendApplicationBase, void, void, void&rang;::execute()</a> from frontendapplicationbase.o(t._ZN8touchgfx8CallbackI23FrontendApplicationBasevvvE7executeEv) referenced from frontendapplicationbase.o(.constdata__ZTVN8touchgfx8CallbackI23FrontendApplicationBasevvvEE)
 <LI><a href="#[26d]">touchgfx::Callback&lang;FrontendApplicationBase, void, void, void&rang;::~Callback()</a> from frontendapplicationbase.o(i._ZN8touchgfx8CallbackI23FrontendApplicationBasevvvED1Ev) referenced from frontendapplicationbase.o(.constdata__ZTVN8touchgfx8CallbackI23FrontendApplicationBasevvvEE)
 <LI><a href="#[271]">touchgfx::Callback&lang;InformationDemoViewBase, const touchgfx::AbstractButtonContainer&, void, void&rang;::execute(const touchgfx::AbstractButtonContainer&)</a> from informationdemoviewbase.o(t._ZN8touchgfx8CallbackI23InformationDemoViewBaseRKNS_23AbstractButtonContainerEvvE7executeES4_) referenced from informationdemoviewbase.o(.constdata__ZTVN8touchgfx8CallbackI23InformationDemoViewBaseRKNS_23AbstractButtonContainerEvvEE)
 <LI><a href="#[270]">touchgfx::Callback&lang;InformationDemoViewBase, const touchgfx::AbstractButtonContainer&, void, void&rang;::~Callback()</a> from informationdemoviewbase.o(i._ZN8touchgfx8CallbackI23InformationDemoViewBaseRKNS_23AbstractButtonContainerEvvED1Ev) referenced from informationdemoviewbase.o(.constdata__ZTVN8touchgfx8CallbackI23InformationDemoViewBaseRKNS_23AbstractButtonContainerEvvEE)
 <LI><a href="#[1da]">touchgfx::Drawable::moveRelative(short, short)</a> from drawable.o(i._ZN8touchgfx8Drawable12moveRelativeEss) referenced from canvaswidget.o(.constdata__ZTVN8touchgfx12CanvasWidgetE)
 <LI><a href="#[1da]">touchgfx::Drawable::moveRelative(short, short)</a> from drawable.o(i._ZN8touchgfx8Drawable12moveRelativeEss) referenced from cookingviewbase.o(.constdata__ZTVN8touchgfx12FadeAnimatorINS_24TextAreaWithTwoWildcardsEEE)
 <LI><a href="#[1da]">touchgfx::Drawable::moveRelative(short, short)</a> from drawable.o(i._ZN8touchgfx8Drawable12moveRelativeEss) referenced from cookingviewbase.o(.constdata__ZTVN8touchgfx12FadeAnimatorINS_5ImageEEE)
 <LI><a href="#[1da]">touchgfx::Drawable::moveRelative(short, short)</a> from drawable.o(i._ZN8touchgfx8Drawable12moveRelativeEss) referenced from cookingviewbase.o(.constdata__ZTVN8touchgfx12FadeAnimatorINS_6ButtonEEE)
 <LI><a href="#[1da]">touchgfx::Drawable::moveRelative(short, short)</a> from drawable.o(i._ZN8touchgfx8Drawable12moveRelativeEss) referenced from cookingviewbase.o(.constdata__ZTVN8touchgfx12FadeAnimatorINS_8TextAreaEEE)
 <LI><a href="#[1da]">touchgfx::Drawable::moveRelative(short, short)</a> from drawable.o(i._ZN8touchgfx8Drawable12moveRelativeEss) referenced from selectingmenuviewbase.o(.constdata__ZTVN8touchgfx12MoveAnimatorINS_9ContainerEEE)
 <LI><a href="#[1da]">touchgfx::Drawable::moveRelative(short, short)</a> from drawable.o(i._ZN8touchgfx8Drawable12moveRelativeEss) referenced from boxwithborder.o(.constdata__ZTVN8touchgfx13BoxWithBorderE)
 <LI><a href="#[1da]">touchgfx::Drawable::moveRelative(short, short)</a> from drawable.o(i._ZN8touchgfx8Drawable12moveRelativeEss) referenced from abstractbutton.o(.constdata__ZTVN8touchgfx14AbstractButtonE)
 <LI><a href="#[1da]">touchgfx::Drawable::moveRelative(short, short)</a> from drawable.o(i._ZN8touchgfx8Drawable12moveRelativeEss) referenced from informationdemoviewbase.o(.constdata__ZTVN8touchgfx18ClickButtonTriggerE)
 <LI><a href="#[1da]">touchgfx::Drawable::moveRelative(short, short)</a> from drawable.o(i._ZN8touchgfx8Drawable12moveRelativeEss) referenced from informationdemoviewbase.o(.constdata__ZTVN8touchgfx23AbstractButtonContainerE)
 <LI><a href="#[1da]">touchgfx::Drawable::moveRelative(short, short)</a> from drawable.o(i._ZN8touchgfx8Drawable12moveRelativeEss) referenced from settingsviewbase.o(.constdata__ZTVN8touchgfx23TextAreaWithOneWildcardE)
 <LI><a href="#[1da]">touchgfx::Drawable::moveRelative(short, short)</a> from drawable.o(i._ZN8touchgfx8Drawable12moveRelativeEss) referenced from informationdemoviewbase.o(.constdata__ZTVN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEE)
 <LI><a href="#[1da]">touchgfx::Drawable::moveRelative(short, short)</a> from drawable.o(i._ZN8touchgfx8Drawable12moveRelativeEss) referenced from cookingviewbase.o(.constdata__ZTVN8touchgfx24TextAreaWithTwoWildcardsE)
 <LI><a href="#[1da]">touchgfx::Drawable::moveRelative(short, short)</a> from drawable.o(i._ZN8touchgfx8Drawable12moveRelativeEss) referenced from textareawithwildcard.o(.constdata__ZTVN8touchgfx24TextAreaWithWildcardBaseE)
 <LI><a href="#[1da]">touchgfx::Drawable::moveRelative(short, short)</a> from drawable.o(i._ZN8touchgfx8Drawable12moveRelativeEss) referenced from box.o(.constdata__ZTVN8touchgfx3BoxE)
 <LI><a href="#[1da]">touchgfx::Drawable::moveRelative(short, short)</a> from drawable.o(i._ZN8touchgfx8Drawable12moveRelativeEss) referenced from image.o(.constdata__ZTVN8touchgfx5ImageE)
 <LI><a href="#[1da]">touchgfx::Drawable::moveRelative(short, short)</a> from drawable.o(i._ZN8touchgfx8Drawable12moveRelativeEss) referenced from button.o(.constdata__ZTVN8touchgfx6ButtonE)
 <LI><a href="#[1da]">touchgfx::Drawable::moveRelative(short, short)</a> from drawable.o(i._ZN8touchgfx8Drawable12moveRelativeEss) referenced from circle.o(.constdata__ZTVN8touchgfx6CircleE)
 <LI><a href="#[1da]">touchgfx::Drawable::moveRelative(short, short)</a> from drawable.o(i._ZN8touchgfx8Drawable12moveRelativeEss) referenced from cookingviewbase.o(.constdata__ZTVN8touchgfx6WidgetE)
 <LI><a href="#[1da]">touchgfx::Drawable::moveRelative(short, short)</a> from drawable.o(i._ZN8touchgfx8Drawable12moveRelativeEss) referenced from drawable.o(.constdata__ZTVN8touchgfx8DrawableE)
 <LI><a href="#[1da]">touchgfx::Drawable::moveRelative(short, short)</a> from drawable.o(i._ZN8touchgfx8Drawable12moveRelativeEss) referenced from textarea.o(.constdata__ZTVN8touchgfx8TextAreaE)
 <LI><a href="#[1da]">touchgfx::Drawable::moveRelative(short, short)</a> from drawable.o(i._ZN8touchgfx8Drawable12moveRelativeEss) referenced from container.o(.constdata__ZTVN8touchgfx9ContainerE)
 <LI><a href="#[1dc]">touchgfx::Drawable::setupDrawChain(const touchgfx::Rect&, touchgfx::Drawable**)</a> from cookingviewbase.o(i._ZN8touchgfx8Drawable14setupDrawChainERKNS_4RectEPPS0_) referenced from canvaswidget.o(.constdata__ZTVN8touchgfx12CanvasWidgetE)
 <LI><a href="#[1dc]">touchgfx::Drawable::setupDrawChain(const touchgfx::Rect&, touchgfx::Drawable**)</a> from cookingviewbase.o(i._ZN8touchgfx8Drawable14setupDrawChainERKNS_4RectEPPS0_) referenced from cookingviewbase.o(.constdata__ZTVN8touchgfx12FadeAnimatorINS_24TextAreaWithTwoWildcardsEEE)
 <LI><a href="#[1dc]">touchgfx::Drawable::setupDrawChain(const touchgfx::Rect&, touchgfx::Drawable**)</a> from cookingviewbase.o(i._ZN8touchgfx8Drawable14setupDrawChainERKNS_4RectEPPS0_) referenced from cookingviewbase.o(.constdata__ZTVN8touchgfx12FadeAnimatorINS_5ImageEEE)
 <LI><a href="#[1dc]">touchgfx::Drawable::setupDrawChain(const touchgfx::Rect&, touchgfx::Drawable**)</a> from cookingviewbase.o(i._ZN8touchgfx8Drawable14setupDrawChainERKNS_4RectEPPS0_) referenced from cookingviewbase.o(.constdata__ZTVN8touchgfx12FadeAnimatorINS_6ButtonEEE)
 <LI><a href="#[1dc]">touchgfx::Drawable::setupDrawChain(const touchgfx::Rect&, touchgfx::Drawable**)</a> from cookingviewbase.o(i._ZN8touchgfx8Drawable14setupDrawChainERKNS_4RectEPPS0_) referenced from cookingviewbase.o(.constdata__ZTVN8touchgfx12FadeAnimatorINS_8TextAreaEEE)
 <LI><a href="#[1dc]">touchgfx::Drawable::setupDrawChain(const touchgfx::Rect&, touchgfx::Drawable**)</a> from cookingviewbase.o(i._ZN8touchgfx8Drawable14setupDrawChainERKNS_4RectEPPS0_) referenced from boxwithborder.o(.constdata__ZTVN8touchgfx13BoxWithBorderE)
 <LI><a href="#[1dc]">touchgfx::Drawable::setupDrawChain(const touchgfx::Rect&, touchgfx::Drawable**)</a> from cookingviewbase.o(i._ZN8touchgfx8Drawable14setupDrawChainERKNS_4RectEPPS0_) referenced from abstractbutton.o(.constdata__ZTVN8touchgfx14AbstractButtonE)
 <LI><a href="#[1dc]">touchgfx::Drawable::setupDrawChain(const touchgfx::Rect&, touchgfx::Drawable**)</a> from cookingviewbase.o(i._ZN8touchgfx8Drawable14setupDrawChainERKNS_4RectEPPS0_) referenced from settingsviewbase.o(.constdata__ZTVN8touchgfx23TextAreaWithOneWildcardE)
 <LI><a href="#[1dc]">touchgfx::Drawable::setupDrawChain(const touchgfx::Rect&, touchgfx::Drawable**)</a> from cookingviewbase.o(i._ZN8touchgfx8Drawable14setupDrawChainERKNS_4RectEPPS0_) referenced from cookingviewbase.o(.constdata__ZTVN8touchgfx24TextAreaWithTwoWildcardsE)
 <LI><a href="#[1dc]">touchgfx::Drawable::setupDrawChain(const touchgfx::Rect&, touchgfx::Drawable**)</a> from cookingviewbase.o(i._ZN8touchgfx8Drawable14setupDrawChainERKNS_4RectEPPS0_) referenced from textareawithwildcard.o(.constdata__ZTVN8touchgfx24TextAreaWithWildcardBaseE)
 <LI><a href="#[1dc]">touchgfx::Drawable::setupDrawChain(const touchgfx::Rect&, touchgfx::Drawable**)</a> from cookingviewbase.o(i._ZN8touchgfx8Drawable14setupDrawChainERKNS_4RectEPPS0_) referenced from box.o(.constdata__ZTVN8touchgfx3BoxE)
 <LI><a href="#[1dc]">touchgfx::Drawable::setupDrawChain(const touchgfx::Rect&, touchgfx::Drawable**)</a> from cookingviewbase.o(i._ZN8touchgfx8Drawable14setupDrawChainERKNS_4RectEPPS0_) referenced from image.o(.constdata__ZTVN8touchgfx5ImageE)
 <LI><a href="#[1dc]">touchgfx::Drawable::setupDrawChain(const touchgfx::Rect&, touchgfx::Drawable**)</a> from cookingviewbase.o(i._ZN8touchgfx8Drawable14setupDrawChainERKNS_4RectEPPS0_) referenced from button.o(.constdata__ZTVN8touchgfx6ButtonE)
 <LI><a href="#[1dc]">touchgfx::Drawable::setupDrawChain(const touchgfx::Rect&, touchgfx::Drawable**)</a> from cookingviewbase.o(i._ZN8touchgfx8Drawable14setupDrawChainERKNS_4RectEPPS0_) referenced from circle.o(.constdata__ZTVN8touchgfx6CircleE)
 <LI><a href="#[1dc]">touchgfx::Drawable::setupDrawChain(const touchgfx::Rect&, touchgfx::Drawable**)</a> from cookingviewbase.o(i._ZN8touchgfx8Drawable14setupDrawChainERKNS_4RectEPPS0_) referenced from cookingviewbase.o(.constdata__ZTVN8touchgfx6WidgetE)
 <LI><a href="#[1dc]">touchgfx::Drawable::setupDrawChain(const touchgfx::Rect&, touchgfx::Drawable**)</a> from cookingviewbase.o(i._ZN8touchgfx8Drawable14setupDrawChainERKNS_4RectEPPS0_) referenced from drawable.o(.constdata__ZTVN8touchgfx8DrawableE)
 <LI><a href="#[1dc]">touchgfx::Drawable::setupDrawChain(const touchgfx::Rect&, touchgfx::Drawable**)</a> from cookingviewbase.o(i._ZN8touchgfx8Drawable14setupDrawChainERKNS_4RectEPPS0_) referenced from textarea.o(.constdata__ZTVN8touchgfx8TextAreaE)
 <LI><a href="#[1d8]">touchgfx::Drawable::handleDragEvent(const touchgfx::DragEvent&)</a> from cookingviewbase.o(i._ZN8touchgfx8Drawable15handleDragEventERKNS_9DragEventE) referenced from canvaswidget.o(.constdata__ZTVN8touchgfx12CanvasWidgetE)
 <LI><a href="#[1d8]">touchgfx::Drawable::handleDragEvent(const touchgfx::DragEvent&)</a> from cookingviewbase.o(i._ZN8touchgfx8Drawable15handleDragEventERKNS_9DragEventE) referenced from cookingviewbase.o(.constdata__ZTVN8touchgfx12FadeAnimatorINS_24TextAreaWithTwoWildcardsEEE)
 <LI><a href="#[1d8]">touchgfx::Drawable::handleDragEvent(const touchgfx::DragEvent&)</a> from cookingviewbase.o(i._ZN8touchgfx8Drawable15handleDragEventERKNS_9DragEventE) referenced from cookingviewbase.o(.constdata__ZTVN8touchgfx12FadeAnimatorINS_5ImageEEE)
 <LI><a href="#[1d8]">touchgfx::Drawable::handleDragEvent(const touchgfx::DragEvent&)</a> from cookingviewbase.o(i._ZN8touchgfx8Drawable15handleDragEventERKNS_9DragEventE) referenced from cookingviewbase.o(.constdata__ZTVN8touchgfx12FadeAnimatorINS_6ButtonEEE)
 <LI><a href="#[1d8]">touchgfx::Drawable::handleDragEvent(const touchgfx::DragEvent&)</a> from cookingviewbase.o(i._ZN8touchgfx8Drawable15handleDragEventERKNS_9DragEventE) referenced from cookingviewbase.o(.constdata__ZTVN8touchgfx12FadeAnimatorINS_8TextAreaEEE)
 <LI><a href="#[1d8]">touchgfx::Drawable::handleDragEvent(const touchgfx::DragEvent&)</a> from cookingviewbase.o(i._ZN8touchgfx8Drawable15handleDragEventERKNS_9DragEventE) referenced from selectingmenuviewbase.o(.constdata__ZTVN8touchgfx12MoveAnimatorINS_9ContainerEEE)
 <LI><a href="#[1d8]">touchgfx::Drawable::handleDragEvent(const touchgfx::DragEvent&)</a> from cookingviewbase.o(i._ZN8touchgfx8Drawable15handleDragEventERKNS_9DragEventE) referenced from boxwithborder.o(.constdata__ZTVN8touchgfx13BoxWithBorderE)
 <LI><a href="#[1d8]">touchgfx::Drawable::handleDragEvent(const touchgfx::DragEvent&)</a> from cookingviewbase.o(i._ZN8touchgfx8Drawable15handleDragEventERKNS_9DragEventE) referenced from abstractbutton.o(.constdata__ZTVN8touchgfx14AbstractButtonE)
 <LI><a href="#[1d8]">touchgfx::Drawable::handleDragEvent(const touchgfx::DragEvent&)</a> from cookingviewbase.o(i._ZN8touchgfx8Drawable15handleDragEventERKNS_9DragEventE) referenced from informationdemoviewbase.o(.constdata__ZTVN8touchgfx18ClickButtonTriggerE)
 <LI><a href="#[1d8]">touchgfx::Drawable::handleDragEvent(const touchgfx::DragEvent&)</a> from cookingviewbase.o(i._ZN8touchgfx8Drawable15handleDragEventERKNS_9DragEventE) referenced from informationdemoviewbase.o(.constdata__ZTVN8touchgfx23AbstractButtonContainerE)
 <LI><a href="#[1d8]">touchgfx::Drawable::handleDragEvent(const touchgfx::DragEvent&)</a> from cookingviewbase.o(i._ZN8touchgfx8Drawable15handleDragEventERKNS_9DragEventE) referenced from settingsviewbase.o(.constdata__ZTVN8touchgfx23TextAreaWithOneWildcardE)
 <LI><a href="#[1d8]">touchgfx::Drawable::handleDragEvent(const touchgfx::DragEvent&)</a> from cookingviewbase.o(i._ZN8touchgfx8Drawable15handleDragEventERKNS_9DragEventE) referenced from informationdemoviewbase.o(.constdata__ZTVN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEE)
 <LI><a href="#[1d8]">touchgfx::Drawable::handleDragEvent(const touchgfx::DragEvent&)</a> from cookingviewbase.o(i._ZN8touchgfx8Drawable15handleDragEventERKNS_9DragEventE) referenced from cookingviewbase.o(.constdata__ZTVN8touchgfx24TextAreaWithTwoWildcardsE)
 <LI><a href="#[1d8]">touchgfx::Drawable::handleDragEvent(const touchgfx::DragEvent&)</a> from cookingviewbase.o(i._ZN8touchgfx8Drawable15handleDragEventERKNS_9DragEventE) referenced from textareawithwildcard.o(.constdata__ZTVN8touchgfx24TextAreaWithWildcardBaseE)
 <LI><a href="#[1d8]">touchgfx::Drawable::handleDragEvent(const touchgfx::DragEvent&)</a> from cookingviewbase.o(i._ZN8touchgfx8Drawable15handleDragEventERKNS_9DragEventE) referenced from box.o(.constdata__ZTVN8touchgfx3BoxE)
 <LI><a href="#[1d8]">touchgfx::Drawable::handleDragEvent(const touchgfx::DragEvent&)</a> from cookingviewbase.o(i._ZN8touchgfx8Drawable15handleDragEventERKNS_9DragEventE) referenced from image.o(.constdata__ZTVN8touchgfx5ImageE)
 <LI><a href="#[1d8]">touchgfx::Drawable::handleDragEvent(const touchgfx::DragEvent&)</a> from cookingviewbase.o(i._ZN8touchgfx8Drawable15handleDragEventERKNS_9DragEventE) referenced from button.o(.constdata__ZTVN8touchgfx6ButtonE)
 <LI><a href="#[1d8]">touchgfx::Drawable::handleDragEvent(const touchgfx::DragEvent&)</a> from cookingviewbase.o(i._ZN8touchgfx8Drawable15handleDragEventERKNS_9DragEventE) referenced from circle.o(.constdata__ZTVN8touchgfx6CircleE)
 <LI><a href="#[1d8]">touchgfx::Drawable::handleDragEvent(const touchgfx::DragEvent&)</a> from cookingviewbase.o(i._ZN8touchgfx8Drawable15handleDragEventERKNS_9DragEventE) referenced from cookingviewbase.o(.constdata__ZTVN8touchgfx6WidgetE)
 <LI><a href="#[1d8]">touchgfx::Drawable::handleDragEvent(const touchgfx::DragEvent&)</a> from cookingviewbase.o(i._ZN8touchgfx8Drawable15handleDragEventERKNS_9DragEventE) referenced from drawable.o(.constdata__ZTVN8touchgfx8DrawableE)
 <LI><a href="#[1d8]">touchgfx::Drawable::handleDragEvent(const touchgfx::DragEvent&)</a> from cookingviewbase.o(i._ZN8touchgfx8Drawable15handleDragEventERKNS_9DragEventE) referenced from textarea.o(.constdata__ZTVN8touchgfx8TextAreaE)
 <LI><a href="#[1d8]">touchgfx::Drawable::handleDragEvent(const touchgfx::DragEvent&)</a> from cookingviewbase.o(i._ZN8touchgfx8Drawable15handleDragEventERKNS_9DragEventE) referenced from container.o(.constdata__ZTVN8touchgfx9ContainerE)
 <LI><a href="#[1d9]">touchgfx::Drawable::handleTickEvent()</a> from cookingviewbase.o(i._ZN8touchgfx8Drawable15handleTickEventEv) referenced from canvaswidget.o(.constdata__ZTVN8touchgfx12CanvasWidgetE)
 <LI><a href="#[1d9]">touchgfx::Drawable::handleTickEvent()</a> from cookingviewbase.o(i._ZN8touchgfx8Drawable15handleTickEventEv) referenced from boxwithborder.o(.constdata__ZTVN8touchgfx13BoxWithBorderE)
 <LI><a href="#[1d9]">touchgfx::Drawable::handleTickEvent()</a> from cookingviewbase.o(i._ZN8touchgfx8Drawable15handleTickEventEv) referenced from abstractbutton.o(.constdata__ZTVN8touchgfx14AbstractButtonE)
 <LI><a href="#[1d9]">touchgfx::Drawable::handleTickEvent()</a> from cookingviewbase.o(i._ZN8touchgfx8Drawable15handleTickEventEv) referenced from informationdemoviewbase.o(.constdata__ZTVN8touchgfx18ClickButtonTriggerE)
 <LI><a href="#[1d9]">touchgfx::Drawable::handleTickEvent()</a> from cookingviewbase.o(i._ZN8touchgfx8Drawable15handleTickEventEv) referenced from informationdemoviewbase.o(.constdata__ZTVN8touchgfx23AbstractButtonContainerE)
 <LI><a href="#[1d9]">touchgfx::Drawable::handleTickEvent()</a> from cookingviewbase.o(i._ZN8touchgfx8Drawable15handleTickEventEv) referenced from settingsviewbase.o(.constdata__ZTVN8touchgfx23TextAreaWithOneWildcardE)
 <LI><a href="#[1d9]">touchgfx::Drawable::handleTickEvent()</a> from cookingviewbase.o(i._ZN8touchgfx8Drawable15handleTickEventEv) referenced from informationdemoviewbase.o(.constdata__ZTVN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEE)
 <LI><a href="#[1d9]">touchgfx::Drawable::handleTickEvent()</a> from cookingviewbase.o(i._ZN8touchgfx8Drawable15handleTickEventEv) referenced from cookingviewbase.o(.constdata__ZTVN8touchgfx24TextAreaWithTwoWildcardsE)
 <LI><a href="#[1d9]">touchgfx::Drawable::handleTickEvent()</a> from cookingviewbase.o(i._ZN8touchgfx8Drawable15handleTickEventEv) referenced from textareawithwildcard.o(.constdata__ZTVN8touchgfx24TextAreaWithWildcardBaseE)
 <LI><a href="#[1d9]">touchgfx::Drawable::handleTickEvent()</a> from cookingviewbase.o(i._ZN8touchgfx8Drawable15handleTickEventEv) referenced from box.o(.constdata__ZTVN8touchgfx3BoxE)
 <LI><a href="#[1d9]">touchgfx::Drawable::handleTickEvent()</a> from cookingviewbase.o(i._ZN8touchgfx8Drawable15handleTickEventEv) referenced from image.o(.constdata__ZTVN8touchgfx5ImageE)
 <LI><a href="#[1d9]">touchgfx::Drawable::handleTickEvent()</a> from cookingviewbase.o(i._ZN8touchgfx8Drawable15handleTickEventEv) referenced from button.o(.constdata__ZTVN8touchgfx6ButtonE)
 <LI><a href="#[1d9]">touchgfx::Drawable::handleTickEvent()</a> from cookingviewbase.o(i._ZN8touchgfx8Drawable15handleTickEventEv) referenced from circle.o(.constdata__ZTVN8touchgfx6CircleE)
 <LI><a href="#[1d9]">touchgfx::Drawable::handleTickEvent()</a> from cookingviewbase.o(i._ZN8touchgfx8Drawable15handleTickEventEv) referenced from cookingviewbase.o(.constdata__ZTVN8touchgfx6WidgetE)
 <LI><a href="#[1d9]">touchgfx::Drawable::handleTickEvent()</a> from cookingviewbase.o(i._ZN8touchgfx8Drawable15handleTickEventEv) referenced from drawable.o(.constdata__ZTVN8touchgfx8DrawableE)
 <LI><a href="#[1d9]">touchgfx::Drawable::handleTickEvent()</a> from cookingviewbase.o(i._ZN8touchgfx8Drawable15handleTickEventEv) referenced from textarea.o(.constdata__ZTVN8touchgfx8TextAreaE)
 <LI><a href="#[1d9]">touchgfx::Drawable::handleTickEvent()</a> from cookingviewbase.o(i._ZN8touchgfx8Drawable15handleTickEventEv) referenced from container.o(.constdata__ZTVN8touchgfx9ContainerE)
 <LI><a href="#[1d6]">touchgfx::Drawable::handleClickEvent(const touchgfx::ClickEvent&)</a> from cookingviewbase.o(i._ZN8touchgfx8Drawable16handleClickEventERKNS_10ClickEventE) referenced from canvaswidget.o(.constdata__ZTVN8touchgfx12CanvasWidgetE)
 <LI><a href="#[1d6]">touchgfx::Drawable::handleClickEvent(const touchgfx::ClickEvent&)</a> from cookingviewbase.o(i._ZN8touchgfx8Drawable16handleClickEventERKNS_10ClickEventE) referenced from cookingviewbase.o(.constdata__ZTVN8touchgfx12FadeAnimatorINS_24TextAreaWithTwoWildcardsEEE)
 <LI><a href="#[1d6]">touchgfx::Drawable::handleClickEvent(const touchgfx::ClickEvent&)</a> from cookingviewbase.o(i._ZN8touchgfx8Drawable16handleClickEventERKNS_10ClickEventE) referenced from cookingviewbase.o(.constdata__ZTVN8touchgfx12FadeAnimatorINS_5ImageEEE)
 <LI><a href="#[1d6]">touchgfx::Drawable::handleClickEvent(const touchgfx::ClickEvent&)</a> from cookingviewbase.o(i._ZN8touchgfx8Drawable16handleClickEventERKNS_10ClickEventE) referenced from cookingviewbase.o(.constdata__ZTVN8touchgfx12FadeAnimatorINS_8TextAreaEEE)
 <LI><a href="#[1d6]">touchgfx::Drawable::handleClickEvent(const touchgfx::ClickEvent&)</a> from cookingviewbase.o(i._ZN8touchgfx8Drawable16handleClickEventERKNS_10ClickEventE) referenced from selectingmenuviewbase.o(.constdata__ZTVN8touchgfx12MoveAnimatorINS_9ContainerEEE)
 <LI><a href="#[1d6]">touchgfx::Drawable::handleClickEvent(const touchgfx::ClickEvent&)</a> from cookingviewbase.o(i._ZN8touchgfx8Drawable16handleClickEventERKNS_10ClickEventE) referenced from boxwithborder.o(.constdata__ZTVN8touchgfx13BoxWithBorderE)
 <LI><a href="#[1d6]">touchgfx::Drawable::handleClickEvent(const touchgfx::ClickEvent&)</a> from cookingviewbase.o(i._ZN8touchgfx8Drawable16handleClickEventERKNS_10ClickEventE) referenced from informationdemoviewbase.o(.constdata__ZTVN8touchgfx23AbstractButtonContainerE)
 <LI><a href="#[1d6]">touchgfx::Drawable::handleClickEvent(const touchgfx::ClickEvent&)</a> from cookingviewbase.o(i._ZN8touchgfx8Drawable16handleClickEventERKNS_10ClickEventE) referenced from settingsviewbase.o(.constdata__ZTVN8touchgfx23TextAreaWithOneWildcardE)
 <LI><a href="#[1d6]">touchgfx::Drawable::handleClickEvent(const touchgfx::ClickEvent&)</a> from cookingviewbase.o(i._ZN8touchgfx8Drawable16handleClickEventERKNS_10ClickEventE) referenced from cookingviewbase.o(.constdata__ZTVN8touchgfx24TextAreaWithTwoWildcardsE)
 <LI><a href="#[1d6]">touchgfx::Drawable::handleClickEvent(const touchgfx::ClickEvent&)</a> from cookingviewbase.o(i._ZN8touchgfx8Drawable16handleClickEventERKNS_10ClickEventE) referenced from textareawithwildcard.o(.constdata__ZTVN8touchgfx24TextAreaWithWildcardBaseE)
 <LI><a href="#[1d6]">touchgfx::Drawable::handleClickEvent(const touchgfx::ClickEvent&)</a> from cookingviewbase.o(i._ZN8touchgfx8Drawable16handleClickEventERKNS_10ClickEventE) referenced from box.o(.constdata__ZTVN8touchgfx3BoxE)
 <LI><a href="#[1d6]">touchgfx::Drawable::handleClickEvent(const touchgfx::ClickEvent&)</a> from cookingviewbase.o(i._ZN8touchgfx8Drawable16handleClickEventERKNS_10ClickEventE) referenced from image.o(.constdata__ZTVN8touchgfx5ImageE)
 <LI><a href="#[1d6]">touchgfx::Drawable::handleClickEvent(const touchgfx::ClickEvent&)</a> from cookingviewbase.o(i._ZN8touchgfx8Drawable16handleClickEventERKNS_10ClickEventE) referenced from circle.o(.constdata__ZTVN8touchgfx6CircleE)
 <LI><a href="#[1d6]">touchgfx::Drawable::handleClickEvent(const touchgfx::ClickEvent&)</a> from cookingviewbase.o(i._ZN8touchgfx8Drawable16handleClickEventERKNS_10ClickEventE) referenced from cookingviewbase.o(.constdata__ZTVN8touchgfx6WidgetE)
 <LI><a href="#[1d6]">touchgfx::Drawable::handleClickEvent(const touchgfx::ClickEvent&)</a> from cookingviewbase.o(i._ZN8touchgfx8Drawable16handleClickEventERKNS_10ClickEventE) referenced from drawable.o(.constdata__ZTVN8touchgfx8DrawableE)
 <LI><a href="#[1d6]">touchgfx::Drawable::handleClickEvent(const touchgfx::ClickEvent&)</a> from cookingviewbase.o(i._ZN8touchgfx8Drawable16handleClickEventERKNS_10ClickEventE) referenced from textarea.o(.constdata__ZTVN8touchgfx8TextAreaE)
 <LI><a href="#[1d6]">touchgfx::Drawable::handleClickEvent(const touchgfx::ClickEvent&)</a> from cookingviewbase.o(i._ZN8touchgfx8Drawable16handleClickEventERKNS_10ClickEventE) referenced from container.o(.constdata__ZTVN8touchgfx9ContainerE)
 <LI><a href="#[1d7]">touchgfx::Drawable::handleGestureEvent(const touchgfx::GestureEvent&)</a> from cookingviewbase.o(i._ZN8touchgfx8Drawable18handleGestureEventERKNS_12GestureEventE) referenced from canvaswidget.o(.constdata__ZTVN8touchgfx12CanvasWidgetE)
 <LI><a href="#[1d7]">touchgfx::Drawable::handleGestureEvent(const touchgfx::GestureEvent&)</a> from cookingviewbase.o(i._ZN8touchgfx8Drawable18handleGestureEventERKNS_12GestureEventE) referenced from cookingviewbase.o(.constdata__ZTVN8touchgfx12FadeAnimatorINS_24TextAreaWithTwoWildcardsEEE)
 <LI><a href="#[1d7]">touchgfx::Drawable::handleGestureEvent(const touchgfx::GestureEvent&)</a> from cookingviewbase.o(i._ZN8touchgfx8Drawable18handleGestureEventERKNS_12GestureEventE) referenced from cookingviewbase.o(.constdata__ZTVN8touchgfx12FadeAnimatorINS_5ImageEEE)
 <LI><a href="#[1d7]">touchgfx::Drawable::handleGestureEvent(const touchgfx::GestureEvent&)</a> from cookingviewbase.o(i._ZN8touchgfx8Drawable18handleGestureEventERKNS_12GestureEventE) referenced from cookingviewbase.o(.constdata__ZTVN8touchgfx12FadeAnimatorINS_6ButtonEEE)
 <LI><a href="#[1d7]">touchgfx::Drawable::handleGestureEvent(const touchgfx::GestureEvent&)</a> from cookingviewbase.o(i._ZN8touchgfx8Drawable18handleGestureEventERKNS_12GestureEventE) referenced from cookingviewbase.o(.constdata__ZTVN8touchgfx12FadeAnimatorINS_8TextAreaEEE)
 <LI><a href="#[1d7]">touchgfx::Drawable::handleGestureEvent(const touchgfx::GestureEvent&)</a> from cookingviewbase.o(i._ZN8touchgfx8Drawable18handleGestureEventERKNS_12GestureEventE) referenced from selectingmenuviewbase.o(.constdata__ZTVN8touchgfx12MoveAnimatorINS_9ContainerEEE)
 <LI><a href="#[1d7]">touchgfx::Drawable::handleGestureEvent(const touchgfx::GestureEvent&)</a> from cookingviewbase.o(i._ZN8touchgfx8Drawable18handleGestureEventERKNS_12GestureEventE) referenced from boxwithborder.o(.constdata__ZTVN8touchgfx13BoxWithBorderE)
 <LI><a href="#[1d7]">touchgfx::Drawable::handleGestureEvent(const touchgfx::GestureEvent&)</a> from cookingviewbase.o(i._ZN8touchgfx8Drawable18handleGestureEventERKNS_12GestureEventE) referenced from abstractbutton.o(.constdata__ZTVN8touchgfx14AbstractButtonE)
 <LI><a href="#[1d7]">touchgfx::Drawable::handleGestureEvent(const touchgfx::GestureEvent&)</a> from cookingviewbase.o(i._ZN8touchgfx8Drawable18handleGestureEventERKNS_12GestureEventE) referenced from informationdemoviewbase.o(.constdata__ZTVN8touchgfx18ClickButtonTriggerE)
 <LI><a href="#[1d7]">touchgfx::Drawable::handleGestureEvent(const touchgfx::GestureEvent&)</a> from cookingviewbase.o(i._ZN8touchgfx8Drawable18handleGestureEventERKNS_12GestureEventE) referenced from informationdemoviewbase.o(.constdata__ZTVN8touchgfx23AbstractButtonContainerE)
 <LI><a href="#[1d7]">touchgfx::Drawable::handleGestureEvent(const touchgfx::GestureEvent&)</a> from cookingviewbase.o(i._ZN8touchgfx8Drawable18handleGestureEventERKNS_12GestureEventE) referenced from settingsviewbase.o(.constdata__ZTVN8touchgfx23TextAreaWithOneWildcardE)
 <LI><a href="#[1d7]">touchgfx::Drawable::handleGestureEvent(const touchgfx::GestureEvent&)</a> from cookingviewbase.o(i._ZN8touchgfx8Drawable18handleGestureEventERKNS_12GestureEventE) referenced from informationdemoviewbase.o(.constdata__ZTVN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEE)
 <LI><a href="#[1d7]">touchgfx::Drawable::handleGestureEvent(const touchgfx::GestureEvent&)</a> from cookingviewbase.o(i._ZN8touchgfx8Drawable18handleGestureEventERKNS_12GestureEventE) referenced from cookingviewbase.o(.constdata__ZTVN8touchgfx24TextAreaWithTwoWildcardsE)
 <LI><a href="#[1d7]">touchgfx::Drawable::handleGestureEvent(const touchgfx::GestureEvent&)</a> from cookingviewbase.o(i._ZN8touchgfx8Drawable18handleGestureEventERKNS_12GestureEventE) referenced from textareawithwildcard.o(.constdata__ZTVN8touchgfx24TextAreaWithWildcardBaseE)
 <LI><a href="#[1d7]">touchgfx::Drawable::handleGestureEvent(const touchgfx::GestureEvent&)</a> from cookingviewbase.o(i._ZN8touchgfx8Drawable18handleGestureEventERKNS_12GestureEventE) referenced from box.o(.constdata__ZTVN8touchgfx3BoxE)
 <LI><a href="#[1d7]">touchgfx::Drawable::handleGestureEvent(const touchgfx::GestureEvent&)</a> from cookingviewbase.o(i._ZN8touchgfx8Drawable18handleGestureEventERKNS_12GestureEventE) referenced from image.o(.constdata__ZTVN8touchgfx5ImageE)
 <LI><a href="#[1d7]">touchgfx::Drawable::handleGestureEvent(const touchgfx::GestureEvent&)</a> from cookingviewbase.o(i._ZN8touchgfx8Drawable18handleGestureEventERKNS_12GestureEventE) referenced from button.o(.constdata__ZTVN8touchgfx6ButtonE)
 <LI><a href="#[1d7]">touchgfx::Drawable::handleGestureEvent(const touchgfx::GestureEvent&)</a> from cookingviewbase.o(i._ZN8touchgfx8Drawable18handleGestureEventERKNS_12GestureEventE) referenced from circle.o(.constdata__ZTVN8touchgfx6CircleE)
 <LI><a href="#[1d7]">touchgfx::Drawable::handleGestureEvent(const touchgfx::GestureEvent&)</a> from cookingviewbase.o(i._ZN8touchgfx8Drawable18handleGestureEventERKNS_12GestureEventE) referenced from cookingviewbase.o(.constdata__ZTVN8touchgfx6WidgetE)
 <LI><a href="#[1d7]">touchgfx::Drawable::handleGestureEvent(const touchgfx::GestureEvent&)</a> from cookingviewbase.o(i._ZN8touchgfx8Drawable18handleGestureEventERKNS_12GestureEventE) referenced from drawable.o(.constdata__ZTVN8touchgfx8DrawableE)
 <LI><a href="#[1d7]">touchgfx::Drawable::handleGestureEvent(const touchgfx::GestureEvent&)</a> from cookingviewbase.o(i._ZN8touchgfx8Drawable18handleGestureEventERKNS_12GestureEventE) referenced from textarea.o(.constdata__ZTVN8touchgfx8TextAreaE)
 <LI><a href="#[1d7]">touchgfx::Drawable::handleGestureEvent(const touchgfx::GestureEvent&)</a> from cookingviewbase.o(i._ZN8touchgfx8Drawable18handleGestureEventERKNS_12GestureEventE) referenced from container.o(.constdata__ZTVN8touchgfx9ContainerE)
 <LI><a href="#[1d2]">touchgfx::Drawable::setX(short)</a> from cookingviewbase.o(i._ZN8touchgfx8Drawable4setXEs) referenced from canvaswidget.o(.constdata__ZTVN8touchgfx12CanvasWidgetE)
 <LI><a href="#[1d2]">touchgfx::Drawable::setX(short)</a> from cookingviewbase.o(i._ZN8touchgfx8Drawable4setXEs) referenced from cookingviewbase.o(.constdata__ZTVN8touchgfx12FadeAnimatorINS_24TextAreaWithTwoWildcardsEEE)
 <LI><a href="#[1d2]">touchgfx::Drawable::setX(short)</a> from cookingviewbase.o(i._ZN8touchgfx8Drawable4setXEs) referenced from cookingviewbase.o(.constdata__ZTVN8touchgfx12FadeAnimatorINS_5ImageEEE)
 <LI><a href="#[1d2]">touchgfx::Drawable::setX(short)</a> from cookingviewbase.o(i._ZN8touchgfx8Drawable4setXEs) referenced from cookingviewbase.o(.constdata__ZTVN8touchgfx12FadeAnimatorINS_6ButtonEEE)
 <LI><a href="#[1d2]">touchgfx::Drawable::setX(short)</a> from cookingviewbase.o(i._ZN8touchgfx8Drawable4setXEs) referenced from cookingviewbase.o(.constdata__ZTVN8touchgfx12FadeAnimatorINS_8TextAreaEEE)
 <LI><a href="#[1d2]">touchgfx::Drawable::setX(short)</a> from cookingviewbase.o(i._ZN8touchgfx8Drawable4setXEs) referenced from selectingmenuviewbase.o(.constdata__ZTVN8touchgfx12MoveAnimatorINS_9ContainerEEE)
 <LI><a href="#[1d2]">touchgfx::Drawable::setX(short)</a> from cookingviewbase.o(i._ZN8touchgfx8Drawable4setXEs) referenced from boxwithborder.o(.constdata__ZTVN8touchgfx13BoxWithBorderE)
 <LI><a href="#[1d2]">touchgfx::Drawable::setX(short)</a> from cookingviewbase.o(i._ZN8touchgfx8Drawable4setXEs) referenced from abstractbutton.o(.constdata__ZTVN8touchgfx14AbstractButtonE)
 <LI><a href="#[1d2]">touchgfx::Drawable::setX(short)</a> from cookingviewbase.o(i._ZN8touchgfx8Drawable4setXEs) referenced from informationdemoviewbase.o(.constdata__ZTVN8touchgfx18ClickButtonTriggerE)
 <LI><a href="#[1d2]">touchgfx::Drawable::setX(short)</a> from cookingviewbase.o(i._ZN8touchgfx8Drawable4setXEs) referenced from informationdemoviewbase.o(.constdata__ZTVN8touchgfx23AbstractButtonContainerE)
 <LI><a href="#[1d2]">touchgfx::Drawable::setX(short)</a> from cookingviewbase.o(i._ZN8touchgfx8Drawable4setXEs) referenced from settingsviewbase.o(.constdata__ZTVN8touchgfx23TextAreaWithOneWildcardE)
 <LI><a href="#[1d2]">touchgfx::Drawable::setX(short)</a> from cookingviewbase.o(i._ZN8touchgfx8Drawable4setXEs) referenced from informationdemoviewbase.o(.constdata__ZTVN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEE)
 <LI><a href="#[1d2]">touchgfx::Drawable::setX(short)</a> from cookingviewbase.o(i._ZN8touchgfx8Drawable4setXEs) referenced from cookingviewbase.o(.constdata__ZTVN8touchgfx24TextAreaWithTwoWildcardsE)
 <LI><a href="#[1d2]">touchgfx::Drawable::setX(short)</a> from cookingviewbase.o(i._ZN8touchgfx8Drawable4setXEs) referenced from textareawithwildcard.o(.constdata__ZTVN8touchgfx24TextAreaWithWildcardBaseE)
 <LI><a href="#[1d2]">touchgfx::Drawable::setX(short)</a> from cookingviewbase.o(i._ZN8touchgfx8Drawable4setXEs) referenced from box.o(.constdata__ZTVN8touchgfx3BoxE)
 <LI><a href="#[1d2]">touchgfx::Drawable::setX(short)</a> from cookingviewbase.o(i._ZN8touchgfx8Drawable4setXEs) referenced from image.o(.constdata__ZTVN8touchgfx5ImageE)
 <LI><a href="#[1d2]">touchgfx::Drawable::setX(short)</a> from cookingviewbase.o(i._ZN8touchgfx8Drawable4setXEs) referenced from button.o(.constdata__ZTVN8touchgfx6ButtonE)
 <LI><a href="#[1d2]">touchgfx::Drawable::setX(short)</a> from cookingviewbase.o(i._ZN8touchgfx8Drawable4setXEs) referenced from circle.o(.constdata__ZTVN8touchgfx6CircleE)
 <LI><a href="#[1d2]">touchgfx::Drawable::setX(short)</a> from cookingviewbase.o(i._ZN8touchgfx8Drawable4setXEs) referenced from cookingviewbase.o(.constdata__ZTVN8touchgfx6WidgetE)
 <LI><a href="#[1d2]">touchgfx::Drawable::setX(short)</a> from cookingviewbase.o(i._ZN8touchgfx8Drawable4setXEs) referenced from drawable.o(.constdata__ZTVN8touchgfx8DrawableE)
 <LI><a href="#[1d2]">touchgfx::Drawable::setX(short)</a> from cookingviewbase.o(i._ZN8touchgfx8Drawable4setXEs) referenced from textarea.o(.constdata__ZTVN8touchgfx8TextAreaE)
 <LI><a href="#[1d2]">touchgfx::Drawable::setX(short)</a> from cookingviewbase.o(i._ZN8touchgfx8Drawable4setXEs) referenced from container.o(.constdata__ZTVN8touchgfx9ContainerE)
 <LI><a href="#[1d3]">touchgfx::Drawable::setY(short)</a> from cookingviewbase.o(i._ZN8touchgfx8Drawable4setYEs) referenced from canvaswidget.o(.constdata__ZTVN8touchgfx12CanvasWidgetE)
 <LI><a href="#[1d3]">touchgfx::Drawable::setY(short)</a> from cookingviewbase.o(i._ZN8touchgfx8Drawable4setYEs) referenced from cookingviewbase.o(.constdata__ZTVN8touchgfx12FadeAnimatorINS_24TextAreaWithTwoWildcardsEEE)
 <LI><a href="#[1d3]">touchgfx::Drawable::setY(short)</a> from cookingviewbase.o(i._ZN8touchgfx8Drawable4setYEs) referenced from cookingviewbase.o(.constdata__ZTVN8touchgfx12FadeAnimatorINS_5ImageEEE)
 <LI><a href="#[1d3]">touchgfx::Drawable::setY(short)</a> from cookingviewbase.o(i._ZN8touchgfx8Drawable4setYEs) referenced from cookingviewbase.o(.constdata__ZTVN8touchgfx12FadeAnimatorINS_6ButtonEEE)
 <LI><a href="#[1d3]">touchgfx::Drawable::setY(short)</a> from cookingviewbase.o(i._ZN8touchgfx8Drawable4setYEs) referenced from cookingviewbase.o(.constdata__ZTVN8touchgfx12FadeAnimatorINS_8TextAreaEEE)
 <LI><a href="#[1d3]">touchgfx::Drawable::setY(short)</a> from cookingviewbase.o(i._ZN8touchgfx8Drawable4setYEs) referenced from selectingmenuviewbase.o(.constdata__ZTVN8touchgfx12MoveAnimatorINS_9ContainerEEE)
 <LI><a href="#[1d3]">touchgfx::Drawable::setY(short)</a> from cookingviewbase.o(i._ZN8touchgfx8Drawable4setYEs) referenced from boxwithborder.o(.constdata__ZTVN8touchgfx13BoxWithBorderE)
 <LI><a href="#[1d3]">touchgfx::Drawable::setY(short)</a> from cookingviewbase.o(i._ZN8touchgfx8Drawable4setYEs) referenced from abstractbutton.o(.constdata__ZTVN8touchgfx14AbstractButtonE)
 <LI><a href="#[1d3]">touchgfx::Drawable::setY(short)</a> from cookingviewbase.o(i._ZN8touchgfx8Drawable4setYEs) referenced from informationdemoviewbase.o(.constdata__ZTVN8touchgfx18ClickButtonTriggerE)
 <LI><a href="#[1d3]">touchgfx::Drawable::setY(short)</a> from cookingviewbase.o(i._ZN8touchgfx8Drawable4setYEs) referenced from informationdemoviewbase.o(.constdata__ZTVN8touchgfx23AbstractButtonContainerE)
 <LI><a href="#[1d3]">touchgfx::Drawable::setY(short)</a> from cookingviewbase.o(i._ZN8touchgfx8Drawable4setYEs) referenced from settingsviewbase.o(.constdata__ZTVN8touchgfx23TextAreaWithOneWildcardE)
 <LI><a href="#[1d3]">touchgfx::Drawable::setY(short)</a> from cookingviewbase.o(i._ZN8touchgfx8Drawable4setYEs) referenced from informationdemoviewbase.o(.constdata__ZTVN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEE)
 <LI><a href="#[1d3]">touchgfx::Drawable::setY(short)</a> from cookingviewbase.o(i._ZN8touchgfx8Drawable4setYEs) referenced from cookingviewbase.o(.constdata__ZTVN8touchgfx24TextAreaWithTwoWildcardsE)
 <LI><a href="#[1d3]">touchgfx::Drawable::setY(short)</a> from cookingviewbase.o(i._ZN8touchgfx8Drawable4setYEs) referenced from textareawithwildcard.o(.constdata__ZTVN8touchgfx24TextAreaWithWildcardBaseE)
 <LI><a href="#[1d3]">touchgfx::Drawable::setY(short)</a> from cookingviewbase.o(i._ZN8touchgfx8Drawable4setYEs) referenced from box.o(.constdata__ZTVN8touchgfx3BoxE)
 <LI><a href="#[1d3]">touchgfx::Drawable::setY(short)</a> from cookingviewbase.o(i._ZN8touchgfx8Drawable4setYEs) referenced from image.o(.constdata__ZTVN8touchgfx5ImageE)
 <LI><a href="#[1d3]">touchgfx::Drawable::setY(short)</a> from cookingviewbase.o(i._ZN8touchgfx8Drawable4setYEs) referenced from button.o(.constdata__ZTVN8touchgfx6ButtonE)
 <LI><a href="#[1d3]">touchgfx::Drawable::setY(short)</a> from cookingviewbase.o(i._ZN8touchgfx8Drawable4setYEs) referenced from circle.o(.constdata__ZTVN8touchgfx6CircleE)
 <LI><a href="#[1d3]">touchgfx::Drawable::setY(short)</a> from cookingviewbase.o(i._ZN8touchgfx8Drawable4setYEs) referenced from cookingviewbase.o(.constdata__ZTVN8touchgfx6WidgetE)
 <LI><a href="#[1d3]">touchgfx::Drawable::setY(short)</a> from cookingviewbase.o(i._ZN8touchgfx8Drawable4setYEs) referenced from drawable.o(.constdata__ZTVN8touchgfx8DrawableE)
 <LI><a href="#[1d3]">touchgfx::Drawable::setY(short)</a> from cookingviewbase.o(i._ZN8touchgfx8Drawable4setYEs) referenced from textarea.o(.constdata__ZTVN8touchgfx8TextAreaE)
 <LI><a href="#[1d3]">touchgfx::Drawable::setY(short)</a> from cookingviewbase.o(i._ZN8touchgfx8Drawable4setYEs) referenced from container.o(.constdata__ZTVN8touchgfx9ContainerE)
 <LI><a href="#[1db]">touchgfx::Drawable::moveTo(short, short)</a> from cookingviewbase.o(i._ZN8touchgfx8Drawable6moveToEss) referenced from canvaswidget.o(.constdata__ZTVN8touchgfx12CanvasWidgetE)
 <LI><a href="#[1db]">touchgfx::Drawable::moveTo(short, short)</a> from cookingviewbase.o(i._ZN8touchgfx8Drawable6moveToEss) referenced from cookingviewbase.o(.constdata__ZTVN8touchgfx12FadeAnimatorINS_24TextAreaWithTwoWildcardsEEE)
 <LI><a href="#[1db]">touchgfx::Drawable::moveTo(short, short)</a> from cookingviewbase.o(i._ZN8touchgfx8Drawable6moveToEss) referenced from cookingviewbase.o(.constdata__ZTVN8touchgfx12FadeAnimatorINS_5ImageEEE)
 <LI><a href="#[1db]">touchgfx::Drawable::moveTo(short, short)</a> from cookingviewbase.o(i._ZN8touchgfx8Drawable6moveToEss) referenced from cookingviewbase.o(.constdata__ZTVN8touchgfx12FadeAnimatorINS_6ButtonEEE)
 <LI><a href="#[1db]">touchgfx::Drawable::moveTo(short, short)</a> from cookingviewbase.o(i._ZN8touchgfx8Drawable6moveToEss) referenced from cookingviewbase.o(.constdata__ZTVN8touchgfx12FadeAnimatorINS_8TextAreaEEE)
 <LI><a href="#[1db]">touchgfx::Drawable::moveTo(short, short)</a> from cookingviewbase.o(i._ZN8touchgfx8Drawable6moveToEss) referenced from selectingmenuviewbase.o(.constdata__ZTVN8touchgfx12MoveAnimatorINS_9ContainerEEE)
 <LI><a href="#[1db]">touchgfx::Drawable::moveTo(short, short)</a> from cookingviewbase.o(i._ZN8touchgfx8Drawable6moveToEss) referenced from boxwithborder.o(.constdata__ZTVN8touchgfx13BoxWithBorderE)
 <LI><a href="#[1db]">touchgfx::Drawable::moveTo(short, short)</a> from cookingviewbase.o(i._ZN8touchgfx8Drawable6moveToEss) referenced from abstractbutton.o(.constdata__ZTVN8touchgfx14AbstractButtonE)
 <LI><a href="#[1db]">touchgfx::Drawable::moveTo(short, short)</a> from cookingviewbase.o(i._ZN8touchgfx8Drawable6moveToEss) referenced from informationdemoviewbase.o(.constdata__ZTVN8touchgfx18ClickButtonTriggerE)
 <LI><a href="#[1db]">touchgfx::Drawable::moveTo(short, short)</a> from cookingviewbase.o(i._ZN8touchgfx8Drawable6moveToEss) referenced from informationdemoviewbase.o(.constdata__ZTVN8touchgfx23AbstractButtonContainerE)
 <LI><a href="#[1db]">touchgfx::Drawable::moveTo(short, short)</a> from cookingviewbase.o(i._ZN8touchgfx8Drawable6moveToEss) referenced from settingsviewbase.o(.constdata__ZTVN8touchgfx23TextAreaWithOneWildcardE)
 <LI><a href="#[1db]">touchgfx::Drawable::moveTo(short, short)</a> from cookingviewbase.o(i._ZN8touchgfx8Drawable6moveToEss) referenced from informationdemoviewbase.o(.constdata__ZTVN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEE)
 <LI><a href="#[1db]">touchgfx::Drawable::moveTo(short, short)</a> from cookingviewbase.o(i._ZN8touchgfx8Drawable6moveToEss) referenced from cookingviewbase.o(.constdata__ZTVN8touchgfx24TextAreaWithTwoWildcardsE)
 <LI><a href="#[1db]">touchgfx::Drawable::moveTo(short, short)</a> from cookingviewbase.o(i._ZN8touchgfx8Drawable6moveToEss) referenced from textareawithwildcard.o(.constdata__ZTVN8touchgfx24TextAreaWithWildcardBaseE)
 <LI><a href="#[1db]">touchgfx::Drawable::moveTo(short, short)</a> from cookingviewbase.o(i._ZN8touchgfx8Drawable6moveToEss) referenced from box.o(.constdata__ZTVN8touchgfx3BoxE)
 <LI><a href="#[1db]">touchgfx::Drawable::moveTo(short, short)</a> from cookingviewbase.o(i._ZN8touchgfx8Drawable6moveToEss) referenced from image.o(.constdata__ZTVN8touchgfx5ImageE)
 <LI><a href="#[1db]">touchgfx::Drawable::moveTo(short, short)</a> from cookingviewbase.o(i._ZN8touchgfx8Drawable6moveToEss) referenced from button.o(.constdata__ZTVN8touchgfx6ButtonE)
 <LI><a href="#[1db]">touchgfx::Drawable::moveTo(short, short)</a> from cookingviewbase.o(i._ZN8touchgfx8Drawable6moveToEss) referenced from circle.o(.constdata__ZTVN8touchgfx6CircleE)
 <LI><a href="#[1db]">touchgfx::Drawable::moveTo(short, short)</a> from cookingviewbase.o(i._ZN8touchgfx8Drawable6moveToEss) referenced from cookingviewbase.o(.constdata__ZTVN8touchgfx6WidgetE)
 <LI><a href="#[1db]">touchgfx::Drawable::moveTo(short, short)</a> from cookingviewbase.o(i._ZN8touchgfx8Drawable6moveToEss) referenced from drawable.o(.constdata__ZTVN8touchgfx8DrawableE)
 <LI><a href="#[1db]">touchgfx::Drawable::moveTo(short, short)</a> from cookingviewbase.o(i._ZN8touchgfx8Drawable6moveToEss) referenced from textarea.o(.constdata__ZTVN8touchgfx8TextAreaE)
 <LI><a href="#[1db]">touchgfx::Drawable::moveTo(short, short)</a> from cookingviewbase.o(i._ZN8touchgfx8Drawable6moveToEss) referenced from container.o(.constdata__ZTVN8touchgfx9ContainerE)
 <LI><a href="#[1d4]">touchgfx::Drawable::setWidth(short)</a> from cookingviewbase.o(i._ZN8touchgfx8Drawable8setWidthEs) referenced from canvaswidget.o(.constdata__ZTVN8touchgfx12CanvasWidgetE)
 <LI><a href="#[1d4]">touchgfx::Drawable::setWidth(short)</a> from cookingviewbase.o(i._ZN8touchgfx8Drawable8setWidthEs) referenced from cookingviewbase.o(.constdata__ZTVN8touchgfx12FadeAnimatorINS_5ImageEEE)
 <LI><a href="#[1d4]">touchgfx::Drawable::setWidth(short)</a> from cookingviewbase.o(i._ZN8touchgfx8Drawable8setWidthEs) referenced from cookingviewbase.o(.constdata__ZTVN8touchgfx12FadeAnimatorINS_6ButtonEEE)
 <LI><a href="#[1d4]">touchgfx::Drawable::setWidth(short)</a> from cookingviewbase.o(i._ZN8touchgfx8Drawable8setWidthEs) referenced from selectingmenuviewbase.o(.constdata__ZTVN8touchgfx12MoveAnimatorINS_9ContainerEEE)
 <LI><a href="#[1d4]">touchgfx::Drawable::setWidth(short)</a> from cookingviewbase.o(i._ZN8touchgfx8Drawable8setWidthEs) referenced from boxwithborder.o(.constdata__ZTVN8touchgfx13BoxWithBorderE)
 <LI><a href="#[1d4]">touchgfx::Drawable::setWidth(short)</a> from cookingviewbase.o(i._ZN8touchgfx8Drawable8setWidthEs) referenced from abstractbutton.o(.constdata__ZTVN8touchgfx14AbstractButtonE)
 <LI><a href="#[1d4]">touchgfx::Drawable::setWidth(short)</a> from cookingviewbase.o(i._ZN8touchgfx8Drawable8setWidthEs) referenced from informationdemoviewbase.o(.constdata__ZTVN8touchgfx18ClickButtonTriggerE)
 <LI><a href="#[1d4]">touchgfx::Drawable::setWidth(short)</a> from cookingviewbase.o(i._ZN8touchgfx8Drawable8setWidthEs) referenced from informationdemoviewbase.o(.constdata__ZTVN8touchgfx23AbstractButtonContainerE)
 <LI><a href="#[1d4]">touchgfx::Drawable::setWidth(short)</a> from cookingviewbase.o(i._ZN8touchgfx8Drawable8setWidthEs) referenced from informationdemoviewbase.o(.constdata__ZTVN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEE)
 <LI><a href="#[1d4]">touchgfx::Drawable::setWidth(short)</a> from cookingviewbase.o(i._ZN8touchgfx8Drawable8setWidthEs) referenced from box.o(.constdata__ZTVN8touchgfx3BoxE)
 <LI><a href="#[1d4]">touchgfx::Drawable::setWidth(short)</a> from cookingviewbase.o(i._ZN8touchgfx8Drawable8setWidthEs) referenced from image.o(.constdata__ZTVN8touchgfx5ImageE)
 <LI><a href="#[1d4]">touchgfx::Drawable::setWidth(short)</a> from cookingviewbase.o(i._ZN8touchgfx8Drawable8setWidthEs) referenced from button.o(.constdata__ZTVN8touchgfx6ButtonE)
 <LI><a href="#[1d4]">touchgfx::Drawable::setWidth(short)</a> from cookingviewbase.o(i._ZN8touchgfx8Drawable8setWidthEs) referenced from circle.o(.constdata__ZTVN8touchgfx6CircleE)
 <LI><a href="#[1d4]">touchgfx::Drawable::setWidth(short)</a> from cookingviewbase.o(i._ZN8touchgfx8Drawable8setWidthEs) referenced from cookingviewbase.o(.constdata__ZTVN8touchgfx6WidgetE)
 <LI><a href="#[1d4]">touchgfx::Drawable::setWidth(short)</a> from cookingviewbase.o(i._ZN8touchgfx8Drawable8setWidthEs) referenced from drawable.o(.constdata__ZTVN8touchgfx8DrawableE)
 <LI><a href="#[1d4]">touchgfx::Drawable::setWidth(short)</a> from cookingviewbase.o(i._ZN8touchgfx8Drawable8setWidthEs) referenced from container.o(.constdata__ZTVN8touchgfx9ContainerE)
 <LI><a href="#[1d5]">touchgfx::Drawable::setHeight(short)</a> from cookingviewbase.o(i._ZN8touchgfx8Drawable9setHeightEs) referenced from canvaswidget.o(.constdata__ZTVN8touchgfx12CanvasWidgetE)
 <LI><a href="#[1d5]">touchgfx::Drawable::setHeight(short)</a> from cookingviewbase.o(i._ZN8touchgfx8Drawable9setHeightEs) referenced from cookingviewbase.o(.constdata__ZTVN8touchgfx12FadeAnimatorINS_5ImageEEE)
 <LI><a href="#[1d5]">touchgfx::Drawable::setHeight(short)</a> from cookingviewbase.o(i._ZN8touchgfx8Drawable9setHeightEs) referenced from cookingviewbase.o(.constdata__ZTVN8touchgfx12FadeAnimatorINS_6ButtonEEE)
 <LI><a href="#[1d5]">touchgfx::Drawable::setHeight(short)</a> from cookingviewbase.o(i._ZN8touchgfx8Drawable9setHeightEs) referenced from selectingmenuviewbase.o(.constdata__ZTVN8touchgfx12MoveAnimatorINS_9ContainerEEE)
 <LI><a href="#[1d5]">touchgfx::Drawable::setHeight(short)</a> from cookingviewbase.o(i._ZN8touchgfx8Drawable9setHeightEs) referenced from boxwithborder.o(.constdata__ZTVN8touchgfx13BoxWithBorderE)
 <LI><a href="#[1d5]">touchgfx::Drawable::setHeight(short)</a> from cookingviewbase.o(i._ZN8touchgfx8Drawable9setHeightEs) referenced from abstractbutton.o(.constdata__ZTVN8touchgfx14AbstractButtonE)
 <LI><a href="#[1d5]">touchgfx::Drawable::setHeight(short)</a> from cookingviewbase.o(i._ZN8touchgfx8Drawable9setHeightEs) referenced from informationdemoviewbase.o(.constdata__ZTVN8touchgfx18ClickButtonTriggerE)
 <LI><a href="#[1d5]">touchgfx::Drawable::setHeight(short)</a> from cookingviewbase.o(i._ZN8touchgfx8Drawable9setHeightEs) referenced from informationdemoviewbase.o(.constdata__ZTVN8touchgfx23AbstractButtonContainerE)
 <LI><a href="#[1d5]">touchgfx::Drawable::setHeight(short)</a> from cookingviewbase.o(i._ZN8touchgfx8Drawable9setHeightEs) referenced from informationdemoviewbase.o(.constdata__ZTVN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEE)
 <LI><a href="#[1d5]">touchgfx::Drawable::setHeight(short)</a> from cookingviewbase.o(i._ZN8touchgfx8Drawable9setHeightEs) referenced from box.o(.constdata__ZTVN8touchgfx3BoxE)
 <LI><a href="#[1d5]">touchgfx::Drawable::setHeight(short)</a> from cookingviewbase.o(i._ZN8touchgfx8Drawable9setHeightEs) referenced from image.o(.constdata__ZTVN8touchgfx5ImageE)
 <LI><a href="#[1d5]">touchgfx::Drawable::setHeight(short)</a> from cookingviewbase.o(i._ZN8touchgfx8Drawable9setHeightEs) referenced from button.o(.constdata__ZTVN8touchgfx6ButtonE)
 <LI><a href="#[1d5]">touchgfx::Drawable::setHeight(short)</a> from cookingviewbase.o(i._ZN8touchgfx8Drawable9setHeightEs) referenced from circle.o(.constdata__ZTVN8touchgfx6CircleE)
 <LI><a href="#[1d5]">touchgfx::Drawable::setHeight(short)</a> from cookingviewbase.o(i._ZN8touchgfx8Drawable9setHeightEs) referenced from cookingviewbase.o(.constdata__ZTVN8touchgfx6WidgetE)
 <LI><a href="#[1d5]">touchgfx::Drawable::setHeight(short)</a> from cookingviewbase.o(i._ZN8touchgfx8Drawable9setHeightEs) referenced from drawable.o(.constdata__ZTVN8touchgfx8DrawableE)
 <LI><a href="#[1d5]">touchgfx::Drawable::setHeight(short)</a> from cookingviewbase.o(i._ZN8touchgfx8Drawable9setHeightEs) referenced from container.o(.constdata__ZTVN8touchgfx9ContainerE)
 <LI><a href="#[27f]">touchgfx::LCD16bpp::fillBuffer(unsigned char*, unsigned short, const touchgfx::Rect&, touchgfx::colortype, unsigned char)</a> from lcd16bpp.o(i._ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh) referenced from lcd16bpp.o(.constdata__ZTVN8touchgfx8LCD16bppE)
 <LI><a href="#[273]">touchgfx::LCD16bpp::DecompressorL8_L4::blitCopyRGB565(const unsigned char*, const unsigned char*, const touchgfx::Rect&, const touchgfx::Rect&, unsigned char)</a> from lcd16bpp.o(i._ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h) referenced from lcd16bpp.o(.constdata__ZTVN8touchgfx8LCD16bpp17DecompressorL8_L4E)
 <LI><a href="#[275]">touchgfx::LCD16bpp::DecompressorL8_L4::blitCopyRGB888(const unsigned char*, const unsigned char*, const touchgfx::Rect&, const touchgfx::Rect&, unsigned char)</a> from lcd16bpp.o(i._ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h) referenced from lcd16bpp.o(.constdata__ZTVN8touchgfx8LCD16bpp17DecompressorL8_L4E)
 <LI><a href="#[274]">touchgfx::LCD16bpp::DecompressorL8_L4::blitCopyARGB8888(const unsigned char*, const unsigned char*, const touchgfx::Rect&, const touchgfx::Rect&, unsigned char)</a> from lcd16bpp.o(i._ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h) referenced from lcd16bpp.o(.constdata__ZTVN8touchgfx8LCD16bpp17DecompressorL8_L4E)
 <LI><a href="#[b4]">touchgfx::LCD16bpp::DecompressorL8_L4::~DecompressorL8_L4()</a> from lcd16bpp.o(i._ZN8touchgfx8LCD16bpp17DecompressorL8_L4D1Ev) referenced from lcd16bpp.o(.constdata__ZTVN8touchgfx8LCD16bpp17DecompressorL8_L4E)
 <LI><a href="#[b4]">touchgfx::LCD16bpp::DecompressorL8_L4::~DecompressorL8_L4()</a> from lcd16bpp.o(i._ZN8touchgfx8LCD16bpp17DecompressorL8_L4D1Ev) referenced from lcd16bpp.o(i._ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev)
 <LI><a href="#[27c]">touchgfx::LCD16bpp::drawPartialBitmap(const touchgfx::Bitmap&, short, short, const touchgfx::Rect&, unsigned char, bool)</a> from lcd16bpp.o(i._ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb) referenced from lcd16bpp.o(.constdata__ZTVN8touchgfx8LCD16bppE)
 <LI><a href="#[276]">touchgfx::LCD16bpp::DecompressorL8_RLE::blitCopyRGB565(const unsigned char*, const unsigned char*, const touchgfx::Rect&, const touchgfx::Rect&, unsigned char)</a> from lcd16bpp.o(i._ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h) referenced from lcd16bpp.o(.constdata__ZTVN8touchgfx8LCD16bpp18DecompressorL8_RLEE)
 <LI><a href="#[278]">touchgfx::LCD16bpp::DecompressorL8_RLE::blitCopyRGB888(const unsigned char*, const unsigned char*, const touchgfx::Rect&, const touchgfx::Rect&, unsigned char)</a> from lcd16bpp.o(i._ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h) referenced from lcd16bpp.o(.constdata__ZTVN8touchgfx8LCD16bpp18DecompressorL8_RLEE)
 <LI><a href="#[277]">touchgfx::LCD16bpp::DecompressorL8_RLE::blitCopyARGB8888(const unsigned char*, const unsigned char*, const touchgfx::Rect&, const touchgfx::Rect&, unsigned char)</a> from lcd16bpp.o(i._ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h) referenced from lcd16bpp.o(.constdata__ZTVN8touchgfx8LCD16bpp18DecompressorL8_RLEE)
 <LI><a href="#[b5]">touchgfx::LCD16bpp::DecompressorL8_RLE::~DecompressorL8_RLE()</a> from lcd16bpp.o(i._ZN8touchgfx8LCD16bpp18DecompressorL8_RLED1Ev) referenced from lcd16bpp.o(.constdata__ZTVN8touchgfx8LCD16bpp18DecompressorL8_RLEE)
 <LI><a href="#[b5]">touchgfx::LCD16bpp::DecompressorL8_RLE::~DecompressorL8_RLE()</a> from lcd16bpp.o(i._ZN8touchgfx8LCD16bpp18DecompressorL8_RLED1Ev) referenced from lcd16bpp.o(i._ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv)
 <LI><a href="#[279]">touchgfx::LCD16bpp::DecompressorL8_LZW9::blitCopyRGB565(const unsigned char*, const unsigned char*, const touchgfx::Rect&, const touchgfx::Rect&, unsigned char)</a> from lcd16bpp.o(i._ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h) referenced from lcd16bpp.o(.constdata__ZTVN8touchgfx8LCD16bpp19DecompressorL8_LZW9E)
 <LI><a href="#[27b]">touchgfx::LCD16bpp::DecompressorL8_LZW9::blitCopyRGB888(const unsigned char*, const unsigned char*, const touchgfx::Rect&, const touchgfx::Rect&, unsigned char)</a> from lcd16bpp.o(i._ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h) referenced from lcd16bpp.o(.constdata__ZTVN8touchgfx8LCD16bpp19DecompressorL8_LZW9E)
 <LI><a href="#[27a]">touchgfx::LCD16bpp::DecompressorL8_LZW9::blitCopyARGB8888(const unsigned char*, const unsigned char*, const touchgfx::Rect&, const touchgfx::Rect&, unsigned char)</a> from lcd16bpp.o(i._ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h) referenced from lcd16bpp.o(.constdata__ZTVN8touchgfx8LCD16bpp19DecompressorL8_LZW9E)
 <LI><a href="#[b6]">touchgfx::LCD16bpp::DecompressorL8_LZW9::~DecompressorL8_LZW9()</a> from lcd16bpp.o(i._ZN8touchgfx8LCD16bpp19DecompressorL8_LZW9D1Ev) referenced from lcd16bpp.o(.constdata__ZTVN8touchgfx8LCD16bpp19DecompressorL8_LZW9E)
 <LI><a href="#[b6]">touchgfx::LCD16bpp::DecompressorL8_LZW9::~DecompressorL8_LZW9()</a> from lcd16bpp.o(i._ZN8touchgfx8LCD16bpp19DecompressorL8_LZW9D1Ev) referenced from lcd16bpp.o(i._ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev)
 <LI><a href="#[b7]">touchgfx::LCD16bpp::TextureMapper_A4_NearestNeighbor_GA::~TextureMapper_A4_NearestNeighbor_GA()</a> from lcd16bpp.o(i._ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GAD1Ev) referenced from lcd16bpp.o(.constdata__ZTVN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GAE)
 <LI><a href="#[b7]">touchgfx::LCD16bpp::TextureMapper_A4_NearestNeighbor_GA::~TextureMapper_A4_NearestNeighbor_GA()</a> from lcd16bpp.o(i._ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GAD1Ev) referenced from lcd16bpp.o(i._ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv)
 <LI><a href="#[b8]">touchgfx::LCD16bpp::TextureMapper_A4_NearestNeighbor_NoGA::~TextureMapper_A4_NearestNeighbor_NoGA()</a> from lcd16bpp.o(i._ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGAD1Ev) referenced from lcd16bpp.o(.constdata__ZTVN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGAE)
 <LI><a href="#[b8]">touchgfx::LCD16bpp::TextureMapper_A4_NearestNeighbor_NoGA::~TextureMapper_A4_NearestNeighbor_NoGA()</a> from lcd16bpp.o(i._ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGAD1Ev) referenced from lcd16bpp.o(i._ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv)
 <LI><a href="#[b9]">touchgfx::LCD16bpp::TextureMapper_A4_BilinearInterpolation_GA::~TextureMapper_A4_BilinearInterpolation_GA()</a> from lcd16bpp.o(i._ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GAD1Ev) referenced from lcd16bpp.o(.constdata__ZTVN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GAE)
 <LI><a href="#[b9]">touchgfx::LCD16bpp::TextureMapper_A4_BilinearInterpolation_GA::~TextureMapper_A4_BilinearInterpolation_GA()</a> from lcd16bpp.o(i._ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GAD1Ev) referenced from lcd16bpp.o(i._ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv)
 <LI><a href="#[ba]">touchgfx::LCD16bpp::TextureMapper_A4_BilinearInterpolation_NoGA::~TextureMapper_A4_BilinearInterpolation_NoGA()</a> from lcd16bpp.o(i._ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGAD1Ev) referenced from lcd16bpp.o(.constdata__ZTVN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGAE)
 <LI><a href="#[ba]">touchgfx::LCD16bpp::TextureMapper_A4_BilinearInterpolation_NoGA::~TextureMapper_A4_BilinearInterpolation_NoGA()</a> from lcd16bpp.o(i._ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGAD1Ev) referenced from lcd16bpp.o(i._ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv)
 <LI><a href="#[c3]">touchgfx::LCD16bpp::TextureMapper_RGB565_Opaque_NearestNeighbor_GA::~TextureMapper_RGB565_Opaque_NearestNeighbor_GA()</a> from lcd16bpp.o(i._ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GAD1Ev) referenced from lcd16bpp.o(.constdata__ZTVN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GAE)
 <LI><a href="#[c3]">touchgfx::LCD16bpp::TextureMapper_RGB565_Opaque_NearestNeighbor_GA::~TextureMapper_RGB565_Opaque_NearestNeighbor_GA()</a> from lcd16bpp.o(i._ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GAD1Ev) referenced from lcd16bpp.o(i._ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv)
 <LI><a href="#[c4]">touchgfx::LCD16bpp::TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA::~TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA()</a> from lcd16bpp.o(i._ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGAD1Ev) referenced from lcd16bpp.o(.constdata__ZTVN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGAE)
 <LI><a href="#[c4]">touchgfx::LCD16bpp::TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA::~TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA()</a> from lcd16bpp.o(i._ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGAD1Ev) referenced from lcd16bpp.o(i._ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv)
 <LI><a href="#[bd]">touchgfx::LCD16bpp::TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA::~TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA()</a> from lcd16bpp.o(i._ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GAD1Ev) referenced from lcd16bpp.o(.constdata__ZTVN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GAE)
 <LI><a href="#[bd]">touchgfx::LCD16bpp::TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA::~TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA()</a> from lcd16bpp.o(i._ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GAD1Ev) referenced from lcd16bpp.o(i._ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv)
 <LI><a href="#[bf]">touchgfx::LCD16bpp::TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA::~TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA()</a> from lcd16bpp.o(i._ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GAD1Ev) referenced from lcd16bpp.o(.constdata__ZTVN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GAE)
 <LI><a href="#[bf]">touchgfx::LCD16bpp::TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA::~TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA()</a> from lcd16bpp.o(i._ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GAD1Ev) referenced from lcd16bpp.o(i._ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv)
 <LI><a href="#[cb]">touchgfx::LCD16bpp::TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA::~TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA()</a> from lcd16bpp.o(i._ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GAD1Ev) referenced from lcd16bpp.o(.constdata__ZTVN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GAE)
 <LI><a href="#[cb]">touchgfx::LCD16bpp::TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA::~TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA()</a> from lcd16bpp.o(i._ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GAD1Ev) referenced from lcd16bpp.o(i._ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv)
 <LI><a href="#[bb]">touchgfx::LCD16bpp::TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA::~TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA()</a> from lcd16bpp.o(i._ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GAD1Ev) referenced from lcd16bpp.o(.constdata__ZTVN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GAE)
 <LI><a href="#[bb]">touchgfx::LCD16bpp::TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA::~TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA()</a> from lcd16bpp.o(i._ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GAD1Ev) referenced from lcd16bpp.o(i._ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv)
 <LI><a href="#[be]">touchgfx::LCD16bpp::TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA::~TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA()</a> from lcd16bpp.o(i._ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGAD1Ev) referenced from lcd16bpp.o(.constdata__ZTVN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGAE)
 <LI><a href="#[be]">touchgfx::LCD16bpp::TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA::~TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA()</a> from lcd16bpp.o(i._ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGAD1Ev) referenced from lcd16bpp.o(i._ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv)
 <LI><a href="#[c0]">touchgfx::LCD16bpp::TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA::~TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA()</a> from lcd16bpp.o(i._ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGAD1Ev) referenced from lcd16bpp.o(.constdata__ZTVN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGAE)
 <LI><a href="#[c0]">touchgfx::LCD16bpp::TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA::~TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA()</a> from lcd16bpp.o(i._ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGAD1Ev) referenced from lcd16bpp.o(i._ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv)
 <LI><a href="#[cc]">touchgfx::LCD16bpp::TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA::~TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA()</a> from lcd16bpp.o(i._ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGAD1Ev) referenced from lcd16bpp.o(.constdata__ZTVN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGAE)
 <LI><a href="#[cc]">touchgfx::LCD16bpp::TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA::~TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA()</a> from lcd16bpp.o(i._ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGAD1Ev) referenced from lcd16bpp.o(i._ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv)
 <LI><a href="#[cf]">touchgfx::LCD16bpp::TextureMapper_RGB565_Opaque_BilinearInterpolation_GA::~TextureMapper_RGB565_Opaque_BilinearInterpolation_GA()</a> from lcd16bpp.o(i._ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GAD1Ev) referenced from lcd16bpp.o(.constdata__ZTVN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GAE)
 <LI><a href="#[cf]">touchgfx::LCD16bpp::TextureMapper_RGB565_Opaque_BilinearInterpolation_GA::~TextureMapper_RGB565_Opaque_BilinearInterpolation_GA()</a> from lcd16bpp.o(i._ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GAD1Ev) referenced from lcd16bpp.o(i._ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv)
 <LI><a href="#[bc]">touchgfx::LCD16bpp::TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA::~TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA()</a> from lcd16bpp.o(i._ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGAD1Ev) referenced from lcd16bpp.o(.constdata__ZTVN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGAE)
 <LI><a href="#[bc]">touchgfx::LCD16bpp::TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA::~TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA()</a> from lcd16bpp.o(i._ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGAD1Ev) referenced from lcd16bpp.o(i._ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv)
 <LI><a href="#[c1]">touchgfx::LCD16bpp::TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA::~TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA()</a> from lcd16bpp.o(i._ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GAD1Ev) referenced from lcd16bpp.o(.constdata__ZTVN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GAE)
 <LI><a href="#[c1]">touchgfx::LCD16bpp::TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA::~TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA()</a> from lcd16bpp.o(i._ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GAD1Ev) referenced from lcd16bpp.o(i._ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv)
 <LI><a href="#[d0]">touchgfx::LCD16bpp::TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA::~TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA()</a> from lcd16bpp.o(i._ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGAD1Ev) referenced from lcd16bpp.o(.constdata__ZTVN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGAE)
 <LI><a href="#[d0]">touchgfx::LCD16bpp::TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA::~TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA()</a> from lcd16bpp.o(i._ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGAD1Ev) referenced from lcd16bpp.o(i._ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv)
 <LI><a href="#[c7]">touchgfx::LCD16bpp::TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA::~TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA()</a> from lcd16bpp.o(i._ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GAD1Ev) referenced from lcd16bpp.o(.constdata__ZTVN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GAE)
 <LI><a href="#[c7]">touchgfx::LCD16bpp::TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA::~TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA()</a> from lcd16bpp.o(i._ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GAD1Ev) referenced from lcd16bpp.o(i._ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv)
 <LI><a href="#[c9]">touchgfx::LCD16bpp::TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA::~TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA()</a> from lcd16bpp.o(i._ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GAD1Ev) referenced from lcd16bpp.o(.constdata__ZTVN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GAE)
 <LI><a href="#[c9]">touchgfx::LCD16bpp::TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA::~TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA()</a> from lcd16bpp.o(i._ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GAD1Ev) referenced from lcd16bpp.o(i._ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv)
 <LI><a href="#[d1]">touchgfx::LCD16bpp::TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA::~TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA()</a> from lcd16bpp.o(i._ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GAD1Ev) referenced from lcd16bpp.o(.constdata__ZTVN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GAE)
 <LI><a href="#[d1]">touchgfx::LCD16bpp::TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA::~TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA()</a> from lcd16bpp.o(i._ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GAD1Ev) referenced from lcd16bpp.o(i._ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv)
 <LI><a href="#[c2]">touchgfx::LCD16bpp::TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA::~TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA()</a> from lcd16bpp.o(i._ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGAD1Ev) referenced from lcd16bpp.o(.constdata__ZTVN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGAE)
 <LI><a href="#[c2]">touchgfx::LCD16bpp::TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA::~TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA()</a> from lcd16bpp.o(i._ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGAD1Ev) referenced from lcd16bpp.o(i._ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv)
 <LI><a href="#[c5]">touchgfx::LCD16bpp::TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA::~TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA()</a> from lcd16bpp.o(i._ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GAD1Ev) referenced from lcd16bpp.o(.constdata__ZTVN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GAE)
 <LI><a href="#[c5]">touchgfx::LCD16bpp::TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA::~TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA()</a> from lcd16bpp.o(i._ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GAD1Ev) referenced from lcd16bpp.o(i._ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv)
 <LI><a href="#[c8]">touchgfx::LCD16bpp::TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA::~TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA()</a> from lcd16bpp.o(i._ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGAD1Ev) referenced from lcd16bpp.o(.constdata__ZTVN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGAE)
 <LI><a href="#[c8]">touchgfx::LCD16bpp::TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA::~TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA()</a> from lcd16bpp.o(i._ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGAD1Ev) referenced from lcd16bpp.o(i._ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv)
 <LI><a href="#[ca]">touchgfx::LCD16bpp::TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA::~TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA()</a> from lcd16bpp.o(i._ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGAD1Ev) referenced from lcd16bpp.o(.constdata__ZTVN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGAE)
 <LI><a href="#[ca]">touchgfx::LCD16bpp::TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA::~TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA()</a> from lcd16bpp.o(i._ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGAD1Ev) referenced from lcd16bpp.o(i._ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv)
 <LI><a href="#[d2]">touchgfx::LCD16bpp::TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA::~TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA()</a> from lcd16bpp.o(i._ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGAD1Ev) referenced from lcd16bpp.o(.constdata__ZTVN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGAE)
 <LI><a href="#[d2]">touchgfx::LCD16bpp::TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA::~TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA()</a> from lcd16bpp.o(i._ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGAD1Ev) referenced from lcd16bpp.o(i._ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv)
 <LI><a href="#[c6]">touchgfx::LCD16bpp::TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA::~TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA()</a> from lcd16bpp.o(i._ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGAD1Ev) referenced from lcd16bpp.o(.constdata__ZTVN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGAE)
 <LI><a href="#[c6]">touchgfx::LCD16bpp::TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA::~TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA()</a> from lcd16bpp.o(i._ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGAD1Ev) referenced from lcd16bpp.o(i._ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv)
 <LI><a href="#[cd]">touchgfx::LCD16bpp::TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA::~TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA()</a> from lcd16bpp.o(i._ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GAD1Ev) referenced from lcd16bpp.o(.constdata__ZTVN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GAE)
 <LI><a href="#[cd]">touchgfx::LCD16bpp::TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA::~TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA()</a> from lcd16bpp.o(i._ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GAD1Ev) referenced from lcd16bpp.o(i._ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv)
 <LI><a href="#[ce]">touchgfx::LCD16bpp::TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA::~TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA()</a> from lcd16bpp.o(i._ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGAD1Ev) referenced from lcd16bpp.o(.constdata__ZTVN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGAE)
 <LI><a href="#[ce]">touchgfx::LCD16bpp::TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA::~TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA()</a> from lcd16bpp.o(i._ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGAD1Ev) referenced from lcd16bpp.o(i._ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv)
 <LI><a href="#[27d]">touchgfx::LCD16bpp::blitCopy(const unsigned short*, const touchgfx::Rect&, const touchgfx::Rect&, unsigned char, bool)</a> from lcd16bpp.o(i._ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb) referenced from lcd16bpp.o(.constdata__ZTVN8touchgfx8LCD16bppE)
 <LI><a href="#[27e]">touchgfx::LCD16bpp::fillRect(const touchgfx::Rect&, touchgfx::colortype, unsigned char)</a> from lcd16bpp.o(i._ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh) referenced from lcd16bpp.o(.constdata__ZTVN8touchgfx8LCD16bppE)
 <LI><a href="#[282]">touchgfx::LCD16bpp::drawGlyph(unsigned short*, touchgfx::Rect, short, short, unsigned short, unsigned short, const touchgfx::Rect&, const touchgfx::GlyphNode*, const unsigned char*, unsigned char, touchgfx::colortype, unsigned char, unsigned char, touchgfx::TextRotation)</a> from lcd16bpp.o(i._ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE) referenced from lcd16bpp.o(.constdata__ZTVN8touchgfx8LCD16bppE)
 <LI><a href="#[d5]">touchgfx::LCD16bpp::~LCD16bpp()</a> from touchgfxconfiguration.o(i._ZN8touchgfx8LCD16bppD1Ev) referenced from lcd16bpp.o(.constdata__ZTVN8touchgfx8LCD16bppE)
 <LI><a href="#[d5]">touchgfx::LCD16bpp::~LCD16bpp()</a> from touchgfxconfiguration.o(i._ZN8touchgfx8LCD16bppD1Ev) referenced from touchgfxconfiguration.o(i.__sti___25_TouchGFXConfiguration_cpp_f5abfd34)
 <LI><a href="#[1e8]">touchgfx::TextArea::setAlpha(unsigned char)</a> from cookingview.o(i._ZN8touchgfx8TextArea8setAlphaEh) referenced from cookingviewbase.o(.constdata__ZTVN8touchgfx12FadeAnimatorINS_24TextAreaWithTwoWildcardsEEE)
 <LI><a href="#[1e8]">touchgfx::TextArea::setAlpha(unsigned char)</a> from cookingview.o(i._ZN8touchgfx8TextArea8setAlphaEh) referenced from cookingviewbase.o(.constdata__ZTVN8touchgfx12FadeAnimatorINS_8TextAreaEEE)
 <LI><a href="#[1e8]">touchgfx::TextArea::setAlpha(unsigned char)</a> from cookingview.o(i._ZN8touchgfx8TextArea8setAlphaEh) referenced from settingsviewbase.o(.constdata__ZTVN8touchgfx23TextAreaWithOneWildcardE)
 <LI><a href="#[1e8]">touchgfx::TextArea::setAlpha(unsigned char)</a> from cookingview.o(i._ZN8touchgfx8TextArea8setAlphaEh) referenced from cookingviewbase.o(.constdata__ZTVN8touchgfx24TextAreaWithTwoWildcardsE)
 <LI><a href="#[1e8]">touchgfx::TextArea::setAlpha(unsigned char)</a> from cookingview.o(i._ZN8touchgfx8TextArea8setAlphaEh) referenced from textareawithwildcard.o(.constdata__ZTVN8touchgfx24TextAreaWithWildcardBaseE)
 <LI><a href="#[1e8]">touchgfx::TextArea::setAlpha(unsigned char)</a> from cookingview.o(i._ZN8touchgfx8TextArea8setAlphaEh) referenced from textarea.o(.constdata__ZTVN8touchgfx8TextAreaE)
 <LI><a href="#[1e5]">touchgfx::TextArea::setWidth(short)</a> from cookingviewbase.o(i._ZN8touchgfx8TextArea8setWidthEs) referenced from cookingviewbase.o(.constdata__ZTVN8touchgfx12FadeAnimatorINS_24TextAreaWithTwoWildcardsEEE)
 <LI><a href="#[1e5]">touchgfx::TextArea::setWidth(short)</a> from cookingviewbase.o(i._ZN8touchgfx8TextArea8setWidthEs) referenced from cookingviewbase.o(.constdata__ZTVN8touchgfx12FadeAnimatorINS_8TextAreaEEE)
 <LI><a href="#[1e5]">touchgfx::TextArea::setWidth(short)</a> from cookingviewbase.o(i._ZN8touchgfx8TextArea8setWidthEs) referenced from settingsviewbase.o(.constdata__ZTVN8touchgfx23TextAreaWithOneWildcardE)
 <LI><a href="#[1e5]">touchgfx::TextArea::setWidth(short)</a> from cookingviewbase.o(i._ZN8touchgfx8TextArea8setWidthEs) referenced from cookingviewbase.o(.constdata__ZTVN8touchgfx24TextAreaWithTwoWildcardsE)
 <LI><a href="#[1e5]">touchgfx::TextArea::setWidth(short)</a> from cookingviewbase.o(i._ZN8touchgfx8TextArea8setWidthEs) referenced from textareawithwildcard.o(.constdata__ZTVN8touchgfx24TextAreaWithWildcardBaseE)
 <LI><a href="#[1e5]">touchgfx::TextArea::setWidth(short)</a> from cookingviewbase.o(i._ZN8touchgfx8TextArea8setWidthEs) referenced from textarea.o(.constdata__ZTVN8touchgfx8TextAreaE)
 <LI><a href="#[1e6]">touchgfx::TextArea::setHeight(short)</a> from cookingviewbase.o(i._ZN8touchgfx8TextArea9setHeightEs) referenced from cookingviewbase.o(.constdata__ZTVN8touchgfx12FadeAnimatorINS_24TextAreaWithTwoWildcardsEEE)
 <LI><a href="#[1e6]">touchgfx::TextArea::setHeight(short)</a> from cookingviewbase.o(i._ZN8touchgfx8TextArea9setHeightEs) referenced from cookingviewbase.o(.constdata__ZTVN8touchgfx12FadeAnimatorINS_8TextAreaEEE)
 <LI><a href="#[1e6]">touchgfx::TextArea::setHeight(short)</a> from cookingviewbase.o(i._ZN8touchgfx8TextArea9setHeightEs) referenced from settingsviewbase.o(.constdata__ZTVN8touchgfx23TextAreaWithOneWildcardE)
 <LI><a href="#[1e6]">touchgfx::TextArea::setHeight(short)</a> from cookingviewbase.o(i._ZN8touchgfx8TextArea9setHeightEs) referenced from cookingviewbase.o(.constdata__ZTVN8touchgfx24TextAreaWithTwoWildcardsE)
 <LI><a href="#[1e6]">touchgfx::TextArea::setHeight(short)</a> from cookingviewbase.o(i._ZN8touchgfx8TextArea9setHeightEs) referenced from textareawithwildcard.o(.constdata__ZTVN8touchgfx24TextAreaWithWildcardBaseE)
 <LI><a href="#[1e6]">touchgfx::TextArea::setHeight(short)</a> from cookingviewbase.o(i._ZN8touchgfx8TextArea9setHeightEs) referenced from textarea.o(.constdata__ZTVN8touchgfx8TextAreaE)
 <LI><a href="#[283]">touchgfx::TextArea::~TextArea()</a> from cookingviewbase.o(i._ZN8touchgfx8TextAreaD1Ev) referenced from textarea.o(.constdata__ZTVN8touchgfx8TextAreaE)
 <LI><a href="#[209]">touchgfx::Container::getLastChild(short, short, touchgfx::Drawable**)</a> from container.o(i._ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE) referenced from selectingmenuviewbase.o(.constdata__ZTVN8touchgfx12MoveAnimatorINS_9ContainerEEE)
 <LI><a href="#[209]">touchgfx::Container::getLastChild(short, short, touchgfx::Drawable**)</a> from container.o(i._ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE) referenced from informationdemoviewbase.o(.constdata__ZTVN8touchgfx18ClickButtonTriggerE)
 <LI><a href="#[209]">touchgfx::Container::getLastChild(short, short, touchgfx::Drawable**)</a> from container.o(i._ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE) referenced from informationdemoviewbase.o(.constdata__ZTVN8touchgfx23AbstractButtonContainerE)
 <LI><a href="#[209]">touchgfx::Container::getLastChild(short, short, touchgfx::Drawable**)</a> from container.o(i._ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE) referenced from informationdemoviewbase.o(.constdata__ZTVN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEE)
 <LI><a href="#[209]">touchgfx::Container::getLastChild(short, short, touchgfx::Drawable**)</a> from container.o(i._ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE) referenced from container.o(.constdata__ZTVN8touchgfx9ContainerE)
 <LI><a href="#[20b]">touchgfx::Container::setupDrawChain(const touchgfx::Rect&, touchgfx::Drawable**)</a> from container.o(i._ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE) referenced from selectingmenuviewbase.o(.constdata__ZTVN8touchgfx12MoveAnimatorINS_9ContainerEEE)
 <LI><a href="#[20b]">touchgfx::Container::setupDrawChain(const touchgfx::Rect&, touchgfx::Drawable**)</a> from container.o(i._ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE) referenced from informationdemoviewbase.o(.constdata__ZTVN8touchgfx18ClickButtonTriggerE)
 <LI><a href="#[20b]">touchgfx::Container::setupDrawChain(const touchgfx::Rect&, touchgfx::Drawable**)</a> from container.o(i._ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE) referenced from informationdemoviewbase.o(.constdata__ZTVN8touchgfx23AbstractButtonContainerE)
 <LI><a href="#[20b]">touchgfx::Container::setupDrawChain(const touchgfx::Rect&, touchgfx::Drawable**)</a> from container.o(i._ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE) referenced from informationdemoviewbase.o(.constdata__ZTVN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEE)
 <LI><a href="#[20b]">touchgfx::Container::setupDrawChain(const touchgfx::Rect&, touchgfx::Drawable**)</a> from container.o(i._ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE) referenced from container.o(.constdata__ZTVN8touchgfx9ContainerE)
 <LI><a href="#[20d]">touchgfx::Container::getLastChildNear(short, short, touchgfx::Drawable**, short*, short*)</a> from container.o(i._ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_) referenced from selectingmenuviewbase.o(.constdata__ZTVN8touchgfx12MoveAnimatorINS_9ContainerEEE)
 <LI><a href="#[20d]">touchgfx::Container::getLastChildNear(short, short, touchgfx::Drawable**, short*, short*)</a> from container.o(i._ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_) referenced from informationdemoviewbase.o(.constdata__ZTVN8touchgfx18ClickButtonTriggerE)
 <LI><a href="#[20d]">touchgfx::Container::getLastChildNear(short, short, touchgfx::Drawable**, short*, short*)</a> from container.o(i._ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_) referenced from informationdemoviewbase.o(.constdata__ZTVN8touchgfx23AbstractButtonContainerE)
 <LI><a href="#[20d]">touchgfx::Container::getLastChildNear(short, short, touchgfx::Drawable**, short*, short*)</a> from container.o(i._ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_) referenced from informationdemoviewbase.o(.constdata__ZTVN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEE)
 <LI><a href="#[20d]">touchgfx::Container::getLastChildNear(short, short, touchgfx::Drawable**, short*, short*)</a> from container.o(i._ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_) referenced from container.o(.constdata__ZTVN8touchgfx9ContainerE)
 <LI><a href="#[20c]">touchgfx::Container::add(touchgfx::Drawable&)</a> from container.o(i._ZN8touchgfx9Container3addERNS_8DrawableE) referenced from selectingmenuviewbase.o(.constdata__ZTVN8touchgfx12MoveAnimatorINS_9ContainerEEE)
 <LI><a href="#[20c]">touchgfx::Container::add(touchgfx::Drawable&)</a> from container.o(i._ZN8touchgfx9Container3addERNS_8DrawableE) referenced from informationdemoviewbase.o(.constdata__ZTVN8touchgfx18ClickButtonTriggerE)
 <LI><a href="#[20c]">touchgfx::Container::add(touchgfx::Drawable&)</a> from container.o(i._ZN8touchgfx9Container3addERNS_8DrawableE) referenced from informationdemoviewbase.o(.constdata__ZTVN8touchgfx23AbstractButtonContainerE)
 <LI><a href="#[20c]">touchgfx::Container::add(touchgfx::Drawable&)</a> from container.o(i._ZN8touchgfx9Container3addERNS_8DrawableE) referenced from informationdemoviewbase.o(.constdata__ZTVN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEE)
 <LI><a href="#[20c]">touchgfx::Container::add(touchgfx::Drawable&)</a> from container.o(i._ZN8touchgfx9Container3addERNS_8DrawableE) referenced from container.o(.constdata__ZTVN8touchgfx9ContainerE)
 <LI><a href="#[284]">touchgfx::Container::~Container()</a> from cookingviewbase.o(i._ZN8touchgfx9ContainerD1Ev) referenced from container.o(.constdata__ZTVN8touchgfx9ContainerE)
 <LI><a href="#[286]">touchgfx::Partition&lang;touchgfx::meta::TypeList&lang;CookingView, touchgfx::meta::TypeList&lang;touchgfx::meta::Nil, touchgfx::meta::Nil&rang;&rang;, (unsigned short)1&rang;::element_size()</a> from touchgfxconfiguration.o(t._ZN8touchgfx9PartitionINS_4meta8TypeListI11CookingViewNS2_INS1_3NilES4_EEEELt1EE12element_sizeEv) referenced from touchgfxconfiguration.o(.constdata__ZTVN8touchgfx9PartitionINS_4meta8TypeListI11CookingViewNS2_INS1_3NilES4_EEEELt1EEE)
 <LI><a href="#[287]">touchgfx::Partition&lang;touchgfx::meta::TypeList&lang;CookingView, touchgfx::meta::TypeList&lang;touchgfx::meta::Nil, touchgfx::meta::Nil&rang;&rang;, (unsigned short)1&rang;::element(unsigned short)</a> from touchgfxconfiguration.o(t._ZN8touchgfx9PartitionINS_4meta8TypeListI11CookingViewNS2_INS1_3NilES4_EEEELt1EE7elementEt) referenced from touchgfxconfiguration.o(.constdata__ZTVN8touchgfx9PartitionINS_4meta8TypeListI11CookingViewNS2_INS1_3NilES4_EEEELt1EEE)
 <LI><a href="#[285]">touchgfx::Partition&lang;touchgfx::meta::TypeList&lang;CookingView, touchgfx::meta::TypeList&lang;touchgfx::meta::Nil, touchgfx::meta::Nil&rang;&rang;, (unsigned short)1&rang;::~Partition()</a> from touchgfxconfiguration.o(i._ZN8touchgfx9PartitionINS_4meta8TypeListI11CookingViewNS2_INS1_3NilES4_EEEELt1EED1Ev) referenced from touchgfxconfiguration.o(.constdata__ZTVN8touchgfx9PartitionINS_4meta8TypeListI11CookingViewNS2_INS1_3NilES4_EEEELt1EEE)
 <LI><a href="#[289]">touchgfx::Partition&lang;touchgfx::meta::TypeList&lang;InformationPresenter, touchgfx::meta::TypeList&lang;touchgfx::meta::Nil, touchgfx::meta::Nil&rang;&rang;, (unsigned short)1&rang;::element_size()</a> from touchgfxconfiguration.o(t._ZN8touchgfx9PartitionINS_4meta8TypeListI20InformationPresenterNS2_INS1_3NilES4_EEEELt1EE12element_sizeEv) referenced from touchgfxconfiguration.o(.constdata__ZTVN8touchgfx9PartitionINS_4meta8TypeListI20InformationPresenterNS2_INS1_3NilES4_EEEELt1EEE)
 <LI><a href="#[28a]">touchgfx::Partition&lang;touchgfx::meta::TypeList&lang;InformationPresenter, touchgfx::meta::TypeList&lang;touchgfx::meta::Nil, touchgfx::meta::Nil&rang;&rang;, (unsigned short)1&rang;::element(unsigned short)</a> from touchgfxconfiguration.o(t._ZN8touchgfx9PartitionINS_4meta8TypeListI20InformationPresenterNS2_INS1_3NilES4_EEEELt1EE7elementEt) referenced from touchgfxconfiguration.o(.constdata__ZTVN8touchgfx9PartitionINS_4meta8TypeListI20InformationPresenterNS2_INS1_3NilES4_EEEELt1EEE)
 <LI><a href="#[288]">touchgfx::Partition&lang;touchgfx::meta::TypeList&lang;InformationPresenter, touchgfx::meta::TypeList&lang;touchgfx::meta::Nil, touchgfx::meta::Nil&rang;&rang;, (unsigned short)1&rang;::~Partition()</a> from touchgfxconfiguration.o(i._ZN8touchgfx9PartitionINS_4meta8TypeListI20InformationPresenterNS2_INS1_3NilES4_EEEELt1EED1Ev) referenced from touchgfxconfiguration.o(.constdata__ZTVN8touchgfx9PartitionINS_4meta8TypeListI20InformationPresenterNS2_INS1_3NilES4_EEEELt1EEE)
 <LI><a href="#[28c]">touchgfx::Partition&lang;touchgfx::meta::TypeList&lang;touchgfx::NoTransition, touchgfx::meta::TypeList&lang;touchgfx::meta::Nil, touchgfx::meta::Nil&rang;&rang;, (unsigned short)1&rang;::element_size()</a> from touchgfxconfiguration.o(t._ZN8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EE12element_sizeEv) referenced from touchgfxconfiguration.o(.constdata__ZTVN8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EEE)
 <LI><a href="#[28d]">touchgfx::Partition&lang;touchgfx::meta::TypeList&lang;touchgfx::NoTransition, touchgfx::meta::TypeList&lang;touchgfx::meta::Nil, touchgfx::meta::Nil&rang;&rang;, (unsigned short)1&rang;::element(unsigned short)</a> from touchgfxconfiguration.o(t._ZN8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EE7elementEt) referenced from touchgfxconfiguration.o(.constdata__ZTVN8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EEE)
 <LI><a href="#[28b]">touchgfx::Partition&lang;touchgfx::meta::TypeList&lang;touchgfx::NoTransition, touchgfx::meta::TypeList&lang;touchgfx::meta::Nil, touchgfx::meta::Nil&rang;&rang;, (unsigned short)1&rang;::~Partition()</a> from touchgfxconfiguration.o(i._ZN8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EED1Ev) referenced from touchgfxconfiguration.o(.constdata__ZTVN8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EEE)
 <LI><a href="#[28f]">touchgfx::Presenter::deactivate()</a> from cookingpresenter.o(i._ZN8touchgfx9Presenter10deactivateEv) referenced from cookingpresenter.o(.constdata__ZTVN8touchgfx9PresenterE)
 <LI><a href="#[28e]">touchgfx::Presenter::activate()</a> from cookingpresenter.o(i._ZN8touchgfx9Presenter8activateEv) referenced from cookingpresenter.o(.constdata__ZTVN8touchgfx9PresenterE)
 <LI><a href="#[290]">touchgfx::Presenter::~Presenter()</a> from cookingpresenter.o(i._ZN8touchgfx9PresenterD1Ev) referenced from cookingpresenter.o(.constdata__ZTVN8touchgfx9PresenterE)
 <LI><a href="#[109]">TouchGFXHAL::getTFTFrameBuffer() const</a> from touchgfxhal.o(i._ZNK11TouchGFXHAL17getTFTFrameBufferEv) referenced from touchgfxhal.o(.constdata__ZTV11TouchGFXHAL)
 <LI><a href="#[193]">TouchGFXGeneratedHAL::getTFTFrameBuffer() const</a> from touchgfxgeneratedhal.o(i._ZNK20TouchGFXGeneratedHAL17getTFTFrameBufferEv) referenced from touchgfxgeneratedhal.o(.constdata__ZTV20TouchGFXGeneratedHAL)
 <LI><a href="#[1cd]">touchgfx::CanvasWidget::invalidate() const</a> from canvaswidget.o(i._ZNK8touchgfx12CanvasWidget10invalidateEv) referenced from canvaswidget.o(.constdata__ZTVN8touchgfx12CanvasWidgetE)
 <LI><a href="#[1cd]">touchgfx::CanvasWidget::invalidate() const</a> from canvaswidget.o(i._ZNK8touchgfx12CanvasWidget10invalidateEv) referenced from circle.o(.constdata__ZTVN8touchgfx6CircleE)
 <LI><a href="#[1cb]">touchgfx::CanvasWidget::getSolidRect() const</a> from canvaswidget.o(i._ZNK8touchgfx12CanvasWidget12getSolidRectEv) referenced from canvaswidget.o(.constdata__ZTVN8touchgfx12CanvasWidgetE)
 <LI><a href="#[1cb]">touchgfx::CanvasWidget::getSolidRect() const</a> from canvaswidget.o(i._ZNK8touchgfx12CanvasWidget12getSolidRectEv) referenced from circle.o(.constdata__ZTVN8touchgfx6CircleE)
 <LI><a href="#[1de]">touchgfx::CanvasWidget::getMinimalRect() const</a> from canvaswidget.o(i._ZNK8touchgfx12CanvasWidget14getMinimalRectEv) referenced from canvaswidget.o(.constdata__ZTVN8touchgfx12CanvasWidgetE)
 <LI><a href="#[1ca]">touchgfx::CanvasWidget::draw(const touchgfx::Rect&) const</a> from canvaswidget.o(i._ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE) referenced from canvaswidget.o(.constdata__ZTVN8touchgfx12CanvasWidgetE)
 <LI><a href="#[1ca]">touchgfx::CanvasWidget::draw(const touchgfx::Rect&) const</a> from canvaswidget.o(i._ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE) referenced from circle.o(.constdata__ZTVN8touchgfx6CircleE)
 <LI><a href="#[1dd]">touchgfx::CanvasWidget::getAlpha() const</a> from canvaswidget.o(i._ZNK8touchgfx12CanvasWidget8getAlphaEv) referenced from canvaswidget.o(.constdata__ZTVN8touchgfx12CanvasWidgetE)
 <LI><a href="#[1dd]">touchgfx::CanvasWidget::getAlpha() const</a> from canvaswidget.o(i._ZNK8touchgfx12CanvasWidget8getAlphaEv) referenced from circle.o(.constdata__ZTVN8touchgfx6CircleE)
 <LI><a href="#[210]">touchgfx::BoxWithBorder::draw(const touchgfx::Rect&) const</a> from boxwithborder.o(i._ZNK8touchgfx13BoxWithBorder4drawERKNS_4RectE) referenced from boxwithborder.o(.constdata__ZTVN8touchgfx13BoxWithBorderE)
 <LI><a href="#[21d]">touchgfx::GeneratedFont::getKerning(unsigned short, const touchgfx::GlyphNode*) const</a> from generatedfont.o(i._ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE) referenced from generatedfont.o(.constdata__ZTVN8touchgfx13GeneratedFontE)
 <LI><a href="#[21e]">touchgfx::GeneratedFont::getGSUBTable() const</a> from generatedfont.o(i._ZNK8touchgfx13GeneratedFont12getGSUBTableEv) referenced from generatedfont.o(.constdata__ZTVN8touchgfx13GeneratedFontE)
 <LI><a href="#[221]">touchgfx::GeneratedFont::getPixelData(const touchgfx::GlyphNode*) const</a> from generatedfont.o(i._ZNK8touchgfx13GeneratedFont12getPixelDataEPKNS_9GlyphNodeE) referenced from generatedfont.o(.constdata__ZTVN8touchgfx13GeneratedFontE)
 <LI><a href="#[21f]">touchgfx::GeneratedFont::getContextualFormsTable() const</a> from generatedfont.o(i._ZNK8touchgfx13GeneratedFont23getContextualFormsTableEv) referenced from generatedfont.o(.constdata__ZTVN8touchgfx13GeneratedFontE)
 <LI><a href="#[222]">touchgfx::PainterRGB565::getRenderingMethod() const</a> from painterrgb565.o(i._ZNK8touchgfx13PainterRGB56518getRenderingMethodEv) referenced from painterrgb565.o(.constdata__ZTVN8touchgfx13PainterRGB565E)
 <LI><a href="#[225]">touchgfx::PainterRGB565::paint(unsigned char*, short, short, short, short, unsigned char) const</a> from painterrgb565.o(i._ZNK8touchgfx13PainterRGB5655paintEPhssssh) referenced from painterrgb565.o(.constdata__ZTVN8touchgfx13PainterRGB565E)
 <LI><a href="#[224]">touchgfx::PainterRGB565::tearDown() const</a> from painterrgb565.o(i._ZNK8touchgfx13PainterRGB5658tearDownEv) referenced from painterrgb565.o(.constdata__ZTVN8touchgfx13PainterRGB565E)
 <LI><a href="#[226]">touchgfx::AbstractPainter::getRenderingMethod() const</a> from cookingviewbase.o(i._ZNK8touchgfx15AbstractPainter18getRenderingMethodEv) referenced from cookingviewbase.o(.constdata__ZTVN8touchgfx15AbstractPainterE)
 <LI><a href="#[226]">touchgfx::AbstractPainter::getRenderingMethod() const</a> from cookingviewbase.o(i._ZNK8touchgfx15AbstractPainter18getRenderingMethodEv) referenced from cookingviewbase.o(.constdata__ZTVN8touchgfx21AbstractPainterRGB565E)
 <LI><a href="#[223]">touchgfx::AbstractPainter::setup(const touchgfx::Rect&) const</a> from cookingviewbase.o(i._ZNK8touchgfx15AbstractPainter5setupERKNS_4RectE) referenced from painterrgb565.o(.constdata__ZTVN8touchgfx13PainterRGB565E)
 <LI><a href="#[223]">touchgfx::AbstractPainter::setup(const touchgfx::Rect&) const</a> from cookingviewbase.o(i._ZNK8touchgfx15AbstractPainter5setupERKNS_4RectE) referenced from cookingviewbase.o(.constdata__ZTVN8touchgfx15AbstractPainterE)
 <LI><a href="#[223]">touchgfx::AbstractPainter::setup(const touchgfx::Rect&) const</a> from cookingviewbase.o(i._ZNK8touchgfx15AbstractPainter5setupERKNS_4RectE) referenced from cookingviewbase.o(.constdata__ZTVN8touchgfx21AbstractPainterRGB565E)
 <LI><a href="#[227]">touchgfx::AbstractPainter::tearDown() const</a> from cookingviewbase.o(i._ZNK8touchgfx15AbstractPainter8tearDownEv) referenced from cookingviewbase.o(.constdata__ZTVN8touchgfx15AbstractPainterE)
 <LI><a href="#[227]">touchgfx::AbstractPainter::tearDown() const</a> from cookingviewbase.o(i._ZNK8touchgfx15AbstractPainter8tearDownEv) referenced from cookingviewbase.o(.constdata__ZTVN8touchgfx21AbstractPainterRGB565E)
 <LI><a href="#[236]">touchgfx::TextAreaWithOneWildcard::getWildcard1() const</a> from settingsviewbase.o(i._ZNK8touchgfx23TextAreaWithOneWildcard12getWildcard1Ev) referenced from settingsviewbase.o(.constdata__ZTVN8touchgfx23TextAreaWithOneWildcardE)
 <LI><a href="#[1ed]">touchgfx::TextAreaWithTwoWildcards::getWildcard1() const</a> from cookingviewbase.o(i._ZNK8touchgfx24TextAreaWithTwoWildcards12getWildcard1Ev) referenced from cookingviewbase.o(.constdata__ZTVN8touchgfx12FadeAnimatorINS_24TextAreaWithTwoWildcardsEEE)
 <LI><a href="#[1ed]">touchgfx::TextAreaWithTwoWildcards::getWildcard1() const</a> from cookingviewbase.o(i._ZNK8touchgfx24TextAreaWithTwoWildcards12getWildcard1Ev) referenced from cookingviewbase.o(.constdata__ZTVN8touchgfx24TextAreaWithTwoWildcardsE)
 <LI><a href="#[1ee]">touchgfx::TextAreaWithTwoWildcards::getWildcard2() const</a> from cookingviewbase.o(i._ZNK8touchgfx24TextAreaWithTwoWildcards12getWildcard2Ev) referenced from cookingviewbase.o(.constdata__ZTVN8touchgfx12FadeAnimatorINS_24TextAreaWithTwoWildcardsEEE)
 <LI><a href="#[1ee]">touchgfx::TextAreaWithTwoWildcards::getWildcard2() const</a> from cookingviewbase.o(i._ZNK8touchgfx24TextAreaWithTwoWildcards12getWildcard2Ev) referenced from cookingviewbase.o(.constdata__ZTVN8touchgfx24TextAreaWithTwoWildcardsE)
 <LI><a href="#[1e4]">touchgfx::TextAreaWithWildcardBase::invalidateContent() const</a> from textareawithwildcard.o(i._ZNK8touchgfx24TextAreaWithWildcardBase17invalidateContentEv) referenced from cookingviewbase.o(.constdata__ZTVN8touchgfx12FadeAnimatorINS_24TextAreaWithTwoWildcardsEEE)
 <LI><a href="#[1e4]">touchgfx::TextAreaWithWildcardBase::invalidateContent() const</a> from textareawithwildcard.o(i._ZNK8touchgfx24TextAreaWithWildcardBase17invalidateContentEv) referenced from settingsviewbase.o(.constdata__ZTVN8touchgfx23TextAreaWithOneWildcardE)
 <LI><a href="#[1e4]">touchgfx::TextAreaWithWildcardBase::invalidateContent() const</a> from textareawithwildcard.o(i._ZNK8touchgfx24TextAreaWithWildcardBase17invalidateContentEv) referenced from cookingviewbase.o(.constdata__ZTVN8touchgfx24TextAreaWithTwoWildcardsE)
 <LI><a href="#[1e4]">touchgfx::TextAreaWithWildcardBase::invalidateContent() const</a> from textareawithwildcard.o(i._ZNK8touchgfx24TextAreaWithWildcardBase17invalidateContentEv) referenced from textareawithwildcard.o(.constdata__ZTVN8touchgfx24TextAreaWithWildcardBaseE)
 <LI><a href="#[1ef]">touchgfx::TextAreaWithWildcardBase::calculateBoundingArea() const</a> from cookingviewbase.o(i._ZNK8touchgfx24TextAreaWithWildcardBase21calculateBoundingAreaEv) referenced from cookingviewbase.o(.constdata__ZTVN8touchgfx12FadeAnimatorINS_24TextAreaWithTwoWildcardsEEE)
 <LI><a href="#[1ef]">touchgfx::TextAreaWithWildcardBase::calculateBoundingArea() const</a> from cookingviewbase.o(i._ZNK8touchgfx24TextAreaWithWildcardBase21calculateBoundingAreaEv) referenced from settingsviewbase.o(.constdata__ZTVN8touchgfx23TextAreaWithOneWildcardE)
 <LI><a href="#[1ef]">touchgfx::TextAreaWithWildcardBase::calculateBoundingArea() const</a> from cookingviewbase.o(i._ZNK8touchgfx24TextAreaWithWildcardBase21calculateBoundingAreaEv) referenced from cookingviewbase.o(.constdata__ZTVN8touchgfx24TextAreaWithTwoWildcardsE)
 <LI><a href="#[1ef]">touchgfx::TextAreaWithWildcardBase::calculateBoundingArea() const</a> from cookingviewbase.o(i._ZNK8touchgfx24TextAreaWithWildcardBase21calculateBoundingAreaEv) referenced from textareawithwildcard.o(.constdata__ZTVN8touchgfx24TextAreaWithWildcardBaseE)
 <LI><a href="#[1e1]">touchgfx::TextAreaWithWildcardBase::draw(const touchgfx::Rect&) const</a> from textareawithwildcard.o(i._ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE) referenced from cookingviewbase.o(.constdata__ZTVN8touchgfx12FadeAnimatorINS_24TextAreaWithTwoWildcardsEEE)
 <LI><a href="#[1e1]">touchgfx::TextAreaWithWildcardBase::draw(const touchgfx::Rect&) const</a> from textareawithwildcard.o(i._ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE) referenced from settingsviewbase.o(.constdata__ZTVN8touchgfx23TextAreaWithOneWildcardE)
 <LI><a href="#[1e1]">touchgfx::TextAreaWithWildcardBase::draw(const touchgfx::Rect&) const</a> from textareawithwildcard.o(i._ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE) referenced from cookingviewbase.o(.constdata__ZTVN8touchgfx24TextAreaWithTwoWildcardsE)
 <LI><a href="#[1e1]">touchgfx::TextAreaWithWildcardBase::draw(const touchgfx::Rect&) const</a> from textareawithwildcard.o(i._ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE) referenced from textareawithwildcard.o(.constdata__ZTVN8touchgfx24TextAreaWithWildcardBaseE)
 <LI><a href="#[211]">touchgfx::Box::getSolidRect() const</a> from box.o(i._ZNK8touchgfx3Box12getSolidRectEv) referenced from boxwithborder.o(.constdata__ZTVN8touchgfx13BoxWithBorderE)
 <LI><a href="#[211]">touchgfx::Box::getSolidRect() const</a> from box.o(i._ZNK8touchgfx3Box12getSolidRectEv) referenced from box.o(.constdata__ZTVN8touchgfx3BoxE)
 <LI><a href="#[212]">touchgfx::Box::invalidateContent() const</a> from box.o(i._ZNK8touchgfx3Box17invalidateContentEv) referenced from boxwithborder.o(.constdata__ZTVN8touchgfx13BoxWithBorderE)
 <LI><a href="#[212]">touchgfx::Box::invalidateContent() const</a> from box.o(i._ZNK8touchgfx3Box17invalidateContentEv) referenced from box.o(.constdata__ZTVN8touchgfx3BoxE)
 <LI><a href="#[23c]">touchgfx::Box::draw(const touchgfx::Rect&) const</a> from box.o(i._ZNK8touchgfx3Box4drawERKNS_4RectE) referenced from box.o(.constdata__ZTVN8touchgfx3BoxE)
 <LI><a href="#[245]">touchgfx::Font::getKerning(unsigned short, const touchgfx::GlyphNode*) const</a> from texts.o(i._ZNK8touchgfx4Font10getKerningEtPKNS_9GlyphNodeE) referenced from texts.o(.constdata__ZTVN8touchgfx4FontE)
 <LI><a href="#[219]">touchgfx::Font::getBaseline() const</a> from cachedfont.o(i._ZNK8touchgfx4Font11getBaselineEv) referenced from generatedfont.o(.constdata__ZTVN8touchgfx13GeneratedFontE)
 <LI><a href="#[219]">touchgfx::Font::getBaseline() const</a> from cachedfont.o(i._ZNK8touchgfx4Font11getBaselineEv) referenced from texts.o(.constdata__ZTVN8touchgfx4FontE)
 <LI><a href="#[219]">touchgfx::Font::getBaseline() const</a> from cachedfont.o(i._ZNK8touchgfx4Font11getBaselineEv) referenced from constfont.o(.constdata__ZTVN8touchgfx9ConstFontE)
 <LI><a href="#[246]">touchgfx::Font::getGSUBTable() const</a> from texts.o(i._ZNK8touchgfx4Font12getGSUBTableEv) referenced from texts.o(.constdata__ZTVN8touchgfx4FontE)
 <LI><a href="#[246]">touchgfx::Font::getGSUBTable() const</a> from texts.o(i._ZNK8touchgfx4Font12getGSUBTableEv) referenced from constfont.o(.constdata__ZTVN8touchgfx9ConstFontE)
 <LI><a href="#[218]">touchgfx::Font::getStringWidth(unsigned char, const unsigned short*, ...) const</a> from texts.o(i._ZNK8touchgfx4Font14getStringWidthEhPKtz) referenced from generatedfont.o(.constdata__ZTVN8touchgfx13GeneratedFontE)
 <LI><a href="#[218]">touchgfx::Font::getStringWidth(unsigned char, const unsigned short*, ...) const</a> from texts.o(i._ZNK8touchgfx4Font14getStringWidthEhPKtz) referenced from texts.o(.constdata__ZTVN8touchgfx4FontE)
 <LI><a href="#[218]">touchgfx::Font::getStringWidth(unsigned char, const unsigned short*, ...) const</a> from texts.o(i._ZNK8touchgfx4Font14getStringWidthEhPKtz) referenced from constfont.o(.constdata__ZTVN8touchgfx9ConstFontE)
 <LI><a href="#[21b]">touchgfx::Font::getBitsPerPixel() const</a> from cachedfont.o(i._ZNK8touchgfx4Font15getBitsPerPixelEv) referenced from generatedfont.o(.constdata__ZTVN8touchgfx13GeneratedFontE)
 <LI><a href="#[21b]">touchgfx::Font::getBitsPerPixel() const</a> from cachedfont.o(i._ZNK8touchgfx4Font15getBitsPerPixelEv) referenced from texts.o(.constdata__ZTVN8touchgfx4FontE)
 <LI><a href="#[21b]">touchgfx::Font::getBitsPerPixel() const</a> from cachedfont.o(i._ZNK8touchgfx4Font15getBitsPerPixelEv) referenced from constfont.o(.constdata__ZTVN8touchgfx9ConstFontE)
 <LI><a href="#[21c]">touchgfx::Font::getByteAlignRow() const</a> from cachedfont.o(i._ZNK8touchgfx4Font15getByteAlignRowEv) referenced from generatedfont.o(.constdata__ZTVN8touchgfx13GeneratedFontE)
 <LI><a href="#[21c]">touchgfx::Font::getByteAlignRow() const</a> from cachedfont.o(i._ZNK8touchgfx4Font15getByteAlignRowEv) referenced from texts.o(.constdata__ZTVN8touchgfx4FontE)
 <LI><a href="#[21c]">touchgfx::Font::getByteAlignRow() const</a> from cachedfont.o(i._ZNK8touchgfx4Font15getByteAlignRowEv) referenced from constfont.o(.constdata__ZTVN8touchgfx9ConstFontE)
 <LI><a href="#[217]">touchgfx::Font::getEllipsisChar() const</a> from cachedfont.o(i._ZNK8touchgfx4Font15getEllipsisCharEv) referenced from generatedfont.o(.constdata__ZTVN8touchgfx13GeneratedFontE)
 <LI><a href="#[217]">touchgfx::Font::getEllipsisChar() const</a> from cachedfont.o(i._ZNK8touchgfx4Font15getEllipsisCharEv) referenced from texts.o(.constdata__ZTVN8touchgfx4FontE)
 <LI><a href="#[217]">touchgfx::Font::getEllipsisChar() const</a> from cachedfont.o(i._ZNK8touchgfx4Font15getEllipsisCharEv) referenced from constfont.o(.constdata__ZTVN8touchgfx9ConstFontE)
 <LI><a href="#[216]">touchgfx::Font::getFallbackChar() const</a> from cachedfont.o(i._ZNK8touchgfx4Font15getFallbackCharEv) referenced from generatedfont.o(.constdata__ZTVN8touchgfx13GeneratedFontE)
 <LI><a href="#[216]">touchgfx::Font::getFallbackChar() const</a> from cachedfont.o(i._ZNK8touchgfx4Font15getFallbackCharEv) referenced from texts.o(.constdata__ZTVN8touchgfx4FontE)
 <LI><a href="#[216]">touchgfx::Font::getFallbackChar() const</a> from cachedfont.o(i._ZNK8touchgfx4Font15getFallbackCharEv) referenced from constfont.o(.constdata__ZTVN8touchgfx9ConstFontE)
 <LI><a href="#[220]">touchgfx::Font::isVectorBasedFont() const</a> from cachedfont.o(i._ZNK8touchgfx4Font17isVectorBasedFontEv) referenced from generatedfont.o(.constdata__ZTVN8touchgfx13GeneratedFontE)
 <LI><a href="#[220]">touchgfx::Font::isVectorBasedFont() const</a> from cachedfont.o(i._ZNK8touchgfx4Font17isVectorBasedFontEv) referenced from texts.o(.constdata__ZTVN8touchgfx4FontE)
 <LI><a href="#[220]">touchgfx::Font::isVectorBasedFont() const</a> from cachedfont.o(i._ZNK8touchgfx4Font17isVectorBasedFontEv) referenced from constfont.o(.constdata__ZTVN8touchgfx9ConstFontE)
 <LI><a href="#[247]">touchgfx::Font::getContextualFormsTable() const</a> from texts.o(i._ZNK8touchgfx4Font23getContextualFormsTableEv) referenced from texts.o(.constdata__ZTVN8touchgfx4FontE)
 <LI><a href="#[247]">touchgfx::Font::getContextualFormsTable() const</a> from texts.o(i._ZNK8touchgfx4Font23getContextualFormsTableEv) referenced from constfont.o(.constdata__ZTVN8touchgfx9ConstFontE)
 <LI><a href="#[215]">touchgfx::Font::getGlyph(unsigned short) const</a> from cachedfont.o(i._ZNK8touchgfx4Font8getGlyphEt) referenced from generatedfont.o(.constdata__ZTVN8touchgfx13GeneratedFontE)
 <LI><a href="#[215]">touchgfx::Font::getGlyph(unsigned short) const</a> from cachedfont.o(i._ZNK8touchgfx4Font8getGlyphEt) referenced from texts.o(.constdata__ZTVN8touchgfx4FontE)
 <LI><a href="#[215]">touchgfx::Font::getGlyph(unsigned short) const</a> from cachedfont.o(i._ZNK8touchgfx4Font8getGlyphEt) referenced from constfont.o(.constdata__ZTVN8touchgfx9ConstFontE)
 <LI><a href="#[21a]">touchgfx::Font::getHeight() const</a> from cachedfont.o(i._ZNK8touchgfx4Font9getHeightEv) referenced from generatedfont.o(.constdata__ZTVN8touchgfx13GeneratedFontE)
 <LI><a href="#[21a]">touchgfx::Font::getHeight() const</a> from cachedfont.o(i._ZNK8touchgfx4Font9getHeightEv) referenced from texts.o(.constdata__ZTVN8touchgfx4FontE)
 <LI><a href="#[21a]">touchgfx::Font::getHeight() const</a> from cachedfont.o(i._ZNK8touchgfx4Font9getHeightEv) referenced from constfont.o(.constdata__ZTVN8touchgfx9ConstFontE)
 <LI><a href="#[1f2]">touchgfx::Image::getSolidRect() const</a> from image.o(i._ZNK8touchgfx5Image12getSolidRectEv) referenced from cookingviewbase.o(.constdata__ZTVN8touchgfx12FadeAnimatorINS_5ImageEEE)
 <LI><a href="#[1f2]">touchgfx::Image::getSolidRect() const</a> from image.o(i._ZNK8touchgfx5Image12getSolidRectEv) referenced from image.o(.constdata__ZTVN8touchgfx5ImageE)
 <LI><a href="#[1f3]">touchgfx::Image::invalidateContent() const</a> from image.o(i._ZNK8touchgfx5Image17invalidateContentEv) referenced from cookingviewbase.o(.constdata__ZTVN8touchgfx12FadeAnimatorINS_5ImageEEE)
 <LI><a href="#[1f3]">touchgfx::Image::invalidateContent() const</a> from image.o(i._ZNK8touchgfx5Image17invalidateContentEv) referenced from image.o(.constdata__ZTVN8touchgfx5ImageE)
 <LI><a href="#[1f1]">touchgfx::Image::draw(const touchgfx::Rect&) const</a> from image.o(i._ZNK8touchgfx5Image4drawERKNS_4RectE) referenced from cookingviewbase.o(.constdata__ZTVN8touchgfx12FadeAnimatorINS_5ImageEEE)
 <LI><a href="#[1f1]">touchgfx::Image::draw(const touchgfx::Rect&) const</a> from image.o(i._ZNK8touchgfx5Image4drawERKNS_4RectE) referenced from image.o(.constdata__ZTVN8touchgfx5ImageE)
 <LI><a href="#[1f9]">touchgfx::Button::getSolidRect() const</a> from button.o(i._ZNK8touchgfx6Button12getSolidRectEv) referenced from cookingviewbase.o(.constdata__ZTVN8touchgfx12FadeAnimatorINS_6ButtonEEE)
 <LI><a href="#[1f9]">touchgfx::Button::getSolidRect() const</a> from button.o(i._ZNK8touchgfx6Button12getSolidRectEv) referenced from button.o(.constdata__ZTVN8touchgfx6ButtonE)
 <LI><a href="#[1fa]">touchgfx::Button::invalidateContent() const</a> from settingsview.o(i._ZNK8touchgfx6Button17invalidateContentEv) referenced from cookingviewbase.o(.constdata__ZTVN8touchgfx12FadeAnimatorINS_6ButtonEEE)
 <LI><a href="#[1fa]">touchgfx::Button::invalidateContent() const</a> from settingsview.o(i._ZNK8touchgfx6Button17invalidateContentEv) referenced from button.o(.constdata__ZTVN8touchgfx6ButtonE)
 <LI><a href="#[1f8]">touchgfx::Button::draw(const touchgfx::Rect&) const</a> from button.o(i._ZNK8touchgfx6Button4drawERKNS_4RectE) referenced from cookingviewbase.o(.constdata__ZTVN8touchgfx12FadeAnimatorINS_6ButtonEEE)
 <LI><a href="#[1f8]">touchgfx::Button::draw(const touchgfx::Rect&) const</a> from button.o(i._ZNK8touchgfx6Button4drawERKNS_4RectE) referenced from button.o(.constdata__ZTVN8touchgfx6ButtonE)
 <LI><a href="#[253]">touchgfx::Circle::getMinimalRect() const</a> from circle.o(i._ZNK8touchgfx6Circle14getMinimalRectEv) referenced from circle.o(.constdata__ZTVN8touchgfx6CircleE)
 <LI><a href="#[254]">touchgfx::Circle::drawCanvasWidget(const touchgfx::Rect&) const</a> from circle.o(i._ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE) referenced from circle.o(.constdata__ZTVN8touchgfx6CircleE)
 <LI><a href="#[25a]">touchgfx::Callback&lang;CookingViewBase, const touchgfx::AbstractButton&, void, void&rang;::isValid() const</a> from cookingviewbase.o(t._ZNK8touchgfx8CallbackI15CookingViewBaseRKNS_14AbstractButtonEvvE7isValidEv) referenced from cookingviewbase.o(.constdata__ZTVN8touchgfx8CallbackI15CookingViewBaseRKNS_14AbstractButtonEvvEE)
 <LI><a href="#[25d]">touchgfx::Callback&lang;SettingsViewBase, const touchgfx::AbstractButton&, void, void&rang;::isValid() const</a> from settingsviewbase.o(t._ZNK8touchgfx8CallbackI16SettingsViewBaseRKNS_14AbstractButtonEvvE7isValidEv) referenced from settingsviewbase.o(.constdata__ZTVN8touchgfx8CallbackI16SettingsViewBaseRKNS_14AbstractButtonEvvEE)
 <LI><a href="#[260]">touchgfx::Callback&lang;SettingsViewBase, const touchgfx::AbstractButtonContainer&, void, void&rang;::isValid() const</a> from settingsviewbase.o(t._ZNK8touchgfx8CallbackI16SettingsViewBaseRKNS_23AbstractButtonContainerEvvE7isValidEv) referenced from settingsviewbase.o(.constdata__ZTVN8touchgfx8CallbackI16SettingsViewBaseRKNS_23AbstractButtonContainerEvvEE)
 <LI><a href="#[263]">touchgfx::Callback&lang;InformationViewBase, const touchgfx::AbstractButtonContainer&, void, void&rang;::isValid() const</a> from informationviewbase.o(t._ZNK8touchgfx8CallbackI19InformationViewBaseRKNS_23AbstractButtonContainerEvvE7isValidEv) referenced from informationviewbase.o(.constdata__ZTVN8touchgfx8CallbackI19InformationViewBaseRKNS_23AbstractButtonContainerEvvEE)
 <LI><a href="#[266]">touchgfx::Callback&lang;SplashScreenViewBase, const touchgfx::FadeAnimator&lang;touchgfx::Image&rang;&, void, void&rang;::isValid() const</a> from splashscreenviewbase.o(t._ZNK8touchgfx8CallbackI20SplashScreenViewBaseRKNS_12FadeAnimatorINS_5ImageEEEvvE7isValidEv) referenced from splashscreenviewbase.o(.constdata__ZTVN8touchgfx8CallbackI20SplashScreenViewBaseRKNS_12FadeAnimatorINS_5ImageEEEvvEE)
 <LI><a href="#[269]">touchgfx::Callback&lang;SelectingMenuViewBase, const touchgfx::AbstractButton&, void, void&rang;::isValid() const</a> from selectingmenuviewbase.o(t._ZNK8touchgfx8CallbackI21SelectingMenuViewBaseRKNS_14AbstractButtonEvvE7isValidEv) referenced from selectingmenuviewbase.o(.constdata__ZTVN8touchgfx8CallbackI21SelectingMenuViewBaseRKNS_14AbstractButtonEvvEE)
 <LI><a href="#[26c]">touchgfx::Callback&lang;SelectingMenuViewBase, const touchgfx::AbstractButtonContainer&, void, void&rang;::isValid() const</a> from selectingmenuviewbase.o(t._ZNK8touchgfx8CallbackI21SelectingMenuViewBaseRKNS_23AbstractButtonContainerEvvE7isValidEv) referenced from selectingmenuviewbase.o(.constdata__ZTVN8touchgfx8CallbackI21SelectingMenuViewBaseRKNS_23AbstractButtonContainerEvvEE)
 <LI><a href="#[26f]">touchgfx::Callback&lang;FrontendApplicationBase, void, void, void&rang;::isValid() const</a> from frontendapplicationbase.o(t._ZNK8touchgfx8CallbackI23FrontendApplicationBasevvvE7isValidEv) referenced from frontendapplicationbase.o(.constdata__ZTVN8touchgfx8CallbackI23FrontendApplicationBasevvvEE)
 <LI><a href="#[272]">touchgfx::Callback&lang;InformationDemoViewBase, const touchgfx::AbstractButtonContainer&, void, void&rang;::isValid() const</a> from informationdemoviewbase.o(t._ZNK8touchgfx8CallbackI23InformationDemoViewBaseRKNS_23AbstractButtonContainerEvvE7isValidEv) referenced from informationdemoviewbase.o(.constdata__ZTVN8touchgfx8CallbackI23InformationDemoViewBaseRKNS_23AbstractButtonContainerEvvEE)
 <LI><a href="#[1e3]">touchgfx::Drawable::invalidate() const</a> from drawable.o(i._ZNK8touchgfx8Drawable10invalidateEv) referenced from cookingviewbase.o(.constdata__ZTVN8touchgfx12FadeAnimatorINS_24TextAreaWithTwoWildcardsEEE)
 <LI><a href="#[1e3]">touchgfx::Drawable::invalidate() const</a> from drawable.o(i._ZNK8touchgfx8Drawable10invalidateEv) referenced from cookingviewbase.o(.constdata__ZTVN8touchgfx12FadeAnimatorINS_5ImageEEE)
 <LI><a href="#[1e3]">touchgfx::Drawable::invalidate() const</a> from drawable.o(i._ZNK8touchgfx8Drawable10invalidateEv) referenced from cookingviewbase.o(.constdata__ZTVN8touchgfx12FadeAnimatorINS_6ButtonEEE)
 <LI><a href="#[1e3]">touchgfx::Drawable::invalidate() const</a> from drawable.o(i._ZNK8touchgfx8Drawable10invalidateEv) referenced from cookingviewbase.o(.constdata__ZTVN8touchgfx12FadeAnimatorINS_8TextAreaEEE)
 <LI><a href="#[1e3]">touchgfx::Drawable::invalidate() const</a> from drawable.o(i._ZNK8touchgfx8Drawable10invalidateEv) referenced from selectingmenuviewbase.o(.constdata__ZTVN8touchgfx12MoveAnimatorINS_9ContainerEEE)
 <LI><a href="#[1e3]">touchgfx::Drawable::invalidate() const</a> from drawable.o(i._ZNK8touchgfx8Drawable10invalidateEv) referenced from boxwithborder.o(.constdata__ZTVN8touchgfx13BoxWithBorderE)
 <LI><a href="#[1e3]">touchgfx::Drawable::invalidate() const</a> from drawable.o(i._ZNK8touchgfx8Drawable10invalidateEv) referenced from abstractbutton.o(.constdata__ZTVN8touchgfx14AbstractButtonE)
 <LI><a href="#[1e3]">touchgfx::Drawable::invalidate() const</a> from drawable.o(i._ZNK8touchgfx8Drawable10invalidateEv) referenced from informationdemoviewbase.o(.constdata__ZTVN8touchgfx18ClickButtonTriggerE)
 <LI><a href="#[1e3]">touchgfx::Drawable::invalidate() const</a> from drawable.o(i._ZNK8touchgfx8Drawable10invalidateEv) referenced from informationdemoviewbase.o(.constdata__ZTVN8touchgfx23AbstractButtonContainerE)
 <LI><a href="#[1e3]">touchgfx::Drawable::invalidate() const</a> from drawable.o(i._ZNK8touchgfx8Drawable10invalidateEv) referenced from settingsviewbase.o(.constdata__ZTVN8touchgfx23TextAreaWithOneWildcardE)
 <LI><a href="#[1e3]">touchgfx::Drawable::invalidate() const</a> from drawable.o(i._ZNK8touchgfx8Drawable10invalidateEv) referenced from informationdemoviewbase.o(.constdata__ZTVN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEE)
 <LI><a href="#[1e3]">touchgfx::Drawable::invalidate() const</a> from drawable.o(i._ZNK8touchgfx8Drawable10invalidateEv) referenced from cookingviewbase.o(.constdata__ZTVN8touchgfx24TextAreaWithTwoWildcardsE)
 <LI><a href="#[1e3]">touchgfx::Drawable::invalidate() const</a> from drawable.o(i._ZNK8touchgfx8Drawable10invalidateEv) referenced from textareawithwildcard.o(.constdata__ZTVN8touchgfx24TextAreaWithWildcardBaseE)
 <LI><a href="#[1e3]">touchgfx::Drawable::invalidate() const</a> from drawable.o(i._ZNK8touchgfx8Drawable10invalidateEv) referenced from box.o(.constdata__ZTVN8touchgfx3BoxE)
 <LI><a href="#[1e3]">touchgfx::Drawable::invalidate() const</a> from drawable.o(i._ZNK8touchgfx8Drawable10invalidateEv) referenced from image.o(.constdata__ZTVN8touchgfx5ImageE)
 <LI><a href="#[1e3]">touchgfx::Drawable::invalidate() const</a> from drawable.o(i._ZNK8touchgfx8Drawable10invalidateEv) referenced from button.o(.constdata__ZTVN8touchgfx6ButtonE)
 <LI><a href="#[1e3]">touchgfx::Drawable::invalidate() const</a> from drawable.o(i._ZNK8touchgfx8Drawable10invalidateEv) referenced from cookingviewbase.o(.constdata__ZTVN8touchgfx6WidgetE)
 <LI><a href="#[1e3]">touchgfx::Drawable::invalidate() const</a> from drawable.o(i._ZNK8touchgfx8Drawable10invalidateEv) referenced from drawable.o(.constdata__ZTVN8touchgfx8DrawableE)
 <LI><a href="#[1e3]">touchgfx::Drawable::invalidate() const</a> from drawable.o(i._ZNK8touchgfx8Drawable10invalidateEv) referenced from textarea.o(.constdata__ZTVN8touchgfx8TextAreaE)
 <LI><a href="#[1e3]">touchgfx::Drawable::invalidate() const</a> from drawable.o(i._ZNK8touchgfx8Drawable10invalidateEv) referenced from container.o(.constdata__ZTVN8touchgfx9ContainerE)
 <LI><a href="#[1d0]">touchgfx::Drawable::getVisibleRect(touchgfx::Rect&) const</a> from drawable.o(i._ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE) referenced from canvaswidget.o(.constdata__ZTVN8touchgfx12CanvasWidgetE)
 <LI><a href="#[1d0]">touchgfx::Drawable::getVisibleRect(touchgfx::Rect&) const</a> from drawable.o(i._ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE) referenced from cookingviewbase.o(.constdata__ZTVN8touchgfx12FadeAnimatorINS_24TextAreaWithTwoWildcardsEEE)
 <LI><a href="#[1d0]">touchgfx::Drawable::getVisibleRect(touchgfx::Rect&) const</a> from drawable.o(i._ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE) referenced from cookingviewbase.o(.constdata__ZTVN8touchgfx12FadeAnimatorINS_5ImageEEE)
 <LI><a href="#[1d0]">touchgfx::Drawable::getVisibleRect(touchgfx::Rect&) const</a> from drawable.o(i._ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE) referenced from cookingviewbase.o(.constdata__ZTVN8touchgfx12FadeAnimatorINS_6ButtonEEE)
 <LI><a href="#[1d0]">touchgfx::Drawable::getVisibleRect(touchgfx::Rect&) const</a> from drawable.o(i._ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE) referenced from cookingviewbase.o(.constdata__ZTVN8touchgfx12FadeAnimatorINS_8TextAreaEEE)
 <LI><a href="#[1d0]">touchgfx::Drawable::getVisibleRect(touchgfx::Rect&) const</a> from drawable.o(i._ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE) referenced from selectingmenuviewbase.o(.constdata__ZTVN8touchgfx12MoveAnimatorINS_9ContainerEEE)
 <LI><a href="#[1d0]">touchgfx::Drawable::getVisibleRect(touchgfx::Rect&) const</a> from drawable.o(i._ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE) referenced from boxwithborder.o(.constdata__ZTVN8touchgfx13BoxWithBorderE)
 <LI><a href="#[1d0]">touchgfx::Drawable::getVisibleRect(touchgfx::Rect&) const</a> from drawable.o(i._ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE) referenced from abstractbutton.o(.constdata__ZTVN8touchgfx14AbstractButtonE)
 <LI><a href="#[1d0]">touchgfx::Drawable::getVisibleRect(touchgfx::Rect&) const</a> from drawable.o(i._ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE) referenced from informationdemoviewbase.o(.constdata__ZTVN8touchgfx18ClickButtonTriggerE)
 <LI><a href="#[1d0]">touchgfx::Drawable::getVisibleRect(touchgfx::Rect&) const</a> from drawable.o(i._ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE) referenced from informationdemoviewbase.o(.constdata__ZTVN8touchgfx23AbstractButtonContainerE)
 <LI><a href="#[1d0]">touchgfx::Drawable::getVisibleRect(touchgfx::Rect&) const</a> from drawable.o(i._ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE) referenced from settingsviewbase.o(.constdata__ZTVN8touchgfx23TextAreaWithOneWildcardE)
 <LI><a href="#[1d0]">touchgfx::Drawable::getVisibleRect(touchgfx::Rect&) const</a> from drawable.o(i._ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE) referenced from informationdemoviewbase.o(.constdata__ZTVN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEE)
 <LI><a href="#[1d0]">touchgfx::Drawable::getVisibleRect(touchgfx::Rect&) const</a> from drawable.o(i._ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE) referenced from cookingviewbase.o(.constdata__ZTVN8touchgfx24TextAreaWithTwoWildcardsE)
 <LI><a href="#[1d0]">touchgfx::Drawable::getVisibleRect(touchgfx::Rect&) const</a> from drawable.o(i._ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE) referenced from textareawithwildcard.o(.constdata__ZTVN8touchgfx24TextAreaWithWildcardBaseE)
 <LI><a href="#[1d0]">touchgfx::Drawable::getVisibleRect(touchgfx::Rect&) const</a> from drawable.o(i._ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE) referenced from box.o(.constdata__ZTVN8touchgfx3BoxE)
 <LI><a href="#[1d0]">touchgfx::Drawable::getVisibleRect(touchgfx::Rect&) const</a> from drawable.o(i._ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE) referenced from image.o(.constdata__ZTVN8touchgfx5ImageE)
 <LI><a href="#[1d0]">touchgfx::Drawable::getVisibleRect(touchgfx::Rect&) const</a> from drawable.o(i._ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE) referenced from button.o(.constdata__ZTVN8touchgfx6ButtonE)
 <LI><a href="#[1d0]">touchgfx::Drawable::getVisibleRect(touchgfx::Rect&) const</a> from drawable.o(i._ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE) referenced from circle.o(.constdata__ZTVN8touchgfx6CircleE)
 <LI><a href="#[1d0]">touchgfx::Drawable::getVisibleRect(touchgfx::Rect&) const</a> from drawable.o(i._ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE) referenced from cookingviewbase.o(.constdata__ZTVN8touchgfx6WidgetE)
 <LI><a href="#[1d0]">touchgfx::Drawable::getVisibleRect(touchgfx::Rect&) const</a> from drawable.o(i._ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE) referenced from drawable.o(.constdata__ZTVN8touchgfx8DrawableE)
 <LI><a href="#[1d0]">touchgfx::Drawable::getVisibleRect(touchgfx::Rect&) const</a> from drawable.o(i._ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE) referenced from textarea.o(.constdata__ZTVN8touchgfx8TextAreaE)
 <LI><a href="#[1d0]">touchgfx::Drawable::getVisibleRect(touchgfx::Rect&) const</a> from drawable.o(i._ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE) referenced from container.o(.constdata__ZTVN8touchgfx9ContainerE)
 <LI><a href="#[1cc]">touchgfx::Drawable::invalidateRect(touchgfx::Rect&) const</a> from drawable.o(i._ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE) referenced from canvaswidget.o(.constdata__ZTVN8touchgfx12CanvasWidgetE)
 <LI><a href="#[1cc]">touchgfx::Drawable::invalidateRect(touchgfx::Rect&) const</a> from drawable.o(i._ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE) referenced from cookingviewbase.o(.constdata__ZTVN8touchgfx12FadeAnimatorINS_24TextAreaWithTwoWildcardsEEE)
 <LI><a href="#[1cc]">touchgfx::Drawable::invalidateRect(touchgfx::Rect&) const</a> from drawable.o(i._ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE) referenced from cookingviewbase.o(.constdata__ZTVN8touchgfx12FadeAnimatorINS_5ImageEEE)
 <LI><a href="#[1cc]">touchgfx::Drawable::invalidateRect(touchgfx::Rect&) const</a> from drawable.o(i._ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE) referenced from cookingviewbase.o(.constdata__ZTVN8touchgfx12FadeAnimatorINS_6ButtonEEE)
 <LI><a href="#[1cc]">touchgfx::Drawable::invalidateRect(touchgfx::Rect&) const</a> from drawable.o(i._ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE) referenced from cookingviewbase.o(.constdata__ZTVN8touchgfx12FadeAnimatorINS_8TextAreaEEE)
 <LI><a href="#[1cc]">touchgfx::Drawable::invalidateRect(touchgfx::Rect&) const</a> from drawable.o(i._ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE) referenced from selectingmenuviewbase.o(.constdata__ZTVN8touchgfx12MoveAnimatorINS_9ContainerEEE)
 <LI><a href="#[1cc]">touchgfx::Drawable::invalidateRect(touchgfx::Rect&) const</a> from drawable.o(i._ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE) referenced from boxwithborder.o(.constdata__ZTVN8touchgfx13BoxWithBorderE)
 <LI><a href="#[1cc]">touchgfx::Drawable::invalidateRect(touchgfx::Rect&) const</a> from drawable.o(i._ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE) referenced from abstractbutton.o(.constdata__ZTVN8touchgfx14AbstractButtonE)
 <LI><a href="#[1cc]">touchgfx::Drawable::invalidateRect(touchgfx::Rect&) const</a> from drawable.o(i._ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE) referenced from informationdemoviewbase.o(.constdata__ZTVN8touchgfx18ClickButtonTriggerE)
 <LI><a href="#[1cc]">touchgfx::Drawable::invalidateRect(touchgfx::Rect&) const</a> from drawable.o(i._ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE) referenced from informationdemoviewbase.o(.constdata__ZTVN8touchgfx23AbstractButtonContainerE)
 <LI><a href="#[1cc]">touchgfx::Drawable::invalidateRect(touchgfx::Rect&) const</a> from drawable.o(i._ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE) referenced from settingsviewbase.o(.constdata__ZTVN8touchgfx23TextAreaWithOneWildcardE)
 <LI><a href="#[1cc]">touchgfx::Drawable::invalidateRect(touchgfx::Rect&) const</a> from drawable.o(i._ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE) referenced from informationdemoviewbase.o(.constdata__ZTVN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEE)
 <LI><a href="#[1cc]">touchgfx::Drawable::invalidateRect(touchgfx::Rect&) const</a> from drawable.o(i._ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE) referenced from cookingviewbase.o(.constdata__ZTVN8touchgfx24TextAreaWithTwoWildcardsE)
 <LI><a href="#[1cc]">touchgfx::Drawable::invalidateRect(touchgfx::Rect&) const</a> from drawable.o(i._ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE) referenced from textareawithwildcard.o(.constdata__ZTVN8touchgfx24TextAreaWithWildcardBaseE)
 <LI><a href="#[1cc]">touchgfx::Drawable::invalidateRect(touchgfx::Rect&) const</a> from drawable.o(i._ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE) referenced from box.o(.constdata__ZTVN8touchgfx3BoxE)
 <LI><a href="#[1cc]">touchgfx::Drawable::invalidateRect(touchgfx::Rect&) const</a> from drawable.o(i._ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE) referenced from image.o(.constdata__ZTVN8touchgfx5ImageE)
 <LI><a href="#[1cc]">touchgfx::Drawable::invalidateRect(touchgfx::Rect&) const</a> from drawable.o(i._ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE) referenced from button.o(.constdata__ZTVN8touchgfx6ButtonE)
 <LI><a href="#[1cc]">touchgfx::Drawable::invalidateRect(touchgfx::Rect&) const</a> from drawable.o(i._ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE) referenced from circle.o(.constdata__ZTVN8touchgfx6CircleE)
 <LI><a href="#[1cc]">touchgfx::Drawable::invalidateRect(touchgfx::Rect&) const</a> from drawable.o(i._ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE) referenced from cookingviewbase.o(.constdata__ZTVN8touchgfx6WidgetE)
 <LI><a href="#[1cc]">touchgfx::Drawable::invalidateRect(touchgfx::Rect&) const</a> from drawable.o(i._ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE) referenced from drawable.o(.constdata__ZTVN8touchgfx8DrawableE)
 <LI><a href="#[1cc]">touchgfx::Drawable::invalidateRect(touchgfx::Rect&) const</a> from drawable.o(i._ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE) referenced from textarea.o(.constdata__ZTVN8touchgfx8TextAreaE)
 <LI><a href="#[1cc]">touchgfx::Drawable::invalidateRect(touchgfx::Rect&) const</a> from drawable.o(i._ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE) referenced from container.o(.constdata__ZTVN8touchgfx9ContainerE)
 <LI><a href="#[1ce]">touchgfx::Drawable::invalidateContent() const</a> from cookingview.o(i._ZNK8touchgfx8Drawable17invalidateContentEv) referenced from canvaswidget.o(.constdata__ZTVN8touchgfx12CanvasWidgetE)
 <LI><a href="#[1ce]">touchgfx::Drawable::invalidateContent() const</a> from cookingview.o(i._ZNK8touchgfx8Drawable17invalidateContentEv) referenced from selectingmenuviewbase.o(.constdata__ZTVN8touchgfx12MoveAnimatorINS_9ContainerEEE)
 <LI><a href="#[1ce]">touchgfx::Drawable::invalidateContent() const</a> from cookingview.o(i._ZNK8touchgfx8Drawable17invalidateContentEv) referenced from abstractbutton.o(.constdata__ZTVN8touchgfx14AbstractButtonE)
 <LI><a href="#[1ce]">touchgfx::Drawable::invalidateContent() const</a> from cookingview.o(i._ZNK8touchgfx8Drawable17invalidateContentEv) referenced from informationdemoviewbase.o(.constdata__ZTVN8touchgfx18ClickButtonTriggerE)
 <LI><a href="#[1ce]">touchgfx::Drawable::invalidateContent() const</a> from cookingview.o(i._ZNK8touchgfx8Drawable17invalidateContentEv) referenced from informationdemoviewbase.o(.constdata__ZTVN8touchgfx23AbstractButtonContainerE)
 <LI><a href="#[1ce]">touchgfx::Drawable::invalidateContent() const</a> from cookingview.o(i._ZNK8touchgfx8Drawable17invalidateContentEv) referenced from informationdemoviewbase.o(.constdata__ZTVN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEE)
 <LI><a href="#[1ce]">touchgfx::Drawable::invalidateContent() const</a> from cookingview.o(i._ZNK8touchgfx8Drawable17invalidateContentEv) referenced from circle.o(.constdata__ZTVN8touchgfx6CircleE)
 <LI><a href="#[1ce]">touchgfx::Drawable::invalidateContent() const</a> from cookingview.o(i._ZNK8touchgfx8Drawable17invalidateContentEv) referenced from cookingviewbase.o(.constdata__ZTVN8touchgfx6WidgetE)
 <LI><a href="#[1ce]">touchgfx::Drawable::invalidateContent() const</a> from cookingview.o(i._ZNK8touchgfx8Drawable17invalidateContentEv) referenced from drawable.o(.constdata__ZTVN8touchgfx8DrawableE)
 <LI><a href="#[1ce]">touchgfx::Drawable::invalidateContent() const</a> from cookingview.o(i._ZNK8touchgfx8Drawable17invalidateContentEv) referenced from container.o(.constdata__ZTVN8touchgfx9ContainerE)
 <LI><a href="#[1d1]">touchgfx::Drawable::translateRectToAbsolute(touchgfx::Rect&) const</a> from drawable.o(i._ZNK8touchgfx8Drawable23translateRectToAbsoluteERNS_4RectE) referenced from canvaswidget.o(.constdata__ZTVN8touchgfx12CanvasWidgetE)
 <LI><a href="#[1d1]">touchgfx::Drawable::translateRectToAbsolute(touchgfx::Rect&) const</a> from drawable.o(i._ZNK8touchgfx8Drawable23translateRectToAbsoluteERNS_4RectE) referenced from cookingviewbase.o(.constdata__ZTVN8touchgfx12FadeAnimatorINS_24TextAreaWithTwoWildcardsEEE)
 <LI><a href="#[1d1]">touchgfx::Drawable::translateRectToAbsolute(touchgfx::Rect&) const</a> from drawable.o(i._ZNK8touchgfx8Drawable23translateRectToAbsoluteERNS_4RectE) referenced from cookingviewbase.o(.constdata__ZTVN8touchgfx12FadeAnimatorINS_5ImageEEE)
 <LI><a href="#[1d1]">touchgfx::Drawable::translateRectToAbsolute(touchgfx::Rect&) const</a> from drawable.o(i._ZNK8touchgfx8Drawable23translateRectToAbsoluteERNS_4RectE) referenced from cookingviewbase.o(.constdata__ZTVN8touchgfx12FadeAnimatorINS_6ButtonEEE)
 <LI><a href="#[1d1]">touchgfx::Drawable::translateRectToAbsolute(touchgfx::Rect&) const</a> from drawable.o(i._ZNK8touchgfx8Drawable23translateRectToAbsoluteERNS_4RectE) referenced from cookingviewbase.o(.constdata__ZTVN8touchgfx12FadeAnimatorINS_8TextAreaEEE)
 <LI><a href="#[1d1]">touchgfx::Drawable::translateRectToAbsolute(touchgfx::Rect&) const</a> from drawable.o(i._ZNK8touchgfx8Drawable23translateRectToAbsoluteERNS_4RectE) referenced from selectingmenuviewbase.o(.constdata__ZTVN8touchgfx12MoveAnimatorINS_9ContainerEEE)
 <LI><a href="#[1d1]">touchgfx::Drawable::translateRectToAbsolute(touchgfx::Rect&) const</a> from drawable.o(i._ZNK8touchgfx8Drawable23translateRectToAbsoluteERNS_4RectE) referenced from boxwithborder.o(.constdata__ZTVN8touchgfx13BoxWithBorderE)
 <LI><a href="#[1d1]">touchgfx::Drawable::translateRectToAbsolute(touchgfx::Rect&) const</a> from drawable.o(i._ZNK8touchgfx8Drawable23translateRectToAbsoluteERNS_4RectE) referenced from abstractbutton.o(.constdata__ZTVN8touchgfx14AbstractButtonE)
 <LI><a href="#[1d1]">touchgfx::Drawable::translateRectToAbsolute(touchgfx::Rect&) const</a> from drawable.o(i._ZNK8touchgfx8Drawable23translateRectToAbsoluteERNS_4RectE) referenced from informationdemoviewbase.o(.constdata__ZTVN8touchgfx18ClickButtonTriggerE)
 <LI><a href="#[1d1]">touchgfx::Drawable::translateRectToAbsolute(touchgfx::Rect&) const</a> from drawable.o(i._ZNK8touchgfx8Drawable23translateRectToAbsoluteERNS_4RectE) referenced from informationdemoviewbase.o(.constdata__ZTVN8touchgfx23AbstractButtonContainerE)
 <LI><a href="#[1d1]">touchgfx::Drawable::translateRectToAbsolute(touchgfx::Rect&) const</a> from drawable.o(i._ZNK8touchgfx8Drawable23translateRectToAbsoluteERNS_4RectE) referenced from settingsviewbase.o(.constdata__ZTVN8touchgfx23TextAreaWithOneWildcardE)
 <LI><a href="#[1d1]">touchgfx::Drawable::translateRectToAbsolute(touchgfx::Rect&) const</a> from drawable.o(i._ZNK8touchgfx8Drawable23translateRectToAbsoluteERNS_4RectE) referenced from informationdemoviewbase.o(.constdata__ZTVN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEE)
 <LI><a href="#[1d1]">touchgfx::Drawable::translateRectToAbsolute(touchgfx::Rect&) const</a> from drawable.o(i._ZNK8touchgfx8Drawable23translateRectToAbsoluteERNS_4RectE) referenced from cookingviewbase.o(.constdata__ZTVN8touchgfx24TextAreaWithTwoWildcardsE)
 <LI><a href="#[1d1]">touchgfx::Drawable::translateRectToAbsolute(touchgfx::Rect&) const</a> from drawable.o(i._ZNK8touchgfx8Drawable23translateRectToAbsoluteERNS_4RectE) referenced from textareawithwildcard.o(.constdata__ZTVN8touchgfx24TextAreaWithWildcardBaseE)
 <LI><a href="#[1d1]">touchgfx::Drawable::translateRectToAbsolute(touchgfx::Rect&) const</a> from drawable.o(i._ZNK8touchgfx8Drawable23translateRectToAbsoluteERNS_4RectE) referenced from box.o(.constdata__ZTVN8touchgfx3BoxE)
 <LI><a href="#[1d1]">touchgfx::Drawable::translateRectToAbsolute(touchgfx::Rect&) const</a> from drawable.o(i._ZNK8touchgfx8Drawable23translateRectToAbsoluteERNS_4RectE) referenced from image.o(.constdata__ZTVN8touchgfx5ImageE)
 <LI><a href="#[1d1]">touchgfx::Drawable::translateRectToAbsolute(touchgfx::Rect&) const</a> from drawable.o(i._ZNK8touchgfx8Drawable23translateRectToAbsoluteERNS_4RectE) referenced from button.o(.constdata__ZTVN8touchgfx6ButtonE)
 <LI><a href="#[1d1]">touchgfx::Drawable::translateRectToAbsolute(touchgfx::Rect&) const</a> from drawable.o(i._ZNK8touchgfx8Drawable23translateRectToAbsoluteERNS_4RectE) referenced from circle.o(.constdata__ZTVN8touchgfx6CircleE)
 <LI><a href="#[1d1]">touchgfx::Drawable::translateRectToAbsolute(touchgfx::Rect&) const</a> from drawable.o(i._ZNK8touchgfx8Drawable23translateRectToAbsoluteERNS_4RectE) referenced from cookingviewbase.o(.constdata__ZTVN8touchgfx6WidgetE)
 <LI><a href="#[1d1]">touchgfx::Drawable::translateRectToAbsolute(touchgfx::Rect&) const</a> from drawable.o(i._ZNK8touchgfx8Drawable23translateRectToAbsoluteERNS_4RectE) referenced from drawable.o(.constdata__ZTVN8touchgfx8DrawableE)
 <LI><a href="#[1d1]">touchgfx::Drawable::translateRectToAbsolute(touchgfx::Rect&) const</a> from drawable.o(i._ZNK8touchgfx8Drawable23translateRectToAbsoluteERNS_4RectE) referenced from textarea.o(.constdata__ZTVN8touchgfx8TextAreaE)
 <LI><a href="#[1d1]">touchgfx::Drawable::translateRectToAbsolute(touchgfx::Rect&) const</a> from drawable.o(i._ZNK8touchgfx8Drawable23translateRectToAbsoluteERNS_4RectE) referenced from container.o(.constdata__ZTVN8touchgfx9ContainerE)
 <LI><a href="#[280]">touchgfx::LCD16bpp::framebufferFormat() const</a> from lcd16bpp.o(i._ZNK8touchgfx8LCD16bpp17framebufferFormatEv) referenced from lcd16bpp.o(.constdata__ZTVN8touchgfx8LCD16bppE)
 <LI><a href="#[281]">touchgfx::LCD16bpp::framebufferStride() const</a> from lcd16bpp.o(i._ZNK8touchgfx8LCD16bpp17framebufferStrideEv) referenced from lcd16bpp.o(.constdata__ZTVN8touchgfx8LCD16bppE)
 <LI><a href="#[1e9]">touchgfx::TextArea::getAlignment() const</a> from textarea.o(i._ZNK8touchgfx8TextArea12getAlignmentEv) referenced from cookingviewbase.o(.constdata__ZTVN8touchgfx12FadeAnimatorINS_24TextAreaWithTwoWildcardsEEE)
 <LI><a href="#[1e9]">touchgfx::TextArea::getAlignment() const</a> from textarea.o(i._ZNK8touchgfx8TextArea12getAlignmentEv) referenced from cookingviewbase.o(.constdata__ZTVN8touchgfx12FadeAnimatorINS_8TextAreaEEE)
 <LI><a href="#[1e9]">touchgfx::TextArea::getAlignment() const</a> from textarea.o(i._ZNK8touchgfx8TextArea12getAlignmentEv) referenced from settingsviewbase.o(.constdata__ZTVN8touchgfx23TextAreaWithOneWildcardE)
 <LI><a href="#[1e9]">touchgfx::TextArea::getAlignment() const</a> from textarea.o(i._ZNK8touchgfx8TextArea12getAlignmentEv) referenced from cookingviewbase.o(.constdata__ZTVN8touchgfx24TextAreaWithTwoWildcardsE)
 <LI><a href="#[1e9]">touchgfx::TextArea::getAlignment() const</a> from textarea.o(i._ZNK8touchgfx8TextArea12getAlignmentEv) referenced from textareawithwildcard.o(.constdata__ZTVN8touchgfx24TextAreaWithWildcardBaseE)
 <LI><a href="#[1e9]">touchgfx::TextArea::getAlignment() const</a> from textarea.o(i._ZNK8touchgfx8TextArea12getAlignmentEv) referenced from textarea.o(.constdata__ZTVN8touchgfx8TextAreaE)
 <LI><a href="#[1e2]">touchgfx::TextArea::getSolidRect() const</a> from cookingviewbase.o(i._ZNK8touchgfx8TextArea12getSolidRectEv) referenced from cookingviewbase.o(.constdata__ZTVN8touchgfx12FadeAnimatorINS_24TextAreaWithTwoWildcardsEEE)
 <LI><a href="#[1e2]">touchgfx::TextArea::getSolidRect() const</a> from cookingviewbase.o(i._ZNK8touchgfx8TextArea12getSolidRectEv) referenced from cookingviewbase.o(.constdata__ZTVN8touchgfx12FadeAnimatorINS_8TextAreaEEE)
 <LI><a href="#[1e2]">touchgfx::TextArea::getSolidRect() const</a> from cookingviewbase.o(i._ZNK8touchgfx8TextArea12getSolidRectEv) referenced from settingsviewbase.o(.constdata__ZTVN8touchgfx23TextAreaWithOneWildcardE)
 <LI><a href="#[1e2]">touchgfx::TextArea::getSolidRect() const</a> from cookingviewbase.o(i._ZNK8touchgfx8TextArea12getSolidRectEv) referenced from cookingviewbase.o(.constdata__ZTVN8touchgfx24TextAreaWithTwoWildcardsE)
 <LI><a href="#[1e2]">touchgfx::TextArea::getSolidRect() const</a> from cookingviewbase.o(i._ZNK8touchgfx8TextArea12getSolidRectEv) referenced from textareawithwildcard.o(.constdata__ZTVN8touchgfx24TextAreaWithWildcardBaseE)
 <LI><a href="#[1e2]">touchgfx::TextArea::getSolidRect() const</a> from cookingviewbase.o(i._ZNK8touchgfx8TextArea12getSolidRectEv) referenced from textarea.o(.constdata__ZTVN8touchgfx8TextAreaE)
 <LI><a href="#[1eb]">touchgfx::TextArea::getTextWidth() const</a> from textarea.o(i._ZNK8touchgfx8TextArea12getTextWidthEv) referenced from cookingviewbase.o(.constdata__ZTVN8touchgfx12FadeAnimatorINS_24TextAreaWithTwoWildcardsEEE)
 <LI><a href="#[1eb]">touchgfx::TextArea::getTextWidth() const</a> from textarea.o(i._ZNK8touchgfx8TextArea12getTextWidthEv) referenced from cookingviewbase.o(.constdata__ZTVN8touchgfx12FadeAnimatorINS_8TextAreaEEE)
 <LI><a href="#[1eb]">touchgfx::TextArea::getTextWidth() const</a> from textarea.o(i._ZNK8touchgfx8TextArea12getTextWidthEv) referenced from settingsviewbase.o(.constdata__ZTVN8touchgfx23TextAreaWithOneWildcardE)
 <LI><a href="#[1eb]">touchgfx::TextArea::getTextWidth() const</a> from textarea.o(i._ZNK8touchgfx8TextArea12getTextWidthEv) referenced from cookingviewbase.o(.constdata__ZTVN8touchgfx24TextAreaWithTwoWildcardsE)
 <LI><a href="#[1eb]">touchgfx::TextArea::getTextWidth() const</a> from textarea.o(i._ZNK8touchgfx8TextArea12getTextWidthEv) referenced from textareawithwildcard.o(.constdata__ZTVN8touchgfx24TextAreaWithWildcardBaseE)
 <LI><a href="#[1eb]">touchgfx::TextArea::getTextWidth() const</a> from textarea.o(i._ZNK8touchgfx8TextArea12getTextWidthEv) referenced from textarea.o(.constdata__ZTVN8touchgfx8TextAreaE)
 <LI><a href="#[203]">touchgfx::TextArea::getWildcard1() const</a> from cookingviewbase.o(i._ZNK8touchgfx8TextArea12getWildcard1Ev) referenced from cookingviewbase.o(.constdata__ZTVN8touchgfx12FadeAnimatorINS_8TextAreaEEE)
 <LI><a href="#[203]">touchgfx::TextArea::getWildcard1() const</a> from cookingviewbase.o(i._ZNK8touchgfx8TextArea12getWildcard1Ev) referenced from textareawithwildcard.o(.constdata__ZTVN8touchgfx24TextAreaWithWildcardBaseE)
 <LI><a href="#[203]">touchgfx::TextArea::getWildcard1() const</a> from cookingviewbase.o(i._ZNK8touchgfx8TextArea12getWildcard1Ev) referenced from textarea.o(.constdata__ZTVN8touchgfx8TextAreaE)
 <LI><a href="#[204]">touchgfx::TextArea::getWildcard2() const</a> from cookingviewbase.o(i._ZNK8touchgfx8TextArea12getWildcard2Ev) referenced from cookingviewbase.o(.constdata__ZTVN8touchgfx12FadeAnimatorINS_8TextAreaEEE)
 <LI><a href="#[204]">touchgfx::TextArea::getWildcard2() const</a> from cookingviewbase.o(i._ZNK8touchgfx8TextArea12getWildcard2Ev) referenced from settingsviewbase.o(.constdata__ZTVN8touchgfx23TextAreaWithOneWildcardE)
 <LI><a href="#[204]">touchgfx::TextArea::getWildcard2() const</a> from cookingviewbase.o(i._ZNK8touchgfx8TextArea12getWildcard2Ev) referenced from textareawithwildcard.o(.constdata__ZTVN8touchgfx24TextAreaWithWildcardBaseE)
 <LI><a href="#[204]">touchgfx::TextArea::getWildcard2() const</a> from cookingviewbase.o(i._ZNK8touchgfx8TextArea12getWildcard2Ev) referenced from textarea.o(.constdata__ZTVN8touchgfx8TextAreaE)
 <LI><a href="#[1ea]">touchgfx::TextArea::getTextHeight() const</a> from textarea.o(i._ZNK8touchgfx8TextArea13getTextHeightEv) referenced from cookingviewbase.o(.constdata__ZTVN8touchgfx12FadeAnimatorINS_24TextAreaWithTwoWildcardsEEE)
 <LI><a href="#[1ea]">touchgfx::TextArea::getTextHeight() const</a> from textarea.o(i._ZNK8touchgfx8TextArea13getTextHeightEv) referenced from cookingviewbase.o(.constdata__ZTVN8touchgfx12FadeAnimatorINS_8TextAreaEEE)
 <LI><a href="#[1ea]">touchgfx::TextArea::getTextHeight() const</a> from textarea.o(i._ZNK8touchgfx8TextArea13getTextHeightEv) referenced from settingsviewbase.o(.constdata__ZTVN8touchgfx23TextAreaWithOneWildcardE)
 <LI><a href="#[1ea]">touchgfx::TextArea::getTextHeight() const</a> from textarea.o(i._ZNK8touchgfx8TextArea13getTextHeightEv) referenced from cookingviewbase.o(.constdata__ZTVN8touchgfx24TextAreaWithTwoWildcardsE)
 <LI><a href="#[1ea]">touchgfx::TextArea::getTextHeight() const</a> from textarea.o(i._ZNK8touchgfx8TextArea13getTextHeightEv) referenced from textareawithwildcard.o(.constdata__ZTVN8touchgfx24TextAreaWithWildcardBaseE)
 <LI><a href="#[1ea]">touchgfx::TextArea::getTextHeight() const</a> from textarea.o(i._ZNK8touchgfx8TextArea13getTextHeightEv) referenced from textarea.o(.constdata__ZTVN8touchgfx8TextAreaE)
 <LI><a href="#[201]">touchgfx::TextArea::invalidateContent() const</a> from textarea.o(i._ZNK8touchgfx8TextArea17invalidateContentEv) referenced from cookingviewbase.o(.constdata__ZTVN8touchgfx12FadeAnimatorINS_8TextAreaEEE)
 <LI><a href="#[201]">touchgfx::TextArea::invalidateContent() const</a> from textarea.o(i._ZNK8touchgfx8TextArea17invalidateContentEv) referenced from textarea.o(.constdata__ZTVN8touchgfx8TextAreaE)
 <LI><a href="#[1ec]">touchgfx::TextArea::calculateTextHeight(const unsigned short*, ...) const</a> from textarea.o(i._ZNK8touchgfx8TextArea19calculateTextHeightEPKtz) referenced from cookingviewbase.o(.constdata__ZTVN8touchgfx12FadeAnimatorINS_24TextAreaWithTwoWildcardsEEE)
 <LI><a href="#[1ec]">touchgfx::TextArea::calculateTextHeight(const unsigned short*, ...) const</a> from textarea.o(i._ZNK8touchgfx8TextArea19calculateTextHeightEPKtz) referenced from cookingviewbase.o(.constdata__ZTVN8touchgfx12FadeAnimatorINS_8TextAreaEEE)
 <LI><a href="#[1ec]">touchgfx::TextArea::calculateTextHeight(const unsigned short*, ...) const</a> from textarea.o(i._ZNK8touchgfx8TextArea19calculateTextHeightEPKtz) referenced from settingsviewbase.o(.constdata__ZTVN8touchgfx23TextAreaWithOneWildcardE)
 <LI><a href="#[1ec]">touchgfx::TextArea::calculateTextHeight(const unsigned short*, ...) const</a> from textarea.o(i._ZNK8touchgfx8TextArea19calculateTextHeightEPKtz) referenced from cookingviewbase.o(.constdata__ZTVN8touchgfx24TextAreaWithTwoWildcardsE)
 <LI><a href="#[1ec]">touchgfx::TextArea::calculateTextHeight(const unsigned short*, ...) const</a> from textarea.o(i._ZNK8touchgfx8TextArea19calculateTextHeightEPKtz) referenced from textareawithwildcard.o(.constdata__ZTVN8touchgfx24TextAreaWithWildcardBaseE)
 <LI><a href="#[1ec]">touchgfx::TextArea::calculateTextHeight(const unsigned short*, ...) const</a> from textarea.o(i._ZNK8touchgfx8TextArea19calculateTextHeightEPKtz) referenced from textarea.o(.constdata__ZTVN8touchgfx8TextAreaE)
 <LI><a href="#[205]">touchgfx::TextArea::calculateBoundingArea() const</a> from textarea.o(i._ZNK8touchgfx8TextArea21calculateBoundingAreaEv) referenced from cookingviewbase.o(.constdata__ZTVN8touchgfx12FadeAnimatorINS_8TextAreaEEE)
 <LI><a href="#[205]">touchgfx::TextArea::calculateBoundingArea() const</a> from textarea.o(i._ZNK8touchgfx8TextArea21calculateBoundingAreaEv) referenced from textarea.o(.constdata__ZTVN8touchgfx8TextAreaE)
 <LI><a href="#[200]">touchgfx::TextArea::draw(const touchgfx::Rect&) const</a> from textarea.o(i._ZNK8touchgfx8TextArea4drawERKNS_4RectE) referenced from cookingviewbase.o(.constdata__ZTVN8touchgfx12FadeAnimatorINS_8TextAreaEEE)
 <LI><a href="#[200]">touchgfx::TextArea::draw(const touchgfx::Rect&) const</a> from textarea.o(i._ZNK8touchgfx8TextArea4drawERKNS_4RectE) referenced from textarea.o(.constdata__ZTVN8touchgfx8TextAreaE)
 <LI><a href="#[214]">touchgfx::ConstFont::getGlyph(unsigned short, const unsigned char*&, unsigned char&) const</a> from constfont.o(i._ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh) referenced from generatedfont.o(.constdata__ZTVN8touchgfx13GeneratedFontE)
 <LI><a href="#[214]">touchgfx::ConstFont::getGlyph(unsigned short, const unsigned char*&, unsigned char&) const</a> from constfont.o(i._ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh) referenced from constfont.o(.constdata__ZTVN8touchgfx9ConstFontE)
 <LI><a href="#[208]">touchgfx::Container::getSolidRect() const</a> from container.o(i._ZNK8touchgfx9Container12getSolidRectEv) referenced from selectingmenuviewbase.o(.constdata__ZTVN8touchgfx12MoveAnimatorINS_9ContainerEEE)
 <LI><a href="#[208]">touchgfx::Container::getSolidRect() const</a> from container.o(i._ZNK8touchgfx9Container12getSolidRectEv) referenced from informationdemoviewbase.o(.constdata__ZTVN8touchgfx18ClickButtonTriggerE)
 <LI><a href="#[208]">touchgfx::Container::getSolidRect() const</a> from container.o(i._ZNK8touchgfx9Container12getSolidRectEv) referenced from informationdemoviewbase.o(.constdata__ZTVN8touchgfx23AbstractButtonContainerE)
 <LI><a href="#[208]">touchgfx::Container::getSolidRect() const</a> from container.o(i._ZNK8touchgfx9Container12getSolidRectEv) referenced from informationdemoviewbase.o(.constdata__ZTVN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEE)
 <LI><a href="#[208]">touchgfx::Container::getSolidRect() const</a> from container.o(i._ZNK8touchgfx9Container12getSolidRectEv) referenced from container.o(.constdata__ZTVN8touchgfx9ContainerE)
 <LI><a href="#[207]">touchgfx::Container::draw(const touchgfx::Rect&) const</a> from container.o(i._ZNK8touchgfx9Container4drawERKNS_4RectE) referenced from selectingmenuviewbase.o(.constdata__ZTVN8touchgfx12MoveAnimatorINS_9ContainerEEE)
 <LI><a href="#[207]">touchgfx::Container::draw(const touchgfx::Rect&) const</a> from container.o(i._ZNK8touchgfx9Container4drawERKNS_4RectE) referenced from informationdemoviewbase.o(.constdata__ZTVN8touchgfx18ClickButtonTriggerE)
 <LI><a href="#[207]">touchgfx::Container::draw(const touchgfx::Rect&) const</a> from container.o(i._ZNK8touchgfx9Container4drawERKNS_4RectE) referenced from informationdemoviewbase.o(.constdata__ZTVN8touchgfx23AbstractButtonContainerE)
 <LI><a href="#[207]">touchgfx::Container::draw(const touchgfx::Rect&) const</a> from container.o(i._ZNK8touchgfx9Container4drawERKNS_4RectE) referenced from informationdemoviewbase.o(.constdata__ZTVN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEE)
 <LI><a href="#[207]">touchgfx::Container::draw(const touchgfx::Rect&) const</a> from container.o(i._ZNK8touchgfx9Container4drawERKNS_4RectE) referenced from container.o(.constdata__ZTVN8touchgfx9ContainerE)
 <LI><a href="#[1df]">__cxa_pure_virtual</a> from pure_virt.o(i.__cxa_pure_virtual) referenced from canvaswidget.o(.constdata__ZTVN8touchgfx12CanvasWidgetE)
 <LI><a href="#[1df]">__cxa_pure_virtual</a> from pure_virt.o(i.__cxa_pure_virtual) referenced from touchgfxconfiguration.o(.constdata__ZTVN8touchgfx12FontProviderE)
 <LI><a href="#[1df]">__cxa_pure_virtual</a> from pure_virt.o(i.__cxa_pure_virtual) referenced 4 times from dma.o(.constdata__ZTVN8touchgfx13DMA_InterfaceE)
 <LI><a href="#[1df]">__cxa_pure_virtual</a> from pure_virt.o(i.__cxa_pure_virtual) referenced 2 times from abstractbutton.o(.constdata__ZTVN8touchgfx14AbstractButtonE)
 <LI><a href="#[1df]">__cxa_pure_virtual</a> from pure_virt.o(i.__cxa_pure_virtual) referenced from cookingviewbase.o(.constdata__ZTVN8touchgfx15AbstractPainterE)
 <LI><a href="#[1df]">__cxa_pure_virtual</a> from pure_virt.o(i.__cxa_pure_virtual) referenced 2 times from splashscreenviewbase.o(.constdata__ZTVN8touchgfx15GenericCallbackIRKNS_12FadeAnimatorINS_5ImageEEEvvEE)
 <LI><a href="#[1df]">__cxa_pure_virtual</a> from pure_virt.o(i.__cxa_pure_virtual) referenced 2 times from cookingviewbase.o(.constdata__ZTVN8touchgfx15GenericCallbackIRKNS_14AbstractButtonEvvEE)
 <LI><a href="#[1df]">__cxa_pure_virtual</a> from pure_virt.o(i.__cxa_pure_virtual) referenced 2 times from informationdemoviewbase.o(.constdata__ZTVN8touchgfx15GenericCallbackIRKNS_23AbstractButtonContainerEvvEE)
 <LI><a href="#[1df]">__cxa_pure_virtual</a> from pure_virt.o(i.__cxa_pure_virtual) referenced 2 times from frontendapplicationbase.o(.constdata__ZTVN8touchgfx15GenericCallbackIvvvEE)
 <LI><a href="#[1df]">__cxa_pure_virtual</a> from pure_virt.o(i.__cxa_pure_virtual) referenced 2 times from touchgfxconfiguration.o(.constdata__ZTVN8touchgfx15TouchControllerE)
 <LI><a href="#[1df]">__cxa_pure_virtual</a> from pure_virt.o(i.__cxa_pure_virtual) referenced 4 times from abstractpartition.o(.constdata__ZTVN8touchgfx17AbstractPartitionE)
 <LI><a href="#[1df]">__cxa_pure_virtual</a> from pure_virt.o(i.__cxa_pure_virtual) referenced from cookingviewbase.o(.constdata__ZTVN8touchgfx21AbstractPainterRGB565E)
 <LI><a href="#[1df]">__cxa_pure_virtual</a> from pure_virt.o(i.__cxa_pure_virtual) referenced 6 times from hal.o(.constdata__ZTVN8touchgfx3HALE)
 <LI><a href="#[1df]">__cxa_pure_virtual</a> from pure_virt.o(i.__cxa_pure_virtual) referenced from texts.o(.constdata__ZTVN8touchgfx4FontE)
 <LI><a href="#[1df]">__cxa_pure_virtual</a> from pure_virt.o(i.__cxa_pure_virtual) referenced 2 times from cookingviewbase.o(.constdata__ZTVN8touchgfx6WidgetE)
 <LI><a href="#[1df]">__cxa_pure_virtual</a> from pure_virt.o(i.__cxa_pure_virtual) referenced 3 times from drawable.o(.constdata__ZTVN8touchgfx8DrawableE)
 <LI><a href="#[1df]">__cxa_pure_virtual</a> from pure_virt.o(i.__cxa_pure_virtual) referenced 2 times from constfont.o(.constdata__ZTVN8touchgfx9ConstFontE)
 <LI><a href="#[295]">__main</a> from __main.o(!!!main) referenced from startup_stm32h757xx_cm7.o(.text)
 <LI><a href="#[293]">__sti___15_Application_cpp_63cd8d44</a> from application.o(i.__sti___15_Application_cpp_63cd8d44) referenced from application.o(.init_array)
 <LI><a href="#[292]">__sti___21_typedtextdatabase_cpp_05ec7672</a> from typedtextdatabase.o(i.__sti___21_typedtextdatabase_cpp_05ec7672) referenced from typedtextdatabase.o(.init_array)
 <LI><a href="#[291]">__sti___25_TouchGFXConfiguration_cpp_f5abfd34</a> from touchgfxconfiguration.o(i.__sti___25_TouchGFXConfiguration_cpp_f5abfd34) referenced from touchgfxconfiguration.o(.init_array)
 <LI><a href="#[294]">__sti___7_LCD_cpp_86507772</a> from lcd.o(i.__sti___7_LCD_cpp_86507772) referenced from lcd.o(.init_array)
 <LI><a href="#[da]">prvIdleTask</a> from tasks.o(i.prvIdleTask) referenced from tasks.o(i.vTaskStartScheduler)
 <LI><a href="#[d8]">prvTaskExitError</a> from port.o(i.prvTaskExitError) referenced from port.o(i.pxPortInitialiseStack)
 <LI><a href="#[db]">prvTimerTask</a> from timers.o(i.prvTimerTask) referenced from timers.o(i.xTimerCreateTimerTask)
</UL>
<P>
<H3>
Global Symbols
</H3>
<P><STRONG><a name="[295]"></a>__main</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, __main.o(!!!main))
<BR><BR>[Calls]<UL><LI><a href="#[298]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry
<LI><a href="#[297]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload
</UL>

<P><STRONG><a name="[297]"></a>__scatterload</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __scatter.o(!!!scatter))
<BR><BR>[Called By]<UL><LI><a href="#[295]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__main
</UL>

<P><STRONG><a name="[299]"></a>__scatterload_rt2</STRONG> (Thumb, 44 bytes, Stack size unknown bytes, __scatter.o(!!!scatter), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[298]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry
</UL>

<P><STRONG><a name="[522]"></a>__scatterload_rt2_thumb_only</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __scatter.o(!!!scatter), UNUSED)

<P><STRONG><a name="[523]"></a>__scatterload_null</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __scatter.o(!!!scatter), UNUSED)

<P><STRONG><a name="[524]"></a>__decompress</STRONG> (Thumb, 90 bytes, Stack size unknown bytes, __dczerorl2.o(!!dczerorl2), UNUSED)

<P><STRONG><a name="[525]"></a>__decompress1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __dczerorl2.o(!!dczerorl2), UNUSED)

<P><STRONG><a name="[526]"></a>__scatterload_zeroinit</STRONG> (Thumb, 28 bytes, Stack size unknown bytes, __scatter_zi.o(!!handler_zi), UNUSED)

<P><STRONG><a name="[2a4]"></a>__rt_lib_init</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit.o(.ARM.Collect$$libinit$$00000000))
<BR><BR>[Called By]<UL><LI><a href="#[2a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry_li
</UL>

<P><STRONG><a name="[29a]"></a>__rt_lib_init_fp_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000001))
<BR><BR>[Calls]<UL><LI><a href="#[29b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fp_init
</UL>

<P><STRONG><a name="[29c]"></a>__rt_lib_init_heap_2</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000005))
<BR><BR>[Stack]<UL><LI>Max Depth = 64 + Unknown Stack Size
<LI>Call Chain = __rt_lib_init_heap_2 &rArr; _init_alloc &rArr; __rt_SIGRTMEM &rArr; __rt_SIGRTMEM_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[29d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_init_alloc
</UL>

<P><STRONG><a name="[527]"></a>__rt_lib_init_preinit_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000004))

<P><STRONG><a name="[528]"></a>__rt_lib_init_alloca_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000002E))

<P><STRONG><a name="[529]"></a>__rt_lib_init_argv_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000002C))

<P><STRONG><a name="[52a]"></a>__rt_lib_init_atexit_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000001B))

<P><STRONG><a name="[52b]"></a>__rt_lib_init_clock_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000021))

<P><STRONG><a name="[29e]"></a>__rt_lib_init_cpp_2</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000031))
<BR><BR>[Stack]<UL><LI>Max Depth = 16 + Unknown Stack Size
<LI>Call Chain = __rt_lib_init_cpp_2 &rArr; __cpp_initialize__aeabi_
</UL>
<BR>[Calls]<UL><LI><a href="#[296]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cpp_initialize__aeabi_
</UL>

<P><STRONG><a name="[52c]"></a>__rt_lib_init_exceptions_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000030))

<P><STRONG><a name="[52d]"></a>__rt_lib_init_fp_trap_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000001F))

<P><STRONG><a name="[52e]"></a>__rt_lib_init_getenv_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000023))

<P><STRONG><a name="[52f]"></a>__rt_lib_init_heap_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000000A))

<P><STRONG><a name="[530]"></a>__rt_lib_init_lc_collate_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000011))

<P><STRONG><a name="[531]"></a>__rt_lib_init_lc_ctype_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000013))

<P><STRONG><a name="[532]"></a>__rt_lib_init_lc_monetary_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000015))

<P><STRONG><a name="[533]"></a>__rt_lib_init_lc_numeric_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000017))

<P><STRONG><a name="[534]"></a>__rt_lib_init_lc_time_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000019))

<P><STRONG><a name="[535]"></a>__rt_lib_init_rand_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000000E))

<P><STRONG><a name="[536]"></a>__rt_lib_init_signal_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000001D))

<P><STRONG><a name="[537]"></a>__rt_lib_init_stdio_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000025))

<P><STRONG><a name="[538]"></a>__rt_lib_init_user_alloc_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000000C))

<P><STRONG><a name="[539]"></a>__rt_lib_init_cpp_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000032))

<P><STRONG><a name="[53a]"></a>__rt_lib_init_return</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000033))

<P><STRONG><a name="[2a9]"></a>__rt_lib_shutdown</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown.o(.ARM.Collect$$libshutdown$$00000000))
<BR><BR>[Called By]<UL><LI><a href="#[2ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;abort
<LI><a href="#[2a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_exit_ls
</UL>

<P><STRONG><a name="[29f]"></a>__rt_lib_shutdown_cpp_2</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$00000003))
<BR><BR>[Stack]<UL><LI>Max Depth = 40 + Unknown Stack Size
<LI>Call Chain = __rt_lib_shutdown_cpp_2 &rArr; __cxa_finalize &rArr; free
</UL>
<BR>[Calls]<UL><LI><a href="#[2a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxa_finalize
</UL>

<P><STRONG><a name="[53b]"></a>__rt_lib_shutdown_fini_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$00000002))

<P><STRONG><a name="[53c]"></a>__rt_lib_shutdown_cpp_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$00000004))

<P><STRONG><a name="[53d]"></a>__rt_lib_shutdown_fp_trap_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$00000009))

<P><STRONG><a name="[53e]"></a>__rt_lib_shutdown_heap_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$00000011))

<P><STRONG><a name="[53f]"></a>__rt_lib_shutdown_return</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$00000012))

<P><STRONG><a name="[540]"></a>__rt_lib_shutdown_signal_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$0000000C))

<P><STRONG><a name="[541]"></a>__rt_lib_shutdown_stdio_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$00000006))

<P><STRONG><a name="[542]"></a>__rt_lib_shutdown_user_alloc_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$0000000E))

<P><STRONG><a name="[298]"></a>__rt_entry</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __rtentry.o(.ARM.Collect$$rtentry$$00000000))
<BR><BR>[Called By]<UL><LI><a href="#[295]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__main
<LI><a href="#[299]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload_rt2
</UL>

<P><STRONG><a name="[543]"></a>__rt_entry_presh_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __rtentry2.o(.ARM.Collect$$rtentry$$00000002))

<P><STRONG><a name="[2a1]"></a>__rt_entry_sh</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __rtentry4.o(.ARM.Collect$$rtentry$$00000004))
<BR><BR>[Stack]<UL><LI>Max Depth = 8 + Unknown Stack Size
<LI>Call Chain = __rt_entry_sh &rArr; __user_setup_stackheap
</UL>
<BR>[Calls]<UL><LI><a href="#[2a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__user_setup_stackheap
</UL>

<P><STRONG><a name="[2a3]"></a>__rt_entry_li</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __rtentry2.o(.ARM.Collect$$rtentry$$0000000A))
<BR><BR>[Calls]<UL><LI><a href="#[2a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_lib_init
</UL>

<P><STRONG><a name="[544]"></a>__rt_entry_postsh_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __rtentry2.o(.ARM.Collect$$rtentry$$00000009))

<P><STRONG><a name="[2a5]"></a>__rt_entry_main</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __rtentry2.o(.ARM.Collect$$rtentry$$0000000D))
<BR><BR>[Stack]<UL><LI>Max Depth = 360 + Unknown Stack Size
<LI>Call Chain = __rt_entry_main &rArr; main &rArr; MX_LTDC_Init &rArr; HAL_LTDC_Init &rArr; HAL_LTDC_MspInit &rArr; HAL_NVIC_SetPriority &rArr; __NVIC_SetPriority
</UL>
<BR>[Calls]<UL><LI><a href="#[2a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[2a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;exit
</UL>

<P><STRONG><a name="[545]"></a>__rt_entry_postli_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __rtentry2.o(.ARM.Collect$$rtentry$$0000000C))

<P><STRONG><a name="[2c9]"></a>__rt_exit</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rtexit.o(.ARM.Collect$$rtexit$$00000000))
<BR><BR>[Called By]<UL><LI><a href="#[2a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;exit
</UL>

<P><STRONG><a name="[2a8]"></a>__rt_exit_ls</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rtexit2.o(.ARM.Collect$$rtexit$$00000003))
<BR><BR>[Calls]<UL><LI><a href="#[2a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_lib_shutdown
</UL>

<P><STRONG><a name="[546]"></a>__rt_exit_prels_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rtexit2.o(.ARM.Collect$$rtexit$$00000002))

<P><STRONG><a name="[2aa]"></a>__rt_exit_exit</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rtexit2.o(.ARM.Collect$$rtexit$$00000004))
<BR><BR>[Calls]<UL><LI><a href="#[2ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_sys_exit
</UL>

<P><STRONG><a name="[16]"></a>SVC_Handler</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, port.o(.emb_text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h757xx_cm7.o(RESET)
</UL>
<P><STRONG><a name="[508]"></a>__asm___6_port_c_39a90d8d__prvStartFirstTask</STRONG> (Thumb, 36 bytes, Stack size 0 bytes, port.o(.emb_text))
<BR><BR>[Called By]<UL><LI><a href="#[505]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xPortStartScheduler
</UL>

<P><STRONG><a name="[507]"></a>__asm___6_port_c_39a90d8d__prvEnableVFP</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, port.o(.emb_text))
<BR><BR>[Called By]<UL><LI><a href="#[505]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xPortStartScheduler
</UL>

<P><STRONG><a name="[18]"></a>PendSV_Handler</STRONG> (Thumb, 88 bytes, Stack size 0 bytes, port.o(.emb_text))
<BR><BR>[Calls]<UL><LI><a href="#[2ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskSwitchContext
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h757xx_cm7.o(RESET)
</UL>
<P><STRONG><a name="[4fe]"></a>vPortGetIPSR</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, port.o(.emb_text))
<BR><BR>[Called By]<UL><LI><a href="#[4fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortValidateInterruptPriority
</UL>

<P><STRONG><a name="[10]"></a>Reset_Handler</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, startup_stm32h757xx_cm7.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h757xx_cm7.o(RESET)
</UL>
<P><STRONG><a name="[547]"></a>_maybe_terminate_alloc</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, maybetermalloc1.o(.emb_text), UNUSED)

<P><STRONG><a name="[96]"></a>ADC3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h757xx_cm7.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC3_IRQHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC3_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h757xx_cm7.o(RESET)
</UL>
<P><STRONG><a name="[2c]"></a>ADC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h757xx_cm7.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h757xx_cm7.o(RESET)
</UL>
<P><STRONG><a name="[98]"></a>BDMA_Channel0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h757xx_cm7.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h757xx_cm7.o(RESET)
</UL>
<P><STRONG><a name="[99]"></a>BDMA_Channel1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h757xx_cm7.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h757xx_cm7.o(RESET)
</UL>
<P><STRONG><a name="[9a]"></a>BDMA_Channel2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h757xx_cm7.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h757xx_cm7.o(RESET)
</UL>
<P><STRONG><a name="[9b]"></a>BDMA_Channel3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h757xx_cm7.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h757xx_cm7.o(RESET)
</UL>
<P><STRONG><a name="[9c]"></a>BDMA_Channel4_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h757xx_cm7.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h757xx_cm7.o(RESET)
</UL>
<P><STRONG><a name="[9d]"></a>BDMA_Channel5_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h757xx_cm7.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h757xx_cm7.o(RESET)
</UL>
<P><STRONG><a name="[9e]"></a>BDMA_Channel6_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h757xx_cm7.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h757xx_cm7.o(RESET)
</UL>
<P><STRONG><a name="[9f]"></a>BDMA_Channel7_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h757xx_cm7.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h757xx_cm7.o(RESET)
</UL>
<P><STRONG><a name="[75]"></a>CEC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h757xx_cm7.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h757xx_cm7.o(RESET)
</UL>
<P><STRONG><a name="[5a]"></a>CM4_SEV_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h757xx_cm7.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h757xx_cm7.o(RESET)
</UL>
<P><STRONG><a name="[59]"></a>CM7_SEV_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h757xx_cm7.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h757xx_cm7.o(RESET)
</UL>
<P><STRONG><a name="[a0]"></a>COMP1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h757xx_cm7.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h757xx_cm7.o(RESET)
</UL>
<P><STRONG><a name="[a7]"></a>CRS_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h757xx_cm7.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h757xx_cm7.o(RESET)
</UL>
<P><STRONG><a name="[66]"></a>CRYP_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h757xx_cm7.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h757xx_cm7.o(RESET)
</UL>
<P><STRONG><a name="[65]"></a>DCMI_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h757xx_cm7.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h757xx_cm7.o(RESET)
</UL>
<P><STRONG><a name="[85]"></a>DFSDM1_FLT0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h757xx_cm7.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h757xx_cm7.o(RESET)
</UL>
<P><STRONG><a name="[86]"></a>DFSDM1_FLT1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h757xx_cm7.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h757xx_cm7.o(RESET)
</UL>
<P><STRONG><a name="[87]"></a>DFSDM1_FLT2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h757xx_cm7.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h757xx_cm7.o(RESET)
</UL>
<P><STRONG><a name="[88]"></a>DFSDM1_FLT3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h757xx_cm7.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h757xx_cm7.o(RESET)
</UL>
<P><STRONG><a name="[25]"></a>DMA1_Stream0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h757xx_cm7.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h757xx_cm7.o(RESET)
</UL>
<P><STRONG><a name="[26]"></a>DMA1_Stream1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h757xx_cm7.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h757xx_cm7.o(RESET)
</UL>
<P><STRONG><a name="[27]"></a>DMA1_Stream2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h757xx_cm7.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h757xx_cm7.o(RESET)
</UL>
<P><STRONG><a name="[28]"></a>DMA1_Stream3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h757xx_cm7.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h757xx_cm7.o(RESET)
</UL>
<P><STRONG><a name="[29]"></a>DMA1_Stream4_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h757xx_cm7.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h757xx_cm7.o(RESET)
</UL>
<P><STRONG><a name="[2a]"></a>DMA1_Stream5_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h757xx_cm7.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h757xx_cm7.o(RESET)
</UL>
<P><STRONG><a name="[2b]"></a>DMA1_Stream6_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h757xx_cm7.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h757xx_cm7.o(RESET)
</UL>
<P><STRONG><a name="[48]"></a>DMA1_Stream7_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h757xx_cm7.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h757xx_cm7.o(RESET)
</UL>
<P><STRONG><a name="[51]"></a>DMA2_Stream0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h757xx_cm7.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h757xx_cm7.o(RESET)
</UL>
<P><STRONG><a name="[52]"></a>DMA2_Stream1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h757xx_cm7.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h757xx_cm7.o(RESET)
</UL>
<P><STRONG><a name="[53]"></a>DMA2_Stream2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h757xx_cm7.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h757xx_cm7.o(RESET)
</UL>
<P><STRONG><a name="[54]"></a>DMA2_Stream3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h757xx_cm7.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h757xx_cm7.o(RESET)
</UL>
<P><STRONG><a name="[55]"></a>DMA2_Stream4_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h757xx_cm7.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h757xx_cm7.o(RESET)
</UL>
<P><STRONG><a name="[5b]"></a>DMA2_Stream5_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h757xx_cm7.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h757xx_cm7.o(RESET)
</UL>
<P><STRONG><a name="[5c]"></a>DMA2_Stream6_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h757xx_cm7.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h757xx_cm7.o(RESET)
</UL>
<P><STRONG><a name="[5d]"></a>DMA2_Stream7_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h757xx_cm7.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h757xx_cm7.o(RESET)
</UL>
<P><STRONG><a name="[7d]"></a>DMAMUX1_OVR_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h757xx_cm7.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h757xx_cm7.o(RESET)
</UL>
<P><STRONG><a name="[97]"></a>DMAMUX2_OVR_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h757xx_cm7.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h757xx_cm7.o(RESET)
</UL>
<P><STRONG><a name="[92]"></a>DSI_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h757xx_cm7.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h757xx_cm7.o(RESET)
</UL>
<P><STRONG><a name="[a8]"></a>ECC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h757xx_cm7.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h757xx_cm7.o(RESET)
</UL>
<P><STRONG><a name="[56]"></a>ETH_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h757xx_cm7.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h757xx_cm7.o(RESET)
</UL>
<P><STRONG><a name="[57]"></a>ETH_WKUP_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h757xx_cm7.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h757xx_cm7.o(RESET)
</UL>
<P><STRONG><a name="[20]"></a>EXTI0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h757xx_cm7.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h757xx_cm7.o(RESET)
</UL>
<P><STRONG><a name="[42]"></a>EXTI15_10_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h757xx_cm7.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h757xx_cm7.o(RESET)
</UL>
<P><STRONG><a name="[21]"></a>EXTI1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h757xx_cm7.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h757xx_cm7.o(RESET)
</UL>
<P><STRONG><a name="[22]"></a>EXTI2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h757xx_cm7.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h757xx_cm7.o(RESET)
</UL>
<P><STRONG><a name="[23]"></a>EXTI3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h757xx_cm7.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h757xx_cm7.o(RESET)
</UL>
<P><STRONG><a name="[24]"></a>EXTI4_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h757xx_cm7.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h757xx_cm7.o(RESET)
</UL>
<P><STRONG><a name="[31]"></a>EXTI9_5_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h757xx_cm7.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h757xx_cm7.o(RESET)
</UL>
<P><STRONG><a name="[2d]"></a>FDCAN1_IT0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h757xx_cm7.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h757xx_cm7.o(RESET)
</UL>
<P><STRONG><a name="[2f]"></a>FDCAN1_IT1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h757xx_cm7.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h757xx_cm7.o(RESET)
</UL>
<P><STRONG><a name="[2e]"></a>FDCAN2_IT0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h757xx_cm7.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h757xx_cm7.o(RESET)
</UL>
<P><STRONG><a name="[30]"></a>FDCAN2_IT1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h757xx_cm7.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h757xx_cm7.o(RESET)
</UL>
<P><STRONG><a name="[58]"></a>FDCAN_CAL_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h757xx_cm7.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h757xx_cm7.o(RESET)
</UL>
<P><STRONG><a name="[1e]"></a>FLASH_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h757xx_cm7.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h757xx_cm7.o(RESET)
</UL>
<P><STRONG><a name="[49]"></a>FMC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h757xx_cm7.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h757xx_cm7.o(RESET)
</UL>
<P><STRONG><a name="[68]"></a>FPU_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h757xx_cm7.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h757xx_cm7.o(RESET)
</UL>
<P><STRONG><a name="[67]"></a>HASH_RNG_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h757xx_cm7.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h757xx_cm7.o(RESET)
</UL>
<P><STRONG><a name="[aa]"></a>HOLD_CORE_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h757xx_cm7.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h757xx_cm7.o(RESET)
</UL>
<P><STRONG><a name="[84]"></a>HRTIM1_FLT_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h757xx_cm7.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h757xx_cm7.o(RESET)
</UL>
<P><STRONG><a name="[7e]"></a>HRTIM1_Master_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h757xx_cm7.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h757xx_cm7.o(RESET)
</UL>
<P><STRONG><a name="[7f]"></a>HRTIM1_TIMA_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h757xx_cm7.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h757xx_cm7.o(RESET)
</UL>
<P><STRONG><a name="[80]"></a>HRTIM1_TIMB_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h757xx_cm7.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h757xx_cm7.o(RESET)
</UL>
<P><STRONG><a name="[81]"></a>HRTIM1_TIMC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h757xx_cm7.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h757xx_cm7.o(RESET)
</UL>
<P><STRONG><a name="[82]"></a>HRTIM1_TIMD_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h757xx_cm7.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h757xx_cm7.o(RESET)
</UL>
<P><STRONG><a name="[83]"></a>HRTIM1_TIME_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h757xx_cm7.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h757xx_cm7.o(RESET)
</UL>
<P><STRONG><a name="[94]"></a>HSEM1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h757xx_cm7.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h757xx_cm7.o(RESET)
</UL>
<P><STRONG><a name="[95]"></a>HSEM2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h757xx_cm7.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h757xx_cm7.o(RESET)
</UL>
<P><STRONG><a name="[3a]"></a>I2C1_ER_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h757xx_cm7.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h757xx_cm7.o(RESET)
</UL>
<P><STRONG><a name="[39]"></a>I2C1_EV_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h757xx_cm7.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h757xx_cm7.o(RESET)
</UL>
<P><STRONG><a name="[3c]"></a>I2C2_ER_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h757xx_cm7.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h757xx_cm7.o(RESET)
</UL>
<P><STRONG><a name="[3b]"></a>I2C2_EV_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h757xx_cm7.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h757xx_cm7.o(RESET)
</UL>
<P><STRONG><a name="[60]"></a>I2C3_ER_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h757xx_cm7.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h757xx_cm7.o(RESET)
</UL>
<P><STRONG><a name="[5f]"></a>I2C3_EV_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h757xx_cm7.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h757xx_cm7.o(RESET)
</UL>
<P><STRONG><a name="[77]"></a>I2C4_ER_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h757xx_cm7.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h757xx_cm7.o(RESET)
</UL>
<P><STRONG><a name="[76]"></a>I2C4_EV_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h757xx_cm7.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h757xx_cm7.o(RESET)
</UL>
<P><STRONG><a name="[90]"></a>JPEG_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h757xx_cm7.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h757xx_cm7.o(RESET)
</UL>
<P><STRONG><a name="[74]"></a>LPTIM1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h757xx_cm7.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h757xx_cm7.o(RESET)
</UL>
<P><STRONG><a name="[a1]"></a>LPTIM2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h757xx_cm7.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h757xx_cm7.o(RESET)
</UL>
<P><STRONG><a name="[a2]"></a>LPTIM3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h757xx_cm7.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h757xx_cm7.o(RESET)
</UL>
<P><STRONG><a name="[a3]"></a>LPTIM4_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h757xx_cm7.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h757xx_cm7.o(RESET)
</UL>
<P><STRONG><a name="[a4]"></a>LPTIM5_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h757xx_cm7.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h757xx_cm7.o(RESET)
</UL>
<P><STRONG><a name="[a5]"></a>LPUART1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h757xx_cm7.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h757xx_cm7.o(RESET)
</UL>
<P><STRONG><a name="[70]"></a>LTDC_ER_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h757xx_cm7.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h757xx_cm7.o(RESET)
</UL>
<P><STRONG><a name="[8f]"></a>MDIOS_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h757xx_cm7.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h757xx_cm7.o(RESET)
</UL>
<P><STRONG><a name="[8e]"></a>MDIOS_WKUP_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h757xx_cm7.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h757xx_cm7.o(RESET)
</UL>
<P><STRONG><a name="[91]"></a>MDMA_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h757xx_cm7.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h757xx_cm7.o(RESET)
</UL>
<P><STRONG><a name="[7a]"></a>OTG_FS_EP1_IN_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h757xx_cm7.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h757xx_cm7.o(RESET)
</UL>
<P><STRONG><a name="[79]"></a>OTG_FS_EP1_OUT_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h757xx_cm7.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h757xx_cm7.o(RESET)
</UL>
<P><STRONG><a name="[7c]"></a>OTG_FS_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h757xx_cm7.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h757xx_cm7.o(RESET)
</UL>
<P><STRONG><a name="[7b]"></a>OTG_FS_WKUP_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h757xx_cm7.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h757xx_cm7.o(RESET)
</UL>
<P><STRONG><a name="[62]"></a>OTG_HS_EP1_IN_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h757xx_cm7.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h757xx_cm7.o(RESET)
</UL>
<P><STRONG><a name="[61]"></a>OTG_HS_EP1_OUT_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h757xx_cm7.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h757xx_cm7.o(RESET)
</UL>
<P><STRONG><a name="[64]"></a>OTG_HS_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h757xx_cm7.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h757xx_cm7.o(RESET)
</UL>
<P><STRONG><a name="[63]"></a>OTG_HS_WKUP_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h757xx_cm7.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h757xx_cm7.o(RESET)
</UL>
<P><STRONG><a name="[1b]"></a>PVD_AVD_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h757xx_cm7.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h757xx_cm7.o(RESET)
</UL>
<P><STRONG><a name="[73]"></a>QUADSPI_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h757xx_cm7.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h757xx_cm7.o(RESET)
</UL>
<P><STRONG><a name="[1f]"></a>RCC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h757xx_cm7.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h757xx_cm7.o(RESET)
</UL>
<P><STRONG><a name="[43]"></a>RTC_Alarm_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h757xx_cm7.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h757xx_cm7.o(RESET)
</UL>
<P><STRONG><a name="[1d]"></a>RTC_WKUP_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h757xx_cm7.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h757xx_cm7.o(RESET)
</UL>
<P><STRONG><a name="[6e]"></a>SAI1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h757xx_cm7.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h757xx_cm7.o(RESET)
</UL>
<P><STRONG><a name="[72]"></a>SAI2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h757xx_cm7.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h757xx_cm7.o(RESET)
</UL>
<P><STRONG><a name="[89]"></a>SAI3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h757xx_cm7.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h757xx_cm7.o(RESET)
</UL>
<P><STRONG><a name="[a9]"></a>SAI4_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h757xx_cm7.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h757xx_cm7.o(RESET)
</UL>
<P><STRONG><a name="[4a]"></a>SDMMC1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h757xx_cm7.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h757xx_cm7.o(RESET)
</UL>
<P><STRONG><a name="[93]"></a>SDMMC2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h757xx_cm7.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h757xx_cm7.o(RESET)
</UL>
<P><STRONG><a name="[78]"></a>SPDIF_RX_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h757xx_cm7.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h757xx_cm7.o(RESET)
</UL>
<P><STRONG><a name="[3d]"></a>SPI1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h757xx_cm7.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h757xx_cm7.o(RESET)
</UL>
<P><STRONG><a name="[3e]"></a>SPI2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h757xx_cm7.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h757xx_cm7.o(RESET)
</UL>
<P><STRONG><a name="[4c]"></a>SPI3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h757xx_cm7.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h757xx_cm7.o(RESET)
</UL>
<P><STRONG><a name="[6b]"></a>SPI4_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h757xx_cm7.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h757xx_cm7.o(RESET)
</UL>
<P><STRONG><a name="[6c]"></a>SPI5_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h757xx_cm7.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h757xx_cm7.o(RESET)
</UL>
<P><STRONG><a name="[6d]"></a>SPI6_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h757xx_cm7.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h757xx_cm7.o(RESET)
</UL>
<P><STRONG><a name="[8a]"></a>SWPMI1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h757xx_cm7.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h757xx_cm7.o(RESET)
</UL>
<P><STRONG><a name="[1c]"></a>TAMP_STAMP_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h757xx_cm7.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h757xx_cm7.o(RESET)
</UL>
<P><STRONG><a name="[8b]"></a>TIM15_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h757xx_cm7.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h757xx_cm7.o(RESET)
</UL>
<P><STRONG><a name="[8c]"></a>TIM16_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h757xx_cm7.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h757xx_cm7.o(RESET)
</UL>
<P><STRONG><a name="[32]"></a>TIM1_BRK_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h757xx_cm7.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h757xx_cm7.o(RESET)
</UL>
<P><STRONG><a name="[35]"></a>TIM1_CC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h757xx_cm7.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h757xx_cm7.o(RESET)
</UL>
<P><STRONG><a name="[34]"></a>TIM1_TRG_COM_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h757xx_cm7.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h757xx_cm7.o(RESET)
</UL>
<P><STRONG><a name="[33]"></a>TIM1_UP_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h757xx_cm7.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h757xx_cm7.o(RESET)
</UL>
<P><STRONG><a name="[36]"></a>TIM2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h757xx_cm7.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h757xx_cm7.o(RESET)
</UL>
<P><STRONG><a name="[37]"></a>TIM3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h757xx_cm7.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h757xx_cm7.o(RESET)
</UL>
<P><STRONG><a name="[38]"></a>TIM4_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h757xx_cm7.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h757xx_cm7.o(RESET)
</UL>
<P><STRONG><a name="[4b]"></a>TIM5_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h757xx_cm7.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h757xx_cm7.o(RESET)
</UL>
<P><STRONG><a name="[4f]"></a>TIM6_DAC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h757xx_cm7.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h757xx_cm7.o(RESET)
</UL>
<P><STRONG><a name="[50]"></a>TIM7_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h757xx_cm7.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h757xx_cm7.o(RESET)
</UL>
<P><STRONG><a name="[44]"></a>TIM8_BRK_TIM12_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h757xx_cm7.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h757xx_cm7.o(RESET)
</UL>
<P><STRONG><a name="[47]"></a>TIM8_CC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h757xx_cm7.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h757xx_cm7.o(RESET)
</UL>
<P><STRONG><a name="[46]"></a>TIM8_TRG_COM_TIM14_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h757xx_cm7.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h757xx_cm7.o(RESET)
</UL>
<P><STRONG><a name="[45]"></a>TIM8_UP_TIM13_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h757xx_cm7.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h757xx_cm7.o(RESET)
</UL>
<P><STRONG><a name="[4d]"></a>UART4_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h757xx_cm7.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h757xx_cm7.o(RESET)
</UL>
<P><STRONG><a name="[4e]"></a>UART5_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h757xx_cm7.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h757xx_cm7.o(RESET)
</UL>
<P><STRONG><a name="[69]"></a>UART7_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h757xx_cm7.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h757xx_cm7.o(RESET)
</UL>
<P><STRONG><a name="[6a]"></a>UART8_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h757xx_cm7.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h757xx_cm7.o(RESET)
</UL>
<P><STRONG><a name="[3f]"></a>USART1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h757xx_cm7.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h757xx_cm7.o(RESET)
</UL>
<P><STRONG><a name="[40]"></a>USART2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h757xx_cm7.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h757xx_cm7.o(RESET)
</UL>
<P><STRONG><a name="[41]"></a>USART3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h757xx_cm7.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h757xx_cm7.o(RESET)
</UL>
<P><STRONG><a name="[5e]"></a>USART6_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h757xx_cm7.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h757xx_cm7.o(RESET)
</UL>
<P><STRONG><a name="[ab]"></a>WAKEUP_PIN_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h757xx_cm7.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h757xx_cm7.o(RESET)
</UL>
<P><STRONG><a name="[1a]"></a>WWDG_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h757xx_cm7.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h757xx_cm7.o(RESET)
</UL>
<P><STRONG><a name="[a6]"></a>WWDG_RST_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h757xx_cm7.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h757xx_cm7.o(RESET)
</UL>
<P><STRONG><a name="[2c8]"></a>__user_initial_stackheap</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, startup_stm32h757xx_cm7.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[2a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__user_setup_stackheap
</UL>

<P><STRONG><a name="[2ad]"></a>abort</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, abort.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48 + Unknown Stack Size
<LI>Call Chain = abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[2ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_SIGABRT
<LI><a href="#[2ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_sys_exit
<LI><a href="#[2a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_lib_shutdown
</UL>
<BR>[Called By]<UL><LI><a href="#[111]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::HAL::blitFill(touchgfx::colortype, unsigned short, unsigned short, unsigned short, unsigned short, unsigned char, unsigned short, touchgfx::Bitmap::BitmapFormat, bool)
<LI><a href="#[10c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::HAL::blitCopy(const unsigned short*, const unsigned char*, unsigned short, unsigned short, unsigned short, unsigned short, unsigned short, unsigned char, bool, unsigned short, touchgfx::Bitmap::BitmapFormat, touchgfx::Bitmap::BitmapFormat, bool)
<LI><a href="#[11b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::HAL::configurePartialFrameBuffer(unsigned short, unsigned short, unsigned short, unsigned short)
<LI><a href="#[110]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::HAL::blitCopyGlyph(const unsigned char*, unsigned short, unsigned short, unsigned short, unsigned short, unsigned short, touchgfx::colortype, unsigned char, touchgfx::BlitOperations, bool)
<LI><a href="#[3d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Application::TimerWidgets::add(touchgfx::Drawable*)
<LI><a href="#[1bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::DMA_Interface::execute()
<LI><a href="#[1e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextArea::getAlignment() const
<LI><a href="#[1f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Button::draw(const touchgfx::Rect&) const
<LI><a href="#[1e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextAreaWithWildcardBase::draw(const touchgfx::Rect&) const
<LI><a href="#[20c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Container::add(touchgfx::Drawable&)
<LI><a href="#[372]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::CanvasWidgetRenderer::setupBuffer(unsigned char*, unsigned)
<LI><a href="#[3f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextProvider::fillInputBuffer()
<LI><a href="#[3f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextProvider::getNextChar()
<LI><a href="#[418]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::CanvasWidgetRenderer::getOutlineBufferSize()
<LI><a href="#[416]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::CanvasWidgetRenderer::getOutlineBuffer()
<LI><a href="#[43d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Bitmap::setCache(unsigned short*, unsigned, unsigned)
<LI><a href="#[22b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LockFreeDMA_Queue::pushCopyOf(const touchgfx::BlitOp&)
<LI><a href="#[444]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Canvas::Canvas(const touchgfx::AbstractPainter*, const touchgfx::Rect&, const touchgfx::Rect&, unsigned char)
<LI><a href="#[443]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Canvas::render(unsigned char)
<LI><a href="#[275]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::DecompressorL8_L4::blitCopyRGB888(const unsigned char*, const unsigned char*, const touchgfx::Rect&, const touchgfx::Rect&, unsigned char)
<LI><a href="#[273]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::DecompressorL8_L4::blitCopyRGB565(const unsigned char*, const unsigned char*, const touchgfx::Rect&, const touchgfx::Rect&, unsigned char)
<LI><a href="#[27f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::fillBuffer(unsigned char*, unsigned short, const touchgfx::Rect&, touchgfx::colortype, unsigned char)
<LI><a href="#[46e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::blitCopyL8(const unsigned char*, const unsigned char*, const touchgfx::Rect&, const touchgfx::Rect&, unsigned char)
<LI><a href="#[3dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Vector&lang;touchgfx::Rect, (unsigned short)8&rang;::add(touchgfx::Rect)
<LI><a href="#[3d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Vector&lang;touchgfx::Rect, (unsigned short)8&rang;::quickRemoveAt(unsigned short)
<LI><a href="#[3d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Application::TimerWidgets::compact()
<LI><a href="#[436]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Bitmap::getHeight() const
<LI><a href="#[47f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Bitmap::getFormat() const
<LI><a href="#[435]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Bitmap::getWidth() const
<LI><a href="#[47d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Bitmap::getData() const
<LI><a href="#[480]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Bitmap::hasTransparentPixels() const
<LI><a href="#[481]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Bitmap::getSolidRect() const
<LI><a href="#[47e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Bitmap::getExtraData() const
<LI><a href="#[434]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD::realY(const touchgfx::Rect&, short, short, touchgfx::TextRotation)
<LI><a href="#[433]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD::realX(const touchgfx::Rect&, short, short, touchgfx::TextRotation)
<LI><a href="#[49e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::nextPixel(bool, touchgfx::TextRotation)
<LI><a href="#[49c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::nextLine(bool, touchgfx::TextRotation)
<LI><a href="#[484]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::getFramebufferStride()
<LI><a href="#[470]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::blitCopyL8_ARGB8888(const unsigned char*, const unsigned char*, const touchgfx::Rect&, const touchgfx::Rect&, unsigned char)
<LI><a href="#[27a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::DecompressorL8_LZW9::blitCopyARGB8888(const unsigned char*, const unsigned char*, const touchgfx::Rect&, const touchgfx::Rect&, unsigned char)
<LI><a href="#[27b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::DecompressorL8_LZW9::blitCopyRGB888(const unsigned char*, const unsigned char*, const touchgfx::Rect&, const touchgfx::Rect&, unsigned char)
<LI><a href="#[279]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::DecompressorL8_LZW9::blitCopyRGB565(const unsigned char*, const unsigned char*, const touchgfx::Rect&, const touchgfx::Rect&, unsigned char)
<LI><a href="#[277]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::DecompressorL8_RLE::blitCopyARGB8888(const unsigned char*, const unsigned char*, const touchgfx::Rect&, const touchgfx::Rect&, unsigned char)
<LI><a href="#[278]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::DecompressorL8_RLE::blitCopyRGB888(const unsigned char*, const unsigned char*, const touchgfx::Rect&, const touchgfx::Rect&, unsigned char)
<LI><a href="#[276]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::DecompressorL8_RLE::blitCopyRGB565(const unsigned char*, const unsigned char*, const touchgfx::Rect&, const touchgfx::Rect&, unsigned char)
<LI><a href="#[27c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::drawPartialBitmap(const touchgfx::Bitmap&, short, short, const touchgfx::Rect&, unsigned char, bool)
<LI><a href="#[471]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::blitCopyL8_RGB888(const unsigned char*, const unsigned char*, const touchgfx::Rect&, const touchgfx::Rect&, unsigned char)
<LI><a href="#[46f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::blitCopyL8_RGB565(const unsigned char*, const unsigned char*, const touchgfx::Rect&, const touchgfx::Rect&, unsigned char)
<LI><a href="#[274]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::DecompressorL8_L4::blitCopyARGB8888(const unsigned char*, const unsigned char*, const touchgfx::Rect&, const touchgfx::Rect&, unsigned char)
<LI><a href="#[42d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD::WideTextInternalStruct::scanStringLengthForLine()
<LI><a href="#[430]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD::drawStringInternal(unsigned short*, const touchgfx::Rect*, short, short, const touchgfx::Rect&, const touchgfx::LCD::StringVisuals*, unsigned char, touchgfx::TextProvider&, int, bool)
<LI><a href="#[4a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::HAL::getBitDepth(touchgfx::Bitmap::BitmapFormat) const
<LI><a href="#[4b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TypedText::getTextDirection() const
<LI><a href="#[446]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Outline::reset()
<LI><a href="#[408]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextProvider::circularBuffer&lang;(unsigned)10&rang;::dropFront(unsigned short)
<LI><a href="#[3ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextProvider::circularBuffer&lang;(unsigned)10&rang;::pushBack(unsigned short)
<LI><a href="#[3f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextProvider::circularBuffer&lang;(unsigned)10&rang;::peekChar(unsigned short)
<LI><a href="#[3fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextProvider::replaceInputCharacters(unsigned short, unsigned short, const unsigned short*)
<LI><a href="#[3f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextProvider::gsubRuleMatch(const unsigned short*, unsigned short, unsigned short, unsigned short)
<LI><a href="#[2b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_assert
<LI><a href="#[45d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Outline::setCurCellNew(int, int)
</UL>

<P><STRONG><a name="[2af]"></a>__aeabi_atexit</STRONG> (Thumb, 46 bytes, Stack size 24 bytes, aeabi_atexit.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = __aeabi_atexit &rArr; malloc &rArr; __Heap_Full &rArr; __Heap_ProvideMemory &rArr; free
</UL>
<BR>[Calls]<UL><LI><a href="#[2b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;malloc
<LI><a href="#[2b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_ddtor_pointer_addr
</UL>
<BR>[Called By]<UL><LI><a href="#[31b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx_init
<LI><a href="#[291]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__sti___25_TouchGFXConfiguration_cpp_f5abfd34
<LI><a href="#[32f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getFont_Nanum_Gothic_Bold_700_28_4bpp()
<LI><a href="#[32e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getFont_Nanum_Gothic_Bold_700_25_4bpp()
<LI><a href="#[32d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getFont_Nanum_Gothic_Bold_700_14_4bpp()
<LI><a href="#[32c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getFont_GommeSansW04Bold_30_4bpp()
<LI><a href="#[32b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getFont_GommeSansW04Bold_28_4bpp()
<LI><a href="#[32a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getFont_GommeSansW04Bold_25_4bpp()
<LI><a href="#[329]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getFont_GommeSansW04Bold_24_4bpp()
<LI><a href="#[328]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getFont_GommeSansW04Bold_20_4bpp()
<LI><a href="#[327]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getFont_GommeSansW04Bold_14_4bpp()
<LI><a href="#[321]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getFont_GILB_____TTF_24_4bpp()
<LI><a href="#[326]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getFont_chinese_msyh_28_4bpp()
<LI><a href="#[325]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getFont_chinese_msyh_25_4bpp()
<LI><a href="#[324]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getFont_chinese_msyh_14_4bpp()
<LI><a href="#[492]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::enableTextureMapperRGB565_NonOpaque_BilinearInterpolation()
<LI><a href="#[490]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::enableTextureMapperRGB565_Opaque_BilinearInterpolation()
<LI><a href="#[49a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::enableTextureMapperL8_ARGB8888_BilinearInterpolation()
<LI><a href="#[493]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::enableTextureMapperRGB565_NonOpaque_NearestNeighbor()
<LI><a href="#[498]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::enableTextureMapperL8_RGB888_BilinearInterpolation()
<LI><a href="#[496]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::enableTextureMapperL8_RGB565_BilinearInterpolation()
<LI><a href="#[494]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::enableTextureMapperARGB8888_BilinearInterpolation()
<LI><a href="#[491]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::enableTextureMapperRGB565_Opaque_NearestNeighbor()
<LI><a href="#[49b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::enableTextureMapperL8_ARGB8888_NearestNeighbor()
<LI><a href="#[499]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::enableTextureMapperL8_RGB888_NearestNeighbor()
<LI><a href="#[497]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::enableTextureMapperL8_RGB565_NearestNeighbor()
<LI><a href="#[495]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::enableTextureMapperARGB8888_NearestNeighbor()
<LI><a href="#[486]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::enableTextureMapperA4_BilinearInterpolation()
<LI><a href="#[487]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::enableTextureMapperA4_NearestNeighbor()
<LI><a href="#[48f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::enableDecompressorL8_LZW9()
<LI><a href="#[48e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::enableDecompressorL8_RLE()
<LI><a href="#[48d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::enableDecompressorL8_L4()
</UL>

<P><STRONG><a name="[2b2]"></a>__aeabi_assert</STRONG> (Thumb, 86 bytes, Stack size 16 bytes, assert.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 64 + Unknown Stack Size
<LI>Call Chain = __aeabi_assert &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[2b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__assert_puts
<LI><a href="#[2ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;abort
</UL>
<BR>[Called By]<UL><LI><a href="#[119]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::HAL::setFrameBufferStartAddresses(void*, void*, void*)
<LI><a href="#[3c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::OSWrappers::initialize()
<LI><a href="#[402]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextProvider::getNextLigature(unsigned char)
<LI><a href="#[4a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TypedText::getFont() const
<LI><a href="#[1bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;STM32DMA::setupDataFill(const touchgfx::BlitOp&)
<LI><a href="#[1be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;STM32DMA::setupDataCopy(const touchgfx::BlitOp&)
<LI><a href="#[37a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TypedText::getText() const
<LI><a href="#[36f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::PainterRGB565::PainterRGB565(touchgfx::colortype)
<LI><a href="#[3f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextProvider::circularBuffer&lang;(unsigned)10&rang;::peekChar()
<LI><a href="#[3b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;T2* touchgfx::makeTransition&lang;InformationDemoView, InformationDemoPresenter, touchgfx::NoTransition, Model&rang;(touchgfx::Screen**, touchgfx::Presenter**, touchgfx::MVPHeap&, touchgfx::Transition**, T4*)
<LI><a href="#[3b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;T2* touchgfx::makeTransition&lang;SelectingMenuView, SelectingMenuPresenter, touchgfx::NoTransition, Model&rang;(touchgfx::Screen**, touchgfx::Presenter**, touchgfx::MVPHeap&, touchgfx::Transition**, T4*)
<LI><a href="#[3b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;T2* touchgfx::makeTransition&lang;SplashScreenView, SplashScreenPresenter, touchgfx::NoTransition, Model&rang;(touchgfx::Screen**, touchgfx::Presenter**, touchgfx::MVPHeap&, touchgfx::Transition**, T4*)
<LI><a href="#[3b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;T2* touchgfx::makeTransition&lang;InformationView, InformationPresenter, touchgfx::NoTransition, Model&rang;(touchgfx::Screen**, touchgfx::Presenter**, touchgfx::MVPHeap&, touchgfx::Transition**, T4*)
<LI><a href="#[3b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;T2* touchgfx::makeTransition&lang;SettingsView, SettingsPresenter, touchgfx::NoTransition, Model&rang;(touchgfx::Screen**, touchgfx::Presenter**, touchgfx::MVPHeap&, touchgfx::Transition**, T4*)
<LI><a href="#[3b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;T2* touchgfx::makeTransition&lang;CookingView, CookingPresenter, touchgfx::NoTransition, Model&rang;(touchgfx::Screen**, touchgfx::Presenter**, touchgfx::MVPHeap&, touchgfx::Transition**, T4*)
</UL>

<P><STRONG><a name="[548]"></a>__assert</STRONG> (Thumb, 0 bytes, Stack size 16 bytes, assert.o(.text), UNUSED)

<P><STRONG><a name="[3fc]"></a>__aeabi_memcpy</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rt_memcpy_v6.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[4de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvCopyDataToQueue
<LI><a href="#[4dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvCopyDataFromQueue
<LI><a href="#[3ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextProvider::adjustArabicGlyph(const touchgfx::Font*, const touchgfx::GlyphNode*, unsigned short)
<LI><a href="#[3f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextProvider::adjustHindiGlyph(const touchgfx::GlyphNode*)
<LI><a href="#[3f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextProvider::adjustThaiGlyph(const touchgfx::Font*, const touchgfx::GlyphNode*)
</UL>

<P><STRONG><a name="[2b4]"></a>__rt_memcpy</STRONG> (Thumb, 138 bytes, Stack size 0 bytes, rt_memcpy_v6.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[2b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
</UL>

<P><STRONG><a name="[549]"></a>_memcpy_lastbytes</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rt_memcpy_v6.o(.text), UNUSED)

<P><STRONG><a name="[2b5]"></a>__aeabi_memcpy4</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, rt_memcpy_w.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = __aeabi_memcpy4
</UL>
<BR>[Called By]<UL><LI><a href="#[2e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_LTDC_ConfigLayer
<LI><a href="#[429]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD::drawStringLTR(const touchgfx::Rect&, const touchgfx::Rect&, const touchgfx::LCD::StringVisuals&, const unsigned short*, std::__va_list)
<LI><a href="#[20d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Container::getLastChildNear(short, short, touchgfx::Drawable**, short*, short*)
<LI><a href="#[22b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LockFreeDMA_Queue::pushCopyOf(const touchgfx::BlitOp&)
<LI><a href="#[2b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_memcpy
</UL>

<P><STRONG><a name="[54a]"></a>__aeabi_memcpy8</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, rt_memcpy_w.o(.text), UNUSED)

<P><STRONG><a name="[54b]"></a>__rt_memcpy_w</STRONG> (Thumb, 100 bytes, Stack size 8 bytes, rt_memcpy_w.o(.text), UNUSED)

<P><STRONG><a name="[54c]"></a>_memcpy_lastbytes_aligned</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rt_memcpy_w.o(.text), UNUSED)

<P><STRONG><a name="[2b6]"></a>__aeabi_memset</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, aeabi_memset.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[2b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_memset
</UL>
<BR>[Called By]<UL><LI><a href="#[4e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvInitialiseNewTask
</UL>

<P><STRONG><a name="[2d8]"></a>__aeabi_memclr4</STRONG> (Thumb, 0 bytes, Stack size 4 bytes, rt_memclr_w.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = __aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[2ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_LTDC_MspInit
<LI><a href="#[2d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_FMC_MspInit
<LI><a href="#[318]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_LTDC_Init
<LI><a href="#[316]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_GPIO_Init
<LI><a href="#[312]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_FMC_Init
<LI><a href="#[31f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemClock_Config
<LI><a href="#[349]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CookingViewBase::CookingViewBase()
<LI><a href="#[383]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InformationViewBase::InformationViewBase()
<LI><a href="#[3af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InformationDemoViewBase::InformationDemoViewBase()
<LI><a href="#[409]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextProvider::TextProvider()
<LI><a href="#[394]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SplashScreenViewBase::SplashScreenViewBase()
<LI><a href="#[371]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextArea::TextArea()
<LI><a href="#[36a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Image::Image(const touchgfx::Bitmap&)
<LI><a href="#[3b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Application::Application()
<LI><a href="#[389]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::BoxWithBorderButtonStyle&lang;touchgfx::ClickButtonTrigger&rang;::BoxWithBorderButtonStyle()
<LI><a href="#[386]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Box::Box()
<LI><a href="#[38b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Button::Button()
<LI><a href="#[3ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::CanvasWidget::CanvasWidget__sub_object()
<LI><a href="#[46a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Unicode::vsnprintf(unsigned short*, unsigned short, const unsigned short*, const char*, std::__va_list)
</UL>

<P><STRONG><a name="[54d]"></a>__aeabi_memclr8</STRONG> (Thumb, 0 bytes, Stack size 4 bytes, rt_memclr_w.o(.text), UNUSED)

<P><STRONG><a name="[54e]"></a>__rt_memclr_w</STRONG> (Thumb, 78 bytes, Stack size 4 bytes, rt_memclr_w.o(.text), UNUSED)

<P><STRONG><a name="[2c1]"></a>_memset_w</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rt_memclr_w.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[2c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_memclr
</UL>

<P><STRONG><a name="[54f]"></a>__use_two_region_memory</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, heapauxi.o(.text), UNUSED)

<P><STRONG><a name="[8]"></a>__rt_heap_escrow</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, heapauxi.o(.text), UNUSED)

<P><STRONG><a name="[7]"></a>__rt_heap_expand</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, heapauxi.o(.text), UNUSED)

<P><STRONG><a name="[296]"></a>__cpp_initialize__aeabi_</STRONG> (Thumb, 26 bytes, Stack size 16 bytes, init_aeabi.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = __cpp_initialize__aeabi_
</UL>
<BR>[Called By]<UL><LI><a href="#[29e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_lib_init_cpp_2
</UL>

<P><STRONG><a name="[2ab]"></a>_sys_exit</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, sys_exit.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[2ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;abort
<LI><a href="#[2aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_exit_exit
<LI><a href="#[2bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__sig_exit
</UL>

<P><STRONG><a name="[2b1]"></a>__rt_ddtor_pointer_addr</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, rt_ddtor_pointer_addr_intlibspace.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[2a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxa_finalize
<LI><a href="#[2af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_atexit
</UL>

<P><STRONG><a name="[2b0]"></a>malloc</STRONG> (Thumb, 94 bytes, Stack size 16 bytes, h1_alloc.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = malloc &rArr; __Heap_Full &rArr; __Heap_ProvideMemory &rArr; free
</UL>
<BR>[Calls]<UL><LI><a href="#[2b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_heap_descriptor
<LI><a href="#[2b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__Heap_Full
</UL>
<BR>[Called By]<UL><LI><a href="#[2af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_atexit
</UL>

<P><STRONG><a name="[2ba]"></a>free</STRONG> (Thumb, 78 bytes, Stack size 16 bytes, h1_free.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = free
</UL>
<BR>[Calls]<UL><LI><a href="#[2b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_heap_descriptor
</UL>
<BR>[Called By]<UL><LI><a href="#[2a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxa_finalize
<LI><a href="#[2c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__Heap_ProvideMemory
</UL>

<P><STRONG><a name="[2a0]"></a>__cxa_finalize</STRONG> (Thumb, 66 bytes, Stack size 24 bytes, cxa_finalize.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = __cxa_finalize &rArr; free
</UL>
<BR>[Calls]<UL><LI><a href="#[2ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;free
<LI><a href="#[2b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_ddtor_pointer_addr
</UL>
<BR>[Called By]<UL><LI><a href="#[29f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_lib_shutdown_cpp_2
</UL>

<P><STRONG><a name="[2ae]"></a>__rt_SIGABRT</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, defsig_abrt_outer.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[2bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_SIGABRT_inner
<LI><a href="#[2bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__sig_exit
</UL>
<BR>[Called By]<UL><LI><a href="#[2ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;abort
</UL>

<P><STRONG><a name="[2bd]"></a>__rt_SIGPVFN</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, defsig_pvfn_outer.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = __rt_SIGPVFN &rArr; __rt_SIGPVFN_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[2be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_SIGPVFN_inner
<LI><a href="#[2bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__sig_exit
</UL>
<BR>[Called By]<UL><LI><a href="#[1df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxa_pure_virtual
</UL>

<P><STRONG><a name="[2b3]"></a>__assert_puts</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, assert_puts.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = __assert_puts &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[2bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ttywrch
</UL>
<BR>[Called By]<UL><LI><a href="#[2b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_assert
</UL>

<P><STRONG><a name="[550]"></a>__aeabi_memclr</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rt_memclr.o(.text), UNUSED)

<P><STRONG><a name="[2c0]"></a>__rt_memclr</STRONG> (Thumb, 68 bytes, Stack size 0 bytes, rt_memclr.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[2c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_memset_w
</UL>

<P><STRONG><a name="[2b7]"></a>_memset</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rt_memclr.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[2b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memset
</UL>

<P><STRONG><a name="[2bf]"></a>_ttywrch</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, sys_wrch.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = _ttywrch
</UL>
<BR>[Called By]<UL><LI><a href="#[2b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__assert_puts
<LI><a href="#[2c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__default_signal_display
</UL>

<P><STRONG><a name="[551]"></a>__user_libspace</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, libspace.o(.text), UNUSED)

<P><STRONG><a name="[2c7]"></a>__user_perproc_libspace</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, libspace.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[2a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__user_setup_stackheap
</UL>

<P><STRONG><a name="[552]"></a>__user_perthread_libspace</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, libspace.o(.text), UNUSED)

<P><STRONG><a name="[553]"></a>__I$use$semihosting</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, use_no_semi.o(.text), UNUSED)

<P><STRONG><a name="[554]"></a>__use_no_semihosting_swi</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, use_no_semi.o(.text), UNUSED)

<P><STRONG><a name="[555]"></a>__semihosting_library_function</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, indicate_semi.o(.text), UNUSED)

<P><STRONG><a name="[2b8]"></a>__rt_heap_descriptor</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, rt_heap_descriptor_intlibspace.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[2ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;free
<LI><a href="#[2b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;malloc
<LI><a href="#[29d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_init_alloc
</UL>

<P><STRONG><a name="[556]"></a>__use_no_heap</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, hguard.o(.text), UNUSED)

<P><STRONG><a name="[557]"></a>__heap$guard</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, hguard.o(.text), UNUSED)

<P><STRONG><a name="[a]"></a>_terminate_user_alloc</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, init_alloc.o(.text), UNUSED)

<P><STRONG><a name="[4]"></a>_init_user_alloc</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, init_alloc.o(.text), UNUSED)

<P><STRONG><a name="[2b9]"></a>__Heap_Full</STRONG> (Thumb, 34 bytes, Stack size 16 bytes, init_alloc.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = __Heap_Full &rArr; __Heap_ProvideMemory &rArr; free
</UL>
<BR>[Calls]<UL><LI><a href="#[2c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__Heap_ProvideMemory
</UL>
<BR>[Called By]<UL><LI><a href="#[2b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;malloc
</UL>

<P><STRONG><a name="[2c3]"></a>__Heap_Broken</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, init_alloc.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[2c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_SIGRTMEM
</UL>

<P><STRONG><a name="[29d]"></a>_init_alloc</STRONG> (Thumb, 94 bytes, Stack size 24 bytes, init_alloc.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = _init_alloc &rArr; __rt_SIGRTMEM &rArr; __rt_SIGRTMEM_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[2b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_heap_descriptor
<LI><a href="#[2c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_SIGRTMEM
<LI><a href="#[2c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__Heap_ProvideMemory
<LI><a href="#[2c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__Heap_Initialize
</UL>
<BR>[Called By]<UL><LI><a href="#[29c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_lib_init_heap_2
</UL>

<P><STRONG><a name="[2c5]"></a>__Heap_Initialize</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, h1_init.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[29d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_init_alloc
</UL>

<P><STRONG><a name="[9]"></a>__Heap_DescSize</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, h1_init.o(.text), UNUSED)

<P><STRONG><a name="[2bc]"></a>__sig_exit</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, defsig_exit.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[2ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_sys_exit
</UL>
<BR>[Called By]<UL><LI><a href="#[2bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_SIGPVFN
<LI><a href="#[2ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_SIGABRT
<LI><a href="#[2c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_SIGRTMEM
</UL>

<P><STRONG><a name="[2bb]"></a>__rt_SIGABRT_inner</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, defsig_abrt_inner.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[2c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__default_signal_display
</UL>
<BR>[Called By]<UL><LI><a href="#[2ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_SIGABRT
</UL>

<P><STRONG><a name="[2be]"></a>__rt_SIGPVFN_inner</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, defsig_pvfn_inner.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = __rt_SIGPVFN_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[2c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__default_signal_display
</UL>
<BR>[Called By]<UL><LI><a href="#[2bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_SIGPVFN
</UL>

<P><STRONG><a name="[2a2]"></a>__user_setup_stackheap</STRONG> (Thumb, 74 bytes, Stack size 8 bytes, sys_stackheap_outer.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8 + Unknown Stack Size
<LI>Call Chain = __user_setup_stackheap
</UL>
<BR>[Calls]<UL><LI><a href="#[2c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__user_initial_stackheap
<LI><a href="#[2c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__user_perproc_libspace
</UL>
<BR>[Called By]<UL><LI><a href="#[2a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry_sh
</UL>

<P><STRONG><a name="[2c2]"></a>__Heap_ProvideMemory</STRONG> (Thumb, 52 bytes, Stack size 0 bytes, h1_extend.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = __Heap_ProvideMemory &rArr; free
</UL>
<BR>[Calls]<UL><LI><a href="#[2ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;free
</UL>
<BR>[Called By]<UL><LI><a href="#[29d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_init_alloc
<LI><a href="#[2b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__Heap_Full
</UL>

<P><STRONG><a name="[2a7]"></a>exit</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, exit.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8 + Unknown Stack Size
<LI>Call Chain = exit
</UL>
<BR>[Calls]<UL><LI><a href="#[2c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_exit
</UL>
<BR>[Called By]<UL><LI><a href="#[2a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry_main
</UL>

<P><STRONG><a name="[2c6]"></a>__default_signal_display</STRONG> (Thumb, 50 bytes, Stack size 16 bytes, defsig_general.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[2bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ttywrch
</UL>
<BR>[Called By]<UL><LI><a href="#[2ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_SIGRTMEM_inner
<LI><a href="#[2be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_SIGPVFN_inner
<LI><a href="#[2bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_SIGABRT_inner
</UL>

<P><STRONG><a name="[2c4]"></a>__rt_SIGRTMEM</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, defsig_rtmem_outer.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = __rt_SIGRTMEM &rArr; __rt_SIGRTMEM_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[2ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_SIGRTMEM_inner
<LI><a href="#[2bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__sig_exit
</UL>
<BR>[Called By]<UL><LI><a href="#[29d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_init_alloc
<LI><a href="#[2c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__Heap_Broken
</UL>

<P><STRONG><a name="[2ca]"></a>__rt_SIGRTMEM_inner</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, defsig_rtmem_inner.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = __rt_SIGRTMEM_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[2c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__default_signal_display
</UL>
<BR>[Called By]<UL><LI><a href="#[2c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_SIGRTMEM
</UL>

<P><STRONG><a name="[14]"></a>BusFault_Handler</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, stm32h7xx_it_1.o(i.BusFault_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h757xx_cm7.o(RESET)
</UL>
<P><STRONG><a name="[3e7]"></a>CRC_Lock</STRONG> (Thumb, 134 bytes, Stack size 12 bytes, stm32_crc_lock.o(i.CRC_Lock))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = CRC_Lock
</UL>
<BR>[Called By]<UL><LI><a href="#[3b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Application::Application()
</UL>

<P><STRONG><a name="[71]"></a>DMA2D_IRQHandler</STRONG> (Thumb, 10 bytes, Stack size 8 bytes, stm32h7xx_it_1.o(i.DMA2D_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = DMA2D_IRQHandler &rArr; HAL_DMA2D_IRQHandler
</UL>
<BR>[Calls]<UL><LI><a href="#[2cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_DMA2D_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h757xx_cm7.o(RESET)
</UL>
<P><STRONG><a name="[17]"></a>DebugMon_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32h7xx_it_1.o(i.DebugMon_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h757xx_cm7.o(RESET)
</UL>
<P><STRONG><a name="[2da]"></a>Error_Handler</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, main_1.o(i.Error_Handler))
<BR><BR>[Called By]<UL><LI><a href="#[2ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_LTDC_MspInit
<LI><a href="#[2d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_FMC_MspInit
<LI><a href="#[318]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_LTDC_Init
<LI><a href="#[312]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_FMC_Init
<LI><a href="#[310]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_DMA2D_Init
<LI><a href="#[30f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_CRC_Init
<LI><a href="#[31f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemClock_Config
</UL>

<P><STRONG><a name="[2fd]"></a>FMC_SDRAM_Init</STRONG> (Thumb, 108 bytes, Stack size 0 bytes, stm32h7xx_ll_fmc.o(i.FMC_SDRAM_Init))
<BR><BR>[Called By]<UL><LI><a href="#[2fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SDRAM_Init
</UL>

<P><STRONG><a name="[300]"></a>FMC_SDRAM_ProgramRefreshRate</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, stm32h7xx_ll_fmc.o(i.FMC_SDRAM_ProgramRefreshRate))
<BR><BR>[Called By]<UL><LI><a href="#[2ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SDRAM_ProgramRefreshRate
</UL>

<P><STRONG><a name="[302]"></a>FMC_SDRAM_SendCommand</STRONG> (Thumb, 38 bytes, Stack size 8 bytes, stm32h7xx_ll_fmc.o(i.FMC_SDRAM_SendCommand))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = FMC_SDRAM_SendCommand
</UL>
<BR>[Called By]<UL><LI><a href="#[301]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SDRAM_SendCommand
</UL>

<P><STRONG><a name="[2fe]"></a>FMC_SDRAM_Timing_Init</STRONG> (Thumb, 144 bytes, Stack size 12 bytes, stm32h7xx_ll_fmc.o(i.FMC_SDRAM_Timing_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = FMC_SDRAM_Timing_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[2fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SDRAM_Init
</UL>

<P><STRONG><a name="[2ce]"></a>HAL_CRCEx_Polynomial_Set</STRONG> (Thumb, 112 bytes, Stack size 16 bytes, stm32h7xx_hal_crc_ex.o(i.HAL_CRCEx_Polynomial_Set))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = HAL_CRCEx_Polynomial_Set
</UL>
<BR>[Called By]<UL><LI><a href="#[2cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_CRC_Init
</UL>

<P><STRONG><a name="[2cc]"></a>HAL_CRC_Init</STRONG> (Thumb, 128 bytes, Stack size 8 bytes, stm32h7xx_hal_crc.o(i.HAL_CRC_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = HAL_CRC_Init &rArr; HAL_CRCEx_Polynomial_Set
</UL>
<BR>[Calls]<UL><LI><a href="#[2cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_CRC_MspInit
<LI><a href="#[2ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_CRCEx_Polynomial_Set
</UL>
<BR>[Called By]<UL><LI><a href="#[30f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_CRC_Init
</UL>

<P><STRONG><a name="[2cd]"></a>HAL_CRC_MspInit</STRONG> (Thumb, 40 bytes, Stack size 8 bytes, crc.o(i.HAL_CRC_MspInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = HAL_CRC_MspInit
</UL>
<BR>[Called By]<UL><LI><a href="#[2cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_CRC_Init
</UL>

<P><STRONG><a name="[2d0]"></a>HAL_DMA2D_CLUTLoadingCpltCallback</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32h7xx_hal_dma2d.o(i.HAL_DMA2D_CLUTLoadingCpltCallback))
<BR><BR>[Called By]<UL><LI><a href="#[2cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_DMA2D_IRQHandler
</UL>

<P><STRONG><a name="[311]"></a>HAL_DMA2D_ConfigLayer</STRONG> (Thumb, 254 bytes, Stack size 16 bytes, stm32h7xx_hal_dma2d.o(i.HAL_DMA2D_ConfigLayer))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = HAL_DMA2D_ConfigLayer
</UL>
<BR>[Called By]<UL><LI><a href="#[310]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_DMA2D_Init
</UL>

<P><STRONG><a name="[2cb]"></a>HAL_DMA2D_IRQHandler</STRONG> (Thumb, 358 bytes, Stack size 16 bytes, stm32h7xx_hal_dma2d.o(i.HAL_DMA2D_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = HAL_DMA2D_IRQHandler
</UL>
<BR>[Calls]<UL><LI><a href="#[2cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_DMA2D_LineEventCallback
<LI><a href="#[2d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_DMA2D_CLUTLoadingCpltCallback
</UL>
<BR>[Called By]<UL><LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA2D_IRQHandler
</UL>

<P><STRONG><a name="[2d1]"></a>HAL_DMA2D_Init</STRONG> (Thumb, 130 bytes, Stack size 8 bytes, stm32h7xx_hal_dma2d.o(i.HAL_DMA2D_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = HAL_DMA2D_Init &rArr; HAL_DMA2D_MspInit &rArr; HAL_NVIC_SetPriority &rArr; __NVIC_SetPriority
</UL>
<BR>[Calls]<UL><LI><a href="#[2d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_DMA2D_MspInit
</UL>
<BR>[Called By]<UL><LI><a href="#[310]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_DMA2D_Init
</UL>

<P><STRONG><a name="[2cf]"></a>HAL_DMA2D_LineEventCallback</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32h7xx_hal_dma2d.o(i.HAL_DMA2D_LineEventCallback))
<BR><BR>[Called By]<UL><LI><a href="#[2cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_DMA2D_IRQHandler
</UL>

<P><STRONG><a name="[2d2]"></a>HAL_DMA2D_MspInit</STRONG> (Thumb, 58 bytes, Stack size 16 bytes, dma2d.o(i.HAL_DMA2D_MspInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = HAL_DMA2D_MspInit &rArr; HAL_NVIC_SetPriority &rArr; __NVIC_SetPriority
</UL>
<BR>[Calls]<UL><LI><a href="#[2d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_NVIC_SetPriority
<LI><a href="#[2d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_NVIC_EnableIRQ
</UL>
<BR>[Called By]<UL><LI><a href="#[2d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_DMA2D_Init
</UL>

<P><STRONG><a name="[2d5]"></a>HAL_Delay</STRONG> (Thumb, 36 bytes, Stack size 16 bytes, stm32h7xx_hal.o(i.HAL_Delay))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = HAL_Delay
</UL>
<BR>[Calls]<UL><LI><a href="#[2d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GetTick
</UL>
<BR>[Called By]<UL><LI><a href="#[313]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDRAM_Initialization_Sequence
</UL>

<P><STRONG><a name="[2db]"></a>HAL_GPIO_Init</STRONG> (Thumb, 456 bytes, Stack size 24 bytes, stm32h7xx_hal_gpio.o(i.HAL_GPIO_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = HAL_GPIO_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[2ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_LTDC_MspInit
<LI><a href="#[2d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_FMC_MspInit
<LI><a href="#[316]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_GPIO_Init
</UL>

<P><STRONG><a name="[317]"></a>HAL_GPIO_WritePin</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, stm32h7xx_hal_gpio.o(i.HAL_GPIO_WritePin))
<BR><BR>[Called By]<UL><LI><a href="#[316]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_GPIO_Init
<LI><a href="#[2a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[2fa]"></a>HAL_GetREVID</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, stm32h7xx_hal.o(i.HAL_GetREVID))
<BR><BR>[Called By]<UL><LI><a href="#[2f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCC_OscConfig
</UL>

<P><STRONG><a name="[2d6]"></a>HAL_GetTick</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, stm32h7xx_hal.o(i.HAL_GetTick))
<BR><BR>[Called By]<UL><LI><a href="#[2d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_Delay
<LI><a href="#[2f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCC_OscConfig
<LI><a href="#[2f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCC_ClockConfig
<LI><a href="#[2d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCCEx_PeriphCLKConfig
<LI><a href="#[2f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_PWREx_ConfigSupply
<LI><a href="#[2f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCCEx_PLL3_Config
<LI><a href="#[2f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCCEx_PLL2_Config
</UL>

<P><STRONG><a name="[30e]"></a>HAL_IncTick</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, stm32h7xx_hal.o(i.HAL_IncTick))
<BR><BR>[Called By]<UL><LI><a href="#[309]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_PeriodElapsedCallback
</UL>

<P><STRONG><a name="[2dc]"></a>HAL_Init</STRONG> (Thumb, 80 bytes, Stack size 8 bytes, stm32h7xx_hal.o(i.HAL_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = HAL_Init &rArr; HAL_InitTick &rArr; HAL_NVIC_SetPriority &rArr; __NVIC_SetPriority
</UL>
<BR>[Calls]<UL><LI><a href="#[2de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCC_GetSysClockFreq
<LI><a href="#[2dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_NVIC_SetPriorityGrouping
<LI><a href="#[2df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_InitTick
<LI><a href="#[2e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_MspInit
</UL>
<BR>[Called By]<UL><LI><a href="#[2a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[2df]"></a>HAL_InitTick</STRONG> (Thumb, 128 bytes, Stack size 56 bytes, stm32h7xx_hal_timebase_tim.o(i.HAL_InitTick))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = HAL_InitTick &rArr; HAL_NVIC_SetPriority &rArr; __NVIC_SetPriority
</UL>
<BR>[Calls]<UL><LI><a href="#[2d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_NVIC_SetPriority
<LI><a href="#[2d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_NVIC_EnableIRQ
<LI><a href="#[2e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_Base_Start_IT
<LI><a href="#[2e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_Base_Init
<LI><a href="#[2e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCC_GetPCLK2Freq
<LI><a href="#[2e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCC_GetClockConfig
</UL>
<BR>[Called By]<UL><LI><a href="#[2f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCC_ClockConfig
<LI><a href="#[2dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_Init
</UL>

<P><STRONG><a name="[2e5]"></a>HAL_LTDC_ConfigLayer</STRONG> (Thumb, 94 bytes, Stack size 16 bytes, stm32h7xx_hal_ltdc.o(i.HAL_LTDC_ConfigLayer))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = HAL_LTDC_ConfigLayer &rArr; LTDC_SetConfig
</UL>
<BR>[Calls]<UL><LI><a href="#[2e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LTDC_SetConfig
<LI><a href="#[2b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
</UL>
<BR>[Called By]<UL><LI><a href="#[318]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_LTDC_Init
</UL>

<P><STRONG><a name="[2e8]"></a>HAL_LTDC_ErrorCallback</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32h7xx_hal_ltdc.o(i.HAL_LTDC_ErrorCallback))
<BR><BR>[Called By]<UL><LI><a href="#[2e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_LTDC_IRQHandler
</UL>

<P><STRONG><a name="[2e7]"></a>HAL_LTDC_IRQHandler</STRONG> (Thumb, 244 bytes, Stack size 16 bytes, stm32h7xx_hal_ltdc.o(i.HAL_LTDC_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 176<LI>Call Chain = HAL_LTDC_IRQHandler &rArr; HAL_LTDC_LineEventCallback &rArr; touchgfx::OSWrappers::signalVSync() &rArr; osMessageQueuePut &rArr; xQueueGenericSend &rArr; vTaskPlaceOnEventList &rArr; prvAddCurrentTaskToDelayedList &rArr; vListInsert
</UL>
<BR>[Calls]<UL><LI><a href="#[2ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_LTDC_ReloadEventCallback
<LI><a href="#[2e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_LTDC_ErrorCallback
<LI><a href="#[2e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_LTDC_LineEventCallback
</UL>
<BR>[Called By]<UL><LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LTDC_IRQHandler
</UL>

<P><STRONG><a name="[2eb]"></a>HAL_LTDC_Init</STRONG> (Thumb, 274 bytes, Stack size 16 bytes, stm32h7xx_hal_ltdc.o(i.HAL_LTDC_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 304<LI>Call Chain = HAL_LTDC_Init &rArr; HAL_LTDC_MspInit &rArr; HAL_NVIC_SetPriority &rArr; __NVIC_SetPriority
</UL>
<BR>[Calls]<UL><LI><a href="#[2ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_LTDC_MspInit
</UL>
<BR>[Called By]<UL><LI><a href="#[318]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_LTDC_Init
</UL>

<P><STRONG><a name="[2e9]"></a>HAL_LTDC_LineEventCallback</STRONG> (Thumb, 118 bytes, Stack size 16 bytes, touchgfxgeneratedhal.o(i.HAL_LTDC_LineEventCallback))
<BR><BR>[Stack]<UL><LI>Max Depth = 160<LI>Call Chain = HAL_LTDC_LineEventCallback &rArr; touchgfx::OSWrappers::signalVSync() &rArr; osMessageQueuePut &rArr; xQueueGenericSend &rArr; vTaskPlaceOnEventList &rArr; prvAddCurrentTaskToDelayedList &rArr; vListInsert
</UL>
<BR>[Calls]<UL><LI><a href="#[2ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_LTDC_ProgramLineEvent
<LI><a href="#[2f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::GPIO::clear(touchgfx::GPIO::GPIO_ID)
<LI><a href="#[2f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::GPIO::set(touchgfx::GPIO::GPIO_ID)
<LI><a href="#[2ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::HAL::swapFrameBuffers()
<LI><a href="#[2ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::OSWrappers::signalVSync()
</UL>
<BR>[Called By]<UL><LI><a href="#[2e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_LTDC_IRQHandler
</UL>

<P><STRONG><a name="[2ec]"></a>HAL_LTDC_MspInit</STRONG> (Thumb, 608 bytes, Stack size 240 bytes, ltdc.o(i.HAL_LTDC_MspInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 288<LI>Call Chain = HAL_LTDC_MspInit &rArr; HAL_NVIC_SetPriority &rArr; __NVIC_SetPriority
</UL>
<BR>[Calls]<UL><LI><a href="#[2d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_NVIC_SetPriority
<LI><a href="#[2d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_NVIC_EnableIRQ
<LI><a href="#[2db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_Init
<LI><a href="#[2d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCCEx_PeriphCLKConfig
<LI><a href="#[2da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Error_Handler
<LI><a href="#[2d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[2eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_LTDC_Init
</UL>

<P><STRONG><a name="[2ed]"></a>HAL_LTDC_ProgramLineEvent</STRONG> (Thumb, 78 bytes, Stack size 0 bytes, stm32h7xx_hal_ltdc.o(i.HAL_LTDC_ProgramLineEvent))
<BR><BR>[Called By]<UL><LI><a href="#[2e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_LTDC_LineEventCallback
</UL>

<P><STRONG><a name="[2ea]"></a>HAL_LTDC_ReloadEventCallback</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32h7xx_hal_ltdc.o(i.HAL_LTDC_ReloadEventCallback))
<BR><BR>[Called By]<UL><LI><a href="#[2e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_LTDC_IRQHandler
</UL>

<P><STRONG><a name="[2e0]"></a>HAL_MspInit</STRONG> (Thumb, 42 bytes, Stack size 8 bytes, stm32h7xx_hal_msp_1.o(i.HAL_MspInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = HAL_MspInit &rArr; HAL_NVIC_SetPriority &rArr; __NVIC_SetPriority
</UL>
<BR>[Calls]<UL><LI><a href="#[2d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_NVIC_SetPriority
</UL>
<BR>[Called By]<UL><LI><a href="#[2dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_Init
</UL>

<P><STRONG><a name="[2d4]"></a>HAL_NVIC_EnableIRQ</STRONG> (Thumb, 40 bytes, Stack size 0 bytes, stm32h7xx_hal_cortex.o(i.HAL_NVIC_EnableIRQ))
<BR><BR>[Called By]<UL><LI><a href="#[2ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_LTDC_MspInit
<LI><a href="#[2d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_DMA2D_MspInit
<LI><a href="#[2df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_InitTick
</UL>

<P><STRONG><a name="[2d3]"></a>HAL_NVIC_SetPriority</STRONG> (Thumb, 122 bytes, Stack size 40 bytes, stm32h7xx_hal_cortex.o(i.HAL_NVIC_SetPriority))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = HAL_NVIC_SetPriority &rArr; __NVIC_SetPriority
</UL>
<BR>[Calls]<UL><LI><a href="#[2f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__NVIC_SetPriority
<LI><a href="#[2f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__NVIC_GetPriorityGrouping
</UL>
<BR>[Called By]<UL><LI><a href="#[2ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_LTDC_MspInit
<LI><a href="#[2d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_DMA2D_MspInit
<LI><a href="#[2df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_InitTick
<LI><a href="#[2e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_MspInit
</UL>

<P><STRONG><a name="[2dd]"></a>HAL_NVIC_SetPriorityGrouping</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, stm32h7xx_hal_cortex.o(i.HAL_NVIC_SetPriorityGrouping))
<BR><BR>[Called By]<UL><LI><a href="#[2dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_Init
</UL>

<P><STRONG><a name="[2f4]"></a>HAL_PWREx_ConfigSupply</STRONG> (Thumb, 144 bytes, Stack size 16 bytes, stm32h7xx_hal_pwr_ex.o(i.HAL_PWREx_ConfigSupply))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = HAL_PWREx_ConfigSupply
</UL>
<BR>[Calls]<UL><LI><a href="#[2d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GetTick
</UL>
<BR>[Called By]<UL><LI><a href="#[31f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemClock_Config
</UL>

<P><STRONG><a name="[2d9]"></a>HAL_RCCEx_PeriphCLKConfig</STRONG> (Thumb, 3510 bytes, Stack size 24 bytes, stm32h7xx_hal_rcc_ex.o(i.HAL_RCCEx_PeriphCLKConfig))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = HAL_RCCEx_PeriphCLKConfig &rArr; RCCEx_PLL3_Config
</UL>
<BR>[Calls]<UL><LI><a href="#[2f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCCEx_PLL3_Config
<LI><a href="#[2f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCCEx_PLL2_Config
<LI><a href="#[2d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GetTick
</UL>
<BR>[Called By]<UL><LI><a href="#[2ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_LTDC_MspInit
<LI><a href="#[2d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_FMC_MspInit
</UL>

<P><STRONG><a name="[2f7]"></a>HAL_RCC_ClockConfig</STRONG> (Thumb, 774 bytes, Stack size 24 bytes, stm32h7xx_hal_rcc.o(i.HAL_RCC_ClockConfig))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = HAL_RCC_ClockConfig &rArr; HAL_InitTick &rArr; HAL_NVIC_SetPriority &rArr; __NVIC_SetPriority
</UL>
<BR>[Calls]<UL><LI><a href="#[2d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GetTick
<LI><a href="#[2de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCC_GetSysClockFreq
<LI><a href="#[2df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_InitTick
</UL>
<BR>[Called By]<UL><LI><a href="#[31f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemClock_Config
</UL>

<P><STRONG><a name="[2e1]"></a>HAL_RCC_GetClockConfig</STRONG> (Thumb, 98 bytes, Stack size 0 bytes, stm32h7xx_hal_rcc.o(i.HAL_RCC_GetClockConfig))
<BR><BR>[Called By]<UL><LI><a href="#[2df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_InitTick
</UL>

<P><STRONG><a name="[2f8]"></a>HAL_RCC_GetHCLKFreq</STRONG> (Thumb, 60 bytes, Stack size 8 bytes, stm32h7xx_hal_rcc.o(i.HAL_RCC_GetHCLKFreq))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = HAL_RCC_GetHCLKFreq &rArr; HAL_RCC_GetSysClockFreq
</UL>
<BR>[Calls]<UL><LI><a href="#[2de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCC_GetSysClockFreq
</UL>
<BR>[Called By]<UL><LI><a href="#[2e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCC_GetPCLK2Freq
</UL>

<P><STRONG><a name="[2e2]"></a>HAL_RCC_GetPCLK2Freq</STRONG> (Thumb, 26 bytes, Stack size 4 bytes, stm32h7xx_hal_rcc.o(i.HAL_RCC_GetPCLK2Freq))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = HAL_RCC_GetPCLK2Freq &rArr; HAL_RCC_GetHCLKFreq &rArr; HAL_RCC_GetSysClockFreq
</UL>
<BR>[Calls]<UL><LI><a href="#[2f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCC_GetHCLKFreq
</UL>
<BR>[Called By]<UL><LI><a href="#[2df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_InitTick
</UL>

<P><STRONG><a name="[2de]"></a>HAL_RCC_GetSysClockFreq</STRONG> (Thumb, 524 bytes, Stack size 20 bytes, stm32h7xx_hal_rcc.o(i.HAL_RCC_GetSysClockFreq))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = HAL_RCC_GetSysClockFreq
</UL>
<BR>[Called By]<UL><LI><a href="#[2f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCC_ClockConfig
<LI><a href="#[2dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_Init
<LI><a href="#[2f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCC_GetHCLKFreq
</UL>

<P><STRONG><a name="[2f9]"></a>HAL_RCC_OscConfig</STRONG> (Thumb, 2130 bytes, Stack size 32 bytes, stm32h7xx_hal_rcc.o(i.HAL_RCC_OscConfig))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = HAL_RCC_OscConfig
</UL>
<BR>[Calls]<UL><LI><a href="#[2d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GetTick
<LI><a href="#[2fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GetREVID
</UL>
<BR>[Called By]<UL><LI><a href="#[31f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemClock_Config
</UL>

<P><STRONG><a name="[2fb]"></a>HAL_SDRAM_Init</STRONG> (Thumb, 76 bytes, Stack size 16 bytes, stm32h7xx_hal_sdram.o(i.HAL_SDRAM_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 304<LI>Call Chain = HAL_SDRAM_Init &rArr; HAL_SDRAM_MspInit &rArr; HAL_FMC_MspInit &rArr; HAL_RCCEx_PeriphCLKConfig &rArr; RCCEx_PLL3_Config
</UL>
<BR>[Calls]<UL><LI><a href="#[2fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SDRAM_MspInit
<LI><a href="#[2fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FMC_SDRAM_Timing_Init
<LI><a href="#[2fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FMC_SDRAM_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[312]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_FMC_Init
</UL>

<P><STRONG><a name="[2fc]"></a>HAL_SDRAM_MspInit</STRONG> (Thumb, 10 bytes, Stack size 8 bytes, fmc.o(i.HAL_SDRAM_MspInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 288<LI>Call Chain = HAL_SDRAM_MspInit &rArr; HAL_FMC_MspInit &rArr; HAL_RCCEx_PeriphCLKConfig &rArr; RCCEx_PLL3_Config
</UL>
<BR>[Calls]<UL><LI><a href="#[2d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_FMC_MspInit
</UL>
<BR>[Called By]<UL><LI><a href="#[2fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SDRAM_Init
</UL>

<P><STRONG><a name="[2ff]"></a>HAL_SDRAM_ProgramRefreshRate</STRONG> (Thumb, 54 bytes, Stack size 16 bytes, stm32h7xx_hal_sdram.o(i.HAL_SDRAM_ProgramRefreshRate))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = HAL_SDRAM_ProgramRefreshRate
</UL>
<BR>[Calls]<UL><LI><a href="#[300]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FMC_SDRAM_ProgramRefreshRate
</UL>
<BR>[Called By]<UL><LI><a href="#[313]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDRAM_Initialization_Sequence
</UL>

<P><STRONG><a name="[301]"></a>HAL_SDRAM_SendCommand</STRONG> (Thumb, 78 bytes, Stack size 24 bytes, stm32h7xx_hal_sdram.o(i.HAL_SDRAM_SendCommand))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = HAL_SDRAM_SendCommand &rArr; FMC_SDRAM_SendCommand
</UL>
<BR>[Calls]<UL><LI><a href="#[302]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FMC_SDRAM_SendCommand
</UL>
<BR>[Called By]<UL><LI><a href="#[313]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDRAM_Initialization_Sequence
</UL>

<P><STRONG><a name="[30b]"></a>HAL_TIMEx_Break2Callback</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32h7xx_hal_tim_ex.o(i.HAL_TIMEx_Break2Callback))
<BR><BR>[Called By]<UL><LI><a href="#[305]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_IRQHandler
</UL>

<P><STRONG><a name="[30a]"></a>HAL_TIMEx_BreakCallback</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32h7xx_hal_tim_ex.o(i.HAL_TIMEx_BreakCallback))
<BR><BR>[Called By]<UL><LI><a href="#[305]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_IRQHandler
</UL>

<P><STRONG><a name="[30d]"></a>HAL_TIMEx_CommutCallback</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32h7xx_hal_tim_ex.o(i.HAL_TIMEx_CommutCallback))
<BR><BR>[Called By]<UL><LI><a href="#[305]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_IRQHandler
</UL>

<P><STRONG><a name="[2e3]"></a>HAL_TIM_Base_Init</STRONG> (Thumb, 110 bytes, Stack size 8 bytes, stm32h7xx_hal_tim.o(i.HAL_TIM_Base_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = HAL_TIM_Base_Init &rArr; TIM_Base_SetConfig
</UL>
<BR>[Calls]<UL><LI><a href="#[303]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_Base_MspInit
<LI><a href="#[304]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_Base_SetConfig
</UL>
<BR>[Called By]<UL><LI><a href="#[2df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_InitTick
</UL>

<P><STRONG><a name="[303]"></a>HAL_TIM_Base_MspInit</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32h7xx_hal_tim.o(i.HAL_TIM_Base_MspInit))
<BR><BR>[Called By]<UL><LI><a href="#[2e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_Base_Init
</UL>

<P><STRONG><a name="[2e4]"></a>HAL_TIM_Base_Start_IT</STRONG> (Thumb, 146 bytes, Stack size 0 bytes, stm32h7xx_hal_tim.o(i.HAL_TIM_Base_Start_IT))
<BR><BR>[Called By]<UL><LI><a href="#[2df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_InitTick
</UL>

<P><STRONG><a name="[306]"></a>HAL_TIM_IC_CaptureCallback</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32h7xx_hal_tim.o(i.HAL_TIM_IC_CaptureCallback))
<BR><BR>[Called By]<UL><LI><a href="#[305]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_IRQHandler
</UL>

<P><STRONG><a name="[305]"></a>HAL_TIM_IRQHandler</STRONG> (Thumb, 440 bytes, Stack size 8 bytes, stm32h7xx_hal_tim.o(i.HAL_TIM_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = HAL_TIM_IRQHandler &rArr; HAL_TIM_PeriodElapsedCallback
</UL>
<BR>[Calls]<UL><LI><a href="#[309]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_PeriodElapsedCallback
<LI><a href="#[30c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_TriggerCallback
<LI><a href="#[308]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_PWM_PulseFinishedCallback
<LI><a href="#[307]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_OC_DelayElapsedCallback
<LI><a href="#[306]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_IC_CaptureCallback
<LI><a href="#[30d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIMEx_CommutCallback
<LI><a href="#[30a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIMEx_BreakCallback
<LI><a href="#[30b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIMEx_Break2Callback
</UL>
<BR>[Called By]<UL><LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM17_IRQHandler
</UL>

<P><STRONG><a name="[307]"></a>HAL_TIM_OC_DelayElapsedCallback</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32h7xx_hal_tim.o(i.HAL_TIM_OC_DelayElapsedCallback))
<BR><BR>[Called By]<UL><LI><a href="#[305]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_IRQHandler
</UL>

<P><STRONG><a name="[308]"></a>HAL_TIM_PWM_PulseFinishedCallback</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32h7xx_hal_tim.o(i.HAL_TIM_PWM_PulseFinishedCallback))
<BR><BR>[Called By]<UL><LI><a href="#[305]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_IRQHandler
</UL>

<P><STRONG><a name="[309]"></a>HAL_TIM_PeriodElapsedCallback</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, main_1.o(i.HAL_TIM_PeriodElapsedCallback))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = HAL_TIM_PeriodElapsedCallback
</UL>
<BR>[Calls]<UL><LI><a href="#[30e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_IncTick
</UL>
<BR>[Called By]<UL><LI><a href="#[305]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_IRQHandler
</UL>

<P><STRONG><a name="[30c]"></a>HAL_TIM_TriggerCallback</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32h7xx_hal_tim.o(i.HAL_TIM_TriggerCallback))
<BR><BR>[Called By]<UL><LI><a href="#[305]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_IRQHandler
</UL>

<P><STRONG><a name="[12]"></a>HardFault_Handler</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, stm32h7xx_it_1.o(i.HardFault_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h757xx_cm7.o(RESET)
</UL>
<P><STRONG><a name="[6f]"></a>LTDC_IRQHandler</STRONG> (Thumb, 10 bytes, Stack size 8 bytes, stm32h7xx_it_1.o(i.LTDC_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 184<LI>Call Chain = LTDC_IRQHandler &rArr; HAL_LTDC_IRQHandler &rArr; HAL_LTDC_LineEventCallback &rArr; touchgfx::OSWrappers::signalVSync() &rArr; osMessageQueuePut &rArr; xQueueGenericSend &rArr; vTaskPlaceOnEventList &rArr; prvAddCurrentTaskToDelayedList &rArr; vListInsert
</UL>
<BR>[Calls]<UL><LI><a href="#[2e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_LTDC_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h757xx_cm7.o(RESET)
</UL>
<P><STRONG><a name="[30f]"></a>MX_CRC_Init</STRONG> (Thumb, 42 bytes, Stack size 8 bytes, crc.o(i.MX_CRC_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = MX_CRC_Init &rArr; HAL_CRC_Init &rArr; HAL_CRCEx_Polynomial_Set
</UL>
<BR>[Calls]<UL><LI><a href="#[2cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_CRC_Init
<LI><a href="#[2da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Error_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[2a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[310]"></a>MX_DMA2D_Init</STRONG> (Thumb, 60 bytes, Stack size 8 bytes, dma2d.o(i.MX_DMA2D_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = MX_DMA2D_Init &rArr; HAL_DMA2D_Init &rArr; HAL_DMA2D_MspInit &rArr; HAL_NVIC_SetPriority &rArr; __NVIC_SetPriority
</UL>
<BR>[Calls]<UL><LI><a href="#[2d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_DMA2D_Init
<LI><a href="#[311]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_DMA2D_ConfigLayer
<LI><a href="#[2da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Error_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[2a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[312]"></a>MX_FMC_Init</STRONG> (Thumb, 116 bytes, Stack size 32 bytes, fmc.o(i.MX_FMC_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 336<LI>Call Chain = MX_FMC_Init &rArr; HAL_SDRAM_Init &rArr; HAL_SDRAM_MspInit &rArr; HAL_FMC_MspInit &rArr; HAL_RCCEx_PeriphCLKConfig &rArr; RCCEx_PLL3_Config
</UL>
<BR>[Calls]<UL><LI><a href="#[2fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SDRAM_Init
<LI><a href="#[313]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDRAM_Initialization_Sequence
<LI><a href="#[2da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Error_Handler
<LI><a href="#[2d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[2a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[314]"></a>MX_FREERTOS_Init</STRONG> (Thumb, 32 bytes, Stack size 8 bytes, freertos.o(i.MX_FREERTOS_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 192 + Unknown Stack Size
<LI>Call Chain = MX_FREERTOS_Init &rArr; osThreadNew &rArr; xTaskCreate &rArr; pvPortMalloc &rArr; xTaskResumeAll &rArr; xTaskIncrementTick
</UL>
<BR>[Calls]<UL><LI><a href="#[315]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osThreadNew
</UL>
<BR>[Called By]<UL><LI><a href="#[2a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[316]"></a>MX_GPIO_Init</STRONG> (Thumb, 388 bytes, Stack size 32 bytes, gpio.o(i.MX_GPIO_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = MX_GPIO_Init &rArr; HAL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[2db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_Init
<LI><a href="#[317]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_WritePin
<LI><a href="#[2d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[2a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[318]"></a>MX_LTDC_Init</STRONG> (Thumb, 192 bytes, Stack size 56 bytes, ltdc.o(i.MX_LTDC_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 360<LI>Call Chain = MX_LTDC_Init &rArr; HAL_LTDC_Init &rArr; HAL_LTDC_MspInit &rArr; HAL_NVIC_SetPriority &rArr; __NVIC_SetPriority
</UL>
<BR>[Calls]<UL><LI><a href="#[2eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_LTDC_Init
<LI><a href="#[2e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_LTDC_ConfigLayer
<LI><a href="#[2da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Error_Handler
<LI><a href="#[2d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[2a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[319]"></a>MX_TouchGFX_Init</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, app_touchgfx.o(i.MX_TouchGFX_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 216 + Unknown Stack Size
<LI>Call Chain = MX_TouchGFX_Init &rArr; touchgfx_init &rArr; TouchGFXHAL::initialize() &rArr; TouchGFXGeneratedHAL::initialize() &rArr; touchgfx::HAL::initialize() &rArr; touchgfx::OSWrappers::initialize() &rArr; osSemaphoreNew &rArr; xQueueCreateCountingSemaphoreStatic &rArr; xQueueGenericCreateStatic &rArr; prvInitialiseNewQueue &rArr; xQueueGenericReset &rArr; xTaskRemoveFromEventList
</UL>
<BR>[Calls]<UL><LI><a href="#[31b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx_init
<LI><a href="#[31a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx_components_init
</UL>
<BR>[Called By]<UL><LI><a href="#[2a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[4bd]"></a>MX_TouchGFX_PreOSInit</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, app_touchgfx.o(i.MX_TouchGFX_PreOSInit))
<BR><BR>[Called By]<UL><LI><a href="#[2a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[13]"></a>MemManage_Handler</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, stm32h7xx_it_1.o(i.MemManage_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h757xx_cm7.o(RESET)
</UL>
<P><STRONG><a name="[11]"></a>NMI_Handler</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, stm32h7xx_it_1.o(i.NMI_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h757xx_cm7.o(RESET)
</UL>
<P><STRONG><a name="[313]"></a>SDRAM_Initialization_Sequence</STRONG> (Thumb, 146 bytes, Stack size 16 bytes, fmc.o(i.SDRAM_Initialization_Sequence))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = SDRAM_Initialization_Sequence &rArr; HAL_SDRAM_SendCommand &rArr; FMC_SDRAM_SendCommand
</UL>
<BR>[Calls]<UL><LI><a href="#[301]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SDRAM_SendCommand
<LI><a href="#[2ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SDRAM_ProgramRefreshRate
<LI><a href="#[2d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_Delay
</UL>
<BR>[Called By]<UL><LI><a href="#[312]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_FMC_Init
</UL>

<P><STRONG><a name="[ae]"></a>StartDefaultTask</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, freertos.o(i.StartDefaultTask))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = StartDefaultTask &rArr; osDelay &rArr; vTaskDelay &rArr; xTaskResumeAll &rArr; xTaskIncrementTick
</UL>
<BR>[Calls]<UL><LI><a href="#[31c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osDelay
</UL>
<BR>[Address Reference Count : 1]<UL><LI> freertos.o(i.MX_FREERTOS_Init)
</UL>
<P><STRONG><a name="[19]"></a>SysTick_Handler</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, cmsis_os2.o(i.SysTick_Handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = SysTick_Handler &rArr; xPortSysTickHandler &rArr; xTaskIncrementTick
</UL>
<BR>[Calls]<UL><LI><a href="#[31d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskGetSchedulerState
<LI><a href="#[31e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xPortSysTickHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h757xx_cm7.o(RESET)
</UL>
<P><STRONG><a name="[31f]"></a>SystemClock_Config</STRONG> (Thumb, 296 bytes, Stack size 120 bytes, main_1.o(i.SystemClock_Config))
<BR><BR>[Stack]<UL><LI>Max Depth = 248<LI>Call Chain = SystemClock_Config &rArr; HAL_RCC_ClockConfig &rArr; HAL_InitTick &rArr; HAL_NVIC_SetPriority &rArr; __NVIC_SetPriority
</UL>
<BR>[Calls]<UL><LI><a href="#[2f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCC_OscConfig
<LI><a href="#[2f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCC_ClockConfig
<LI><a href="#[2f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_PWREx_ConfigSupply
<LI><a href="#[2da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Error_Handler
<LI><a href="#[2d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[2a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[ac]"></a>SystemInit</STRONG> (Thumb, 244 bytes, Stack size 0 bytes, system_stm32h7xx_dualcore_boot_cm4_cm7.o(i.SystemInit))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h757xx_cm7.o(.text)
</UL>
<P><STRONG><a name="[8d]"></a>TIM17_IRQHandler</STRONG> (Thumb, 10 bytes, Stack size 8 bytes, stm32h7xx_it_1.o(i.TIM17_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = TIM17_IRQHandler &rArr; HAL_TIM_IRQHandler &rArr; HAL_TIM_PeriodElapsedCallback
</UL>
<BR>[Calls]<UL><LI><a href="#[305]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h757xx_cm7.o(RESET)
</UL>
<P><STRONG><a name="[304]"></a>TIM_Base_SetConfig</STRONG> (Thumb, 170 bytes, Stack size 8 bytes, stm32h7xx_hal_tim.o(i.TIM_Base_SetConfig))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = TIM_Base_SetConfig
</UL>
<BR>[Called By]<UL><LI><a href="#[2e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_Base_Init
</UL>

<P><STRONG><a name="[af]"></a>TouchGFX_Task</STRONG> (Thumb, 10 bytes, Stack size 8 bytes, app_touchgfx.o(i.TouchGFX_Task))
<BR><BR>[Stack]<UL><LI>Max Depth = 152<LI>Call Chain = TouchGFX_Task &rArr; touchgfx_taskEntry &rArr; touchgfx::HAL::taskEntry() &rArr; touchgfx::OSWrappers::waitForVSync() &rArr; osMessageQueueGet &rArr; xQueueReceive &rArr; vTaskPlaceOnEventList &rArr; prvAddCurrentTaskToDelayedList &rArr; vListInsert
</UL>
<BR>[Calls]<UL><LI><a href="#[320]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx_taskEntry
</UL>
<BR>[Address Reference Count : 1]<UL><LI> freertos.o(i.MX_FREERTOS_Init)
</UL>
<P><STRONG><a name="[15]"></a>UsageFault_Handler</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, stm32h7xx_it_1.o(i.UsageFault_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h757xx_cm7.o(RESET)
</UL>
<P><STRONG><a name="[321]"></a>getFont_GILB_____TTF_24_4bpp()</STRONG> (Thumb, 98 bytes, Stack size 64 bytes, table_gilb_____ttf_24_4bpp.o(i._Z28getFont_GILB_____TTF_24_4bppv))
<BR><BR>[Stack]<UL><LI>Max Depth = 188<LI>Call Chain = getFont_GILB_____TTF_24_4bpp() &rArr; touchgfx::GeneratedFont::GeneratedFont(const touchgfx::GlyphNode*, unsigned short, unsigned short, unsigned short, unsigned char, unsigned char, unsigned char, unsigned char, unsigned char, unsigned char, const unsigned char*const *, const touchgfx::KerningNode*, unsigned short, unsigned short, const unsigned short*, const touchgfx::FontContextualFormsTable*) &rArr; touchgfx::ConstFont::ConstFont__sub_object(const touchgfx::GlyphNode*, unsigned short, unsigned short, unsigned short, unsigned char, unsigned char, unsigned char, unsigned char, unsigned char, unsigned char, unsigned short, unsigned short)
</UL>
<BR>[Calls]<UL><LI><a href="#[323]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::GeneratedFont::GeneratedFont(const touchgfx::GlyphNode*, unsigned short, unsigned short, unsigned short, unsigned char, unsigned char, unsigned char, unsigned char, unsigned char, unsigned char, const unsigned char*const *, const touchgfx::KerningNode*, unsigned short, unsigned short, const unsigned short*, const touchgfx::FontContextualFormsTable*)
<LI><a href="#[322]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxa_guard_acquire
<LI><a href="#[2af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_atexit
</UL>
<BR>[Called By]<UL><LI><a href="#[292]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__sti___21_typedtextdatabase_cpp_05ec7672
</UL>

<P><STRONG><a name="[324]"></a>getFont_chinese_msyh_14_4bpp()</STRONG> (Thumb, 98 bytes, Stack size 64 bytes, table_chinese_msyh_14_4bpp.o(i._Z28getFont_chinese_msyh_14_4bppv))
<BR><BR>[Stack]<UL><LI>Max Depth = 188<LI>Call Chain = getFont_chinese_msyh_14_4bpp() &rArr; touchgfx::GeneratedFont::GeneratedFont(const touchgfx::GlyphNode*, unsigned short, unsigned short, unsigned short, unsigned char, unsigned char, unsigned char, unsigned char, unsigned char, unsigned char, const unsigned char*const *, const touchgfx::KerningNode*, unsigned short, unsigned short, const unsigned short*, const touchgfx::FontContextualFormsTable*) &rArr; touchgfx::ConstFont::ConstFont__sub_object(const touchgfx::GlyphNode*, unsigned short, unsigned short, unsigned short, unsigned char, unsigned char, unsigned char, unsigned char, unsigned char, unsigned char, unsigned short, unsigned short)
</UL>
<BR>[Calls]<UL><LI><a href="#[323]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::GeneratedFont::GeneratedFont(const touchgfx::GlyphNode*, unsigned short, unsigned short, unsigned short, unsigned char, unsigned char, unsigned char, unsigned char, unsigned char, unsigned char, const unsigned char*const *, const touchgfx::KerningNode*, unsigned short, unsigned short, const unsigned short*, const touchgfx::FontContextualFormsTable*)
<LI><a href="#[322]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxa_guard_acquire
<LI><a href="#[2af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_atexit
</UL>
<BR>[Called By]<UL><LI><a href="#[292]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__sti___21_typedtextdatabase_cpp_05ec7672
</UL>

<P><STRONG><a name="[325]"></a>getFont_chinese_msyh_25_4bpp()</STRONG> (Thumb, 98 bytes, Stack size 64 bytes, table_chinese_msyh_25_4bpp.o(i._Z28getFont_chinese_msyh_25_4bppv))
<BR><BR>[Stack]<UL><LI>Max Depth = 188<LI>Call Chain = getFont_chinese_msyh_25_4bpp() &rArr; touchgfx::GeneratedFont::GeneratedFont(const touchgfx::GlyphNode*, unsigned short, unsigned short, unsigned short, unsigned char, unsigned char, unsigned char, unsigned char, unsigned char, unsigned char, const unsigned char*const *, const touchgfx::KerningNode*, unsigned short, unsigned short, const unsigned short*, const touchgfx::FontContextualFormsTable*) &rArr; touchgfx::ConstFont::ConstFont__sub_object(const touchgfx::GlyphNode*, unsigned short, unsigned short, unsigned short, unsigned char, unsigned char, unsigned char, unsigned char, unsigned char, unsigned char, unsigned short, unsigned short)
</UL>
<BR>[Calls]<UL><LI><a href="#[323]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::GeneratedFont::GeneratedFont(const touchgfx::GlyphNode*, unsigned short, unsigned short, unsigned short, unsigned char, unsigned char, unsigned char, unsigned char, unsigned char, unsigned char, const unsigned char*const *, const touchgfx::KerningNode*, unsigned short, unsigned short, const unsigned short*, const touchgfx::FontContextualFormsTable*)
<LI><a href="#[322]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxa_guard_acquire
<LI><a href="#[2af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_atexit
</UL>
<BR>[Called By]<UL><LI><a href="#[292]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__sti___21_typedtextdatabase_cpp_05ec7672
</UL>

<P><STRONG><a name="[326]"></a>getFont_chinese_msyh_28_4bpp()</STRONG> (Thumb, 98 bytes, Stack size 64 bytes, table_chinese_msyh_28_4bpp.o(i._Z28getFont_chinese_msyh_28_4bppv))
<BR><BR>[Stack]<UL><LI>Max Depth = 188<LI>Call Chain = getFont_chinese_msyh_28_4bpp() &rArr; touchgfx::GeneratedFont::GeneratedFont(const touchgfx::GlyphNode*, unsigned short, unsigned short, unsigned short, unsigned char, unsigned char, unsigned char, unsigned char, unsigned char, unsigned char, const unsigned char*const *, const touchgfx::KerningNode*, unsigned short, unsigned short, const unsigned short*, const touchgfx::FontContextualFormsTable*) &rArr; touchgfx::ConstFont::ConstFont__sub_object(const touchgfx::GlyphNode*, unsigned short, unsigned short, unsigned short, unsigned char, unsigned char, unsigned char, unsigned char, unsigned char, unsigned char, unsigned short, unsigned short)
</UL>
<BR>[Calls]<UL><LI><a href="#[323]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::GeneratedFont::GeneratedFont(const touchgfx::GlyphNode*, unsigned short, unsigned short, unsigned short, unsigned char, unsigned char, unsigned char, unsigned char, unsigned char, unsigned char, const unsigned char*const *, const touchgfx::KerningNode*, unsigned short, unsigned short, const unsigned short*, const touchgfx::FontContextualFormsTable*)
<LI><a href="#[322]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxa_guard_acquire
<LI><a href="#[2af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_atexit
</UL>
<BR>[Called By]<UL><LI><a href="#[292]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__sti___21_typedtextdatabase_cpp_05ec7672
</UL>

<P><STRONG><a name="[327]"></a>getFont_GommeSansW04Bold_14_4bpp()</STRONG> (Thumb, 98 bytes, Stack size 64 bytes, table_gommesansw04bold_14_4bpp.o(i._Z32getFont_GommeSansW04Bold_14_4bppv))
<BR><BR>[Stack]<UL><LI>Max Depth = 188<LI>Call Chain = getFont_GommeSansW04Bold_14_4bpp() &rArr; touchgfx::GeneratedFont::GeneratedFont(const touchgfx::GlyphNode*, unsigned short, unsigned short, unsigned short, unsigned char, unsigned char, unsigned char, unsigned char, unsigned char, unsigned char, const unsigned char*const *, const touchgfx::KerningNode*, unsigned short, unsigned short, const unsigned short*, const touchgfx::FontContextualFormsTable*) &rArr; touchgfx::ConstFont::ConstFont__sub_object(const touchgfx::GlyphNode*, unsigned short, unsigned short, unsigned short, unsigned char, unsigned char, unsigned char, unsigned char, unsigned char, unsigned char, unsigned short, unsigned short)
</UL>
<BR>[Calls]<UL><LI><a href="#[323]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::GeneratedFont::GeneratedFont(const touchgfx::GlyphNode*, unsigned short, unsigned short, unsigned short, unsigned char, unsigned char, unsigned char, unsigned char, unsigned char, unsigned char, const unsigned char*const *, const touchgfx::KerningNode*, unsigned short, unsigned short, const unsigned short*, const touchgfx::FontContextualFormsTable*)
<LI><a href="#[322]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxa_guard_acquire
<LI><a href="#[2af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_atexit
</UL>
<BR>[Called By]<UL><LI><a href="#[292]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__sti___21_typedtextdatabase_cpp_05ec7672
</UL>

<P><STRONG><a name="[328]"></a>getFont_GommeSansW04Bold_20_4bpp()</STRONG> (Thumb, 98 bytes, Stack size 64 bytes, table_gommesansw04bold_20_4bpp.o(i._Z32getFont_GommeSansW04Bold_20_4bppv))
<BR><BR>[Stack]<UL><LI>Max Depth = 188<LI>Call Chain = getFont_GommeSansW04Bold_20_4bpp() &rArr; touchgfx::GeneratedFont::GeneratedFont(const touchgfx::GlyphNode*, unsigned short, unsigned short, unsigned short, unsigned char, unsigned char, unsigned char, unsigned char, unsigned char, unsigned char, const unsigned char*const *, const touchgfx::KerningNode*, unsigned short, unsigned short, const unsigned short*, const touchgfx::FontContextualFormsTable*) &rArr; touchgfx::ConstFont::ConstFont__sub_object(const touchgfx::GlyphNode*, unsigned short, unsigned short, unsigned short, unsigned char, unsigned char, unsigned char, unsigned char, unsigned char, unsigned char, unsigned short, unsigned short)
</UL>
<BR>[Calls]<UL><LI><a href="#[323]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::GeneratedFont::GeneratedFont(const touchgfx::GlyphNode*, unsigned short, unsigned short, unsigned short, unsigned char, unsigned char, unsigned char, unsigned char, unsigned char, unsigned char, const unsigned char*const *, const touchgfx::KerningNode*, unsigned short, unsigned short, const unsigned short*, const touchgfx::FontContextualFormsTable*)
<LI><a href="#[322]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxa_guard_acquire
<LI><a href="#[2af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_atexit
</UL>
<BR>[Called By]<UL><LI><a href="#[292]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__sti___21_typedtextdatabase_cpp_05ec7672
</UL>

<P><STRONG><a name="[329]"></a>getFont_GommeSansW04Bold_24_4bpp()</STRONG> (Thumb, 100 bytes, Stack size 64 bytes, table_gommesansw04bold_24_4bpp.o(i._Z32getFont_GommeSansW04Bold_24_4bppv))
<BR><BR>[Stack]<UL><LI>Max Depth = 188<LI>Call Chain = getFont_GommeSansW04Bold_24_4bpp() &rArr; touchgfx::GeneratedFont::GeneratedFont(const touchgfx::GlyphNode*, unsigned short, unsigned short, unsigned short, unsigned char, unsigned char, unsigned char, unsigned char, unsigned char, unsigned char, const unsigned char*const *, const touchgfx::KerningNode*, unsigned short, unsigned short, const unsigned short*, const touchgfx::FontContextualFormsTable*) &rArr; touchgfx::ConstFont::ConstFont__sub_object(const touchgfx::GlyphNode*, unsigned short, unsigned short, unsigned short, unsigned char, unsigned char, unsigned char, unsigned char, unsigned char, unsigned char, unsigned short, unsigned short)
</UL>
<BR>[Calls]<UL><LI><a href="#[323]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::GeneratedFont::GeneratedFont(const touchgfx::GlyphNode*, unsigned short, unsigned short, unsigned short, unsigned char, unsigned char, unsigned char, unsigned char, unsigned char, unsigned char, const unsigned char*const *, const touchgfx::KerningNode*, unsigned short, unsigned short, const unsigned short*, const touchgfx::FontContextualFormsTable*)
<LI><a href="#[322]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxa_guard_acquire
<LI><a href="#[2af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_atexit
</UL>
<BR>[Called By]<UL><LI><a href="#[292]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__sti___21_typedtextdatabase_cpp_05ec7672
</UL>

<P><STRONG><a name="[32a]"></a>getFont_GommeSansW04Bold_25_4bpp()</STRONG> (Thumb, 100 bytes, Stack size 64 bytes, table_gommesansw04bold_25_4bpp.o(i._Z32getFont_GommeSansW04Bold_25_4bppv))
<BR><BR>[Stack]<UL><LI>Max Depth = 188<LI>Call Chain = getFont_GommeSansW04Bold_25_4bpp() &rArr; touchgfx::GeneratedFont::GeneratedFont(const touchgfx::GlyphNode*, unsigned short, unsigned short, unsigned short, unsigned char, unsigned char, unsigned char, unsigned char, unsigned char, unsigned char, const unsigned char*const *, const touchgfx::KerningNode*, unsigned short, unsigned short, const unsigned short*, const touchgfx::FontContextualFormsTable*) &rArr; touchgfx::ConstFont::ConstFont__sub_object(const touchgfx::GlyphNode*, unsigned short, unsigned short, unsigned short, unsigned char, unsigned char, unsigned char, unsigned char, unsigned char, unsigned char, unsigned short, unsigned short)
</UL>
<BR>[Calls]<UL><LI><a href="#[323]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::GeneratedFont::GeneratedFont(const touchgfx::GlyphNode*, unsigned short, unsigned short, unsigned short, unsigned char, unsigned char, unsigned char, unsigned char, unsigned char, unsigned char, const unsigned char*const *, const touchgfx::KerningNode*, unsigned short, unsigned short, const unsigned short*, const touchgfx::FontContextualFormsTable*)
<LI><a href="#[322]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxa_guard_acquire
<LI><a href="#[2af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_atexit
</UL>
<BR>[Called By]<UL><LI><a href="#[292]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__sti___21_typedtextdatabase_cpp_05ec7672
</UL>

<P><STRONG><a name="[32b]"></a>getFont_GommeSansW04Bold_28_4bpp()</STRONG> (Thumb, 100 bytes, Stack size 64 bytes, table_gommesansw04bold_28_4bpp.o(i._Z32getFont_GommeSansW04Bold_28_4bppv))
<BR><BR>[Stack]<UL><LI>Max Depth = 188<LI>Call Chain = getFont_GommeSansW04Bold_28_4bpp() &rArr; touchgfx::GeneratedFont::GeneratedFont(const touchgfx::GlyphNode*, unsigned short, unsigned short, unsigned short, unsigned char, unsigned char, unsigned char, unsigned char, unsigned char, unsigned char, const unsigned char*const *, const touchgfx::KerningNode*, unsigned short, unsigned short, const unsigned short*, const touchgfx::FontContextualFormsTable*) &rArr; touchgfx::ConstFont::ConstFont__sub_object(const touchgfx::GlyphNode*, unsigned short, unsigned short, unsigned short, unsigned char, unsigned char, unsigned char, unsigned char, unsigned char, unsigned char, unsigned short, unsigned short)
</UL>
<BR>[Calls]<UL><LI><a href="#[323]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::GeneratedFont::GeneratedFont(const touchgfx::GlyphNode*, unsigned short, unsigned short, unsigned short, unsigned char, unsigned char, unsigned char, unsigned char, unsigned char, unsigned char, const unsigned char*const *, const touchgfx::KerningNode*, unsigned short, unsigned short, const unsigned short*, const touchgfx::FontContextualFormsTable*)
<LI><a href="#[322]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxa_guard_acquire
<LI><a href="#[2af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_atexit
</UL>
<BR>[Called By]<UL><LI><a href="#[292]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__sti___21_typedtextdatabase_cpp_05ec7672
</UL>

<P><STRONG><a name="[32c]"></a>getFont_GommeSansW04Bold_30_4bpp()</STRONG> (Thumb, 98 bytes, Stack size 64 bytes, table_gommesansw04bold_30_4bpp.o(i._Z32getFont_GommeSansW04Bold_30_4bppv))
<BR><BR>[Stack]<UL><LI>Max Depth = 188<LI>Call Chain = getFont_GommeSansW04Bold_30_4bpp() &rArr; touchgfx::GeneratedFont::GeneratedFont(const touchgfx::GlyphNode*, unsigned short, unsigned short, unsigned short, unsigned char, unsigned char, unsigned char, unsigned char, unsigned char, unsigned char, const unsigned char*const *, const touchgfx::KerningNode*, unsigned short, unsigned short, const unsigned short*, const touchgfx::FontContextualFormsTable*) &rArr; touchgfx::ConstFont::ConstFont__sub_object(const touchgfx::GlyphNode*, unsigned short, unsigned short, unsigned short, unsigned char, unsigned char, unsigned char, unsigned char, unsigned char, unsigned char, unsigned short, unsigned short)
</UL>
<BR>[Calls]<UL><LI><a href="#[323]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::GeneratedFont::GeneratedFont(const touchgfx::GlyphNode*, unsigned short, unsigned short, unsigned short, unsigned char, unsigned char, unsigned char, unsigned char, unsigned char, unsigned char, const unsigned char*const *, const touchgfx::KerningNode*, unsigned short, unsigned short, const unsigned short*, const touchgfx::FontContextualFormsTable*)
<LI><a href="#[322]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxa_guard_acquire
<LI><a href="#[2af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_atexit
</UL>
<BR>[Called By]<UL><LI><a href="#[292]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__sti___21_typedtextdatabase_cpp_05ec7672
</UL>

<P><STRONG><a name="[32d]"></a>getFont_Nanum_Gothic_Bold_700_14_4bpp()</STRONG> (Thumb, 98 bytes, Stack size 64 bytes, table_nanum_gothic_bold_700_14_4bpp.o(i._Z37getFont_Nanum_Gothic_Bold_700_14_4bppv))
<BR><BR>[Stack]<UL><LI>Max Depth = 188<LI>Call Chain = getFont_Nanum_Gothic_Bold_700_14_4bpp() &rArr; touchgfx::GeneratedFont::GeneratedFont(const touchgfx::GlyphNode*, unsigned short, unsigned short, unsigned short, unsigned char, unsigned char, unsigned char, unsigned char, unsigned char, unsigned char, const unsigned char*const *, const touchgfx::KerningNode*, unsigned short, unsigned short, const unsigned short*, const touchgfx::FontContextualFormsTable*) &rArr; touchgfx::ConstFont::ConstFont__sub_object(const touchgfx::GlyphNode*, unsigned short, unsigned short, unsigned short, unsigned char, unsigned char, unsigned char, unsigned char, unsigned char, unsigned char, unsigned short, unsigned short)
</UL>
<BR>[Calls]<UL><LI><a href="#[323]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::GeneratedFont::GeneratedFont(const touchgfx::GlyphNode*, unsigned short, unsigned short, unsigned short, unsigned char, unsigned char, unsigned char, unsigned char, unsigned char, unsigned char, const unsigned char*const *, const touchgfx::KerningNode*, unsigned short, unsigned short, const unsigned short*, const touchgfx::FontContextualFormsTable*)
<LI><a href="#[322]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxa_guard_acquire
<LI><a href="#[2af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_atexit
</UL>
<BR>[Called By]<UL><LI><a href="#[292]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__sti___21_typedtextdatabase_cpp_05ec7672
</UL>

<P><STRONG><a name="[32e]"></a>getFont_Nanum_Gothic_Bold_700_25_4bpp()</STRONG> (Thumb, 100 bytes, Stack size 64 bytes, table_nanum_gothic_bold_700_25_4bpp.o(i._Z37getFont_Nanum_Gothic_Bold_700_25_4bppv))
<BR><BR>[Stack]<UL><LI>Max Depth = 188<LI>Call Chain = getFont_Nanum_Gothic_Bold_700_25_4bpp() &rArr; touchgfx::GeneratedFont::GeneratedFont(const touchgfx::GlyphNode*, unsigned short, unsigned short, unsigned short, unsigned char, unsigned char, unsigned char, unsigned char, unsigned char, unsigned char, const unsigned char*const *, const touchgfx::KerningNode*, unsigned short, unsigned short, const unsigned short*, const touchgfx::FontContextualFormsTable*) &rArr; touchgfx::ConstFont::ConstFont__sub_object(const touchgfx::GlyphNode*, unsigned short, unsigned short, unsigned short, unsigned char, unsigned char, unsigned char, unsigned char, unsigned char, unsigned char, unsigned short, unsigned short)
</UL>
<BR>[Calls]<UL><LI><a href="#[323]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::GeneratedFont::GeneratedFont(const touchgfx::GlyphNode*, unsigned short, unsigned short, unsigned short, unsigned char, unsigned char, unsigned char, unsigned char, unsigned char, unsigned char, const unsigned char*const *, const touchgfx::KerningNode*, unsigned short, unsigned short, const unsigned short*, const touchgfx::FontContextualFormsTable*)
<LI><a href="#[322]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxa_guard_acquire
<LI><a href="#[2af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_atexit
</UL>
<BR>[Called By]<UL><LI><a href="#[292]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__sti___21_typedtextdatabase_cpp_05ec7672
</UL>

<P><STRONG><a name="[32f]"></a>getFont_Nanum_Gothic_Bold_700_28_4bpp()</STRONG> (Thumb, 98 bytes, Stack size 64 bytes, table_nanum_gothic_bold_700_28_4bpp.o(i._Z37getFont_Nanum_Gothic_Bold_700_28_4bppv))
<BR><BR>[Stack]<UL><LI>Max Depth = 188<LI>Call Chain = getFont_Nanum_Gothic_Bold_700_28_4bpp() &rArr; touchgfx::GeneratedFont::GeneratedFont(const touchgfx::GlyphNode*, unsigned short, unsigned short, unsigned short, unsigned char, unsigned char, unsigned char, unsigned char, unsigned char, unsigned char, const unsigned char*const *, const touchgfx::KerningNode*, unsigned short, unsigned short, const unsigned short*, const touchgfx::FontContextualFormsTable*) &rArr; touchgfx::ConstFont::ConstFont__sub_object(const touchgfx::GlyphNode*, unsigned short, unsigned short, unsigned short, unsigned char, unsigned char, unsigned char, unsigned char, unsigned char, unsigned char, unsigned short, unsigned short)
</UL>
<BR>[Calls]<UL><LI><a href="#[323]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::GeneratedFont::GeneratedFont(const touchgfx::GlyphNode*, unsigned short, unsigned short, unsigned short, unsigned char, unsigned char, unsigned char, unsigned char, unsigned char, unsigned char, const unsigned char*const *, const touchgfx::KerningNode*, unsigned short, unsigned short, const unsigned short*, const touchgfx::FontContextualFormsTable*)
<LI><a href="#[322]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxa_guard_acquire
<LI><a href="#[2af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_atexit
</UL>
<BR>[Called By]<UL><LI><a href="#[292]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__sti___21_typedtextdatabase_cpp_05ec7672
</UL>

<P><STRONG><a name="[ed]"></a>CookingView::setupScreen()</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, cookingview.o(i._ZN11CookingView11setupScreenEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 440 + Unknown Stack Size
<LI>Call Chain = CookingView::setupScreen() &rArr; CookingView::customSetupScreen() &rArr; void touchgfx::Circle::updateArcEnd&lang;float&rang;(T1) &rArr; touchgfx::Circle::getMinimalRectForUpdatedEndAngle(const touchgfx::CWRUtil::Q5&) const &rArr; touchgfx::Circle::getMinimalRect(touchgfx::CWRUtil::Q5, touchgfx::CWRUtil::Q5) const &rArr; touchgfx::Circle::calculateMinimalRect(touchgfx::CWRUtil::Q5, touchgfx::CWRUtil::Q5, touchgfx::CWRUtil::Q5&, touchgfx::CWRUtil::Q5&, touchgfx::CWRUtil::Q5&, touchgfx::CWRUtil::Q5&) const &rArr; touchgfx::Circle::updateMinMaxAngleLine(const touchgfx::CWRUtil::Q5&, const touchgfx::CWRUtil::Q5&, touchgfx::CWRUtil::Q5&, touchgfx::CWRUtil::Q5&, touchgfx::CWRUtil::Q5&, touchgfx::CWRUtil::Q5&) const &rArr; touchgfx::CWRUtil::cosine(touchgfx::CWRUtil::Q5) &rArr; touchgfx::CWRUtil::sine(touchgfx::CWRUtil::Q5) &rArr; touchgfx::muldiv(int, int, int, int&) &rArr; touchgfx::muldivu(unsigned, unsigned, unsigned, unsigned&) &rArr;  touchgfx::muldivu(unsigned, unsigned, unsigned, unsigned&) (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[13b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CookingViewBase::setupScreen()
<LI><a href="#[331]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CookingView::customSetupScreen()
<LI><a href="#[330]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CookingView::setUpTheClock()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> cookingview.o(.constdata__ZTV11CookingView)
</UL>
<P><STRONG><a name="[332]"></a>CookingView::updateTimer()</STRONG> (Thumb, 154 bytes, Stack size 8 bytes, cookingview.o(i._ZN11CookingView11updateTimerEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 296<LI>Call Chain = CookingView::updateTimer() &rArr; touchgfx::Unicode::snprintf(unsigned short*, unsigned short, const char*, ...) &rArr; touchgfx::Unicode::vsnprintf(unsigned short*, unsigned short, const char*, std::__va_list) &rArr; touchgfx::Unicode::vsnprintf(unsigned short*, unsigned short, const unsigned short*, const char*, std::__va_list) &rArr; touchgfx::Unicode::itoa(int, unsigned short*, unsigned short, int) &rArr; touchgfx::Unicode::strncpy(unsigned short*, const char*, unsigned short)
</UL>
<BR>[Calls]<UL><LI><a href="#[1e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Drawable::invalidate() const
<LI><a href="#[333]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Unicode::snprintf(unsigned short*, unsigned short, const char*, ...)
</UL>
<BR>[Called By]<UL><LI><a href="#[f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CookingView::handleTickEvent()
</UL>

<P><STRONG><a name="[100]"></a>CookingView::saveElementID(short)</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, cookingview.o(i._ZN11CookingView13saveElementIDEs))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = CookingView::saveElementID(short)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> cookingview.o(.constdata__ZTV11CookingView)
</UL>
<P><STRONG><a name="[330]"></a>CookingView::setUpTheClock()</STRONG> (Thumb, 80 bytes, Stack size 8 bytes, cookingview.o(i._ZN11CookingView13setUpTheClockEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 296<LI>Call Chain = CookingView::setUpTheClock() &rArr; touchgfx::Unicode::snprintf(unsigned short*, unsigned short, const char*, ...) &rArr; touchgfx::Unicode::vsnprintf(unsigned short*, unsigned short, const char*, std::__va_list) &rArr; touchgfx::Unicode::vsnprintf(unsigned short*, unsigned short, const unsigned short*, const char*, std::__va_list) &rArr; touchgfx::Unicode::itoa(int, unsigned short*, unsigned short, int) &rArr; touchgfx::Unicode::strncpy(unsigned short*, const char*, unsigned short)
</UL>
<BR>[Calls]<UL><LI><a href="#[333]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Unicode::snprintf(unsigned short*, unsigned short, const char*, ...)
</UL>
<BR>[Called By]<UL><LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CookingView::setupScreen()
</UL>

<P><STRONG><a name="[334]"></a>CookingView::clockAnimation()</STRONG> (Thumb, 164 bytes, Stack size 8 bytes, cookingview.o(i._ZN11CookingView14clockAnimationEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 296<LI>Call Chain = CookingView::clockAnimation() &rArr; touchgfx::Unicode::snprintf(unsigned short*, unsigned short, const char*, ...) &rArr; touchgfx::Unicode::vsnprintf(unsigned short*, unsigned short, const char*, std::__va_list) &rArr; touchgfx::Unicode::vsnprintf(unsigned short*, unsigned short, const unsigned short*, const char*, std::__va_list) &rArr; touchgfx::Unicode::itoa(int, unsigned short*, unsigned short, int) &rArr; touchgfx::Unicode::strncpy(unsigned short*, const char*, unsigned short)
</UL>
<BR>[Calls]<UL><LI><a href="#[1e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Drawable::invalidate() const
<LI><a href="#[333]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Unicode::snprintf(unsigned short*, unsigned short, const char*, ...)
</UL>
<BR>[Called By]<UL><LI><a href="#[f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CookingView::handleTickEvent()
</UL>

<P><STRONG><a name="[335]"></a>CookingView::saveSharedData()</STRONG> (Thumb, 106 bytes, Stack size 8 bytes, cookingview.o(i._ZN11CookingView14saveSharedDataEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = CookingView::saveSharedData()
</UL>
<BR>[Called By]<UL><LI><a href="#[ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CookingView::tearDownScreen()
</UL>

<P><STRONG><a name="[ef]"></a>CookingView::tearDownScreen()</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, cookingview.o(i._ZN11CookingView14tearDownScreenEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = CookingView::tearDownScreen() &rArr; CookingView::saveSharedData()
</UL>
<BR>[Calls]<UL><LI><a href="#[335]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CookingView::saveSharedData()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> cookingview.o(.constdata__ZTV11CookingView)
</UL>
<P><STRONG><a name="[f3]"></a>CookingView::handleTickEvent()</STRONG> (Thumb, 154 bytes, Stack size 8 bytes, cookingview.o(i._ZN11CookingView15handleTickEventEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 456 + Unknown Stack Size
<LI>Call Chain = CookingView::handleTickEvent() &rArr; CookingView::EXITSCREEN_STATEMACHINE() &rArr; void touchgfx::Circle::updateArcEnd&lang;float&rang;(T1) &rArr; touchgfx::Circle::getMinimalRectForUpdatedEndAngle(const touchgfx::CWRUtil::Q5&) const &rArr; touchgfx::Circle::getMinimalRect(touchgfx::CWRUtil::Q5, touchgfx::CWRUtil::Q5) const &rArr; touchgfx::Circle::calculateMinimalRect(touchgfx::CWRUtil::Q5, touchgfx::CWRUtil::Q5, touchgfx::CWRUtil::Q5&, touchgfx::CWRUtil::Q5&, touchgfx::CWRUtil::Q5&, touchgfx::CWRUtil::Q5&) const &rArr; touchgfx::Circle::updateMinMaxAngleLine(const touchgfx::CWRUtil::Q5&, const touchgfx::CWRUtil::Q5&, touchgfx::CWRUtil::Q5&, touchgfx::CWRUtil::Q5&, touchgfx::CWRUtil::Q5&, touchgfx::CWRUtil::Q5&) const &rArr; touchgfx::CWRUtil::cosine(touchgfx::CWRUtil::Q5) &rArr; touchgfx::CWRUtil::sine(touchgfx::CWRUtil::Q5) &rArr; touchgfx::muldiv(int, int, int, int&) &rArr; touchgfx::muldivu(unsigned, unsigned, unsigned, unsigned&) &rArr;  touchgfx::muldivu(unsigned, unsigned, unsigned, unsigned&) (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[336]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CookingView::ENTERSCREEN_STATEMACHINE()
<LI><a href="#[337]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CookingView::EXITSCREEN_STATEMACHINE()
<LI><a href="#[338]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CookingView::updateCircleTimer()
<LI><a href="#[334]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CookingView::clockAnimation()
<LI><a href="#[332]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CookingView::updateTimer()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> cookingview.o(.constdata__ZTV11CookingView)
</UL>
<P><STRONG><a name="[331]"></a>CookingView::customSetupScreen()</STRONG> (Thumb, 278 bytes, Stack size 16 bytes, cookingview.o(i._ZN11CookingView17customSetupScreenEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 432 + Unknown Stack Size
<LI>Call Chain = CookingView::customSetupScreen() &rArr; void touchgfx::Circle::updateArcEnd&lang;float&rang;(T1) &rArr; touchgfx::Circle::getMinimalRectForUpdatedEndAngle(const touchgfx::CWRUtil::Q5&) const &rArr; touchgfx::Circle::getMinimalRect(touchgfx::CWRUtil::Q5, touchgfx::CWRUtil::Q5) const &rArr; touchgfx::Circle::calculateMinimalRect(touchgfx::CWRUtil::Q5, touchgfx::CWRUtil::Q5, touchgfx::CWRUtil::Q5&, touchgfx::CWRUtil::Q5&, touchgfx::CWRUtil::Q5&, touchgfx::CWRUtil::Q5&) const &rArr; touchgfx::Circle::updateMinMaxAngleLine(const touchgfx::CWRUtil::Q5&, const touchgfx::CWRUtil::Q5&, touchgfx::CWRUtil::Q5&, touchgfx::CWRUtil::Q5&, touchgfx::CWRUtil::Q5&, touchgfx::CWRUtil::Q5&) const &rArr; touchgfx::CWRUtil::cosine(touchgfx::CWRUtil::Q5) &rArr; touchgfx::CWRUtil::sine(touchgfx::CWRUtil::Q5) &rArr; touchgfx::muldiv(int, int, int, int&) &rArr; touchgfx::muldivu(unsigned, unsigned, unsigned, unsigned&) &rArr;  touchgfx::muldivu(unsigned, unsigned, unsigned, unsigned&) (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[1e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Drawable::invalidate() const
<LI><a href="#[333]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Unicode::snprintf(unsigned short*, unsigned short, const char*, ...)
<LI><a href="#[33b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::CWRUtil::Q5 touchgfx::CWRUtil::toQ5&lang;int&rang;(T1)
<LI><a href="#[33a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;void touchgfx::Circle::updateArcEnd&lang;float&rang;(T1)
<LI><a href="#[339]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CookingView::setUpInfoAboutCookingFood()
</UL>
<BR>[Called By]<UL><LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CookingView::setupScreen()
</UL>

<P><STRONG><a name="[338]"></a>CookingView::updateCircleTimer()</STRONG> (Thumb, 54 bytes, Stack size 8 bytes, cookingview.o(i._ZN11CookingView17updateCircleTimerEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 424<LI>Call Chain = CookingView::updateCircleTimer() &rArr; void touchgfx::Circle::updateArcEnd&lang;float&rang;(T1) &rArr; touchgfx::Circle::getMinimalRectForUpdatedEndAngle(const touchgfx::CWRUtil::Q5&) const &rArr; touchgfx::Circle::getMinimalRect(touchgfx::CWRUtil::Q5, touchgfx::CWRUtil::Q5) const &rArr; touchgfx::Circle::calculateMinimalRect(touchgfx::CWRUtil::Q5, touchgfx::CWRUtil::Q5, touchgfx::CWRUtil::Q5&, touchgfx::CWRUtil::Q5&, touchgfx::CWRUtil::Q5&, touchgfx::CWRUtil::Q5&) const &rArr; touchgfx::Circle::updateMinMaxAngleLine(const touchgfx::CWRUtil::Q5&, const touchgfx::CWRUtil::Q5&, touchgfx::CWRUtil::Q5&, touchgfx::CWRUtil::Q5&, touchgfx::CWRUtil::Q5&, touchgfx::CWRUtil::Q5&) const &rArr; touchgfx::CWRUtil::cosine(touchgfx::CWRUtil::Q5) &rArr; touchgfx::CWRUtil::sine(touchgfx::CWRUtil::Q5) &rArr; touchgfx::muldiv(int, int, int, int&) &rArr; touchgfx::muldivu(unsigned, unsigned, unsigned, unsigned&) &rArr;  touchgfx::muldivu(unsigned, unsigned, unsigned, unsigned&) (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[33a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;void touchgfx::Circle::updateArcEnd&lang;float&rang;(T1)
</UL>
<BR>[Called By]<UL><LI><a href="#[f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CookingView::handleTickEvent()
</UL>

<P><STRONG><a name="[fa]"></a>CookingView::pressUpKeyFunction()</STRONG> (Thumb, 68 bytes, Stack size 8 bytes, cookingview.o(i._ZN11CookingView18pressUpKeyFunctionEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 112 + Unknown Stack Size
<LI>Call Chain = CookingView::pressUpKeyFunction() &rArr; CookingView::changeColorUnselectedMenuBackground() &rArr; touchgfx::Button::setBitmaps(const touchgfx::Bitmap&, const touchgfx::Bitmap&) &rArr; touchgfx::Bitmap::getHeight() const &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[33c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CookingView::changeColorUnselectedMenuBackground()
<LI><a href="#[33d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CookingView::changeColorOverviewedMenuBackground()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> cookingview.o(.constdata__ZTV11CookingView)
</UL>
<P><STRONG><a name="[f9]"></a>CookingView::pressDownKeyFunction()</STRONG> (Thumb, 72 bytes, Stack size 8 bytes, cookingview.o(i._ZN11CookingView20pressDownKeyFunctionEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 112 + Unknown Stack Size
<LI>Call Chain = CookingView::pressDownKeyFunction() &rArr; CookingView::changeColorUnselectedMenuBackground() &rArr; touchgfx::Button::setBitmaps(const touchgfx::Bitmap&, const touchgfx::Bitmap&) &rArr; touchgfx::Bitmap::getHeight() const &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[33c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CookingView::changeColorUnselectedMenuBackground()
<LI><a href="#[33d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CookingView::changeColorOverviewedMenuBackground()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> cookingview.o(.constdata__ZTV11CookingView)
</UL>
<P><STRONG><a name="[fc]"></a>CookingView::pressLeftKeyFunction()</STRONG> (Thumb, 72 bytes, Stack size 8 bytes, cookingview.o(i._ZN11CookingView20pressLeftKeyFunctionEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 112 + Unknown Stack Size
<LI>Call Chain = CookingView::pressLeftKeyFunction() &rArr; CookingView::changeColorUnselectedMenuBackground() &rArr; touchgfx::Button::setBitmaps(const touchgfx::Bitmap&, const touchgfx::Bitmap&) &rArr; touchgfx::Bitmap::getHeight() const &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[33c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CookingView::changeColorUnselectedMenuBackground()
<LI><a href="#[33d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CookingView::changeColorOverviewedMenuBackground()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> cookingview.o(.constdata__ZTV11CookingView)
</UL>
<P><STRONG><a name="[ff]"></a>CookingView::pressInfoButtonAction()</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, cookingview.o(i._ZN11CookingView21pressInfoButtonActionEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = CookingView::pressInfoButtonAction()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> cookingview.o(.constdata__ZTV11CookingView)
</UL>
<P><STRONG><a name="[fb]"></a>CookingView::pressRightKeyFunction()</STRONG> (Thumb, 72 bytes, Stack size 8 bytes, cookingview.o(i._ZN11CookingView21pressRightKeyFunctionEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 112 + Unknown Stack Size
<LI>Call Chain = CookingView::pressRightKeyFunction() &rArr; CookingView::changeColorUnselectedMenuBackground() &rArr; touchgfx::Button::setBitmaps(const touchgfx::Bitmap&, const touchgfx::Bitmap&) &rArr; touchgfx::Bitmap::getHeight() const &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[33c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CookingView::changeColorUnselectedMenuBackground()
<LI><a href="#[33d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CookingView::changeColorOverviewedMenuBackground()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> cookingview.o(.constdata__ZTV11CookingView)
</UL>
<P><STRONG><a name="[f8]"></a>CookingView::pressCenterKeyFunction()</STRONG> (Thumb, 98 bytes, Stack size 8 bytes, cookingview.o(i._ZN11CookingView22pressCenterKeyFunctionEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = CookingView::pressCenterKeyFunction()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> cookingview.o(.constdata__ZTV11CookingView)
</UL>
<P><STRONG><a name="[337]"></a>CookingView::EXITSCREEN_STATEMACHINE()</STRONG> (Thumb, 460 bytes, Stack size 32 bytes, cookingview.o(i._ZN11CookingView23EXITSCREEN_STATEMACHINEEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 448 + Unknown Stack Size
<LI>Call Chain = CookingView::EXITSCREEN_STATEMACHINE() &rArr; void touchgfx::Circle::updateArcEnd&lang;float&rang;(T1) &rArr; touchgfx::Circle::getMinimalRectForUpdatedEndAngle(const touchgfx::CWRUtil::Q5&) const &rArr; touchgfx::Circle::getMinimalRect(touchgfx::CWRUtil::Q5, touchgfx::CWRUtil::Q5) const &rArr; touchgfx::Circle::calculateMinimalRect(touchgfx::CWRUtil::Q5, touchgfx::CWRUtil::Q5, touchgfx::CWRUtil::Q5&, touchgfx::CWRUtil::Q5&, touchgfx::CWRUtil::Q5&, touchgfx::CWRUtil::Q5&) const &rArr; touchgfx::Circle::updateMinMaxAngleLine(const touchgfx::CWRUtil::Q5&, const touchgfx::CWRUtil::Q5&, touchgfx::CWRUtil::Q5&, touchgfx::CWRUtil::Q5&, touchgfx::CWRUtil::Q5&, touchgfx::CWRUtil::Q5&) const &rArr; touchgfx::CWRUtil::cosine(touchgfx::CWRUtil::Q5) &rArr; touchgfx::CWRUtil::sine(touchgfx::CWRUtil::Q5) &rArr; touchgfx::muldiv(int, int, int, int&) &rArr; touchgfx::muldivu(unsigned, unsigned, unsigned, unsigned&) &rArr;  touchgfx::muldivu(unsigned, unsigned, unsigned, unsigned&) (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[340]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Circle::getMinimalRectForUpdatedEndAngle(const touchgfx::CWRUtil::Q5&) const
<LI><a href="#[1cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::CanvasWidget::invalidate() const
<LI><a href="#[33b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::CWRUtil::Q5 touchgfx::CWRUtil::toQ5&lang;int&rang;(T1)
<LI><a href="#[33a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;void touchgfx::Circle::updateArcEnd&lang;float&rang;(T1)
<LI><a href="#[344]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::FadeAnimator&lang;touchgfx::Button&rang;::startFadeAnimation(unsigned char, unsigned short, short(*)(unsigned short, short, short, unsigned short))
<LI><a href="#[343]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::FadeAnimator&lang;touchgfx::Image&rang;::startFadeAnimation(unsigned char, unsigned short, short(*)(unsigned short, short, short, unsigned short))
<LI><a href="#[341]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::FadeAnimator&lang;touchgfx::TextAreaWithTwoWildcards&rang;::startFadeAnimation(unsigned char, unsigned short, short(*)(unsigned short, short, short, unsigned short))
<LI><a href="#[33f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::CWRUtil::Q5::operator int() const
<LI><a href="#[33e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Drawable::setTouchable(bool)
<LI><a href="#[342]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::FadeAnimator&lang;touchgfx::TextArea&rang;::startFadeAnimation(unsigned char, unsigned short, short(*)(unsigned short, short, short, unsigned short))
</UL>
<BR>[Called By]<UL><LI><a href="#[f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CookingView::handleTickEvent()
</UL>

<P><STRONG><a name="[fd]"></a>CookingView::pressCancelButtonAction()</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, cookingview.o(i._ZN11CookingView23pressCancelButtonActionEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = CookingView::pressCancelButtonAction()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> cookingview.o(.constdata__ZTV11CookingView)
</UL>
<P><STRONG><a name="[336]"></a>CookingView::ENTERSCREEN_STATEMACHINE()</STRONG> (Thumb, 192 bytes, Stack size 8 bytes, cookingview.o(i._ZN11CookingView24ENTERSCREEN_STATEMACHINEEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 152 + Unknown Stack Size
<LI>Call Chain = CookingView::ENTERSCREEN_STATEMACHINE() &rArr; touchgfx::FadeAnimator&lang;touchgfx::TextArea&rang;::startFadeAnimation(unsigned char, unsigned short, short(*)(unsigned short, short, short, unsigned short)) &rArr; touchgfx::FadeAnimator&lang;touchgfx::TextArea&rang;::nextFadeAnimationStep() &rArr; touchgfx::TextArea::invalidateContent() const &rArr; touchgfx::TypedText::getText() const &rArr; __aeabi_assert &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[344]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::FadeAnimator&lang;touchgfx::Button&rang;::startFadeAnimation(unsigned char, unsigned short, short(*)(unsigned short, short, short, unsigned short))
<LI><a href="#[343]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::FadeAnimator&lang;touchgfx::Image&rang;::startFadeAnimation(unsigned char, unsigned short, short(*)(unsigned short, short, short, unsigned short))
<LI><a href="#[341]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::FadeAnimator&lang;touchgfx::TextAreaWithTwoWildcards&rang;::startFadeAnimation(unsigned char, unsigned short, short(*)(unsigned short, short, short, unsigned short))
<LI><a href="#[342]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::FadeAnimator&lang;touchgfx::TextArea&rang;::startFadeAnimation(unsigned char, unsigned short, short(*)(unsigned short, short, short, unsigned short))
</UL>
<BR>[Called By]<UL><LI><a href="#[f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CookingView::handleTickEvent()
</UL>

<P><STRONG><a name="[fe]"></a>CookingView::pressSettingButtonAction()</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, cookingview.o(i._ZN11CookingView24pressSettingButtonActionEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = CookingView::pressSettingButtonAction()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> cookingview.o(.constdata__ZTV11CookingView)
</UL>
<P><STRONG><a name="[339]"></a>CookingView::setUpInfoAboutCookingFood()</STRONG> (Thumb, 426 bytes, Stack size 64 bytes, cookingview.o(i._ZN11CookingView25setUpInfoAboutCookingFoodEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 352 + Unknown Stack Size
<LI>Call Chain = CookingView::setUpInfoAboutCookingFood() &rArr; touchgfx::Unicode::snprintf(unsigned short*, unsigned short, const char*, ...) &rArr; touchgfx::Unicode::vsnprintf(unsigned short*, unsigned short, const char*, std::__va_list) &rArr; touchgfx::Unicode::vsnprintf(unsigned short*, unsigned short, const unsigned short*, const char*, std::__va_list) &rArr; touchgfx::Unicode::itoa(int, unsigned short*, unsigned short, int) &rArr; touchgfx::Unicode::strncpy(unsigned short*, const char*, unsigned short)
</UL>
<BR>[Calls]<UL><LI><a href="#[347]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextArea::setTypedText(const touchgfx::TypedText&)
<LI><a href="#[333]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Unicode::snprintf(unsigned short*, unsigned short, const char*, ...)
<LI><a href="#[1f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Image::setBitmap(const touchgfx::Bitmap&)
<LI><a href="#[346]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TypedText::TypedText(unsigned short)
<LI><a href="#[345]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Bitmap::Bitmap(unsigned short)
</UL>
<BR>[Called By]<UL><LI><a href="#[331]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CookingView::customSetupScreen()
</UL>

<P><STRONG><a name="[33d]"></a>CookingView::changeColorOverviewedMenuBackground()</STRONG> (Thumb, 148 bytes, Stack size 24 bytes, cookingview.o(i._ZN11CookingView35changeColorOverviewedMenuBackgroundEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 104 + Unknown Stack Size
<LI>Call Chain = CookingView::changeColorOverviewedMenuBackground() &rArr; touchgfx::Button::setBitmaps(const touchgfx::Bitmap&, const touchgfx::Bitmap&) &rArr; touchgfx::Bitmap::getHeight() const &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[1e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Drawable::invalidate() const
<LI><a href="#[1fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Button::setBitmaps(const touchgfx::Bitmap&, const touchgfx::Bitmap&)
<LI><a href="#[345]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Bitmap::Bitmap(unsigned short)
</UL>
<BR>[Called By]<UL><LI><a href="#[fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CookingView::pressRightKeyFunction()
<LI><a href="#[fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CookingView::pressLeftKeyFunction()
<LI><a href="#[f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CookingView::pressDownKeyFunction()
<LI><a href="#[fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CookingView::pressUpKeyFunction()
</UL>

<P><STRONG><a name="[33c]"></a>CookingView::changeColorUnselectedMenuBackground()</STRONG> (Thumb, 240 bytes, Stack size 24 bytes, cookingview.o(i._ZN11CookingView35changeColorUnselectedMenuBackgroundEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 104 + Unknown Stack Size
<LI>Call Chain = CookingView::changeColorUnselectedMenuBackground() &rArr; touchgfx::Button::setBitmaps(const touchgfx::Bitmap&, const touchgfx::Bitmap&) &rArr; touchgfx::Bitmap::getHeight() const &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[1e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Drawable::invalidate() const
<LI><a href="#[1fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Button::setBitmaps(const touchgfx::Bitmap&, const touchgfx::Bitmap&)
<LI><a href="#[345]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Bitmap::Bitmap(unsigned short)
</UL>
<BR>[Called By]<UL><LI><a href="#[fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CookingView::pressRightKeyFunction()
<LI><a href="#[fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CookingView::pressLeftKeyFunction()
<LI><a href="#[f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CookingView::pressDownKeyFunction()
<LI><a href="#[fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CookingView::pressUpKeyFunction()
</UL>

<P><STRONG><a name="[348]"></a>CookingView::CookingView()</STRONG> (Thumb, 122 bytes, Stack size 8 bytes, cookingview.o(i._ZN11CookingViewC1Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 360 + Unknown Stack Size
<LI>Call Chain = CookingView::CookingView() &rArr; CookingViewBase::CookingViewBase() &rArr; touchgfx::Unicode::snprintf(unsigned short*, unsigned short, const char*, ...) &rArr; touchgfx::Unicode::vsnprintf(unsigned short*, unsigned short, const char*, std::__va_list) &rArr; touchgfx::Unicode::vsnprintf(unsigned short*, unsigned short, const unsigned short*, const char*, std::__va_list) &rArr; touchgfx::Unicode::itoa(int, unsigned short*, unsigned short, int) &rArr; touchgfx::Unicode::strncpy(unsigned short*, const char*, unsigned short)
</UL>
<BR>[Calls]<UL><LI><a href="#[349]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CookingViewBase::CookingViewBase()
</UL>
<BR>[Called By]<UL><LI><a href="#[3b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;T2* touchgfx::makeTransition&lang;CookingView, CookingPresenter, touchgfx::NoTransition, Model&rang;(touchgfx::Screen**, touchgfx::Presenter**, touchgfx::MVPHeap&, touchgfx::Transition**, T4*)
</UL>

<P><STRONG><a name="[558]"></a>CookingView::CookingView__sub_object()</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, cookingview.o(i._ZN11CookingViewC1Ev), UNUSED)

<P><STRONG><a name="[eb]"></a>CookingView::~CookingView()</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, cookingview.o(i._ZN11CookingViewD1Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = CookingView::~CookingView() &rArr; CookingViewBase::~CookingViewBase() &rArr; touchgfx::FadeAnimator&lang;touchgfx::TextAreaWithTwoWildcards&rang;::~FadeAnimator() &rArr; touchgfx::TextAreaWithTwoWildcards::~TextAreaWithTwoWildcards() &rArr; touchgfx::TextArea::~TextArea()
</UL>
<BR>[Calls]<UL><LI><a href="#[13a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CookingViewBase::~CookingViewBase()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> cookingview.o(.constdata__ZTV11CookingView)
</UL>
<P><STRONG><a name="[559]"></a>CookingView::~CookingView__sub_object()</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, cookingview.o(i._ZN11CookingViewD1Ev), UNUSED)

<P><STRONG><a name="[120]"></a>TouchGFXHAL::beginFrame()</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, touchgfxhal.o(i._ZN11TouchGFXHAL10beginFrameEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = TouchGFXHAL::beginFrame() &rArr; TouchGFXGeneratedHAL::beginFrame()
</UL>
<BR>[Calls]<UL><LI><a href="#[199]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TouchGFXGeneratedHAL::beginFrame()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> touchgfxhal.o(.constdata__ZTV11TouchGFXHAL)
</UL>
<P><STRONG><a name="[102]"></a>TouchGFXHAL::initialize()</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, touchgfxhal.o(i._ZN11TouchGFXHAL10initializeEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 184 + Unknown Stack Size
<LI>Call Chain = TouchGFXHAL::initialize() &rArr; TouchGFXGeneratedHAL::initialize() &rArr; touchgfx::HAL::initialize() &rArr; touchgfx::OSWrappers::initialize() &rArr; osSemaphoreNew &rArr; xQueueCreateCountingSemaphoreStatic &rArr; xQueueGenericCreateStatic &rArr; prvInitialiseNewQueue &rArr; xQueueGenericReset &rArr; xTaskRemoveFromEventList
</UL>
<BR>[Calls]<UL><LI><a href="#[191]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TouchGFXGeneratedHAL::initialize()
</UL>
<BR>[Called By]<UL><LI><a href="#[31b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx_init
</UL>
<BR>[Address Reference Count : 1]<UL><LI> touchgfxhal.o(.constdata__ZTV11TouchGFXHAL)
</UL>
<P><STRONG><a name="[116]"></a>TouchGFXHAL::enableInterrupts()</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, touchgfxhal.o(i._ZN11TouchGFXHAL16enableInterruptsEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = TouchGFXHAL::enableInterrupts()
</UL>
<BR>[Calls]<UL><LI><a href="#[196]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TouchGFXGeneratedHAL::enableInterrupts()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> touchgfxhal.o(.constdata__ZTV11TouchGFXHAL)
</UL>
<P><STRONG><a name="[104]"></a>TouchGFXHAL::flushFrameBuffer(const touchgfx::Rect&)</STRONG> (Thumb, 16 bytes, Stack size 16 bytes, touchgfxhal.o(i._ZN11TouchGFXHAL16flushFrameBufferERKN8touchgfx4RectE))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = TouchGFXHAL::flushFrameBuffer(const touchgfx::Rect&) &rArr; TouchGFXGeneratedHAL::flushFrameBuffer(const touchgfx::Rect&)
</UL>
<BR>[Calls]<UL><LI><a href="#[192]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TouchGFXGeneratedHAL::flushFrameBuffer(const touchgfx::Rect&)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> touchgfxhal.o(.constdata__ZTV11TouchGFXHAL)
</UL>
<P><STRONG><a name="[117]"></a>TouchGFXHAL::disableInterrupts()</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, touchgfxhal.o(i._ZN11TouchGFXHAL17disableInterruptsEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = TouchGFXHAL::disableInterrupts() &rArr; TouchGFXGeneratedHAL::disableInterrupts()
</UL>
<BR>[Calls]<UL><LI><a href="#[197]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TouchGFXGeneratedHAL::disableInterrupts()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> touchgfxhal.o(.constdata__ZTV11TouchGFXHAL)
</UL>
<P><STRONG><a name="[122]"></a>TouchGFXHAL::setTFTFrameBuffer(unsigned short*)</STRONG> (Thumb, 16 bytes, Stack size 16 bytes, touchgfxhal.o(i._ZN11TouchGFXHAL17setTFTFrameBufferEPt))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = TouchGFXHAL::setTFTFrameBuffer(unsigned short*)
</UL>
<BR>[Calls]<UL><LI><a href="#[19b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TouchGFXGeneratedHAL::setTFTFrameBuffer(unsigned short*)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> touchgfxhal.o(.constdata__ZTV11TouchGFXHAL)
</UL>
<P><STRONG><a name="[115]"></a>TouchGFXHAL::configureInterrupts()</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, touchgfxhal.o(i._ZN11TouchGFXHAL19configureInterruptsEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = TouchGFXHAL::configureInterrupts() &rArr; TouchGFXGeneratedHAL::configureInterrupts()
</UL>
<BR>[Calls]<UL><LI><a href="#[195]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TouchGFXGeneratedHAL::configureInterrupts()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> touchgfxhal.o(.constdata__ZTV11TouchGFXHAL)
</UL>
<P><STRONG><a name="[118]"></a>TouchGFXHAL::enableLCDControllerInterrupt()</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, touchgfxhal.o(i._ZN11TouchGFXHAL28enableLCDControllerInterruptEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = TouchGFXHAL::enableLCDControllerInterrupt()
</UL>
<BR>[Calls]<UL><LI><a href="#[198]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TouchGFXGeneratedHAL::enableLCDControllerInterrupt()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> touchgfxhal.o(.constdata__ZTV11TouchGFXHAL)
</UL>
<P><STRONG><a name="[121]"></a>TouchGFXHAL::endFrame()</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, touchgfxhal.o(i._ZN11TouchGFXHAL8endFrameEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = TouchGFXHAL::endFrame() &rArr; TouchGFXGeneratedHAL::endFrame() &rArr; touchgfx::HAL::endFrame()
</UL>
<BR>[Calls]<UL><LI><a href="#[19a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TouchGFXGeneratedHAL::endFrame()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> touchgfxhal.o(.constdata__ZTV11TouchGFXHAL)
</UL>
<P><STRONG><a name="[10a]"></a>TouchGFXHAL::blockCopy(void*, const void*, unsigned)</STRONG> (Thumb, 28 bytes, Stack size 24 bytes, touchgfxhal.o(i._ZN11TouchGFXHAL9blockCopyEPvPKvj))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = TouchGFXHAL::blockCopy(void*, const void*, unsigned) &rArr; TouchGFXGeneratedHAL::blockCopy(void*, const void*, unsigned) &rArr; touchgfx::HAL::blockCopy(void*, const void*, unsigned)
</UL>
<BR>[Calls]<UL><LI><a href="#[194]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TouchGFXGeneratedHAL::blockCopy(void*, const void*, unsigned)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> touchgfxhal.o(.constdata__ZTV11TouchGFXHAL)
</UL>
<P><STRONG><a name="[d7]"></a>TouchGFXHAL::~TouchGFXHAL()</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, touchgfxhal.o(i._ZN11TouchGFXHALD1Ev))
<BR>[Address Reference Count : 2]<UL><LI> touchgfxconfiguration.o(i.__sti___25_TouchGFXConfiguration_cpp_f5abfd34)
<LI> touchgfxhal.o(.constdata__ZTV11TouchGFXHAL)
</UL>
<P><STRONG><a name="[55a]"></a>TouchGFXHAL::~TouchGFXHAL__sub_object()</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, touchgfxhal.o(i._ZN11TouchGFXHALD1Ev), UNUSED)

<P><STRONG><a name="[34a]"></a>FrontendHeap::FrontendHeap()</STRONG> (Thumb, 172 bytes, Stack size 16 bytes, touchgfxconfiguration.o(i._ZN12FrontendHeapC1Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 160<LI>Call Chain = FrontendHeap::FrontendHeap() &rArr; FrontendApplication::FrontendApplication(Model&, FrontendHeap&) &rArr; FrontendApplicationBase::FrontendApplicationBase(Model&, FrontendHeap&) &rArr; touchgfx::LCD16bpp::enableTextureMapperAll() &rArr; touchgfx::LCD16bpp::enableTextureMapperL8_ARGB8888() &rArr; touchgfx::LCD16bpp::enableTextureMapperL8_ARGB8888_BilinearInterpolation() &rArr; __aeabi_atexit &rArr; malloc &rArr; __Heap_Full &rArr; __Heap_ProvideMemory &rArr; free
</UL>
<BR>[Calls]<UL><LI><a href="#[34b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::AbstractPartition::AbstractPartition__sub_object()
<LI><a href="#[34c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Model::Model()
<LI><a href="#[34d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FrontendApplication::FrontendApplication(Model&, FrontendHeap&)
<LI><a href="#[128]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FrontendHeapBase::gotoStartScreen(FrontendApplication&)
</UL>
<BR>[Called By]<UL><LI><a href="#[31b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx_init
</UL>

<P><STRONG><a name="[55b]"></a>FrontendHeap::FrontendHeap__sub_object()</STRONG> (Thumb, 0 bytes, Stack size 16 bytes, touchgfxconfiguration.o(i._ZN12FrontendHeapC1Ev), UNUSED)

<P><STRONG><a name="[d9]"></a>FrontendHeap::~FrontendHeap()</STRONG> (Thumb, 78 bytes, Stack size 16 bytes, touchgfxconfiguration.o(i._ZN12FrontendHeapD1Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = FrontendHeap::~FrontendHeap() &rArr; touchgfx::Partition&lang;touchgfx::meta::TypeList&lang;touchgfx::NoTransition, touchgfx::meta::TypeList&lang;touchgfx::meta::Nil, touchgfx::meta::Nil&rang;&rang;, (unsigned short)1&rang;::~Partition()
</UL>
<BR>[Calls]<UL><LI><a href="#[28b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Partition&lang;touchgfx::meta::TypeList&lang;touchgfx::NoTransition, touchgfx::meta::TypeList&lang;touchgfx::meta::Nil, touchgfx::meta::Nil&rang;&rang;, (unsigned short)1&rang;::~Partition()
<LI><a href="#[288]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Partition&lang;touchgfx::meta::TypeList&lang;InformationPresenter, touchgfx::meta::TypeList&lang;touchgfx::meta::Nil, touchgfx::meta::Nil&rang;&rang;, (unsigned short)1&rang;::~Partition()
<LI><a href="#[285]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Partition&lang;touchgfx::meta::TypeList&lang;CookingView, touchgfx::meta::TypeList&lang;touchgfx::meta::Nil, touchgfx::meta::Nil&rang;&rang;, (unsigned short)1&rang;::~Partition()
<LI><a href="#[1af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FrontendApplicationBase::~FrontendApplicationBase()
<LI><a href="#[14f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FrontendHeapBase::~FrontendHeapBase()
</UL>
<BR>[Address Reference Count : 2]<UL><LI> touchgfxconfiguration.o(i.touchgfx_init)
<LI> touchgfxconfiguration.o(.constdata__ZTV12FrontendHeap)
</UL>
<P><STRONG><a name="[55c]"></a>FrontendHeap::~FrontendHeap__sub_object()</STRONG> (Thumb, 0 bytes, Stack size 16 bytes, touchgfxconfiguration.o(i._ZN12FrontendHeapD1Ev), UNUSED)

<P><STRONG><a name="[12a]"></a>SettingsView::setupScreen()</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, settingsview.o(i._ZN12SettingsView11setupScreenEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 328 + Unknown Stack Size
<LI>Call Chain = SettingsView::setupScreen() &rArr; SettingsView::customEntrySetup() &rArr; SettingsView::setUpTheClock() &rArr; touchgfx::Unicode::snprintf(unsigned short*, unsigned short, const char*, ...) &rArr; touchgfx::Unicode::vsnprintf(unsigned short*, unsigned short, const char*, std::__va_list) &rArr; touchgfx::Unicode::vsnprintf(unsigned short*, unsigned short, const unsigned short*, const char*, std::__va_list) &rArr; touchgfx::Unicode::itoa(int, unsigned short*, unsigned short, int) &rArr; touchgfx::Unicode::strncpy(unsigned short*, const char*, unsigned short)
</UL>
<BR>[Calls]<UL><LI><a href="#[151]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SettingsViewBase::setupScreen()
<LI><a href="#[34f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SettingsView::customEntrySetup()
<LI><a href="#[34e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SettingsView::readSharedData()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> settingsview.o(.constdata__ZTV12SettingsView)
</UL>
<P><STRONG><a name="[355]"></a>SettingsView::updateTimer()</STRONG> (Thumb, 74 bytes, Stack size 8 bytes, settingsview.o(i._ZN12SettingsView11updateTimerEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = SettingsView::updateTimer()
</UL>
<BR>[Called By]<UL><LI><a href="#[12c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SettingsView::handleTickEvent()
</UL>

<P><STRONG><a name="[137]"></a>SettingsView::hourIsClicked()</STRONG> (Thumb, 60 bytes, Stack size 8 bytes, settingsview.o(i._ZN12SettingsView13hourIsClickedEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = SettingsView::hourIsClicked() &rArr; touchgfx::Drawable::invalidate() const
</UL>
<BR>[Calls]<UL><LI><a href="#[1e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Drawable::invalidate() const
<LI><a href="#[351]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Drawable::setVisible(bool)
<LI><a href="#[350]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Drawable::setXY(short, short)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> settingsview.o(.constdata__ZTV12SettingsView)
</UL>
<P><STRONG><a name="[352]"></a>SettingsView::setUpTheClock()</STRONG> (Thumb, 74 bytes, Stack size 8 bytes, settingsview.o(i._ZN12SettingsView13setUpTheClockEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 296<LI>Call Chain = SettingsView::setUpTheClock() &rArr; touchgfx::Unicode::snprintf(unsigned short*, unsigned short, const char*, ...) &rArr; touchgfx::Unicode::vsnprintf(unsigned short*, unsigned short, const char*, std::__va_list) &rArr; touchgfx::Unicode::vsnprintf(unsigned short*, unsigned short, const unsigned short*, const char*, std::__va_list) &rArr; touchgfx::Unicode::itoa(int, unsigned short*, unsigned short, int) &rArr; touchgfx::Unicode::strncpy(unsigned short*, const char*, unsigned short)
</UL>
<BR>[Calls]<UL><LI><a href="#[333]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Unicode::snprintf(unsigned short*, unsigned short, const char*, ...)
</UL>
<BR>[Called By]<UL><LI><a href="#[34f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SettingsView::customEntrySetup()
</UL>

<P><STRONG><a name="[353]"></a>SettingsView::clockAnimation()</STRONG> (Thumb, 158 bytes, Stack size 8 bytes, settingsview.o(i._ZN12SettingsView14clockAnimationEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 296<LI>Call Chain = SettingsView::clockAnimation() &rArr; touchgfx::Unicode::snprintf(unsigned short*, unsigned short, const char*, ...) &rArr; touchgfx::Unicode::vsnprintf(unsigned short*, unsigned short, const char*, std::__va_list) &rArr; touchgfx::Unicode::vsnprintf(unsigned short*, unsigned short, const unsigned short*, const char*, std::__va_list) &rArr; touchgfx::Unicode::itoa(int, unsigned short*, unsigned short, int) &rArr; touchgfx::Unicode::strncpy(unsigned short*, const char*, unsigned short)
</UL>
<BR>[Calls]<UL><LI><a href="#[1e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Drawable::invalidate() const
<LI><a href="#[333]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Unicode::snprintf(unsigned short*, unsigned short, const char*, ...)
</UL>
<BR>[Called By]<UL><LI><a href="#[12c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SettingsView::handleTickEvent()
</UL>

<P><STRONG><a name="[34e]"></a>SettingsView::readSharedData()</STRONG> (Thumb, 56 bytes, Stack size 0 bytes, settingsview.o(i._ZN12SettingsView14readSharedDataEv))
<BR><BR>[Called By]<UL><LI><a href="#[12a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SettingsView::setupScreen()
</UL>

<P><STRONG><a name="[354]"></a>SettingsView::saveSharedData()</STRONG> (Thumb, 68 bytes, Stack size 8 bytes, settingsview.o(i._ZN12SettingsView14saveSharedDataEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = SettingsView::saveSharedData()
</UL>
<BR>[Called By]<UL><LI><a href="#[12b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SettingsView::tearDownScreen()
</UL>

<P><STRONG><a name="[12b]"></a>SettingsView::tearDownScreen()</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, settingsview.o(i._ZN12SettingsView14tearDownScreenEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = SettingsView::tearDownScreen() &rArr; SettingsView::saveSharedData()
</UL>
<BR>[Calls]<UL><LI><a href="#[354]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SettingsView::saveSharedData()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> settingsview.o(.constdata__ZTV12SettingsView)
</UL>
<P><STRONG><a name="[12c]"></a>SettingsView::handleTickEvent()</STRONG> (Thumb, 76 bytes, Stack size 8 bytes, settingsview.o(i._ZN12SettingsView15handleTickEventEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 304 + Unknown Stack Size
<LI>Call Chain = SettingsView::handleTickEvent() &rArr; SettingsView::clockAnimation() &rArr; touchgfx::Unicode::snprintf(unsigned short*, unsigned short, const char*, ...) &rArr; touchgfx::Unicode::vsnprintf(unsigned short*, unsigned short, const char*, std::__va_list) &rArr; touchgfx::Unicode::vsnprintf(unsigned short*, unsigned short, const unsigned short*, const char*, std::__va_list) &rArr; touchgfx::Unicode::itoa(int, unsigned short*, unsigned short, int) &rArr; touchgfx::Unicode::strncpy(unsigned short*, const char*, unsigned short)
</UL>
<BR>[Calls]<UL><LI><a href="#[356]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SettingsView::ENTERSCREEN_STATEMACHINE()
<LI><a href="#[357]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SettingsView::EXITSCREEN_STATEMACHINE()
<LI><a href="#[353]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SettingsView::clockAnimation()
<LI><a href="#[355]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SettingsView::updateTimer()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> settingsview.o(.constdata__ZTV12SettingsView)
</UL>
<P><STRONG><a name="[138]"></a>SettingsView::minuteIsClicked()</STRONG> (Thumb, 60 bytes, Stack size 8 bytes, settingsview.o(i._ZN12SettingsView15minuteIsClickedEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = SettingsView::minuteIsClicked() &rArr; touchgfx::Drawable::invalidate() const
</UL>
<BR>[Calls]<UL><LI><a href="#[1e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Drawable::invalidate() const
<LI><a href="#[351]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Drawable::setVisible(bool)
<LI><a href="#[350]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Drawable::setXY(short, short)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> settingsview.o(.constdata__ZTV12SettingsView)
</UL>
<P><STRONG><a name="[34f]"></a>SettingsView::customEntrySetup()</STRONG> (Thumb, 64 bytes, Stack size 24 bytes, settingsview.o(i._ZN12SettingsView16customEntrySetupEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 320 + Unknown Stack Size
<LI>Call Chain = SettingsView::customEntrySetup() &rArr; SettingsView::setUpTheClock() &rArr; touchgfx::Unicode::snprintf(unsigned short*, unsigned short, const char*, ...) &rArr; touchgfx::Unicode::vsnprintf(unsigned short*, unsigned short, const char*, std::__va_list) &rArr; touchgfx::Unicode::vsnprintf(unsigned short*, unsigned short, const unsigned short*, const char*, std::__va_list) &rArr; touchgfx::Unicode::itoa(int, unsigned short*, unsigned short, int) &rArr; touchgfx::Unicode::strncpy(unsigned short*, const char*, unsigned short)
</UL>
<BR>[Calls]<UL><LI><a href="#[1fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Button::setBitmaps(const touchgfx::Bitmap&, const touchgfx::Bitmap&)
<LI><a href="#[33e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Drawable::setTouchable(bool)
<LI><a href="#[345]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Bitmap::Bitmap(unsigned short)
<LI><a href="#[352]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SettingsView::setUpTheClock()
</UL>
<BR>[Called By]<UL><LI><a href="#[12a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SettingsView::setupScreen()
</UL>

<P><STRONG><a name="[136]"></a>SettingsView::clockButtonClicked()</STRONG> (Thumb, 178 bytes, Stack size 32 bytes, settingsview.o(i._ZN12SettingsView18clockButtonClickedEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 112 + Unknown Stack Size
<LI>Call Chain = SettingsView::clockButtonClicked() &rArr; touchgfx::Button::setBitmaps(const touchgfx::Bitmap&, const touchgfx::Bitmap&) &rArr; touchgfx::Bitmap::getHeight() const &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[1e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Drawable::invalidate() const
<LI><a href="#[1fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Button::setBitmaps(const touchgfx::Bitmap&, const touchgfx::Bitmap&)
<LI><a href="#[345]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Bitmap::Bitmap(unsigned short)
<LI><a href="#[351]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Drawable::setVisible(bool)
<LI><a href="#[359]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextArea::setColor(touchgfx::colortype)
<LI><a href="#[350]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Drawable::setXY(short, short)
<LI><a href="#[358]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Color::getColorFromRGB(unsigned char, unsigned char, unsigned char)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> settingsview.o(.constdata__ZTV12SettingsView)
</UL>
<P><STRONG><a name="[134]"></a>SettingsView::pressUpKeyFunction()</STRONG> (Thumb, 306 bytes, Stack size 40 bytes, settingsview.o(i._ZN12SettingsView18pressUpKeyFunctionEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 336 + Unknown Stack Size
<LI>Call Chain = SettingsView::pressUpKeyFunction() &rArr; SettingsView::increaseClockSettings() &rArr; touchgfx::Unicode::snprintf(unsigned short*, unsigned short, const char*, ...) &rArr; touchgfx::Unicode::vsnprintf(unsigned short*, unsigned short, const char*, std::__va_list) &rArr; touchgfx::Unicode::vsnprintf(unsigned short*, unsigned short, const unsigned short*, const char*, std::__va_list) &rArr; touchgfx::Unicode::itoa(int, unsigned short*, unsigned short, int) &rArr; touchgfx::Unicode::strncpy(unsigned short*, const char*, unsigned short)
</UL>
<BR>[Calls]<UL><LI><a href="#[1e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Drawable::invalidate() const
<LI><a href="#[1fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Button::setBitmaps(const touchgfx::Bitmap&, const touchgfx::Bitmap&)
<LI><a href="#[345]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Bitmap::Bitmap(unsigned short)
<LI><a href="#[359]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextArea::setColor(touchgfx::colortype)
<LI><a href="#[358]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Color::getColorFromRGB(unsigned char, unsigned char, unsigned char)
<LI><a href="#[35a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SettingsView::languageSettingsOption()
<LI><a href="#[35b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SettingsView::increaseClockSettings()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> settingsview.o(.constdata__ZTV12SettingsView)
</UL>
<P><STRONG><a name="[131]"></a>SettingsView::pressDownKeyFunction()</STRONG> (Thumb, 298 bytes, Stack size 40 bytes, settingsview.o(i._ZN12SettingsView20pressDownKeyFunctionEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 336 + Unknown Stack Size
<LI>Call Chain = SettingsView::pressDownKeyFunction() &rArr; SettingsView::decreaseClockSettings() &rArr; touchgfx::Unicode::snprintf(unsigned short*, unsigned short, const char*, ...) &rArr; touchgfx::Unicode::vsnprintf(unsigned short*, unsigned short, const char*, std::__va_list) &rArr; touchgfx::Unicode::vsnprintf(unsigned short*, unsigned short, const unsigned short*, const char*, std::__va_list) &rArr; touchgfx::Unicode::itoa(int, unsigned short*, unsigned short, int) &rArr; touchgfx::Unicode::strncpy(unsigned short*, const char*, unsigned short)
</UL>
<BR>[Calls]<UL><LI><a href="#[1e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Drawable::invalidate() const
<LI><a href="#[1fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Button::setBitmaps(const touchgfx::Bitmap&, const touchgfx::Bitmap&)
<LI><a href="#[345]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Bitmap::Bitmap(unsigned short)
<LI><a href="#[359]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextArea::setColor(touchgfx::colortype)
<LI><a href="#[358]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Color::getColorFromRGB(unsigned char, unsigned char, unsigned char)
<LI><a href="#[35a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SettingsView::languageSettingsOption()
<LI><a href="#[35c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SettingsView::decreaseClockSettings()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> settingsview.o(.constdata__ZTV12SettingsView)
</UL>
<P><STRONG><a name="[35c]"></a>SettingsView::decreaseClockSettings()</STRONG> (Thumb, 124 bytes, Stack size 8 bytes, settingsview.o(i._ZN12SettingsView21decreaseClockSettingsEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 296<LI>Call Chain = SettingsView::decreaseClockSettings() &rArr; touchgfx::Unicode::snprintf(unsigned short*, unsigned short, const char*, ...) &rArr; touchgfx::Unicode::vsnprintf(unsigned short*, unsigned short, const char*, std::__va_list) &rArr; touchgfx::Unicode::vsnprintf(unsigned short*, unsigned short, const unsigned short*, const char*, std::__va_list) &rArr; touchgfx::Unicode::itoa(int, unsigned short*, unsigned short, int) &rArr; touchgfx::Unicode::strncpy(unsigned short*, const char*, unsigned short)
</UL>
<BR>[Calls]<UL><LI><a href="#[1e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Drawable::invalidate() const
<LI><a href="#[333]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Unicode::snprintf(unsigned short*, unsigned short, const char*, ...)
</UL>
<BR>[Called By]<UL><LI><a href="#[131]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SettingsView::pressDownKeyFunction()
</UL>

<P><STRONG><a name="[35b]"></a>SettingsView::increaseClockSettings()</STRONG> (Thumb, 116 bytes, Stack size 8 bytes, settingsview.o(i._ZN12SettingsView21increaseClockSettingsEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 296<LI>Call Chain = SettingsView::increaseClockSettings() &rArr; touchgfx::Unicode::snprintf(unsigned short*, unsigned short, const char*, ...) &rArr; touchgfx::Unicode::vsnprintf(unsigned short*, unsigned short, const char*, std::__va_list) &rArr; touchgfx::Unicode::vsnprintf(unsigned short*, unsigned short, const unsigned short*, const char*, std::__va_list) &rArr; touchgfx::Unicode::itoa(int, unsigned short*, unsigned short, int) &rArr; touchgfx::Unicode::strncpy(unsigned short*, const char*, unsigned short)
</UL>
<BR>[Calls]<UL><LI><a href="#[1e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Drawable::invalidate() const
<LI><a href="#[333]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Unicode::snprintf(unsigned short*, unsigned short, const char*, ...)
</UL>
<BR>[Called By]<UL><LI><a href="#[134]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SettingsView::pressUpKeyFunction()
</UL>

<P><STRONG><a name="[135]"></a>SettingsView::languageButtonClicked()</STRONG> (Thumb, 228 bytes, Stack size 32 bytes, settingsview.o(i._ZN12SettingsView21languageButtonClickedEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 112 + Unknown Stack Size
<LI>Call Chain = SettingsView::languageButtonClicked() &rArr; touchgfx::Button::setBitmaps(const touchgfx::Bitmap&, const touchgfx::Bitmap&) &rArr; touchgfx::Bitmap::getHeight() const &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[1e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Drawable::invalidate() const
<LI><a href="#[1fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Button::setBitmaps(const touchgfx::Bitmap&, const touchgfx::Bitmap&)
<LI><a href="#[33e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Drawable::setTouchable(bool)
<LI><a href="#[345]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Bitmap::Bitmap(unsigned short)
<LI><a href="#[351]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Drawable::setVisible(bool)
<LI><a href="#[359]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextArea::setColor(touchgfx::colortype)
<LI><a href="#[350]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Drawable::setXY(short, short)
<LI><a href="#[358]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Color::getColorFromRGB(unsigned char, unsigned char, unsigned char)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> settingsview.o(.constdata__ZTV12SettingsView)
</UL>
<P><STRONG><a name="[139]"></a>SettingsView::returnButtonIsClicked()</STRONG> (Thumb, 140 bytes, Stack size 16 bytes, settingsview.o(i._ZN12SettingsView21returnButtonIsClickedEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = SettingsView::returnButtonIsClicked() &rArr; touchgfx::Drawable::invalidate() const
</UL>
<BR>[Calls]<UL><LI><a href="#[1e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Drawable::invalidate() const
<LI><a href="#[351]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Drawable::setVisible(bool)
<LI><a href="#[359]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextArea::setColor(touchgfx::colortype)
<LI><a href="#[358]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Color::getColorFromRGB(unsigned char, unsigned char, unsigned char)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> settingsview.o(.constdata__ZTV12SettingsView)
</UL>
<P><STRONG><a name="[35a]"></a>SettingsView::languageSettingsOption()</STRONG> (Thumb, 82 bytes, Stack size 8 bytes, settingsview.o(i._ZN12SettingsView22languageSettingsOptionEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = SettingsView::languageSettingsOption() &rArr; touchgfx::Texts::setLanguage(unsigned short)
</UL>
<BR>[Calls]<UL><LI><a href="#[1e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Drawable::invalidate() const
<LI><a href="#[35d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Texts::setLanguage(unsigned short)
</UL>
<BR>[Called By]<UL><LI><a href="#[131]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SettingsView::pressDownKeyFunction()
<LI><a href="#[134]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SettingsView::pressUpKeyFunction()
</UL>

<P><STRONG><a name="[130]"></a>SettingsView::pressCenterKeyFunction()</STRONG> (Thumb, 490 bytes, Stack size 16 bytes, settingsview.o(i._ZN12SettingsView22pressCenterKeyFunctionEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = SettingsView::pressCenterKeyFunction() &rArr; touchgfx::Drawable::invalidate() const
</UL>
<BR>[Calls]<UL><LI><a href="#[1e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Drawable::invalidate() const
<LI><a href="#[33e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Drawable::setTouchable(bool)
<LI><a href="#[351]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Drawable::setVisible(bool)
<LI><a href="#[359]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextArea::setColor(touchgfx::colortype)
<LI><a href="#[358]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Color::getColorFromRGB(unsigned char, unsigned char, unsigned char)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> settingsview.o(.constdata__ZTV12SettingsView)
</UL>
<P><STRONG><a name="[357]"></a>SettingsView::EXITSCREEN_STATEMACHINE()</STRONG> (Thumb, 262 bytes, Stack size 8 bytes, settingsview.o(i._ZN12SettingsView23EXITSCREEN_STATEMACHINEEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 152 + Unknown Stack Size
<LI>Call Chain = SettingsView::EXITSCREEN_STATEMACHINE() &rArr; touchgfx::FadeAnimator&lang;touchgfx::TextArea&rang;::startFadeAnimation(unsigned char, unsigned short, short(*)(unsigned short, short, short, unsigned short)) &rArr; touchgfx::FadeAnimator&lang;touchgfx::TextArea&rang;::nextFadeAnimationStep() &rArr; touchgfx::TextArea::invalidateContent() const &rArr; touchgfx::TypedText::getText() const &rArr; __aeabi_assert &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[1e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Drawable::invalidate() const
<LI><a href="#[344]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::FadeAnimator&lang;touchgfx::Button&rang;::startFadeAnimation(unsigned char, unsigned short, short(*)(unsigned short, short, short, unsigned short))
<LI><a href="#[35f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Image::setAlpha(unsigned char)
<LI><a href="#[35e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::FadeAnimator&lang;touchgfx::TextArea&rang;::isFadeAnimationRunning() const
<LI><a href="#[342]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::FadeAnimator&lang;touchgfx::TextArea&rang;::startFadeAnimation(unsigned char, unsigned short, short(*)(unsigned short, short, short, unsigned short))
<LI><a href="#[360]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Box::setAlpha(unsigned char)
</UL>
<BR>[Called By]<UL><LI><a href="#[12c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SettingsView::handleTickEvent()
</UL>

<P><STRONG><a name="[356]"></a>SettingsView::ENTERSCREEN_STATEMACHINE()</STRONG> (Thumb, 216 bytes, Stack size 8 bytes, settingsview.o(i._ZN12SettingsView24ENTERSCREEN_STATEMACHINEEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 152 + Unknown Stack Size
<LI>Call Chain = SettingsView::ENTERSCREEN_STATEMACHINE() &rArr; touchgfx::FadeAnimator&lang;touchgfx::TextArea&rang;::startFadeAnimation(unsigned char, unsigned short, short(*)(unsigned short, short, short, unsigned short)) &rArr; touchgfx::FadeAnimator&lang;touchgfx::TextArea&rang;::nextFadeAnimationStep() &rArr; touchgfx::TextArea::invalidateContent() const &rArr; touchgfx::TypedText::getText() const &rArr; __aeabi_assert &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[1e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Drawable::invalidate() const
<LI><a href="#[35f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Image::setAlpha(unsigned char)
<LI><a href="#[35e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::FadeAnimator&lang;touchgfx::TextArea&rang;::isFadeAnimationRunning() const
<LI><a href="#[342]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::FadeAnimator&lang;touchgfx::TextArea&rang;::startFadeAnimation(unsigned char, unsigned short, short(*)(unsigned short, short, short, unsigned short))
<LI><a href="#[360]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Box::setAlpha(unsigned char)
</UL>
<BR>[Called By]<UL><LI><a href="#[12c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SettingsView::handleTickEvent()
</UL>

<P><STRONG><a name="[361]"></a>SettingsView::SettingsView()</STRONG> (Thumb, 108 bytes, Stack size 8 bytes, settingsview.o(i._ZN12SettingsViewC1Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 360 + Unknown Stack Size
<LI>Call Chain = SettingsView::SettingsView() &rArr; SettingsViewBase::SettingsViewBase() &rArr; touchgfx::Unicode::snprintf(unsigned short*, unsigned short, const char*, ...) &rArr; touchgfx::Unicode::vsnprintf(unsigned short*, unsigned short, const char*, std::__va_list) &rArr; touchgfx::Unicode::vsnprintf(unsigned short*, unsigned short, const unsigned short*, const char*, std::__va_list) &rArr; touchgfx::Unicode::itoa(int, unsigned short*, unsigned short, int) &rArr; touchgfx::Unicode::strncpy(unsigned short*, const char*, unsigned short)
</UL>
<BR>[Calls]<UL><LI><a href="#[362]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SettingsViewBase::SettingsViewBase()
</UL>
<BR>[Called By]<UL><LI><a href="#[3b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;T2* touchgfx::makeTransition&lang;SettingsView, SettingsPresenter, touchgfx::NoTransition, Model&rang;(touchgfx::Screen**, touchgfx::Presenter**, touchgfx::MVPHeap&, touchgfx::Transition**, T4*)
</UL>

<P><STRONG><a name="[55d]"></a>SettingsView::SettingsView__sub_object()</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, settingsview.o(i._ZN12SettingsViewC1Ev), UNUSED)

<P><STRONG><a name="[129]"></a>SettingsView::~SettingsView()</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, settingsview.o(i._ZN12SettingsViewD1Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = SettingsView::~SettingsView() &rArr; SettingsViewBase::~SettingsViewBase() &rArr; touchgfx::BoxWithBorderButtonStyle&lang;touchgfx::ClickButtonTrigger&rang;::~BoxWithBorderButtonStyle() &rArr; touchgfx::ClickButtonTrigger::~ClickButtonTrigger() &rArr; touchgfx::AbstractButtonContainer::~AbstractButtonContainer()
</UL>
<BR>[Calls]<UL><LI><a href="#[150]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SettingsViewBase::~SettingsViewBase()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> settingsview.o(.constdata__ZTV12SettingsView)
</UL>
<P><STRONG><a name="[55e]"></a>SettingsView::~SettingsView__sub_object()</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, settingsview.o(i._ZN12SettingsViewD1Ev), UNUSED)

<P><STRONG><a name="[51a]"></a>ModelListener::bind(Model*)</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, frontendapplicationbase.o(i._ZN13ModelListener4bindEP5Model))
<BR><BR>[Called By]<UL><LI><a href="#[3b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;T2* touchgfx::makeTransition&lang;InformationDemoView, InformationDemoPresenter, touchgfx::NoTransition, Model&rang;(touchgfx::Screen**, touchgfx::Presenter**, touchgfx::MVPHeap&, touchgfx::Transition**, T4*)
<LI><a href="#[3b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;T2* touchgfx::makeTransition&lang;SelectingMenuView, SelectingMenuPresenter, touchgfx::NoTransition, Model&rang;(touchgfx::Screen**, touchgfx::Presenter**, touchgfx::MVPHeap&, touchgfx::Transition**, T4*)
<LI><a href="#[3b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;T2* touchgfx::makeTransition&lang;SplashScreenView, SplashScreenPresenter, touchgfx::NoTransition, Model&rang;(touchgfx::Screen**, touchgfx::Presenter**, touchgfx::MVPHeap&, touchgfx::Transition**, T4*)
<LI><a href="#[3b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;T2* touchgfx::makeTransition&lang;InformationView, InformationPresenter, touchgfx::NoTransition, Model&rang;(touchgfx::Screen**, touchgfx::Presenter**, touchgfx::MVPHeap&, touchgfx::Transition**, T4*)
<LI><a href="#[3b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;T2* touchgfx::makeTransition&lang;SettingsView, SettingsPresenter, touchgfx::NoTransition, Model&rang;(touchgfx::Screen**, touchgfx::Presenter**, touchgfx::MVPHeap&, touchgfx::Transition**, T4*)
<LI><a href="#[3b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;T2* touchgfx::makeTransition&lang;CookingView, CookingPresenter, touchgfx::NoTransition, Model&rang;(touchgfx::Screen**, touchgfx::Presenter**, touchgfx::MVPHeap&, touchgfx::Transition**, T4*)
</UL>

<P><STRONG><a name="[4fb]"></a>BitmapDatabase::getInstance()</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, bitmapdatabase.o(i._ZN14BitmapDatabase11getInstanceEv))
<BR><BR>[Called By]<UL><LI><a href="#[31b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx_init
</UL>

<P><STRONG><a name="[4fa]"></a>BitmapDatabase::getInstanceSize()</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, bitmapdatabase.o(i._ZN14BitmapDatabase15getInstanceSizeEv))
<BR><BR>[Called By]<UL><LI><a href="#[31b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx_init
</UL>

<P><STRONG><a name="[13b]"></a>CookingViewBase::setupScreen()</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, cookingviewbase.o(i._ZN15CookingViewBase11setupScreenEv))
<BR><BR>[Called By]<UL><LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CookingView::setupScreen()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> cookingviewbase.o(.constdata__ZTV15CookingViewBase)
</UL>
<P><STRONG><a name="[f4]"></a>CookingViewBase::handleKeyEvent(unsigned char)</STRONG> (Thumb, 68 bytes, Stack size 16 bytes, cookingviewbase.o(i._ZN15CookingViewBase14handleKeyEventEh))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = CookingViewBase::handleKeyEvent(unsigned char)
</UL>
<BR>[Address Reference Count : 2]<UL><LI> cookingview.o(.constdata__ZTV11CookingView)
<LI> cookingviewbase.o(.constdata__ZTV15CookingViewBase)
</UL>
<P><STRONG><a name="[f6]"></a>CookingViewBase::goToSettingMenu()</STRONG> (Thumb, 18 bytes, Stack size 16 bytes, cookingviewbase.o(i._ZN15CookingViewBase15goToSettingMenuEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = CookingViewBase::goToSettingMenu() &rArr; FrontendApplicationBase::gotoSettingsScreenNoTransition() &rArr; touchgfx::Callback&lang;FrontendApplicationBase, void, void, void&rang;::Callback(FrontendApplicationBase*, void(FrontendApplicationBase::*)())
</UL>
<BR>[Calls]<UL><LI><a href="#[363]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Application::getInstance()
<LI><a href="#[364]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FrontendApplicationBase::gotoSettingsScreenNoTransition()
</UL>
<BR>[Address Reference Count : 2]<UL><LI> cookingview.o(.constdata__ZTV11CookingView)
<LI> cookingviewbase.o(.constdata__ZTV15CookingViewBase)
</UL>
<P><STRONG><a name="[f7]"></a>CookingViewBase::goToSelectingMenu()</STRONG> (Thumb, 18 bytes, Stack size 16 bytes, cookingviewbase.o(i._ZN15CookingViewBase17goToSelectingMenuEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = CookingViewBase::goToSelectingMenu() &rArr; FrontendApplicationBase::gotoSelectingMenuScreenNoTransition() &rArr; touchgfx::Callback&lang;FrontendApplicationBase, void, void, void&rang;::Callback(FrontendApplicationBase*, void(FrontendApplicationBase::*)())
</UL>
<BR>[Calls]<UL><LI><a href="#[363]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Application::getInstance()
<LI><a href="#[365]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FrontendApplicationBase::gotoSelectingMenuScreenNoTransition()
</UL>
<BR>[Address Reference Count : 2]<UL><LI> cookingview.o(.constdata__ZTV11CookingView)
<LI> cookingviewbase.o(.constdata__ZTV15CookingViewBase)
</UL>
<P><STRONG><a name="[140]"></a>CookingViewBase::pressUpKeyFunction()</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, cookingviewbase.o(i._ZN15CookingViewBase18pressUpKeyFunctionEv))
<BR>[Address Reference Count : 1]<UL><LI> cookingviewbase.o(.constdata__ZTV15CookingViewBase)
</UL>
<P><STRONG><a name="[f5]"></a>CookingViewBase::goToInformationMenu()</STRONG> (Thumb, 18 bytes, Stack size 16 bytes, cookingviewbase.o(i._ZN15CookingViewBase19goToInformationMenuEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = CookingViewBase::goToInformationMenu() &rArr; FrontendApplicationBase::gotoInformationScreenNoTransition() &rArr; touchgfx::Callback&lang;FrontendApplicationBase, void, void, void&rang;::Callback(FrontendApplicationBase*, void(FrontendApplicationBase::*)())
</UL>
<BR>[Calls]<UL><LI><a href="#[363]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Application::getInstance()
<LI><a href="#[366]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FrontendApplicationBase::gotoInformationScreenNoTransition()
</UL>
<BR>[Address Reference Count : 2]<UL><LI> cookingview.o(.constdata__ZTV11CookingView)
<LI> cookingviewbase.o(.constdata__ZTV15CookingViewBase)
</UL>
<P><STRONG><a name="[13f]"></a>CookingViewBase::pressDownKeyFunction()</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, cookingviewbase.o(i._ZN15CookingViewBase20pressDownKeyFunctionEv))
<BR>[Address Reference Count : 1]<UL><LI> cookingviewbase.o(.constdata__ZTV15CookingViewBase)
</UL>
<P><STRONG><a name="[142]"></a>CookingViewBase::pressLeftKeyFunction()</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, cookingviewbase.o(i._ZN15CookingViewBase20pressLeftKeyFunctionEv))
<BR>[Address Reference Count : 1]<UL><LI> cookingviewbase.o(.constdata__ZTV15CookingViewBase)
</UL>
<P><STRONG><a name="[dd]"></a>CookingViewBase::buttonCallbackHandler(const touchgfx::AbstractButton&)</STRONG> (Thumb, 56 bytes, Stack size 16 bytes, cookingviewbase.o(i._ZN15CookingViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = CookingViewBase::buttonCallbackHandler(const touchgfx::AbstractButton&)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> cookingviewbase.o(.constdata)
</UL>
<P><STRONG><a name="[145]"></a>CookingViewBase::pressInfoButtonAction()</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, cookingviewbase.o(i._ZN15CookingViewBase21pressInfoButtonActionEv))
<BR>[Address Reference Count : 1]<UL><LI> cookingviewbase.o(.constdata__ZTV15CookingViewBase)
</UL>
<P><STRONG><a name="[141]"></a>CookingViewBase::pressRightKeyFunction()</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, cookingviewbase.o(i._ZN15CookingViewBase21pressRightKeyFunctionEv))
<BR>[Address Reference Count : 1]<UL><LI> cookingviewbase.o(.constdata__ZTV15CookingViewBase)
</UL>
<P><STRONG><a name="[13e]"></a>CookingViewBase::pressCenterKeyFunction()</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, cookingviewbase.o(i._ZN15CookingViewBase22pressCenterKeyFunctionEv))
<BR>[Address Reference Count : 1]<UL><LI> cookingviewbase.o(.constdata__ZTV15CookingViewBase)
</UL>
<P><STRONG><a name="[143]"></a>CookingViewBase::pressCancelButtonAction()</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, cookingviewbase.o(i._ZN15CookingViewBase23pressCancelButtonActionEv))
<BR>[Address Reference Count : 1]<UL><LI> cookingviewbase.o(.constdata__ZTV15CookingViewBase)
</UL>
<P><STRONG><a name="[144]"></a>CookingViewBase::pressSettingButtonAction()</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, cookingviewbase.o(i._ZN15CookingViewBase24pressSettingButtonActionEv))
<BR>[Address Reference Count : 1]<UL><LI> cookingviewbase.o(.constdata__ZTV15CookingViewBase)
</UL>
<P><STRONG><a name="[349]"></a>CookingViewBase::CookingViewBase()</STRONG> (Thumb, 1628 bytes, Stack size 64 bytes, cookingviewbase.o(i._ZN15CookingViewBaseC1Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 352 + Unknown Stack Size
<LI>Call Chain = CookingViewBase::CookingViewBase() &rArr; touchgfx::Unicode::snprintf(unsigned short*, unsigned short, const char*, ...) &rArr; touchgfx::Unicode::vsnprintf(unsigned short*, unsigned short, const char*, std::__va_list) &rArr; touchgfx::Unicode::vsnprintf(unsigned short*, unsigned short, const unsigned short*, const char*, std::__va_list) &rArr; touchgfx::Unicode::itoa(int, unsigned short*, unsigned short, int) &rArr; touchgfx::Unicode::strncpy(unsigned short*, const char*, unsigned short)
</UL>
<BR>[Calls]<UL><LI><a href="#[347]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextArea::setTypedText(const touchgfx::TypedText&)
<LI><a href="#[333]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Unicode::snprintf(unsigned short*, unsigned short, const char*, ...)
<LI><a href="#[1fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Button::setBitmaps(const touchgfx::Bitmap&, const touchgfx::Bitmap&)
<LI><a href="#[1f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Image::setBitmap(const touchgfx::Bitmap&)
<LI><a href="#[33b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::CWRUtil::Q5 touchgfx::CWRUtil::toQ5&lang;int&rang;(T1)
<LI><a href="#[33f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::CWRUtil::Q5::operator int() const
<LI><a href="#[346]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TypedText::TypedText(unsigned short)
<LI><a href="#[1e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextArea::setAlpha(unsigned char)
<LI><a href="#[377]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::CWRUtil::Q5::Q5(int)
<LI><a href="#[376]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Button::setAlpha(unsigned char)
<LI><a href="#[345]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Bitmap::Bitmap(unsigned short)
<LI><a href="#[35f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Image::setAlpha(unsigned char)
<LI><a href="#[369]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::colortype::colortype(unsigned)
<LI><a href="#[359]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextArea::setColor(touchgfx::colortype)
<LI><a href="#[350]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Drawable::setXY(short, short)
<LI><a href="#[358]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Color::getColorFromRGB(unsigned char, unsigned char, unsigned char)
<LI><a href="#[20c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Container::add(touchgfx::Drawable&)
<LI><a href="#[367]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Screen::Screen()
<LI><a href="#[36e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Circle::Circle()
<LI><a href="#[378]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Circle::setCapPrecision(int)
<LI><a href="#[372]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::CanvasWidgetRenderer::setupBuffer(unsigned char*, unsigned)
<LI><a href="#[36c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::FadeAnimator&lang;touchgfx::Button&rang;::FadeAnimator()
<LI><a href="#[36d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::FadeAnimator&lang;touchgfx::Image&rang;::FadeAnimator()
<LI><a href="#[370]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::FadeAnimator&lang;touchgfx::TextAreaWithTwoWildcards&rang;::FadeAnimator()
<LI><a href="#[37a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TypedText::getText() const
<LI><a href="#[371]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextArea::TextArea()
<LI><a href="#[379]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextArea::setLinespacing(short)
<LI><a href="#[36b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Drawable::Drawable__sub_object()
<LI><a href="#[373]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Drawable::setPosition(short, short, short, short)
<LI><a href="#[368]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Widget::Widget__sub_object()
<LI><a href="#[374]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Screen::add(touchgfx::Drawable&)
<LI><a href="#[36a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Image::Image(const touchgfx::Bitmap&)
<LI><a href="#[37c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextAreaWithTwoWildcards::setWildcard2(const unsigned short*)
<LI><a href="#[37b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextAreaWithTwoWildcards::setWildcard1(const unsigned short*)
<LI><a href="#[232]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::AbstractPainterColor::setColor(touchgfx::colortype)
<LI><a href="#[375]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::AbstractButton::setAction(touchgfx::GenericCallback&lang;const touchgfx::AbstractButton&, void, void&rang;&)
<LI><a href="#[36f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::PainterRGB565::PainterRGB565(touchgfx::colortype)
<LI><a href="#[2d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[348]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CookingView::CookingView()
</UL>

<P><STRONG><a name="[55f]"></a>CookingViewBase::CookingViewBase__sub_object()</STRONG> (Thumb, 0 bytes, Stack size 64 bytes, cookingviewbase.o(i._ZN15CookingViewBaseC1Ev), UNUSED)

<P><STRONG><a name="[13a]"></a>CookingViewBase::~CookingViewBase()</STRONG> (Thumb, 214 bytes, Stack size 16 bytes, cookingviewbase.o(i._ZN15CookingViewBaseD1Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = CookingViewBase::~CookingViewBase() &rArr; touchgfx::FadeAnimator&lang;touchgfx::TextAreaWithTwoWildcards&rang;::~FadeAnimator() &rArr; touchgfx::TextAreaWithTwoWildcards::~TextAreaWithTwoWildcards() &rArr; touchgfx::TextArea::~TextArea()
</UL>
<BR>[Calls]<UL><LI><a href="#[37d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::CanvasWidgetRenderer::resetBuffer()
<LI><a href="#[284]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Container::~Container()
<LI><a href="#[258]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Callback&lang;CookingViewBase, const touchgfx::AbstractButton&, void, void&rang;::~Callback()
<LI><a href="#[256]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Widget::~Widget__sub_object()
<LI><a href="#[24f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Image::~Image()
<LI><a href="#[248]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::View&lang;CookingPresenter&rang;::~View()
<LI><a href="#[233]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::AbstractPainterRGB565::~AbstractPainterRGB565__sub_object()
<LI><a href="#[1ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::FadeAnimator&lang;touchgfx::TextArea&rang;::~FadeAnimator()
<LI><a href="#[1f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::FadeAnimator&lang;touchgfx::Image&rang;::~FadeAnimator()
<LI><a href="#[1e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::FadeAnimator&lang;touchgfx::TextAreaWithTwoWildcards&rang;::~FadeAnimator()
<LI><a href="#[1f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::FadeAnimator&lang;touchgfx::Button&rang;::~FadeAnimator()
</UL>
<BR>[Called By]<UL><LI><a href="#[eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CookingView::~CookingView()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> cookingviewbase.o(.constdata__ZTV15CookingViewBase)
</UL>
<P><STRONG><a name="[560]"></a>CookingViewBase::~CookingViewBase__sub_object()</STRONG> (Thumb, 0 bytes, Stack size 16 bytes, cookingviewbase.o(i._ZN15CookingViewBaseD1Ev), UNUSED)

<P><STRONG><a name="[147]"></a>InformationView::setupScreen()</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, informationview.o(i._ZN15InformationView11setupScreenEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = InformationView::setupScreen()
</UL>
<BR>[Calls]<UL><LI><a href="#[189]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InformationViewBase::setupScreen()
<LI><a href="#[37e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InformationView::readSharedData()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> informationview.o(.constdata__ZTV15InformationView)
</UL>
<P><STRONG><a name="[380]"></a>InformationView::updateTimer()</STRONG> (Thumb, 60 bytes, Stack size 0 bytes, informationview.o(i._ZN15InformationView11updateTimerEv))
<BR><BR>[Called By]<UL><LI><a href="#[149]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InformationView::handleTickEvent()
</UL>

<P><STRONG><a name="[381]"></a>InformationView::clockAnimation()</STRONG> (Thumb, 106 bytes, Stack size 0 bytes, informationview.o(i._ZN15InformationView14clockAnimationEv))
<BR><BR>[Called By]<UL><LI><a href="#[149]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InformationView::handleTickEvent()
</UL>

<P><STRONG><a name="[37e]"></a>InformationView::readSharedData()</STRONG> (Thumb, 92 bytes, Stack size 0 bytes, informationview.o(i._ZN15InformationView14readSharedDataEv))
<BR><BR>[Called By]<UL><LI><a href="#[147]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InformationView::setupScreen()
</UL>

<P><STRONG><a name="[37f]"></a>InformationView::saveSharedData()</STRONG> (Thumb, 68 bytes, Stack size 8 bytes, informationview.o(i._ZN15InformationView14saveSharedDataEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = InformationView::saveSharedData()
</UL>
<BR>[Called By]<UL><LI><a href="#[148]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InformationView::tearDownScreen()
</UL>

<P><STRONG><a name="[148]"></a>InformationView::tearDownScreen()</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, informationview.o(i._ZN15InformationView14tearDownScreenEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = InformationView::tearDownScreen() &rArr; InformationView::saveSharedData()
</UL>
<BR>[Calls]<UL><LI><a href="#[37f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InformationView::saveSharedData()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> informationview.o(.constdata__ZTV15InformationView)
</UL>
<P><STRONG><a name="[149]"></a>InformationView::handleTickEvent()</STRONG> (Thumb, 80 bytes, Stack size 8 bytes, informationview.o(i._ZN15InformationView15handleTickEventEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = InformationView::handleTickEvent()
</UL>
<BR>[Calls]<UL><LI><a href="#[381]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InformationView::clockAnimation()
<LI><a href="#[380]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InformationView::updateTimer()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> informationview.o(.constdata__ZTV15InformationView)
</UL>
<P><STRONG><a name="[382]"></a>InformationView::InformationView()</STRONG> (Thumb, 46 bytes, Stack size 8 bytes, informationview.o(i._ZN15InformationViewC1Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 128 + Unknown Stack Size
<LI>Call Chain = InformationView::InformationView() &rArr; InformationViewBase::InformationViewBase() &rArr; touchgfx::Image::setBitmap(const touchgfx::Bitmap&) &rArr; touchgfx::Bitmap::getHeight() const &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[383]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InformationViewBase::InformationViewBase()
</UL>
<BR>[Called By]<UL><LI><a href="#[3b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;T2* touchgfx::makeTransition&lang;InformationView, InformationPresenter, touchgfx::NoTransition, Model&rang;(touchgfx::Screen**, touchgfx::Presenter**, touchgfx::MVPHeap&, touchgfx::Transition**, T4*)
</UL>

<P><STRONG><a name="[561]"></a>InformationView::InformationView__sub_object()</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, informationview.o(i._ZN15InformationViewC1Ev), UNUSED)

<P><STRONG><a name="[146]"></a>InformationView::~InformationView()</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, informationview.o(i._ZN15InformationViewD1Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = InformationView::~InformationView() &rArr; InformationViewBase::~InformationViewBase() &rArr; touchgfx::BoxWithBorderButtonStyle&lang;touchgfx::ClickButtonTrigger&rang;::~BoxWithBorderButtonStyle() &rArr; touchgfx::ClickButtonTrigger::~ClickButtonTrigger() &rArr; touchgfx::AbstractButtonContainer::~AbstractButtonContainer()
</UL>
<BR>[Calls]<UL><LI><a href="#[188]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InformationViewBase::~InformationViewBase()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> informationview.o(.constdata__ZTV15InformationView)
</UL>
<P><STRONG><a name="[562]"></a>InformationView::~InformationView__sub_object()</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, informationview.o(i._ZN15InformationViewD1Ev), UNUSED)

<P><STRONG><a name="[14d]"></a>CookingPresenter::deactivate()</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, cookingpresenter.o(i._ZN16CookingPresenter10deactivateEv))
<BR>[Address Reference Count : 1]<UL><LI> cookingpresenter.o(.constdata__ZTV16CookingPresenter)
</UL>
<P><STRONG><a name="[14c]"></a>CookingPresenter::activate()</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, cookingpresenter.o(i._ZN16CookingPresenter8activateEv))
<BR>[Address Reference Count : 1]<UL><LI> cookingpresenter.o(.constdata__ZTV16CookingPresenter)
</UL>
<P><STRONG><a name="[518]"></a>CookingPresenter::CookingPresenter(CookingView&)</STRONG> (Thumb, 38 bytes, Stack size 0 bytes, cookingpresenter.o(i._ZN16CookingPresenterC1ER11CookingView))
<BR><BR>[Called By]<UL><LI><a href="#[3b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;T2* touchgfx::makeTransition&lang;CookingView, CookingPresenter, touchgfx::NoTransition, Model&rang;(touchgfx::Screen**, touchgfx::Presenter**, touchgfx::MVPHeap&, touchgfx::Transition**, T4*)
</UL>

<P><STRONG><a name="[563]"></a>CookingPresenter::CookingPresenter__sub_object(CookingView&)</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, cookingpresenter.o(i._ZN16CookingPresenterC1ER11CookingView), UNUSED)

<P><STRONG><a name="[14e]"></a>CookingPresenter::~CookingPresenter()</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, cookingpresenter.o(i._ZN16CookingPresenterD1Ev))
<BR>[Address Reference Count : 1]<UL><LI> cookingpresenter.o(.constdata__ZTV16CookingPresenter)
</UL>
<P><STRONG><a name="[564]"></a>CookingPresenter::~CookingPresenter__sub_object()</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, cookingpresenter.o(i._ZN16CookingPresenterD1Ev), UNUSED)

<P><STRONG><a name="[128]"></a>FrontendHeapBase::gotoStartScreen(FrontendApplication&)</STRONG> (Thumb, 14 bytes, Stack size 16 bytes, touchgfxconfiguration.o(i._ZN16FrontendHeapBase15gotoStartScreenER19FrontendApplication))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = FrontendHeapBase::gotoStartScreen(FrontendApplication&) &rArr; FrontendApplicationBase::gotoSplashScreenScreenNoTransition() &rArr; touchgfx::Callback&lang;FrontendApplicationBase, void, void, void&rang;::Callback(FrontendApplicationBase*, void(FrontendApplicationBase::*)())
</UL>
<BR>[Calls]<UL><LI><a href="#[384]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FrontendApplicationBase::gotoSplashScreenScreenNoTransition()
</UL>
<BR>[Called By]<UL><LI><a href="#[34a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FrontendHeap::FrontendHeap()
</UL>
<BR>[Address Reference Count : 2]<UL><LI> touchgfxconfiguration.o(.constdata__ZTV16FrontendHeapBase)
<LI> touchgfxconfiguration.o(.constdata__ZTV12FrontendHeap)
</UL>
<P><STRONG><a name="[14f]"></a>FrontendHeapBase::~FrontendHeapBase()</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, touchgfxconfiguration.o(i._ZN16FrontendHeapBaseD1Ev))
<BR><BR>[Called By]<UL><LI><a href="#[d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FrontendHeap::~FrontendHeap()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> touchgfxconfiguration.o(.constdata__ZTV16FrontendHeapBase)
</UL>
<P><STRONG><a name="[565]"></a>FrontendHeapBase::~FrontendHeapBase__sub_object()</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, touchgfxconfiguration.o(i._ZN16FrontendHeapBaseD1Ev), UNUSED)

<P><STRONG><a name="[151]"></a>SettingsViewBase::setupScreen()</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, settingsviewbase.o(i._ZN16SettingsViewBase11setupScreenEv))
<BR><BR>[Called By]<UL><LI><a href="#[12a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SettingsView::setupScreen()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> settingsviewbase.o(.constdata__ZTV16SettingsViewBase)
</UL>
<P><STRONG><a name="[12e]"></a>SettingsViewBase::goToMainMenu()</STRONG> (Thumb, 18 bytes, Stack size 16 bytes, settingsviewbase.o(i._ZN16SettingsViewBase12goToMainMenuEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = SettingsViewBase::goToMainMenu() &rArr; FrontendApplicationBase::gotoSelectingMenuScreenNoTransition() &rArr; touchgfx::Callback&lang;FrontendApplicationBase, void, void, void&rang;::Callback(FrontendApplicationBase*, void(FrontendApplicationBase::*)())
</UL>
<BR>[Calls]<UL><LI><a href="#[363]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Application::getInstance()
<LI><a href="#[365]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FrontendApplicationBase::gotoSelectingMenuScreenNoTransition()
</UL>
<BR>[Address Reference Count : 2]<UL><LI> settingsview.o(.constdata__ZTV12SettingsView)
<LI> settingsviewbase.o(.constdata__ZTV16SettingsViewBase)
</UL>
<P><STRONG><a name="[157]"></a>SettingsViewBase::hourIsClicked()</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, settingsviewbase.o(i._ZN16SettingsViewBase13hourIsClickedEv))
<BR>[Address Reference Count : 1]<UL><LI> settingsviewbase.o(.constdata__ZTV16SettingsViewBase)
</UL>
<P><STRONG><a name="[12d]"></a>SettingsViewBase::handleKeyEvent(unsigned char)</STRONG> (Thumb, 68 bytes, Stack size 16 bytes, settingsviewbase.o(i._ZN16SettingsViewBase14handleKeyEventEh))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = SettingsViewBase::handleKeyEvent(unsigned char)
</UL>
<BR>[Address Reference Count : 2]<UL><LI> settingsview.o(.constdata__ZTV12SettingsView)
<LI> settingsviewbase.o(.constdata__ZTV16SettingsViewBase)
</UL>
<P><STRONG><a name="[12f]"></a>SettingsViewBase::goToCookingMenu()</STRONG> (Thumb, 18 bytes, Stack size 16 bytes, settingsviewbase.o(i._ZN16SettingsViewBase15goToCookingMenuEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = SettingsViewBase::goToCookingMenu() &rArr; FrontendApplicationBase::gotoCookingScreenNoTransition() &rArr; touchgfx::Callback&lang;FrontendApplicationBase, void, void, void&rang;::Callback(FrontendApplicationBase*, void(FrontendApplicationBase::*)())
</UL>
<BR>[Calls]<UL><LI><a href="#[363]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Application::getInstance()
<LI><a href="#[385]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FrontendApplicationBase::gotoCookingScreenNoTransition()
</UL>
<BR>[Address Reference Count : 2]<UL><LI> settingsview.o(.constdata__ZTV12SettingsView)
<LI> settingsviewbase.o(.constdata__ZTV16SettingsViewBase)
</UL>
<P><STRONG><a name="[158]"></a>SettingsViewBase::minuteIsClicked()</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, settingsviewbase.o(i._ZN16SettingsViewBase15minuteIsClickedEv))
<BR>[Address Reference Count : 1]<UL><LI> settingsviewbase.o(.constdata__ZTV16SettingsViewBase)
</UL>
<P><STRONG><a name="[156]"></a>SettingsViewBase::clockButtonClicked()</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, settingsviewbase.o(i._ZN16SettingsViewBase18clockButtonClickedEv))
<BR>[Address Reference Count : 1]<UL><LI> settingsviewbase.o(.constdata__ZTV16SettingsViewBase)
</UL>
<P><STRONG><a name="[154]"></a>SettingsViewBase::pressUpKeyFunction()</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, settingsviewbase.o(i._ZN16SettingsViewBase18pressUpKeyFunctionEv))
<BR>[Address Reference Count : 1]<UL><LI> settingsviewbase.o(.constdata__ZTV16SettingsViewBase)
</UL>
<P><STRONG><a name="[153]"></a>SettingsViewBase::pressDownKeyFunction()</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, settingsviewbase.o(i._ZN16SettingsViewBase20pressDownKeyFunctionEv))
<BR>[Address Reference Count : 1]<UL><LI> settingsviewbase.o(.constdata__ZTV16SettingsViewBase)
</UL>
<P><STRONG><a name="[132]"></a>SettingsViewBase::pressLeftKeyFunction()</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, settingsview.o(i._ZN16SettingsViewBase20pressLeftKeyFunctionEv))
<BR>[Address Reference Count : 2]<UL><LI> settingsview.o(.constdata__ZTV12SettingsView)
<LI> settingsviewbase.o(.constdata__ZTV16SettingsViewBase)
</UL>
<P><STRONG><a name="[e9]"></a>SettingsViewBase::buttonCallbackHandler(const touchgfx::AbstractButton&)</STRONG> (Thumb, 56 bytes, Stack size 16 bytes, settingsviewbase.o(i._ZN16SettingsViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = SettingsViewBase::buttonCallbackHandler(const touchgfx::AbstractButton&)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> settingsviewbase.o(.constdata)
</UL>
<P><STRONG><a name="[155]"></a>SettingsViewBase::languageButtonClicked()</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, settingsviewbase.o(i._ZN16SettingsViewBase21languageButtonClickedEv))
<BR>[Address Reference Count : 1]<UL><LI> settingsviewbase.o(.constdata__ZTV16SettingsViewBase)
</UL>
<P><STRONG><a name="[133]"></a>SettingsViewBase::pressRightKeyFunction()</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, settingsview.o(i._ZN16SettingsViewBase21pressRightKeyFunctionEv))
<BR>[Address Reference Count : 2]<UL><LI> settingsview.o(.constdata__ZTV12SettingsView)
<LI> settingsviewbase.o(.constdata__ZTV16SettingsViewBase)
</UL>
<P><STRONG><a name="[159]"></a>SettingsViewBase::returnButtonIsClicked()</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, settingsviewbase.o(i._ZN16SettingsViewBase21returnButtonIsClickedEv))
<BR>[Address Reference Count : 1]<UL><LI> settingsviewbase.o(.constdata__ZTV16SettingsViewBase)
</UL>
<P><STRONG><a name="[152]"></a>SettingsViewBase::pressCenterKeyFunction()</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, settingsviewbase.o(i._ZN16SettingsViewBase22pressCenterKeyFunctionEv))
<BR>[Address Reference Count : 1]<UL><LI> settingsviewbase.o(.constdata__ZTV16SettingsViewBase)
</UL>
<P><STRONG><a name="[e8]"></a>SettingsViewBase::flexButtonCallbackHandler(const touchgfx::AbstractButtonContainer&)</STRONG> (Thumb, 72 bytes, Stack size 16 bytes, settingsviewbase.o(i._ZN16SettingsViewBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = SettingsViewBase::flexButtonCallbackHandler(const touchgfx::AbstractButtonContainer&)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> settingsviewbase.o(.constdata)
</UL>
<P><STRONG><a name="[362]"></a>SettingsViewBase::SettingsViewBase()</STRONG> (Thumb, 2590 bytes, Stack size 64 bytes, settingsviewbase.o(i._ZN16SettingsViewBaseC1Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 352 + Unknown Stack Size
<LI>Call Chain = SettingsViewBase::SettingsViewBase() &rArr; touchgfx::Unicode::snprintf(unsigned short*, unsigned short, const char*, ...) &rArr; touchgfx::Unicode::vsnprintf(unsigned short*, unsigned short, const char*, std::__va_list) &rArr; touchgfx::Unicode::vsnprintf(unsigned short*, unsigned short, const unsigned short*, const char*, std::__va_list) &rArr; touchgfx::Unicode::itoa(int, unsigned short*, unsigned short, int) &rArr; touchgfx::Unicode::strncpy(unsigned short*, const char*, unsigned short)
</UL>
<BR>[Calls]<UL><LI><a href="#[347]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextArea::setTypedText(const touchgfx::TypedText&)
<LI><a href="#[333]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Unicode::snprintf(unsigned short*, unsigned short, const char*, ...)
<LI><a href="#[1fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Button::setBitmaps(const touchgfx::Bitmap&, const touchgfx::Bitmap&)
<LI><a href="#[1f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Image::setBitmap(const touchgfx::Bitmap&)
<LI><a href="#[346]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TypedText::TypedText(unsigned short)
<LI><a href="#[1e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextArea::setAlpha(unsigned char)
<LI><a href="#[345]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Bitmap::Bitmap(unsigned short)
<LI><a href="#[35f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Image::setAlpha(unsigned char)
<LI><a href="#[351]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Drawable::setVisible(bool)
<LI><a href="#[359]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextArea::setColor(touchgfx::colortype)
<LI><a href="#[350]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Drawable::setXY(short, short)
<LI><a href="#[358]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Color::getColorFromRGB(unsigned char, unsigned char, unsigned char)
<LI><a href="#[360]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Box::setAlpha(unsigned char)
<LI><a href="#[20c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Container::add(touchgfx::Drawable&)
<LI><a href="#[367]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Screen::Screen()
<LI><a href="#[36d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::FadeAnimator&lang;touchgfx::Image&rang;::FadeAnimator()
<LI><a href="#[37a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TypedText::getText() const
<LI><a href="#[371]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextArea::TextArea()
<LI><a href="#[379]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextArea::setLinespacing(short)
<LI><a href="#[373]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Drawable::setPosition(short, short, short, short)
<LI><a href="#[374]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Screen::add(touchgfx::Drawable&)
<LI><a href="#[36a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Image::Image(const touchgfx::Bitmap&)
<LI><a href="#[375]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::AbstractButton::setAction(touchgfx::GenericCallback&lang;const touchgfx::AbstractButton&, void, void&rang;&)
<LI><a href="#[389]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::BoxWithBorderButtonStyle&lang;touchgfx::ClickButtonTrigger&rang;::BoxWithBorderButtonStyle()
<LI><a href="#[386]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Box::Box()
<LI><a href="#[38c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Box::setColor(touchgfx::colortype)
<LI><a href="#[38d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::BoxWithBorderButtonStyle&lang;touchgfx::ClickButtonTrigger&rang;::setBoxWithBorderPosition(short, short, short, short)
<LI><a href="#[38f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::BoxWithBorderButtonStyle&lang;touchgfx::ClickButtonTrigger&rang;::setBoxWithBorderColors(touchgfx::colortype, touchgfx::colortype, touchgfx::colortype, touchgfx::colortype)
<LI><a href="#[38e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::BoxWithBorderButtonStyle&lang;touchgfx::ClickButtonTrigger&rang;::setBorderSize(unsigned char)
<LI><a href="#[388]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::FadeAnimator&lang;touchgfx::TextArea&rang;::FadeAnimator()
<LI><a href="#[387]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Container::Container()
<LI><a href="#[38b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Button::Button()
<LI><a href="#[391]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::AbstractButtonContainer::setAction(touchgfx::GenericCallback&lang;const touchgfx::AbstractButtonContainer&, void, void&rang;&)
<LI><a href="#[390]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::AbstractButtonContainer::setAlpha(unsigned char)
<LI><a href="#[38a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextAreaWithOneWildcard::TextAreaWithOneWildcard()
<LI><a href="#[392]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextAreaWithOneWildcard::setWildcard(const unsigned short*)
</UL>
<BR>[Called By]<UL><LI><a href="#[361]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SettingsView::SettingsView()
</UL>

<P><STRONG><a name="[566]"></a>SettingsViewBase::SettingsViewBase__sub_object()</STRONG> (Thumb, 0 bytes, Stack size 64 bytes, settingsviewbase.o(i._ZN16SettingsViewBaseC1Ev), UNUSED)

<P><STRONG><a name="[150]"></a>SettingsViewBase::~SettingsViewBase()</STRONG> (Thumb, 356 bytes, Stack size 8 bytes, settingsviewbase.o(i._ZN16SettingsViewBaseD1Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = SettingsViewBase::~SettingsViewBase() &rArr; touchgfx::BoxWithBorderButtonStyle&lang;touchgfx::ClickButtonTrigger&rang;::~BoxWithBorderButtonStyle() &rArr; touchgfx::ClickButtonTrigger::~ClickButtonTrigger() &rArr; touchgfx::AbstractButtonContainer::~AbstractButtonContainer()
</UL>
<BR>[Calls]<UL><LI><a href="#[284]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Container::~Container()
<LI><a href="#[283]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextArea::~TextArea()
<LI><a href="#[24f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Image::~Image()
<LI><a href="#[1ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::FadeAnimator&lang;touchgfx::TextArea&rang;::~FadeAnimator()
<LI><a href="#[1f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::FadeAnimator&lang;touchgfx::Image&rang;::~FadeAnimator()
<LI><a href="#[23b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Box::~Box()
<LI><a href="#[237]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::BoxWithBorderButtonStyle&lang;touchgfx::ClickButtonTrigger&rang;::~BoxWithBorderButtonStyle()
<LI><a href="#[25e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Callback&lang;SettingsViewBase, const touchgfx::AbstractButtonContainer&, void, void&rang;::~Callback()
<LI><a href="#[25b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Callback&lang;SettingsViewBase, const touchgfx::AbstractButton&, void, void&rang;::~Callback()
<LI><a href="#[250]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Button::~Button()
<LI><a href="#[24a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::View&lang;SettingsPresenter&rang;::~View()
<LI><a href="#[235]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextAreaWithOneWildcard::~TextAreaWithOneWildcard()
<LI><a href="#[1f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::FadeAnimator&lang;touchgfx::Button&rang;::~FadeAnimator()
</UL>
<BR>[Called By]<UL><LI><a href="#[129]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SettingsView::~SettingsView()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> settingsviewbase.o(.constdata__ZTV16SettingsViewBase)
</UL>
<P><STRONG><a name="[567]"></a>SettingsViewBase::~SettingsViewBase__sub_object()</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, settingsviewbase.o(i._ZN16SettingsViewBaseD1Ev), UNUSED)

<P><STRONG><a name="[15b]"></a>SplashScreenView::setupScreen()</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, splashscreenview.o(i._ZN16SplashScreenView11setupScreenEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = SplashScreenView::setupScreen()
</UL>
<BR>[Calls]<UL><LI><a href="#[190]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SplashScreenViewBase::setupScreen()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> splashscreenview.o(.constdata__ZTV16SplashScreenView)
</UL>
<P><STRONG><a name="[15d]"></a>SplashScreenView::tearDownScreen()</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, splashscreenview.o(i._ZN16SplashScreenView14tearDownScreenEv))
<BR>[Address Reference Count : 1]<UL><LI> splashscreenview.o(.constdata__ZTV16SplashScreenView)
</UL>
<P><STRONG><a name="[393]"></a>SplashScreenView::SplashScreenView()</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, splashscreenview.o(i._ZN16SplashScreenViewC1Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 152 + Unknown Stack Size
<LI>Call Chain = SplashScreenView::SplashScreenView() &rArr; SplashScreenViewBase::SplashScreenViewBase() &rArr; touchgfx::FadeAnimator&lang;touchgfx::Image&rang;::FadeAnimator() &rArr; touchgfx::Image::Image(const touchgfx::Bitmap&) &rArr; touchgfx::Image::setBitmap(const touchgfx::Bitmap&) &rArr; touchgfx::Bitmap::getHeight() const &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[394]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SplashScreenViewBase::SplashScreenViewBase()
</UL>
<BR>[Called By]<UL><LI><a href="#[3b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;T2* touchgfx::makeTransition&lang;SplashScreenView, SplashScreenPresenter, touchgfx::NoTransition, Model&rang;(touchgfx::Screen**, touchgfx::Presenter**, touchgfx::MVPHeap&, touchgfx::Transition**, T4*)
</UL>

<P><STRONG><a name="[568]"></a>SplashScreenView::SplashScreenView__sub_object()</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, splashscreenview.o(i._ZN16SplashScreenViewC1Ev), UNUSED)

<P><STRONG><a name="[15a]"></a>SplashScreenView::~SplashScreenView()</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, splashscreenview.o(i._ZN16SplashScreenViewD1Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = SplashScreenView::~SplashScreenView() &rArr; SplashScreenViewBase::~SplashScreenViewBase() &rArr; touchgfx::FadeAnimator&lang;touchgfx::Image&rang;::~FadeAnimator() &rArr; touchgfx::Image::~Image()
</UL>
<BR>[Calls]<UL><LI><a href="#[18f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SplashScreenViewBase::~SplashScreenViewBase()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> splashscreenview.o(.constdata__ZTV16SplashScreenView)
</UL>
<P><STRONG><a name="[569]"></a>SplashScreenView::~SplashScreenView__sub_object()</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, splashscreenview.o(i._ZN16SplashScreenViewD1Ev), UNUSED)

<P><STRONG><a name="[395]"></a>SelectingMenuView::fadeInTexts()</STRONG> (Thumb, 34 bytes, Stack size 8 bytes, selectingmenuview.o(i._ZN17SelectingMenuView11fadeInTextsEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 152 + Unknown Stack Size
<LI>Call Chain = SelectingMenuView::fadeInTexts() &rArr; touchgfx::FadeAnimator&lang;touchgfx::TextArea&rang;::startFadeAnimation(unsigned char, unsigned short, short(*)(unsigned short, short, short, unsigned short)) &rArr; touchgfx::FadeAnimator&lang;touchgfx::TextArea&rang;::nextFadeAnimationStep() &rArr; touchgfx::TextArea::invalidateContent() const &rArr; touchgfx::TypedText::getText() const &rArr; __aeabi_assert &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[342]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::FadeAnimator&lang;touchgfx::TextArea&rang;::startFadeAnimation(unsigned char, unsigned short, short(*)(unsigned short, short, short, unsigned short))
</UL>
<BR>[Called By]<UL><LI><a href="#[39b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SelectingMenuView::ENTERSCREEN_STATEMACHINE()
</UL>

<P><STRONG><a name="[160]"></a>SelectingMenuView::setupScreen()</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, selectingmenuview.o(i._ZN17SelectingMenuView11setupScreenEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 312 + Unknown Stack Size
<LI>Call Chain = SelectingMenuView::setupScreen() &rArr; SelectingMenuView::setUpEnterScreen() &rArr; SelectingMenuView::setUpTheClock() &rArr; touchgfx::Unicode::snprintf(unsigned short*, unsigned short, const char*, ...) &rArr; touchgfx::Unicode::vsnprintf(unsigned short*, unsigned short, const char*, std::__va_list) &rArr; touchgfx::Unicode::vsnprintf(unsigned short*, unsigned short, const unsigned short*, const char*, std::__va_list) &rArr; touchgfx::Unicode::itoa(int, unsigned short*, unsigned short, int) &rArr; touchgfx::Unicode::strncpy(unsigned short*, const char*, unsigned short)
</UL>
<BR>[Calls]<UL><LI><a href="#[19d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SelectingMenuViewBase::setupScreen()
<LI><a href="#[397]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SelectingMenuView::screenEnterAnimation()
<LI><a href="#[396]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SelectingMenuView::setUpEnterScreen()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> selectingmenuview.o(.constdata__ZTV17SelectingMenuView)
</UL>
<P><STRONG><a name="[171]"></a>SelectingMenuView::saveElementID(short)</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, selectingmenuview.o(i._ZN17SelectingMenuView13saveElementIDEs))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = SelectingMenuView::saveElementID(short)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> selectingmenuview.o(.constdata__ZTV17SelectingMenuView)
</UL>
<P><STRONG><a name="[398]"></a>SelectingMenuView::setUpTheClock()</STRONG> (Thumb, 74 bytes, Stack size 8 bytes, selectingmenuview.o(i._ZN17SelectingMenuView13setUpTheClockEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 296<LI>Call Chain = SelectingMenuView::setUpTheClock() &rArr; touchgfx::Unicode::snprintf(unsigned short*, unsigned short, const char*, ...) &rArr; touchgfx::Unicode::vsnprintf(unsigned short*, unsigned short, const char*, std::__va_list) &rArr; touchgfx::Unicode::vsnprintf(unsigned short*, unsigned short, const unsigned short*, const char*, std::__va_list) &rArr; touchgfx::Unicode::itoa(int, unsigned short*, unsigned short, int) &rArr; touchgfx::Unicode::strncpy(unsigned short*, const char*, unsigned short)
</UL>
<BR>[Calls]<UL><LI><a href="#[333]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Unicode::snprintf(unsigned short*, unsigned short, const char*, ...)
</UL>
<BR>[Called By]<UL><LI><a href="#[396]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SelectingMenuView::setUpEnterScreen()
</UL>

<P><STRONG><a name="[399]"></a>SelectingMenuView::clockAnimation()</STRONG> (Thumb, 150 bytes, Stack size 8 bytes, selectingmenuview.o(i._ZN17SelectingMenuView14clockAnimationEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 296<LI>Call Chain = SelectingMenuView::clockAnimation() &rArr; touchgfx::Unicode::snprintf(unsigned short*, unsigned short, const char*, ...) &rArr; touchgfx::Unicode::vsnprintf(unsigned short*, unsigned short, const char*, std::__va_list) &rArr; touchgfx::Unicode::vsnprintf(unsigned short*, unsigned short, const unsigned short*, const char*, std::__va_list) &rArr; touchgfx::Unicode::itoa(int, unsigned short*, unsigned short, int) &rArr; touchgfx::Unicode::strncpy(unsigned short*, const char*, unsigned short)
</UL>
<BR>[Calls]<UL><LI><a href="#[1e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Drawable::invalidate() const
<LI><a href="#[333]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Unicode::snprintf(unsigned short*, unsigned short, const char*, ...)
</UL>
<BR>[Called By]<UL><LI><a href="#[162]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SelectingMenuView::handleTickEvent()
</UL>

<P><STRONG><a name="[39a]"></a>SelectingMenuView::saveSharedData()</STRONG> (Thumb, 64 bytes, Stack size 8 bytes, selectingmenuview.o(i._ZN17SelectingMenuView14saveSharedDataEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = SelectingMenuView::saveSharedData()
</UL>
<BR>[Called By]<UL><LI><a href="#[161]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SelectingMenuView::tearDownScreen()
</UL>

<P><STRONG><a name="[161]"></a>SelectingMenuView::tearDownScreen()</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, selectingmenuview.o(i._ZN17SelectingMenuView14tearDownScreenEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = SelectingMenuView::tearDownScreen() &rArr; SelectingMenuView::saveSharedData()
</UL>
<BR>[Calls]<UL><LI><a href="#[39a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SelectingMenuView::saveSharedData()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> selectingmenuview.o(.constdata__ZTV17SelectingMenuView)
</UL>
<P><STRONG><a name="[162]"></a>SelectingMenuView::handleTickEvent()</STRONG> (Thumb, 60 bytes, Stack size 8 bytes, selectingmenuview.o(i._ZN17SelectingMenuView15handleTickEventEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 304 + Unknown Stack Size
<LI>Call Chain = SelectingMenuView::handleTickEvent() &rArr; SelectingMenuView::clockAnimation() &rArr; touchgfx::Unicode::snprintf(unsigned short*, unsigned short, const char*, ...) &rArr; touchgfx::Unicode::vsnprintf(unsigned short*, unsigned short, const char*, std::__va_list) &rArr; touchgfx::Unicode::vsnprintf(unsigned short*, unsigned short, const unsigned short*, const char*, std::__va_list) &rArr; touchgfx::Unicode::itoa(int, unsigned short*, unsigned short, int) &rArr; touchgfx::Unicode::strncpy(unsigned short*, const char*, unsigned short)
</UL>
<BR>[Calls]<UL><LI><a href="#[39c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SelectingMenuView::ANIMATION_CHANGE_STATEMACHINE()
<LI><a href="#[39b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SelectingMenuView::ENTERSCREEN_STATEMACHINE()
<LI><a href="#[39d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SelectingMenuView::EXITSCREEN_STATEMACHINE()
<LI><a href="#[399]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SelectingMenuView::clockAnimation()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> selectingmenuview.o(.constdata__ZTV17SelectingMenuView)
</UL>
<P><STRONG><a name="[396]"></a>SelectingMenuView::setUpEnterScreen()</STRONG> (Thumb, 48 bytes, Stack size 8 bytes, selectingmenuview.o(i._ZN17SelectingMenuView16setUpEnterScreenEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 304 + Unknown Stack Size
<LI>Call Chain = SelectingMenuView::setUpEnterScreen() &rArr; SelectingMenuView::setUpTheClock() &rArr; touchgfx::Unicode::snprintf(unsigned short*, unsigned short, const char*, ...) &rArr; touchgfx::Unicode::vsnprintf(unsigned short*, unsigned short, const char*, std::__va_list) &rArr; touchgfx::Unicode::vsnprintf(unsigned short*, unsigned short, const unsigned short*, const char*, std::__va_list) &rArr; touchgfx::Unicode::itoa(int, unsigned short*, unsigned short, int) &rArr; touchgfx::Unicode::strncpy(unsigned short*, const char*, unsigned short)
</UL>
<BR>[Calls]<UL><LI><a href="#[1e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Drawable::invalidate() const
<LI><a href="#[33e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Drawable::setTouchable(bool)
<LI><a href="#[39e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SelectingMenuView::changeSelectedItem()
<LI><a href="#[398]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SelectingMenuView::setUpTheClock()
</UL>
<BR>[Called By]<UL><LI><a href="#[160]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SelectingMenuView::setupScreen()
</UL>

<P><STRONG><a name="[39e]"></a>SelectingMenuView::changeSelectedItem()</STRONG> (Thumb, 282 bytes, Stack size 64 bytes, selectingmenuview.o(i._ZN17SelectingMenuView18changeSelectedItemEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 136 + Unknown Stack Size
<LI>Call Chain = SelectingMenuView::changeSelectedItem() &rArr; touchgfx::Image::setBitmap(const touchgfx::Bitmap&) &rArr; touchgfx::Bitmap::getHeight() const &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[1e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Drawable::invalidate() const
<LI><a href="#[347]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextArea::setTypedText(const touchgfx::TypedText&)
<LI><a href="#[1f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Image::setBitmap(const touchgfx::Bitmap&)
<LI><a href="#[346]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TypedText::TypedText(unsigned short)
<LI><a href="#[345]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Bitmap::Bitmap(unsigned short)
</UL>
<BR>[Called By]<UL><LI><a href="#[39c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SelectingMenuView::ANIMATION_CHANGE_STATEMACHINE()
<LI><a href="#[396]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SelectingMenuView::setUpEnterScreen()
</UL>

<P><STRONG><a name="[168]"></a>SelectingMenuView::hardwareUpKeyAction()</STRONG> (Thumb, 42 bytes, Stack size 8 bytes, selectingmenuview.o(i._ZN17SelectingMenuView19hardwareUpKeyActionEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 112 + Unknown Stack Size
<LI>Call Chain = SelectingMenuView::hardwareUpKeyAction() &rArr; SelectingMenuView::changeColorOverviewedMenuBackground() &rArr; touchgfx::Button::setBitmaps(const touchgfx::Bitmap&, const touchgfx::Bitmap&) &rArr; touchgfx::Bitmap::getHeight() const &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[39f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SelectingMenuView::changeColorOverviewedMenuBackground()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> selectingmenuview.o(.constdata__ZTV17SelectingMenuView)
</UL>
<P><STRONG><a name="[397]"></a>SelectingMenuView::screenEnterAnimation()</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, selectingmenuview.o(i._ZN17SelectingMenuView20screenEnterAnimationEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 136 + Unknown Stack Size
<LI>Call Chain = SelectingMenuView::screenEnterAnimation() &rArr; touchgfx::FadeAnimator&lang;touchgfx::TextAreaWithTwoWildcards&rang;::startFadeAnimation(unsigned char, unsigned short, short(*)(unsigned short, short, short, unsigned short)) &rArr; touchgfx::Application::registerTimerWidget(touchgfx::Drawable*) &rArr; touchgfx::Application::TimerWidgets::add(touchgfx::Drawable*) &rArr; touchgfx::Application::TimerWidgets::compact() &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[341]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::FadeAnimator&lang;touchgfx::TextAreaWithTwoWildcards&rang;::startFadeAnimation(unsigned char, unsigned short, short(*)(unsigned short, short, short, unsigned short))
</UL>
<BR>[Called By]<UL><LI><a href="#[160]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SelectingMenuView::setupScreen()
</UL>

<P><STRONG><a name="[167]"></a>SelectingMenuView::hardwareDownKeyAction()</STRONG> (Thumb, 46 bytes, Stack size 8 bytes, selectingmenuview.o(i._ZN17SelectingMenuView21hardwareDownKeyActionEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 112 + Unknown Stack Size
<LI>Call Chain = SelectingMenuView::hardwareDownKeyAction() &rArr; SelectingMenuView::changeColorUnselectedMenuBackground() &rArr; touchgfx::Button::setBitmaps(const touchgfx::Bitmap&, const touchgfx::Bitmap&) &rArr; touchgfx::Bitmap::getHeight() const &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[3a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SelectingMenuView::changeColorUnselectedMenuBackground()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> selectingmenuview.o(.constdata__ZTV17SelectingMenuView)
</UL>
<P><STRONG><a name="[16a]"></a>SelectingMenuView::hardwareLeftKeyAction()</STRONG> (Thumb, 114 bytes, Stack size 8 bytes, selectingmenuview.o(i._ZN17SelectingMenuView21hardwareLeftKeyActionEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 112 + Unknown Stack Size
<LI>Call Chain = SelectingMenuView::hardwareLeftKeyAction() &rArr; SelectingMenuView::changeColorUnselectedMenuBackground() &rArr; touchgfx::Button::setBitmaps(const touchgfx::Bitmap&, const touchgfx::Bitmap&) &rArr; touchgfx::Bitmap::getHeight() const &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[3a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SelectingMenuView::changeColorUnselectedMenuBackground()
<LI><a href="#[39f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SelectingMenuView::changeColorOverviewedMenuBackground()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> selectingmenuview.o(.constdata__ZTV17SelectingMenuView)
</UL>
<P><STRONG><a name="[170]"></a>SelectingMenuView::hideRemainingElements()</STRONG> (Thumb, 62 bytes, Stack size 8 bytes, selectingmenuview.o(i._ZN17SelectingMenuView21hideRemainingElementsEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 136 + Unknown Stack Size
<LI>Call Chain = SelectingMenuView::hideRemainingElements() &rArr; touchgfx::FadeAnimator&lang;touchgfx::Button&rang;::startFadeAnimation(unsigned char, unsigned short, short(*)(unsigned short, short, short, unsigned short)) &rArr; touchgfx::Application::registerTimerWidget(touchgfx::Drawable*) &rArr; touchgfx::Application::TimerWidgets::add(touchgfx::Drawable*) &rArr; touchgfx::Application::TimerWidgets::compact() &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[344]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::FadeAnimator&lang;touchgfx::Button&rang;::startFadeAnimation(unsigned char, unsigned short, short(*)(unsigned short, short, short, unsigned short))
<LI><a href="#[343]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::FadeAnimator&lang;touchgfx::Image&rang;::startFadeAnimation(unsigned char, unsigned short, short(*)(unsigned short, short, short, unsigned short))
<LI><a href="#[341]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::FadeAnimator&lang;touchgfx::TextAreaWithTwoWildcards&rang;::startFadeAnimation(unsigned char, unsigned short, short(*)(unsigned short, short, short, unsigned short))
</UL>
<BR>[Address Reference Count : 1]<UL><LI> selectingmenuview.o(.constdata__ZTV17SelectingMenuView)
</UL>
<P><STRONG><a name="[16e]"></a>SelectingMenuView::pressInfoButtonAction()</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, selectingmenuview.o(i._ZN17SelectingMenuView21pressInfoButtonActionEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = SelectingMenuView::pressInfoButtonAction()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> selectingmenuview.o(.constdata__ZTV17SelectingMenuView)
</UL>
<P><STRONG><a name="[16c]"></a>SelectingMenuView::pressLeftButtonAction()</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, selectingmenuview.o(i._ZN17SelectingMenuView21pressLeftButtonActionEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = SelectingMenuView::pressLeftButtonAction()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> selectingmenuview.o(.constdata__ZTV17SelectingMenuView)
</UL>
<P><STRONG><a name="[169]"></a>SelectingMenuView::hardwareRightKeyAction()</STRONG> (Thumb, 112 bytes, Stack size 8 bytes, selectingmenuview.o(i._ZN17SelectingMenuView22hardwareRightKeyActionEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 112 + Unknown Stack Size
<LI>Call Chain = SelectingMenuView::hardwareRightKeyAction() &rArr; SelectingMenuView::changeColorUnselectedMenuBackground() &rArr; touchgfx::Button::setBitmaps(const touchgfx::Bitmap&, const touchgfx::Bitmap&) &rArr; touchgfx::Bitmap::getHeight() const &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[3a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SelectingMenuView::changeColorUnselectedMenuBackground()
<LI><a href="#[39f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SelectingMenuView::changeColorOverviewedMenuBackground()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> selectingmenuview.o(.constdata__ZTV17SelectingMenuView)
</UL>
<P><STRONG><a name="[16b]"></a>SelectingMenuView::pressRightButtonAction()</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, selectingmenuview.o(i._ZN17SelectingMenuView22pressRightButtonActionEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = SelectingMenuView::pressRightButtonAction()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> selectingmenuview.o(.constdata__ZTV17SelectingMenuView)
</UL>
<P><STRONG><a name="[39d]"></a>SelectingMenuView::EXITSCREEN_STATEMACHINE()</STRONG> (Thumb, 284 bytes, Stack size 32 bytes, selectingmenuview.o(i._ZN17SelectingMenuView23EXITSCREEN_STATEMACHINEEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 176 + Unknown Stack Size
<LI>Call Chain = SelectingMenuView::EXITSCREEN_STATEMACHINE() &rArr; touchgfx::FadeAnimator&lang;touchgfx::TextArea&rang;::startFadeAnimation(unsigned char, unsigned short, short(*)(unsigned short, short, short, unsigned short)) &rArr; touchgfx::FadeAnimator&lang;touchgfx::TextArea&rang;::nextFadeAnimationStep() &rArr; touchgfx::TextArea::invalidateContent() const &rArr; touchgfx::TypedText::getText() const &rArr; __aeabi_assert &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[1e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Drawable::invalidate() const
<LI><a href="#[343]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::FadeAnimator&lang;touchgfx::Image&rang;::startFadeAnimation(unsigned char, unsigned short, short(*)(unsigned short, short, short, unsigned short))
<LI><a href="#[3a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::FadeAnimator&lang;touchgfx::Image&rang;::isFadeAnimationRunning() const
<LI><a href="#[3a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::MoveAnimator&lang;touchgfx::Container&rang;::startMoveAnimation(short, short, unsigned short, short(*)(unsigned short, short, short, unsigned short), short(*)(unsigned short, short, short, unsigned short))
<LI><a href="#[342]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::FadeAnimator&lang;touchgfx::TextArea&rang;::startFadeAnimation(unsigned char, unsigned short, short(*)(unsigned short, short, short, unsigned short))
</UL>
<BR>[Called By]<UL><LI><a href="#[162]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SelectingMenuView::handleTickEvent()
</UL>

<P><STRONG><a name="[3a3]"></a>SelectingMenuView::fadeInRemainingElements()</STRONG> (Thumb, 34 bytes, Stack size 8 bytes, selectingmenuview.o(i._ZN17SelectingMenuView23fadeInRemainingElementsEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 136 + Unknown Stack Size
<LI>Call Chain = SelectingMenuView::fadeInRemainingElements() &rArr; touchgfx::FadeAnimator&lang;touchgfx::Image&rang;::startFadeAnimation(unsigned char, unsigned short, short(*)(unsigned short, short, short, unsigned short)) &rArr; touchgfx::Application::registerTimerWidget(touchgfx::Drawable*) &rArr; touchgfx::Application::TimerWidgets::add(touchgfx::Drawable*) &rArr; touchgfx::Application::TimerWidgets::compact() &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[343]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::FadeAnimator&lang;touchgfx::Image&rang;::startFadeAnimation(unsigned char, unsigned short, short(*)(unsigned short, short, short, unsigned short))
</UL>
<BR>[Called By]<UL><LI><a href="#[39b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SelectingMenuView::ENTERSCREEN_STATEMACHINE()
</UL>

<P><STRONG><a name="[16f]"></a>SelectingMenuView::hardwareCenterKeyAction()</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, selectingmenuview.o(i._ZN17SelectingMenuView23hardwareCenterKeyActionEv))
<BR>[Address Reference Count : 1]<UL><LI> selectingmenuview.o(.constdata__ZTV17SelectingMenuView)
</UL>
<P><STRONG><a name="[39b]"></a>SelectingMenuView::ENTERSCREEN_STATEMACHINE()</STRONG> (Thumb, 214 bytes, Stack size 16 bytes, selectingmenuview.o(i._ZN17SelectingMenuView24ENTERSCREEN_STATEMACHINEEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 168 + Unknown Stack Size
<LI>Call Chain = SelectingMenuView::ENTERSCREEN_STATEMACHINE() &rArr; SelectingMenuView::fadeInTexts() &rArr; touchgfx::FadeAnimator&lang;touchgfx::TextArea&rang;::startFadeAnimation(unsigned char, unsigned short, short(*)(unsigned short, short, short, unsigned short)) &rArr; touchgfx::FadeAnimator&lang;touchgfx::TextArea&rang;::nextFadeAnimationStep() &rArr; touchgfx::TextArea::invalidateContent() const &rArr; touchgfx::TypedText::getText() const &rArr; __aeabi_assert &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[343]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::FadeAnimator&lang;touchgfx::Image&rang;::startFadeAnimation(unsigned char, unsigned short, short(*)(unsigned short, short, short, unsigned short))
<LI><a href="#[33e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Drawable::setTouchable(bool)
<LI><a href="#[3a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::FadeAnimator&lang;touchgfx::Image&rang;::isFadeAnimationRunning() const
<LI><a href="#[3a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::MoveAnimator&lang;touchgfx::Container&rang;::startMoveAnimation(short, short, unsigned short, short(*)(unsigned short, short, short, unsigned short), short(*)(unsigned short, short, short, unsigned short))
<LI><a href="#[3a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SelectingMenuView::fadeInRemainingElements()
<LI><a href="#[395]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SelectingMenuView::fadeInTexts()
</UL>
<BR>[Called By]<UL><LI><a href="#[162]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SelectingMenuView::handleTickEvent()
</UL>

<P><STRONG><a name="[16d]"></a>SelectingMenuView::pressSettingButtonAction()</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, selectingmenuview.o(i._ZN17SelectingMenuView24pressSettingButtonActionEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = SelectingMenuView::pressSettingButtonAction()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> selectingmenuview.o(.constdata__ZTV17SelectingMenuView)
</UL>
<P><STRONG><a name="[39c]"></a>SelectingMenuView::ANIMATION_CHANGE_STATEMACHINE()</STRONG> (Thumb, 428 bytes, Stack size 8 bytes, selectingmenuview.o(i._ZN17SelectingMenuView29ANIMATION_CHANGE_STATEMACHINEEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 152 + Unknown Stack Size
<LI>Call Chain = SelectingMenuView::ANIMATION_CHANGE_STATEMACHINE() &rArr; touchgfx::FadeAnimator&lang;touchgfx::TextArea&rang;::startFadeAnimation(unsigned char, unsigned short, short(*)(unsigned short, short, short, unsigned short)) &rArr; touchgfx::FadeAnimator&lang;touchgfx::TextArea&rang;::nextFadeAnimationStep() &rArr; touchgfx::TextArea::invalidateContent() const &rArr; touchgfx::TypedText::getText() const &rArr; __aeabi_assert &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[1e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Drawable::invalidate() const
<LI><a href="#[343]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::FadeAnimator&lang;touchgfx::Image&rang;::startFadeAnimation(unsigned char, unsigned short, short(*)(unsigned short, short, short, unsigned short))
<LI><a href="#[3a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextArea::getAlpha() const
<LI><a href="#[1da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Drawable::moveRelative(short, short)
<LI><a href="#[3a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::FadeAnimator&lang;touchgfx::Image&rang;::isFadeAnimationRunning() const
<LI><a href="#[3a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Drawable::getX() const
<LI><a href="#[351]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Drawable::setVisible(bool)
<LI><a href="#[39e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SelectingMenuView::changeSelectedItem()
<LI><a href="#[342]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::FadeAnimator&lang;touchgfx::TextArea&rang;::startFadeAnimation(unsigned char, unsigned short, short(*)(unsigned short, short, short, unsigned short))
</UL>
<BR>[Called By]<UL><LI><a href="#[162]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SelectingMenuView::handleTickEvent()
</UL>

<P><STRONG><a name="[39f]"></a>SelectingMenuView::changeColorOverviewedMenuBackground()</STRONG> (Thumb, 96 bytes, Stack size 24 bytes, selectingmenuview.o(i._ZN17SelectingMenuView35changeColorOverviewedMenuBackgroundEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 104 + Unknown Stack Size
<LI>Call Chain = SelectingMenuView::changeColorOverviewedMenuBackground() &rArr; touchgfx::Button::setBitmaps(const touchgfx::Bitmap&, const touchgfx::Bitmap&) &rArr; touchgfx::Bitmap::getHeight() const &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[1e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Drawable::invalidate() const
<LI><a href="#[1fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Button::setBitmaps(const touchgfx::Bitmap&, const touchgfx::Bitmap&)
<LI><a href="#[345]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Bitmap::Bitmap(unsigned short)
</UL>
<BR>[Called By]<UL><LI><a href="#[169]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SelectingMenuView::hardwareRightKeyAction()
<LI><a href="#[16a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SelectingMenuView::hardwareLeftKeyAction()
<LI><a href="#[168]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SelectingMenuView::hardwareUpKeyAction()
</UL>

<P><STRONG><a name="[3a0]"></a>SelectingMenuView::changeColorUnselectedMenuBackground()</STRONG> (Thumb, 190 bytes, Stack size 24 bytes, selectingmenuview.o(i._ZN17SelectingMenuView35changeColorUnselectedMenuBackgroundEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 104 + Unknown Stack Size
<LI>Call Chain = SelectingMenuView::changeColorUnselectedMenuBackground() &rArr; touchgfx::Button::setBitmaps(const touchgfx::Bitmap&, const touchgfx::Bitmap&) &rArr; touchgfx::Bitmap::getHeight() const &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[1e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Drawable::invalidate() const
<LI><a href="#[1fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Button::setBitmaps(const touchgfx::Bitmap&, const touchgfx::Bitmap&)
<LI><a href="#[345]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Bitmap::Bitmap(unsigned short)
</UL>
<BR>[Called By]<UL><LI><a href="#[169]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SelectingMenuView::hardwareRightKeyAction()
<LI><a href="#[16a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SelectingMenuView::hardwareLeftKeyAction()
<LI><a href="#[167]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SelectingMenuView::hardwareDownKeyAction()
</UL>

<P><STRONG><a name="[3a6]"></a>SelectingMenuView::SelectingMenuView()</STRONG> (Thumb, 102 bytes, Stack size 8 bytes, selectingmenuview.o(i._ZN17SelectingMenuViewC1Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 360 + Unknown Stack Size
<LI>Call Chain = SelectingMenuView::SelectingMenuView() &rArr; SelectingMenuViewBase::SelectingMenuViewBase() &rArr; touchgfx::Unicode::snprintf(unsigned short*, unsigned short, const char*, ...) &rArr; touchgfx::Unicode::vsnprintf(unsigned short*, unsigned short, const char*, std::__va_list) &rArr; touchgfx::Unicode::vsnprintf(unsigned short*, unsigned short, const unsigned short*, const char*, std::__va_list) &rArr; touchgfx::Unicode::itoa(int, unsigned short*, unsigned short, int) &rArr; touchgfx::Unicode::strncpy(unsigned short*, const char*, unsigned short)
</UL>
<BR>[Calls]<UL><LI><a href="#[3a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SelectingMenuViewBase::SelectingMenuViewBase()
</UL>
<BR>[Called By]<UL><LI><a href="#[3b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;T2* touchgfx::makeTransition&lang;SelectingMenuView, SelectingMenuPresenter, touchgfx::NoTransition, Model&rang;(touchgfx::Screen**, touchgfx::Presenter**, touchgfx::MVPHeap&, touchgfx::Transition**, T4*)
</UL>

<P><STRONG><a name="[56a]"></a>SelectingMenuView::SelectingMenuView__sub_object()</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, selectingmenuview.o(i._ZN17SelectingMenuViewC1Ev), UNUSED)

<P><STRONG><a name="[15f]"></a>SelectingMenuView::~SelectingMenuView()</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, selectingmenuview.o(i._ZN17SelectingMenuViewD1Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = SelectingMenuView::~SelectingMenuView() &rArr; SelectingMenuViewBase::~SelectingMenuViewBase() &rArr; touchgfx::FadeAnimator&lang;touchgfx::TextAreaWithTwoWildcards&rang;::~FadeAnimator() &rArr; touchgfx::TextAreaWithTwoWildcards::~TextAreaWithTwoWildcards() &rArr; touchgfx::TextArea::~TextArea()
</UL>
<BR>[Calls]<UL><LI><a href="#[19c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SelectingMenuViewBase::~SelectingMenuViewBase()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> selectingmenuview.o(.constdata__ZTV17SelectingMenuView)
</UL>
<P><STRONG><a name="[56b]"></a>SelectingMenuView::~SelectingMenuView__sub_object()</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, selectingmenuview.o(i._ZN17SelectingMenuViewD1Ev), UNUSED)

<P><STRONG><a name="[173]"></a>SettingsPresenter::deactivate()</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, settingspresenter.o(i._ZN17SettingsPresenter10deactivateEv))
<BR>[Address Reference Count : 1]<UL><LI> settingspresenter.o(.constdata__ZTV17SettingsPresenter)
</UL>
<P><STRONG><a name="[172]"></a>SettingsPresenter::activate()</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, settingspresenter.o(i._ZN17SettingsPresenter8activateEv))
<BR>[Address Reference Count : 1]<UL><LI> settingspresenter.o(.constdata__ZTV17SettingsPresenter)
</UL>
<P><STRONG><a name="[51b]"></a>SettingsPresenter::SettingsPresenter(SettingsView&)</STRONG> (Thumb, 38 bytes, Stack size 0 bytes, settingspresenter.o(i._ZN17SettingsPresenterC1ER12SettingsView))
<BR><BR>[Called By]<UL><LI><a href="#[3b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;T2* touchgfx::makeTransition&lang;SettingsView, SettingsPresenter, touchgfx::NoTransition, Model&rang;(touchgfx::Screen**, touchgfx::Presenter**, touchgfx::MVPHeap&, touchgfx::Transition**, T4*)
</UL>

<P><STRONG><a name="[56c]"></a>SettingsPresenter::SettingsPresenter__sub_object(SettingsView&)</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, settingspresenter.o(i._ZN17SettingsPresenterC1ER12SettingsView), UNUSED)

<P><STRONG><a name="[174]"></a>SettingsPresenter::~SettingsPresenter()</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, settingspresenter.o(i._ZN17SettingsPresenterD1Ev))
<BR>[Address Reference Count : 1]<UL><LI> settingspresenter.o(.constdata__ZTV17SettingsPresenter)
</UL>
<P><STRONG><a name="[56d]"></a>SettingsPresenter::~SettingsPresenter__sub_object()</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, settingspresenter.o(i._ZN17SettingsPresenterD1Ev), UNUSED)

<P><STRONG><a name="[438]"></a>TypedTextDatabase::getInstanceSize()</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, typedtextdatabase.o(i._ZN17TypedTextDatabase15getInstanceSizeEv))
<BR><BR>[Called By]<UL><LI><a href="#[35d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Texts::setLanguage(unsigned short)
</UL>

<P><STRONG><a name="[437]"></a>TypedTextDatabase::getFonts()</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, typedtextdatabase.o(i._ZN17TypedTextDatabase8getFontsEv))
<BR><BR>[Called By]<UL><LI><a href="#[35d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Texts::setLanguage(unsigned short)
</UL>

<P><STRONG><a name="[179]"></a>FrontendApplication::handleTickEvent()</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, frontendapplication.o(i._ZN19FrontendApplication15handleTickEventEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 96 + Unknown Stack Size
<LI>Call Chain = FrontendApplication::handleTickEvent() &rArr; touchgfx::Application::handleTickEvent() &rArr; touchgfx::Application::TimerWidgets::compact() &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[3a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Model::tick()
<LI><a href="#[1ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Application::handleTickEvent()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> frontendapplication.o(.constdata__ZTV19FrontendApplication)
</UL>
<P><STRONG><a name="[34d]"></a>FrontendApplication::FrontendApplication(Model&, FrontendHeap&)</STRONG> (Thumb, 28 bytes, Stack size 16 bytes, frontendapplication.o(i._ZN19FrontendApplicationC1ER5ModelR12FrontendHeap))
<BR><BR>[Stack]<UL><LI>Max Depth = 144<LI>Call Chain = FrontendApplication::FrontendApplication(Model&, FrontendHeap&) &rArr; FrontendApplicationBase::FrontendApplicationBase(Model&, FrontendHeap&) &rArr; touchgfx::LCD16bpp::enableTextureMapperAll() &rArr; touchgfx::LCD16bpp::enableTextureMapperL8_ARGB8888() &rArr; touchgfx::LCD16bpp::enableTextureMapperL8_ARGB8888_BilinearInterpolation() &rArr; __aeabi_atexit &rArr; malloc &rArr; __Heap_Full &rArr; __Heap_ProvideMemory &rArr; free
</UL>
<BR>[Calls]<UL><LI><a href="#[3a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FrontendApplicationBase::FrontendApplicationBase(Model&, FrontendHeap&)
</UL>
<BR>[Called By]<UL><LI><a href="#[34a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FrontendHeap::FrontendHeap()
</UL>

<P><STRONG><a name="[56e]"></a>FrontendApplication::FrontendApplication__sub_object(Model&, FrontendHeap&)</STRONG> (Thumb, 0 bytes, Stack size 16 bytes, frontendapplication.o(i._ZN19FrontendApplicationC1ER5ModelR12FrontendHeap), UNUSED)

<P><STRONG><a name="[181]"></a>InformationDemoView::setupScreen()</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, informationdemoview.o(i._ZN19InformationDemoView11setupScreenEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = InformationDemoView::setupScreen()
</UL>
<BR>[Calls]<UL><LI><a href="#[1b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InformationDemoViewBase::setupScreen()
<LI><a href="#[3aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InformationDemoView::readSharedData()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> informationdemoview.o(.constdata__ZTV19InformationDemoView)
</UL>
<P><STRONG><a name="[3ac]"></a>InformationDemoView::updateTimer()</STRONG> (Thumb, 74 bytes, Stack size 8 bytes, informationdemoview.o(i._ZN19InformationDemoView11updateTimerEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = InformationDemoView::updateTimer()
</UL>
<BR>[Called By]<UL><LI><a href="#[183]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InformationDemoView::handleTickEvent()
</UL>

<P><STRONG><a name="[3ad]"></a>InformationDemoView::clockAnimation()</STRONG> (Thumb, 106 bytes, Stack size 0 bytes, informationdemoview.o(i._ZN19InformationDemoView14clockAnimationEv))
<BR><BR>[Called By]<UL><LI><a href="#[183]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InformationDemoView::handleTickEvent()
</UL>

<P><STRONG><a name="[3aa]"></a>InformationDemoView::readSharedData()</STRONG> (Thumb, 92 bytes, Stack size 0 bytes, informationdemoview.o(i._ZN19InformationDemoView14readSharedDataEv))
<BR><BR>[Called By]<UL><LI><a href="#[181]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InformationDemoView::setupScreen()
</UL>

<P><STRONG><a name="[3ab]"></a>InformationDemoView::saveSharedData()</STRONG> (Thumb, 68 bytes, Stack size 8 bytes, informationdemoview.o(i._ZN19InformationDemoView14saveSharedDataEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = InformationDemoView::saveSharedData()
</UL>
<BR>[Called By]<UL><LI><a href="#[182]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InformationDemoView::tearDownScreen()
</UL>

<P><STRONG><a name="[182]"></a>InformationDemoView::tearDownScreen()</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, informationdemoview.o(i._ZN19InformationDemoView14tearDownScreenEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = InformationDemoView::tearDownScreen() &rArr; InformationDemoView::saveSharedData()
</UL>
<BR>[Calls]<UL><LI><a href="#[3ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InformationDemoView::saveSharedData()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> informationdemoview.o(.constdata__ZTV19InformationDemoView)
</UL>
<P><STRONG><a name="[183]"></a>InformationDemoView::handleTickEvent()</STRONG> (Thumb, 80 bytes, Stack size 8 bytes, informationdemoview.o(i._ZN19InformationDemoView15handleTickEventEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = InformationDemoView::handleTickEvent() &rArr; InformationDemoView::updateTimer()
</UL>
<BR>[Calls]<UL><LI><a href="#[3ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InformationDemoView::clockAnimation()
<LI><a href="#[3ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InformationDemoView::updateTimer()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> informationdemoview.o(.constdata__ZTV19InformationDemoView)
</UL>
<P><STRONG><a name="[187]"></a>InformationDemoView::pressCenterKeyFunction()</STRONG> (Thumb, 32 bytes, Stack size 8 bytes, informationdemoview.o(i._ZN19InformationDemoView22pressCenterKeyFunctionEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = InformationDemoView::pressCenterKeyFunction()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> informationdemoview.o(.constdata__ZTV19InformationDemoView)
</UL>
<P><STRONG><a name="[3ae]"></a>InformationDemoView::InformationDemoView()</STRONG> (Thumb, 46 bytes, Stack size 8 bytes, informationdemoview.o(i._ZN19InformationDemoViewC1Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 128 + Unknown Stack Size
<LI>Call Chain = InformationDemoView::InformationDemoView() &rArr; InformationDemoViewBase::InformationDemoViewBase() &rArr; touchgfx::Image::setBitmap(const touchgfx::Bitmap&) &rArr; touchgfx::Bitmap::getHeight() const &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[3af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InformationDemoViewBase::InformationDemoViewBase()
</UL>
<BR>[Called By]<UL><LI><a href="#[3b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;T2* touchgfx::makeTransition&lang;InformationDemoView, InformationDemoPresenter, touchgfx::NoTransition, Model&rang;(touchgfx::Screen**, touchgfx::Presenter**, touchgfx::MVPHeap&, touchgfx::Transition**, T4*)
</UL>

<P><STRONG><a name="[56f]"></a>InformationDemoView::InformationDemoView__sub_object()</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, informationdemoview.o(i._ZN19InformationDemoViewC1Ev), UNUSED)

<P><STRONG><a name="[180]"></a>InformationDemoView::~InformationDemoView()</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, informationdemoview.o(i._ZN19InformationDemoViewD1Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = InformationDemoView::~InformationDemoView() &rArr; InformationDemoViewBase::~InformationDemoViewBase() &rArr; touchgfx::BoxWithBorderButtonStyle&lang;touchgfx::ClickButtonTrigger&rang;::~BoxWithBorderButtonStyle() &rArr; touchgfx::ClickButtonTrigger::~ClickButtonTrigger() &rArr; touchgfx::AbstractButtonContainer::~AbstractButtonContainer()
</UL>
<BR>[Calls]<UL><LI><a href="#[1b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InformationDemoViewBase::~InformationDemoViewBase()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> informationdemoview.o(.constdata__ZTV19InformationDemoView)
</UL>
<P><STRONG><a name="[570]"></a>InformationDemoView::~InformationDemoView__sub_object()</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, informationdemoview.o(i._ZN19InformationDemoViewD1Ev), UNUSED)

<P><STRONG><a name="[189]"></a>InformationViewBase::setupScreen()</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, informationviewbase.o(i._ZN19InformationViewBase11setupScreenEv))
<BR><BR>[Called By]<UL><LI><a href="#[147]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InformationView::setupScreen()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> informationviewbase.o(.constdata__ZTV19InformationViewBase)
</UL>
<P><STRONG><a name="[14a]"></a>InformationViewBase::handleKeyEvent(unsigned char)</STRONG> (Thumb, 20 bytes, Stack size 16 bytes, informationviewbase.o(i._ZN19InformationViewBase14handleKeyEventEh))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = InformationViewBase::handleKeyEvent(unsigned char)
</UL>
<BR>[Address Reference Count : 2]<UL><LI> informationview.o(.constdata__ZTV15InformationView)
<LI> informationviewbase.o(.constdata__ZTV19InformationViewBase)
</UL>
<P><STRONG><a name="[14b]"></a>InformationViewBase::goToScreenInfo2()</STRONG> (Thumb, 18 bytes, Stack size 16 bytes, informationviewbase.o(i._ZN19InformationViewBase15goToScreenInfo2Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = InformationViewBase::goToScreenInfo2() &rArr; FrontendApplicationBase::gotoInformationDemoScreenNoTransition() &rArr; touchgfx::Callback&lang;FrontendApplicationBase, void, void, void&rang;::Callback(FrontendApplicationBase*, void(FrontendApplicationBase::*)())
</UL>
<BR>[Calls]<UL><LI><a href="#[363]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Application::getInstance()
<LI><a href="#[3b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FrontendApplicationBase::gotoInformationDemoScreenNoTransition()
</UL>
<BR>[Address Reference Count : 2]<UL><LI> informationview.o(.constdata__ZTV15InformationView)
<LI> informationviewbase.o(.constdata__ZTV19InformationViewBase)
</UL>
<P><STRONG><a name="[e5]"></a>InformationViewBase::flexButtonCallbackHandler(const touchgfx::AbstractButtonContainer&)</STRONG> (Thumb, 24 bytes, Stack size 16 bytes, informationviewbase.o(i._ZN19InformationViewBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = InformationViewBase::flexButtonCallbackHandler(const touchgfx::AbstractButtonContainer&)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> informationviewbase.o(.constdata)
</UL>
<P><STRONG><a name="[383]"></a>InformationViewBase::InformationViewBase()</STRONG> (Thumb, 436 bytes, Stack size 48 bytes, informationviewbase.o(i._ZN19InformationViewBaseC1Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 120 + Unknown Stack Size
<LI>Call Chain = InformationViewBase::InformationViewBase() &rArr; touchgfx::Image::setBitmap(const touchgfx::Bitmap&) &rArr; touchgfx::Bitmap::getHeight() const &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[1f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Image::setBitmap(const touchgfx::Bitmap&)
<LI><a href="#[345]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Bitmap::Bitmap(unsigned short)
<LI><a href="#[350]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Drawable::setXY(short, short)
<LI><a href="#[358]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Color::getColorFromRGB(unsigned char, unsigned char, unsigned char)
<LI><a href="#[367]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Screen::Screen()
<LI><a href="#[373]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Drawable::setPosition(short, short, short, short)
<LI><a href="#[368]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Widget::Widget__sub_object()
<LI><a href="#[374]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Screen::add(touchgfx::Drawable&)
<LI><a href="#[389]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::BoxWithBorderButtonStyle&lang;touchgfx::ClickButtonTrigger&rang;::BoxWithBorderButtonStyle()
<LI><a href="#[386]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Box::Box()
<LI><a href="#[38c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Box::setColor(touchgfx::colortype)
<LI><a href="#[2d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[382]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InformationView::InformationView()
</UL>

<P><STRONG><a name="[571]"></a>InformationViewBase::InformationViewBase__sub_object()</STRONG> (Thumb, 0 bytes, Stack size 48 bytes, informationviewbase.o(i._ZN19InformationViewBaseC1Ev), UNUSED)

<P><STRONG><a name="[188]"></a>InformationViewBase::~InformationViewBase()</STRONG> (Thumb, 70 bytes, Stack size 16 bytes, informationviewbase.o(i._ZN19InformationViewBaseD1Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = InformationViewBase::~InformationViewBase() &rArr; touchgfx::BoxWithBorderButtonStyle&lang;touchgfx::ClickButtonTrigger&rang;::~BoxWithBorderButtonStyle() &rArr; touchgfx::ClickButtonTrigger::~ClickButtonTrigger() &rArr; touchgfx::AbstractButtonContainer::~AbstractButtonContainer()
</UL>
<BR>[Calls]<UL><LI><a href="#[256]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Widget::~Widget__sub_object()
<LI><a href="#[261]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Callback&lang;InformationViewBase, const touchgfx::AbstractButtonContainer&, void, void&rang;::~Callback()
<LI><a href="#[24b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::View&lang;InformationPresenter&rang;::~View()
<LI><a href="#[23b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Box::~Box()
<LI><a href="#[237]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::BoxWithBorderButtonStyle&lang;touchgfx::ClickButtonTrigger&rang;::~BoxWithBorderButtonStyle()
</UL>
<BR>[Called By]<UL><LI><a href="#[146]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InformationView::~InformationView()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> informationviewbase.o(.constdata__ZTV19InformationViewBase)
</UL>
<P><STRONG><a name="[572]"></a>InformationViewBase::~InformationViewBase__sub_object()</STRONG> (Thumb, 0 bytes, Stack size 16 bytes, informationviewbase.o(i._ZN19InformationViewBaseD1Ev), UNUSED)

<P><STRONG><a name="[18b]"></a>InformationPresenter::deactivate()</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, informationpresenter.o(i._ZN20InformationPresenter10deactivateEv))
<BR>[Address Reference Count : 1]<UL><LI> informationpresenter.o(.constdata__ZTV20InformationPresenter)
</UL>
<P><STRONG><a name="[18a]"></a>InformationPresenter::activate()</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, informationpresenter.o(i._ZN20InformationPresenter8activateEv))
<BR>[Address Reference Count : 1]<UL><LI> informationpresenter.o(.constdata__ZTV20InformationPresenter)
</UL>
<P><STRONG><a name="[51c]"></a>InformationPresenter::InformationPresenter(InformationView&)</STRONG> (Thumb, 38 bytes, Stack size 0 bytes, informationpresenter.o(i._ZN20InformationPresenterC1ER15InformationView))
<BR><BR>[Called By]<UL><LI><a href="#[3b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;T2* touchgfx::makeTransition&lang;InformationView, InformationPresenter, touchgfx::NoTransition, Model&rang;(touchgfx::Screen**, touchgfx::Presenter**, touchgfx::MVPHeap&, touchgfx::Transition**, T4*)
</UL>

<P><STRONG><a name="[573]"></a>InformationPresenter::InformationPresenter__sub_object(InformationView&)</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, informationpresenter.o(i._ZN20InformationPresenterC1ER15InformationView), UNUSED)

<P><STRONG><a name="[18c]"></a>InformationPresenter::~InformationPresenter()</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, informationpresenter.o(i._ZN20InformationPresenterD1Ev))
<BR>[Address Reference Count : 1]<UL><LI> informationpresenter.o(.constdata__ZTV20InformationPresenter)
</UL>
<P><STRONG><a name="[574]"></a>InformationPresenter::~InformationPresenter__sub_object()</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, informationpresenter.o(i._ZN20InformationPresenterD1Ev), UNUSED)

<P><STRONG><a name="[18e]"></a>STM32TouchController::sampleTouch(int&, int&)</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, stm32touchcontroller.o(i._ZN20STM32TouchController11sampleTouchERiS0_))
<BR>[Address Reference Count : 1]<UL><LI> stm32touchcontroller.o(.constdata__ZTV20STM32TouchController)
</UL>
<P><STRONG><a name="[18d]"></a>STM32TouchController::init()</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32touchcontroller.o(i._ZN20STM32TouchController4initEv))
<BR>[Address Reference Count : 1]<UL><LI> stm32touchcontroller.o(.constdata__ZTV20STM32TouchController)
</UL>
<P><STRONG><a name="[d3]"></a>STM32TouchController::~STM32TouchController()</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, stm32touchcontroller.o(i._ZN20STM32TouchControllerD1Ev))
<BR>[Address Reference Count : 2]<UL><LI> stm32touchcontroller.o(.constdata__ZTV20STM32TouchController)
<LI> touchgfxconfiguration.o(i.__sti___25_TouchGFXConfiguration_cpp_f5abfd34)
</UL>
<P><STRONG><a name="[575]"></a>STM32TouchController::~STM32TouchController__sub_object()</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, stm32touchcontroller.o(i._ZN20STM32TouchControllerD1Ev), UNUSED)

<P><STRONG><a name="[190]"></a>SplashScreenViewBase::setupScreen()</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, splashscreenviewbase.o(i._ZN20SplashScreenViewBase11setupScreenEv))
<BR><BR>[Called By]<UL><LI><a href="#[15b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SplashScreenView::setupScreen()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> splashscreenviewbase.o(.constdata__ZTV20SplashScreenViewBase)
</UL>
<P><STRONG><a name="[15c]"></a>SplashScreenViewBase::afterTransition()</STRONG> (Thumb, 84 bytes, Stack size 8 bytes, splashscreenviewbase.o(i._ZN20SplashScreenViewBase15afterTransitionEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 136 + Unknown Stack Size
<LI>Call Chain = SplashScreenViewBase::afterTransition() &rArr; touchgfx::FadeAnimator&lang;touchgfx::Image&rang;::startFadeAnimation(unsigned char, unsigned short, short(*)(unsigned short, short, short, unsigned short)) &rArr; touchgfx::Application::registerTimerWidget(touchgfx::Drawable*) &rArr; touchgfx::Application::TimerWidgets::add(touchgfx::Drawable*) &rArr; touchgfx::Application::TimerWidgets::compact() &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[343]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::FadeAnimator&lang;touchgfx::Image&rang;::startFadeAnimation(unsigned char, unsigned short, short(*)(unsigned short, short, short, unsigned short))
<LI><a href="#[1f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::FadeAnimator&lang;touchgfx::Image&rang;::setFadeAnimationDelay(unsigned short)
</UL>
<BR>[Address Reference Count : 2]<UL><LI> splashscreenview.o(.constdata__ZTV16SplashScreenView)
<LI> splashscreenviewbase.o(.constdata__ZTV20SplashScreenViewBase)
</UL>
<P><STRONG><a name="[ea]"></a>SplashScreenViewBase::fadeOutDemoNameEndedCallbackHandler(const touchgfx::FadeAnimator&lang;touchgfx::Image&rang;&)</STRONG> (Thumb, 20 bytes, Stack size 16 bytes, splashscreenviewbase.o(i._ZN20SplashScreenViewBase35fadeOutDemoNameEndedCallbackHandlerERKN8touchgfx12FadeAnimatorINS0_5ImageEEE))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = SplashScreenViewBase::fadeOutDemoNameEndedCallbackHandler(const touchgfx::FadeAnimator&lang;touchgfx::Image&rang;&) &rArr; FrontendApplicationBase::gotoSelectingMenuScreenNoTransition() &rArr; touchgfx::Callback&lang;FrontendApplicationBase, void, void, void&rang;::Callback(FrontendApplicationBase*, void(FrontendApplicationBase::*)())
</UL>
<BR>[Calls]<UL><LI><a href="#[363]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Application::getInstance()
<LI><a href="#[365]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FrontendApplicationBase::gotoSelectingMenuScreenNoTransition()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> splashscreenviewbase.o(.constdata)
</UL>
<P><STRONG><a name="[394]"></a>SplashScreenViewBase::SplashScreenViewBase()</STRONG> (Thumb, 404 bytes, Stack size 40 bytes, splashscreenviewbase.o(i._ZN20SplashScreenViewBaseC1Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 144 + Unknown Stack Size
<LI>Call Chain = SplashScreenViewBase::SplashScreenViewBase() &rArr; touchgfx::FadeAnimator&lang;touchgfx::Image&rang;::FadeAnimator() &rArr; touchgfx::Image::Image(const touchgfx::Bitmap&) &rArr; touchgfx::Image::setBitmap(const touchgfx::Bitmap&) &rArr; touchgfx::Bitmap::getHeight() const &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[1f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Image::setBitmap(const touchgfx::Bitmap&)
<LI><a href="#[345]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Bitmap::Bitmap(unsigned short)
<LI><a href="#[369]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::colortype::colortype(unsigned)
<LI><a href="#[350]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Drawable::setXY(short, short)
<LI><a href="#[367]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Screen::Screen()
<LI><a href="#[36d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::FadeAnimator&lang;touchgfx::Image&rang;::FadeAnimator()
<LI><a href="#[368]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Widget::Widget__sub_object()
<LI><a href="#[374]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Screen::add(touchgfx::Drawable&)
<LI><a href="#[36a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Image::Image(const touchgfx::Bitmap&)
<LI><a href="#[2d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[393]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SplashScreenView::SplashScreenView()
</UL>

<P><STRONG><a name="[576]"></a>SplashScreenViewBase::SplashScreenViewBase__sub_object()</STRONG> (Thumb, 0 bytes, Stack size 40 bytes, splashscreenviewbase.o(i._ZN20SplashScreenViewBaseC1Ev), UNUSED)

<P><STRONG><a name="[18f]"></a>SplashScreenViewBase::~SplashScreenViewBase()</STRONG> (Thumb, 82 bytes, Stack size 16 bytes, splashscreenviewbase.o(i._ZN20SplashScreenViewBaseD1Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = SplashScreenViewBase::~SplashScreenViewBase() &rArr; touchgfx::FadeAnimator&lang;touchgfx::Image&rang;::~FadeAnimator() &rArr; touchgfx::Image::~Image()
</UL>
<BR>[Calls]<UL><LI><a href="#[256]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Widget::~Widget__sub_object()
<LI><a href="#[24f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Image::~Image()
<LI><a href="#[1f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::FadeAnimator&lang;touchgfx::Image&rang;::~FadeAnimator()
<LI><a href="#[264]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Callback&lang;SplashScreenViewBase, const touchgfx::FadeAnimator&lang;touchgfx::Image&rang;&, void, void&rang;::~Callback()
<LI><a href="#[24c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::View&lang;SplashScreenPresenter&rang;::~View()
</UL>
<BR>[Called By]<UL><LI><a href="#[15a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SplashScreenView::~SplashScreenView()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> splashscreenviewbase.o(.constdata__ZTV20SplashScreenViewBase)
</UL>
<P><STRONG><a name="[577]"></a>SplashScreenViewBase::~SplashScreenViewBase__sub_object()</STRONG> (Thumb, 0 bytes, Stack size 16 bytes, splashscreenviewbase.o(i._ZN20SplashScreenViewBaseD1Ev), UNUSED)

<P><STRONG><a name="[127]"></a>TouchGFXGeneratedHAL::FlushCache()</STRONG> (Thumb, 138 bytes, Stack size 12 bytes, touchgfxgeneratedhal.o(i._ZN20TouchGFXGeneratedHAL10FlushCacheEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = TouchGFXGeneratedHAL::FlushCache()
</UL>
<BR>[Address Reference Count : 2]<UL><LI> touchgfxhal.o(.constdata__ZTV11TouchGFXHAL)
<LI> touchgfxgeneratedhal.o(.constdata__ZTV20TouchGFXGeneratedHAL)
</UL>
<P><STRONG><a name="[199]"></a>TouchGFXGeneratedHAL::beginFrame()</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, touchgfxgeneratedhal.o(i._ZN20TouchGFXGeneratedHAL10beginFrameEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = TouchGFXGeneratedHAL::beginFrame()
</UL>
<BR>[Calls]<UL><LI><a href="#[241]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::HAL::beginFrame()
</UL>
<BR>[Called By]<UL><LI><a href="#[120]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TouchGFXHAL::beginFrame()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> touchgfxgeneratedhal.o(.constdata__ZTV20TouchGFXGeneratedHAL)
</UL>
<P><STRONG><a name="[191]"></a>TouchGFXGeneratedHAL::initialize()</STRONG> (Thumb, 110 bytes, Stack size 16 bytes, touchgfxgeneratedhal.o(i._ZN20TouchGFXGeneratedHAL10initializeEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 176 + Unknown Stack Size
<LI>Call Chain = TouchGFXGeneratedHAL::initialize() &rArr; touchgfx::HAL::initialize() &rArr; touchgfx::OSWrappers::initialize() &rArr; osSemaphoreNew &rArr; xQueueCreateCountingSemaphoreStatic &rArr; xQueueGenericCreateStatic &rArr; prvInitialiseNewQueue &rArr; xQueueGenericReset &rArr; xTaskRemoveFromEventList
</UL>
<BR>[Calls]<UL><LI><a href="#[23d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::HAL::initialize()
<LI><a href="#[363]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Application::getInstance()
</UL>
<BR>[Called By]<UL><LI><a href="#[102]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TouchGFXHAL::initialize()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> touchgfxgeneratedhal.o(.constdata__ZTV20TouchGFXGeneratedHAL)
</UL>
<P><STRONG><a name="[126]"></a>TouchGFXGeneratedHAL::InvalidateCache()</STRONG> (Thumb, 138 bytes, Stack size 12 bytes, touchgfxgeneratedhal.o(i._ZN20TouchGFXGeneratedHAL15InvalidateCacheEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = TouchGFXGeneratedHAL::InvalidateCache()
</UL>
<BR>[Address Reference Count : 2]<UL><LI> touchgfxhal.o(.constdata__ZTV11TouchGFXHAL)
<LI> touchgfxgeneratedhal.o(.constdata__ZTV20TouchGFXGeneratedHAL)
</UL>
<P><STRONG><a name="[196]"></a>TouchGFXGeneratedHAL::enableInterrupts()</STRONG> (Thumb, 40 bytes, Stack size 0 bytes, touchgfxgeneratedhal.o(i._ZN20TouchGFXGeneratedHAL16enableInterruptsEv))
<BR><BR>[Called By]<UL><LI><a href="#[116]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TouchGFXHAL::enableInterrupts()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> touchgfxgeneratedhal.o(.constdata__ZTV20TouchGFXGeneratedHAL)
</UL>
<P><STRONG><a name="[192]"></a>TouchGFXGeneratedHAL::flushFrameBuffer(const touchgfx::Rect&)</STRONG> (Thumb, 16 bytes, Stack size 16 bytes, touchgfxgeneratedhal.o(i._ZN20TouchGFXGeneratedHAL16flushFrameBufferERKN8touchgfx4RectE))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = TouchGFXGeneratedHAL::flushFrameBuffer(const touchgfx::Rect&)
</UL>
<BR>[Calls]<UL><LI><a href="#[23e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::HAL::flushFrameBuffer(const touchgfx::Rect&)
</UL>
<BR>[Called By]<UL><LI><a href="#[104]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TouchGFXHAL::flushFrameBuffer(const touchgfx::Rect&)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> touchgfxgeneratedhal.o(.constdata__ZTV20TouchGFXGeneratedHAL)
</UL>
<P><STRONG><a name="[197]"></a>TouchGFXGeneratedHAL::disableInterrupts()</STRONG> (Thumb, 62 bytes, Stack size 8 bytes, touchgfxgeneratedhal.o(i._ZN20TouchGFXGeneratedHAL17disableInterruptsEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = TouchGFXGeneratedHAL::disableInterrupts()
</UL>
<BR>[Called By]<UL><LI><a href="#[117]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TouchGFXHAL::disableInterrupts()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> touchgfxgeneratedhal.o(.constdata__ZTV20TouchGFXGeneratedHAL)
</UL>
<P><STRONG><a name="[11d]"></a>TouchGFXGeneratedHAL::getTFTCurrentLine()</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, touchgfxgeneratedhal.o(i._ZN20TouchGFXGeneratedHAL17getTFTCurrentLineEv))
<BR>[Address Reference Count : 2]<UL><LI> touchgfxhal.o(.constdata__ZTV11TouchGFXHAL)
<LI> touchgfxgeneratedhal.o(.constdata__ZTV20TouchGFXGeneratedHAL)
</UL>
<P><STRONG><a name="[19b]"></a>TouchGFXGeneratedHAL::setTFTFrameBuffer(unsigned short*)</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, touchgfxgeneratedhal.o(i._ZN20TouchGFXGeneratedHAL17setTFTFrameBufferEPt))
<BR><BR>[Called By]<UL><LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TouchGFXHAL::setTFTFrameBuffer(unsigned short*)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> touchgfxgeneratedhal.o(.constdata__ZTV20TouchGFXGeneratedHAL)
</UL>
<P><STRONG><a name="[195]"></a>TouchGFXGeneratedHAL::configureInterrupts()</STRONG> (Thumb, 40 bytes, Stack size 12 bytes, touchgfxgeneratedhal.o(i._ZN20TouchGFXGeneratedHAL19configureInterruptsEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = TouchGFXGeneratedHAL::configureInterrupts()
</UL>
<BR>[Called By]<UL><LI><a href="#[115]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TouchGFXHAL::configureInterrupts()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> touchgfxgeneratedhal.o(.constdata__ZTV20TouchGFXGeneratedHAL)
</UL>
<P><STRONG><a name="[198]"></a>TouchGFXGeneratedHAL::enableLCDControllerInterrupt()</STRONG> (Thumb, 48 bytes, Stack size 0 bytes, touchgfxgeneratedhal.o(i._ZN20TouchGFXGeneratedHAL28enableLCDControllerInterruptEv))
<BR><BR>[Called By]<UL><LI><a href="#[118]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TouchGFXHAL::enableLCDControllerInterrupt()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> touchgfxgeneratedhal.o(.constdata__ZTV20TouchGFXGeneratedHAL)
</UL>
<P><STRONG><a name="[19a]"></a>TouchGFXGeneratedHAL::endFrame()</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, touchgfxgeneratedhal.o(i._ZN20TouchGFXGeneratedHAL8endFrameEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = TouchGFXGeneratedHAL::endFrame() &rArr; touchgfx::HAL::endFrame()
</UL>
<BR>[Calls]<UL><LI><a href="#[242]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::HAL::endFrame()
</UL>
<BR>[Called By]<UL><LI><a href="#[121]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TouchGFXHAL::endFrame()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> touchgfxgeneratedhal.o(.constdata__ZTV20TouchGFXGeneratedHAL)
</UL>
<P><STRONG><a name="[194]"></a>TouchGFXGeneratedHAL::blockCopy(void*, const void*, unsigned)</STRONG> (Thumb, 28 bytes, Stack size 24 bytes, touchgfxgeneratedhal.o(i._ZN20TouchGFXGeneratedHAL9blockCopyEPvPKvj))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = TouchGFXGeneratedHAL::blockCopy(void*, const void*, unsigned) &rArr; touchgfx::HAL::blockCopy(void*, const void*, unsigned)
</UL>
<BR>[Calls]<UL><LI><a href="#[23f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::HAL::blockCopy(void*, const void*, unsigned)
</UL>
<BR>[Called By]<UL><LI><a href="#[10a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TouchGFXHAL::blockCopy(void*, const void*, unsigned)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> touchgfxgeneratedhal.o(.constdata__ZTV20TouchGFXGeneratedHAL)
</UL>
<P><STRONG><a name="[19d]"></a>SelectingMenuViewBase::setupScreen()</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, selectingmenuviewbase.o(i._ZN21SelectingMenuViewBase11setupScreenEv))
<BR><BR>[Called By]<UL><LI><a href="#[160]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SelectingMenuView::setupScreen()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> selectingmenuviewbase.o(.constdata__ZTV21SelectingMenuViewBase)
</UL>
<P><STRONG><a name="[163]"></a>SelectingMenuViewBase::handleKeyEvent(unsigned char)</STRONG> (Thumb, 68 bytes, Stack size 16 bytes, selectingmenuviewbase.o(i._ZN21SelectingMenuViewBase14handleKeyEventEh))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = SelectingMenuViewBase::handleKeyEvent(unsigned char)
</UL>
<BR>[Address Reference Count : 2]<UL><LI> selectingmenuview.o(.constdata__ZTV17SelectingMenuView)
<LI> selectingmenuviewbase.o(.constdata__ZTV21SelectingMenuViewBase)
</UL>
<P><STRONG><a name="[164]"></a>SelectingMenuViewBase::goToCookingScreen()</STRONG> (Thumb, 18 bytes, Stack size 16 bytes, selectingmenuviewbase.o(i._ZN21SelectingMenuViewBase17goToCookingScreenEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = SelectingMenuViewBase::goToCookingScreen() &rArr; FrontendApplicationBase::gotoCookingScreenNoTransition() &rArr; touchgfx::Callback&lang;FrontendApplicationBase, void, void, void&rang;::Callback(FrontendApplicationBase*, void(FrontendApplicationBase::*)())
</UL>
<BR>[Calls]<UL><LI><a href="#[363]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Application::getInstance()
<LI><a href="#[385]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FrontendApplicationBase::gotoCookingScreenNoTransition()
</UL>
<BR>[Address Reference Count : 2]<UL><LI> selectingmenuview.o(.constdata__ZTV17SelectingMenuView)
<LI> selectingmenuviewbase.o(.constdata__ZTV21SelectingMenuViewBase)
</UL>
<P><STRONG><a name="[166]"></a>SelectingMenuViewBase::goToSettingScreen()</STRONG> (Thumb, 18 bytes, Stack size 16 bytes, selectingmenuviewbase.o(i._ZN21SelectingMenuViewBase17goToSettingScreenEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = SelectingMenuViewBase::goToSettingScreen() &rArr; FrontendApplicationBase::gotoSettingsScreenNoTransition() &rArr; touchgfx::Callback&lang;FrontendApplicationBase, void, void, void&rang;::Callback(FrontendApplicationBase*, void(FrontendApplicationBase::*)())
</UL>
<BR>[Calls]<UL><LI><a href="#[363]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Application::getInstance()
<LI><a href="#[364]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FrontendApplicationBase::gotoSettingsScreenNoTransition()
</UL>
<BR>[Address Reference Count : 2]<UL><LI> selectingmenuview.o(.constdata__ZTV17SelectingMenuView)
<LI> selectingmenuviewbase.o(.constdata__ZTV21SelectingMenuViewBase)
</UL>
<P><STRONG><a name="[19f]"></a>SelectingMenuViewBase::hardwareUpKeyAction()</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, selectingmenuviewbase.o(i._ZN21SelectingMenuViewBase19hardwareUpKeyActionEv))
<BR>[Address Reference Count : 1]<UL><LI> selectingmenuviewbase.o(.constdata__ZTV21SelectingMenuViewBase)
</UL>
<P><STRONG><a name="[e7]"></a>SelectingMenuViewBase::buttonCallbackHandler(const touchgfx::AbstractButton&)</STRONG> (Thumb, 56 bytes, Stack size 16 bytes, selectingmenuviewbase.o(i._ZN21SelectingMenuViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = SelectingMenuViewBase::buttonCallbackHandler(const touchgfx::AbstractButton&)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> selectingmenuviewbase.o(.constdata)
</UL>
<P><STRONG><a name="[165]"></a>SelectingMenuViewBase::goToInformationScreen()</STRONG> (Thumb, 18 bytes, Stack size 16 bytes, selectingmenuviewbase.o(i._ZN21SelectingMenuViewBase21goToInformationScreenEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = SelectingMenuViewBase::goToInformationScreen() &rArr; FrontendApplicationBase::gotoInformationScreenNoTransition() &rArr; touchgfx::Callback&lang;FrontendApplicationBase, void, void, void&rang;::Callback(FrontendApplicationBase*, void(FrontendApplicationBase::*)())
</UL>
<BR>[Calls]<UL><LI><a href="#[363]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Application::getInstance()
<LI><a href="#[366]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FrontendApplicationBase::gotoInformationScreenNoTransition()
</UL>
<BR>[Address Reference Count : 2]<UL><LI> selectingmenuview.o(.constdata__ZTV17SelectingMenuView)
<LI> selectingmenuviewbase.o(.constdata__ZTV21SelectingMenuViewBase)
</UL>
<P><STRONG><a name="[19e]"></a>SelectingMenuViewBase::hardwareDownKeyAction()</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, selectingmenuviewbase.o(i._ZN21SelectingMenuViewBase21hardwareDownKeyActionEv))
<BR>[Address Reference Count : 1]<UL><LI> selectingmenuviewbase.o(.constdata__ZTV21SelectingMenuViewBase)
</UL>
<P><STRONG><a name="[1a1]"></a>SelectingMenuViewBase::hardwareLeftKeyAction()</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, selectingmenuviewbase.o(i._ZN21SelectingMenuViewBase21hardwareLeftKeyActionEv))
<BR>[Address Reference Count : 1]<UL><LI> selectingmenuviewbase.o(.constdata__ZTV21SelectingMenuViewBase)
</UL>
<P><STRONG><a name="[1a7]"></a>SelectingMenuViewBase::hideRemainingElements()</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, selectingmenuviewbase.o(i._ZN21SelectingMenuViewBase21hideRemainingElementsEv))
<BR>[Address Reference Count : 1]<UL><LI> selectingmenuviewbase.o(.constdata__ZTV21SelectingMenuViewBase)
</UL>
<P><STRONG><a name="[1a5]"></a>SelectingMenuViewBase::pressInfoButtonAction()</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, selectingmenuviewbase.o(i._ZN21SelectingMenuViewBase21pressInfoButtonActionEv))
<BR>[Address Reference Count : 1]<UL><LI> selectingmenuviewbase.o(.constdata__ZTV21SelectingMenuViewBase)
</UL>
<P><STRONG><a name="[1a3]"></a>SelectingMenuViewBase::pressLeftButtonAction()</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, selectingmenuviewbase.o(i._ZN21SelectingMenuViewBase21pressLeftButtonActionEv))
<BR>[Address Reference Count : 1]<UL><LI> selectingmenuviewbase.o(.constdata__ZTV21SelectingMenuViewBase)
</UL>
<P><STRONG><a name="[1a0]"></a>SelectingMenuViewBase::hardwareRightKeyAction()</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, selectingmenuviewbase.o(i._ZN21SelectingMenuViewBase22hardwareRightKeyActionEv))
<BR>[Address Reference Count : 1]<UL><LI> selectingmenuviewbase.o(.constdata__ZTV21SelectingMenuViewBase)
</UL>
<P><STRONG><a name="[1a2]"></a>SelectingMenuViewBase::pressRightButtonAction()</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, selectingmenuviewbase.o(i._ZN21SelectingMenuViewBase22pressRightButtonActionEv))
<BR>[Address Reference Count : 1]<UL><LI> selectingmenuviewbase.o(.constdata__ZTV21SelectingMenuViewBase)
</UL>
<P><STRONG><a name="[1a6]"></a>SelectingMenuViewBase::hardwareCenterKeyAction()</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, selectingmenuviewbase.o(i._ZN21SelectingMenuViewBase23hardwareCenterKeyActionEv))
<BR>[Address Reference Count : 1]<UL><LI> selectingmenuviewbase.o(.constdata__ZTV21SelectingMenuViewBase)
</UL>
<P><STRONG><a name="[1a4]"></a>SelectingMenuViewBase::pressSettingButtonAction()</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, selectingmenuviewbase.o(i._ZN21SelectingMenuViewBase24pressSettingButtonActionEv))
<BR>[Address Reference Count : 1]<UL><LI> selectingmenuviewbase.o(.constdata__ZTV21SelectingMenuViewBase)
</UL>
<P><STRONG><a name="[e6]"></a>SelectingMenuViewBase::flexButtonCallbackHandler(const touchgfx::AbstractButtonContainer&)</STRONG> (Thumb, 56 bytes, Stack size 16 bytes, selectingmenuviewbase.o(i._ZN21SelectingMenuViewBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = SelectingMenuViewBase::flexButtonCallbackHandler(const touchgfx::AbstractButtonContainer&)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> selectingmenuviewbase.o(.constdata)
</UL>
<P><STRONG><a name="[3a7]"></a>SelectingMenuViewBase::SelectingMenuViewBase()</STRONG> (Thumb, 1790 bytes, Stack size 64 bytes, selectingmenuviewbase.o(i._ZN21SelectingMenuViewBaseC1Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 352 + Unknown Stack Size
<LI>Call Chain = SelectingMenuViewBase::SelectingMenuViewBase() &rArr; touchgfx::Unicode::snprintf(unsigned short*, unsigned short, const char*, ...) &rArr; touchgfx::Unicode::vsnprintf(unsigned short*, unsigned short, const char*, std::__va_list) &rArr; touchgfx::Unicode::vsnprintf(unsigned short*, unsigned short, const unsigned short*, const char*, std::__va_list) &rArr; touchgfx::Unicode::itoa(int, unsigned short*, unsigned short, int) &rArr; touchgfx::Unicode::strncpy(unsigned short*, const char*, unsigned short)
</UL>
<BR>[Calls]<UL><LI><a href="#[347]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextArea::setTypedText(const touchgfx::TypedText&)
<LI><a href="#[333]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Unicode::snprintf(unsigned short*, unsigned short, const char*, ...)
<LI><a href="#[1fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Button::setBitmaps(const touchgfx::Bitmap&, const touchgfx::Bitmap&)
<LI><a href="#[1f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Image::setBitmap(const touchgfx::Bitmap&)
<LI><a href="#[346]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TypedText::TypedText(unsigned short)
<LI><a href="#[1e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextArea::setAlpha(unsigned char)
<LI><a href="#[345]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Bitmap::Bitmap(unsigned short)
<LI><a href="#[35f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Image::setAlpha(unsigned char)
<LI><a href="#[359]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextArea::setColor(touchgfx::colortype)
<LI><a href="#[350]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Drawable::setXY(short, short)
<LI><a href="#[358]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Color::getColorFromRGB(unsigned char, unsigned char, unsigned char)
<LI><a href="#[20c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Container::add(touchgfx::Drawable&)
<LI><a href="#[367]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Screen::Screen()
<LI><a href="#[36c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::FadeAnimator&lang;touchgfx::Button&rang;::FadeAnimator()
<LI><a href="#[36d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::FadeAnimator&lang;touchgfx::Image&rang;::FadeAnimator()
<LI><a href="#[370]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::FadeAnimator&lang;touchgfx::TextAreaWithTwoWildcards&rang;::FadeAnimator()
<LI><a href="#[37a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TypedText::getText() const
<LI><a href="#[379]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextArea::setLinespacing(short)
<LI><a href="#[373]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Drawable::setPosition(short, short, short, short)
<LI><a href="#[374]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Screen::add(touchgfx::Drawable&)
<LI><a href="#[36a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Image::Image(const touchgfx::Bitmap&)
<LI><a href="#[375]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::AbstractButton::setAction(touchgfx::GenericCallback&lang;const touchgfx::AbstractButton&, void, void&rang;&)
<LI><a href="#[389]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::BoxWithBorderButtonStyle&lang;touchgfx::ClickButtonTrigger&rang;::BoxWithBorderButtonStyle()
<LI><a href="#[386]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Box::Box()
<LI><a href="#[38c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Box::setColor(touchgfx::colortype)
<LI><a href="#[38d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::BoxWithBorderButtonStyle&lang;touchgfx::ClickButtonTrigger&rang;::setBoxWithBorderPosition(short, short, short, short)
<LI><a href="#[38f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::BoxWithBorderButtonStyle&lang;touchgfx::ClickButtonTrigger&rang;::setBoxWithBorderColors(touchgfx::colortype, touchgfx::colortype, touchgfx::colortype, touchgfx::colortype)
<LI><a href="#[38e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::BoxWithBorderButtonStyle&lang;touchgfx::ClickButtonTrigger&rang;::setBorderSize(unsigned char)
<LI><a href="#[388]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::FadeAnimator&lang;touchgfx::TextArea&rang;::FadeAnimator()
<LI><a href="#[387]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Container::Container()
<LI><a href="#[391]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::AbstractButtonContainer::setAction(touchgfx::GenericCallback&lang;const touchgfx::AbstractButtonContainer&, void, void&rang;&)
<LI><a href="#[390]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::AbstractButtonContainer::setAlpha(unsigned char)
</UL>
<BR>[Called By]<UL><LI><a href="#[3a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SelectingMenuView::SelectingMenuView()
</UL>

<P><STRONG><a name="[578]"></a>SelectingMenuViewBase::SelectingMenuViewBase__sub_object()</STRONG> (Thumb, 0 bytes, Stack size 64 bytes, selectingmenuviewbase.o(i._ZN21SelectingMenuViewBaseC1Ev), UNUSED)

<P><STRONG><a name="[19c]"></a>SelectingMenuViewBase::~SelectingMenuViewBase()</STRONG> (Thumb, 248 bytes, Stack size 8 bytes, selectingmenuviewbase.o(i._ZN21SelectingMenuViewBaseD1Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = SelectingMenuViewBase::~SelectingMenuViewBase() &rArr; touchgfx::FadeAnimator&lang;touchgfx::TextAreaWithTwoWildcards&rang;::~FadeAnimator() &rArr; touchgfx::TextAreaWithTwoWildcards::~TextAreaWithTwoWildcards() &rArr; touchgfx::TextArea::~TextArea()
</UL>
<BR>[Calls]<UL><LI><a href="#[24f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Image::~Image()
<LI><a href="#[1ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::FadeAnimator&lang;touchgfx::TextArea&rang;::~FadeAnimator()
<LI><a href="#[1f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::FadeAnimator&lang;touchgfx::Image&rang;::~FadeAnimator()
<LI><a href="#[1e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::FadeAnimator&lang;touchgfx::TextAreaWithTwoWildcards&rang;::~FadeAnimator()
<LI><a href="#[23b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Box::~Box()
<LI><a href="#[237]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::BoxWithBorderButtonStyle&lang;touchgfx::ClickButtonTrigger&rang;::~BoxWithBorderButtonStyle()
<LI><a href="#[26a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Callback&lang;SelectingMenuViewBase, const touchgfx::AbstractButtonContainer&, void, void&rang;::~Callback()
<LI><a href="#[267]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Callback&lang;SelectingMenuViewBase, const touchgfx::AbstractButton&, void, void&rang;::~Callback()
<LI><a href="#[24d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::View&lang;SelectingMenuPresenter&rang;::~View()
<LI><a href="#[206]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::MoveAnimator&lang;touchgfx::Container&rang;::~MoveAnimator()
<LI><a href="#[1f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::FadeAnimator&lang;touchgfx::Button&rang;::~FadeAnimator()
</UL>
<BR>[Called By]<UL><LI><a href="#[15f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SelectingMenuView::~SelectingMenuView()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> selectingmenuviewbase.o(.constdata__ZTV21SelectingMenuViewBase)
</UL>
<P><STRONG><a name="[579]"></a>SelectingMenuViewBase::~SelectingMenuViewBase__sub_object()</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, selectingmenuviewbase.o(i._ZN21SelectingMenuViewBaseD1Ev), UNUSED)

<P><STRONG><a name="[1a9]"></a>SplashScreenPresenter::deactivate()</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, splashscreenpresenter.o(i._ZN21SplashScreenPresenter10deactivateEv))
<BR>[Address Reference Count : 1]<UL><LI> splashscreenpresenter.o(.constdata__ZTV21SplashScreenPresenter)
</UL>
<P><STRONG><a name="[1a8]"></a>SplashScreenPresenter::activate()</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, splashscreenpresenter.o(i._ZN21SplashScreenPresenter8activateEv))
<BR>[Address Reference Count : 1]<UL><LI> splashscreenpresenter.o(.constdata__ZTV21SplashScreenPresenter)
</UL>
<P><STRONG><a name="[51d]"></a>SplashScreenPresenter::SplashScreenPresenter(SplashScreenView&)</STRONG> (Thumb, 38 bytes, Stack size 0 bytes, splashscreenpresenter.o(i._ZN21SplashScreenPresenterC1ER16SplashScreenView))
<BR><BR>[Called By]<UL><LI><a href="#[3b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;T2* touchgfx::makeTransition&lang;SplashScreenView, SplashScreenPresenter, touchgfx::NoTransition, Model&rang;(touchgfx::Screen**, touchgfx::Presenter**, touchgfx::MVPHeap&, touchgfx::Transition**, T4*)
</UL>

<P><STRONG><a name="[57a]"></a>SplashScreenPresenter::SplashScreenPresenter__sub_object(SplashScreenView&)</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, splashscreenpresenter.o(i._ZN21SplashScreenPresenterC1ER16SplashScreenView), UNUSED)

<P><STRONG><a name="[1aa]"></a>SplashScreenPresenter::~SplashScreenPresenter()</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, splashscreenpresenter.o(i._ZN21SplashScreenPresenterD1Ev))
<BR>[Address Reference Count : 1]<UL><LI> splashscreenpresenter.o(.constdata__ZTV21SplashScreenPresenter)
</UL>
<P><STRONG><a name="[57b]"></a>SplashScreenPresenter::~SplashScreenPresenter__sub_object()</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, splashscreenpresenter.o(i._ZN21SplashScreenPresenterD1Ev), UNUSED)

<P><STRONG><a name="[1ac]"></a>SelectingMenuPresenter::deactivate()</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, selectingmenupresenter.o(i._ZN22SelectingMenuPresenter10deactivateEv))
<BR>[Address Reference Count : 1]<UL><LI> selectingmenupresenter.o(.constdata__ZTV22SelectingMenuPresenter)
</UL>
<P><STRONG><a name="[1ab]"></a>SelectingMenuPresenter::activate()</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, selectingmenupresenter.o(i._ZN22SelectingMenuPresenter8activateEv))
<BR>[Address Reference Count : 1]<UL><LI> selectingmenupresenter.o(.constdata__ZTV22SelectingMenuPresenter)
</UL>
<P><STRONG><a name="[51e]"></a>SelectingMenuPresenter::SelectingMenuPresenter(SelectingMenuView&)</STRONG> (Thumb, 38 bytes, Stack size 0 bytes, selectingmenupresenter.o(i._ZN22SelectingMenuPresenterC1ER17SelectingMenuView))
<BR><BR>[Called By]<UL><LI><a href="#[3b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;T2* touchgfx::makeTransition&lang;SelectingMenuView, SelectingMenuPresenter, touchgfx::NoTransition, Model&rang;(touchgfx::Screen**, touchgfx::Presenter**, touchgfx::MVPHeap&, touchgfx::Transition**, T4*)
</UL>

<P><STRONG><a name="[57c]"></a>SelectingMenuPresenter::SelectingMenuPresenter__sub_object(SelectingMenuView&)</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, selectingmenupresenter.o(i._ZN22SelectingMenuPresenterC1ER17SelectingMenuView), UNUSED)

<P><STRONG><a name="[1ad]"></a>SelectingMenuPresenter::~SelectingMenuPresenter()</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, selectingmenupresenter.o(i._ZN22SelectingMenuPresenterD1Ev))
<BR>[Address Reference Count : 1]<UL><LI> selectingmenupresenter.o(.constdata__ZTV22SelectingMenuPresenter)
</UL>
<P><STRONG><a name="[57d]"></a>SelectingMenuPresenter::~SelectingMenuPresenter__sub_object()</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, selectingmenupresenter.o(i._ZN22SelectingMenuPresenterD1Ev), UNUSED)

<P><STRONG><a name="[d6]"></a>ApplicationFontProvider::~ApplicationFontProvider()</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, touchgfxconfiguration.o(i._ZN23ApplicationFontProviderD1Ev))
<BR>[Address Reference Count : 2]<UL><LI> touchgfxconfiguration.o(i.__sti___25_TouchGFXConfiguration_cpp_f5abfd34)
<LI> applicationfontprovider.o(.constdata__ZTV23ApplicationFontProvider)
</UL>
<P><STRONG><a name="[57e]"></a>ApplicationFontProvider::~ApplicationFontProvider__sub_object()</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, touchgfxconfiguration.o(i._ZN23ApplicationFontProviderD1Ev), UNUSED)

<P><STRONG><a name="[385]"></a>FrontendApplicationBase::gotoCookingScreenNoTransition()</STRONG> (Thumb, 46 bytes, Stack size 32 bytes, frontendapplicationbase.o(i._ZN23FrontendApplicationBase29gotoCookingScreenNoTransitionEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = FrontendApplicationBase::gotoCookingScreenNoTransition() &rArr; touchgfx::Callback&lang;FrontendApplicationBase, void, void, void&rang;::Callback(FrontendApplicationBase*, void(FrontendApplicationBase::*)())
</UL>
<BR>[Calls]<UL><LI><a href="#[3b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Callback&lang;FrontendApplicationBase, void, void, void&rang;::Callback(FrontendApplicationBase*, void(FrontendApplicationBase::*)())
<LI><a href="#[3b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Callback&lang;FrontendApplicationBase, void, void, void&rang;::operator =(const touchgfx::Callback&lang;FrontendApplicationBase, void, void, void&rang;&)
<LI><a href="#[26d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Callback&lang;FrontendApplicationBase, void, void, void&rang;::~Callback()
</UL>
<BR>[Called By]<UL><LI><a href="#[186]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InformationDemoViewBase::goToCookingMenu()
<LI><a href="#[164]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SelectingMenuViewBase::goToCookingScreen()
<LI><a href="#[12f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SettingsViewBase::goToCookingMenu()
</UL>

<P><STRONG><a name="[364]"></a>FrontendApplicationBase::gotoSettingsScreenNoTransition()</STRONG> (Thumb, 46 bytes, Stack size 32 bytes, frontendapplicationbase.o(i._ZN23FrontendApplicationBase30gotoSettingsScreenNoTransitionEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = FrontendApplicationBase::gotoSettingsScreenNoTransition() &rArr; touchgfx::Callback&lang;FrontendApplicationBase, void, void, void&rang;::Callback(FrontendApplicationBase*, void(FrontendApplicationBase::*)())
</UL>
<BR>[Calls]<UL><LI><a href="#[3b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Callback&lang;FrontendApplicationBase, void, void, void&rang;::Callback(FrontendApplicationBase*, void(FrontendApplicationBase::*)())
<LI><a href="#[3b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Callback&lang;FrontendApplicationBase, void, void, void&rang;::operator =(const touchgfx::Callback&lang;FrontendApplicationBase, void, void, void&rang;&)
<LI><a href="#[26d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Callback&lang;FrontendApplicationBase, void, void, void&rang;::~Callback()
</UL>
<BR>[Called By]<UL><LI><a href="#[f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CookingViewBase::goToSettingMenu()
<LI><a href="#[166]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SelectingMenuViewBase::goToSettingScreen()
</UL>

<P><STRONG><a name="[e0]"></a>FrontendApplicationBase::gotoCookingScreenNoTransitionImpl()</STRONG> (Thumb, 28 bytes, Stack size 16 bytes, frontendapplicationbase.o(i._ZN23FrontendApplicationBase33gotoCookingScreenNoTransitionImplEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 440 + Unknown Stack Size
<LI>Call Chain = FrontendApplicationBase::gotoCookingScreenNoTransitionImpl() &rArr; T2* touchgfx::makeTransition&lang;CookingView, CookingPresenter, touchgfx::NoTransition, Model&rang;(touchgfx::Screen**, touchgfx::Presenter**, touchgfx::MVPHeap&, touchgfx::Transition**, T4*) &rArr; CookingView::CookingView() &rArr; CookingViewBase::CookingViewBase() &rArr; touchgfx::Unicode::snprintf(unsigned short*, unsigned short, const char*, ...) &rArr; touchgfx::Unicode::vsnprintf(unsigned short*, unsigned short, const char*, std::__va_list) &rArr; touchgfx::Unicode::vsnprintf(unsigned short*, unsigned short, const unsigned short*, const char*, std::__va_list) &rArr; touchgfx::Unicode::itoa(int, unsigned short*, unsigned short, int) &rArr; touchgfx::Unicode::strncpy(unsigned short*, const char*, unsigned short)
</UL>
<BR>[Calls]<UL><LI><a href="#[3b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;T2* touchgfx::makeTransition&lang;CookingView, CookingPresenter, touchgfx::NoTransition, Model&rang;(touchgfx::Screen**, touchgfx::Presenter**, touchgfx::MVPHeap&, touchgfx::Transition**, T4*)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> frontendapplicationbase.o(.constdata)
</UL>
<P><STRONG><a name="[366]"></a>FrontendApplicationBase::gotoInformationScreenNoTransition()</STRONG> (Thumb, 46 bytes, Stack size 32 bytes, frontendapplicationbase.o(i._ZN23FrontendApplicationBase33gotoInformationScreenNoTransitionEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = FrontendApplicationBase::gotoInformationScreenNoTransition() &rArr; touchgfx::Callback&lang;FrontendApplicationBase, void, void, void&rang;::Callback(FrontendApplicationBase*, void(FrontendApplicationBase::*)())
</UL>
<BR>[Calls]<UL><LI><a href="#[3b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Callback&lang;FrontendApplicationBase, void, void, void&rang;::Callback(FrontendApplicationBase*, void(FrontendApplicationBase::*)())
<LI><a href="#[3b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Callback&lang;FrontendApplicationBase, void, void, void&rang;::operator =(const touchgfx::Callback&lang;FrontendApplicationBase, void, void, void&rang;&)
<LI><a href="#[26d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Callback&lang;FrontendApplicationBase, void, void, void&rang;::~Callback()
</UL>
<BR>[Called By]<UL><LI><a href="#[f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CookingViewBase::goToInformationMenu()
<LI><a href="#[165]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SelectingMenuViewBase::goToInformationScreen()
</UL>

<P><STRONG><a name="[e2]"></a>FrontendApplicationBase::gotoSettingsScreenNoTransitionImpl()</STRONG> (Thumb, 28 bytes, Stack size 16 bytes, frontendapplicationbase.o(i._ZN23FrontendApplicationBase34gotoSettingsScreenNoTransitionImplEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 440 + Unknown Stack Size
<LI>Call Chain = FrontendApplicationBase::gotoSettingsScreenNoTransitionImpl() &rArr; T2* touchgfx::makeTransition&lang;SettingsView, SettingsPresenter, touchgfx::NoTransition, Model&rang;(touchgfx::Screen**, touchgfx::Presenter**, touchgfx::MVPHeap&, touchgfx::Transition**, T4*) &rArr; SettingsView::SettingsView() &rArr; SettingsViewBase::SettingsViewBase() &rArr; touchgfx::Unicode::snprintf(unsigned short*, unsigned short, const char*, ...) &rArr; touchgfx::Unicode::vsnprintf(unsigned short*, unsigned short, const char*, std::__va_list) &rArr; touchgfx::Unicode::vsnprintf(unsigned short*, unsigned short, const unsigned short*, const char*, std::__va_list) &rArr; touchgfx::Unicode::itoa(int, unsigned short*, unsigned short, int) &rArr; touchgfx::Unicode::strncpy(unsigned short*, const char*, unsigned short)
</UL>
<BR>[Calls]<UL><LI><a href="#[3b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;T2* touchgfx::makeTransition&lang;SettingsView, SettingsPresenter, touchgfx::NoTransition, Model&rang;(touchgfx::Screen**, touchgfx::Presenter**, touchgfx::MVPHeap&, touchgfx::Transition**, T4*)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> frontendapplicationbase.o(.constdata)
</UL>
<P><STRONG><a name="[384]"></a>FrontendApplicationBase::gotoSplashScreenScreenNoTransition()</STRONG> (Thumb, 46 bytes, Stack size 32 bytes, frontendapplicationbase.o(i._ZN23FrontendApplicationBase34gotoSplashScreenScreenNoTransitionEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = FrontendApplicationBase::gotoSplashScreenScreenNoTransition() &rArr; touchgfx::Callback&lang;FrontendApplicationBase, void, void, void&rang;::Callback(FrontendApplicationBase*, void(FrontendApplicationBase::*)())
</UL>
<BR>[Calls]<UL><LI><a href="#[3b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Callback&lang;FrontendApplicationBase, void, void, void&rang;::Callback(FrontendApplicationBase*, void(FrontendApplicationBase::*)())
<LI><a href="#[3b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Callback&lang;FrontendApplicationBase, void, void, void&rang;::operator =(const touchgfx::Callback&lang;FrontendApplicationBase, void, void, void&rang;&)
<LI><a href="#[26d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Callback&lang;FrontendApplicationBase, void, void, void&rang;::~Callback()
</UL>
<BR>[Called By]<UL><LI><a href="#[128]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FrontendHeapBase::gotoStartScreen(FrontendApplication&)
</UL>

<P><STRONG><a name="[365]"></a>FrontendApplicationBase::gotoSelectingMenuScreenNoTransition()</STRONG> (Thumb, 46 bytes, Stack size 32 bytes, frontendapplicationbase.o(i._ZN23FrontendApplicationBase35gotoSelectingMenuScreenNoTransitionEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = FrontendApplicationBase::gotoSelectingMenuScreenNoTransition() &rArr; touchgfx::Callback&lang;FrontendApplicationBase, void, void, void&rang;::Callback(FrontendApplicationBase*, void(FrontendApplicationBase::*)())
</UL>
<BR>[Calls]<UL><LI><a href="#[3b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Callback&lang;FrontendApplicationBase, void, void, void&rang;::Callback(FrontendApplicationBase*, void(FrontendApplicationBase::*)())
<LI><a href="#[3b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Callback&lang;FrontendApplicationBase, void, void, void&rang;::operator =(const touchgfx::Callback&lang;FrontendApplicationBase, void, void, void&rang;&)
<LI><a href="#[26d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Callback&lang;FrontendApplicationBase, void, void, void&rang;::~Callback()
</UL>
<BR>[Called By]<UL><LI><a href="#[f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CookingViewBase::goToSelectingMenu()
<LI><a href="#[185]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InformationDemoViewBase::goToSelectingMenu()
<LI><a href="#[12e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SettingsViewBase::goToMainMenu()
<LI><a href="#[ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SplashScreenViewBase::fadeOutDemoNameEndedCallbackHandler(const touchgfx::FadeAnimator&lang;touchgfx::Image&rang;&)
</UL>

<P><STRONG><a name="[3b0]"></a>FrontendApplicationBase::gotoInformationDemoScreenNoTransition()</STRONG> (Thumb, 46 bytes, Stack size 32 bytes, frontendapplicationbase.o(i._ZN23FrontendApplicationBase37gotoInformationDemoScreenNoTransitionEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = FrontendApplicationBase::gotoInformationDemoScreenNoTransition() &rArr; touchgfx::Callback&lang;FrontendApplicationBase, void, void, void&rang;::Callback(FrontendApplicationBase*, void(FrontendApplicationBase::*)())
</UL>
<BR>[Calls]<UL><LI><a href="#[3b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Callback&lang;FrontendApplicationBase, void, void, void&rang;::Callback(FrontendApplicationBase*, void(FrontendApplicationBase::*)())
<LI><a href="#[3b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Callback&lang;FrontendApplicationBase, void, void, void&rang;::operator =(const touchgfx::Callback&lang;FrontendApplicationBase, void, void, void&rang;&)
<LI><a href="#[26d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Callback&lang;FrontendApplicationBase, void, void, void&rang;::~Callback()
</UL>
<BR>[Called By]<UL><LI><a href="#[14b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InformationViewBase::goToScreenInfo2()
</UL>

<P><STRONG><a name="[e3]"></a>FrontendApplicationBase::gotoInformationScreenNoTransitionImpl()</STRONG> (Thumb, 28 bytes, Stack size 16 bytes, frontendapplicationbase.o(i._ZN23FrontendApplicationBase37gotoInformationScreenNoTransitionImplEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 208 + Unknown Stack Size
<LI>Call Chain = FrontendApplicationBase::gotoInformationScreenNoTransitionImpl() &rArr; T2* touchgfx::makeTransition&lang;InformationView, InformationPresenter, touchgfx::NoTransition, Model&rang;(touchgfx::Screen**, touchgfx::Presenter**, touchgfx::MVPHeap&, touchgfx::Transition**, T4*) &rArr; InformationView::InformationView() &rArr; InformationViewBase::InformationViewBase() &rArr; touchgfx::Image::setBitmap(const touchgfx::Bitmap&) &rArr; touchgfx::Bitmap::getHeight() const &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[3b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;T2* touchgfx::makeTransition&lang;InformationView, InformationPresenter, touchgfx::NoTransition, Model&rang;(touchgfx::Screen**, touchgfx::Presenter**, touchgfx::MVPHeap&, touchgfx::Transition**, T4*)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> frontendapplicationbase.o(.constdata)
</UL>
<P><STRONG><a name="[de]"></a>FrontendApplicationBase::gotoSplashScreenScreenNoTransitionImpl()</STRONG> (Thumb, 28 bytes, Stack size 16 bytes, frontendapplicationbase.o(i._ZN23FrontendApplicationBase38gotoSplashScreenScreenNoTransitionImplEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 232 + Unknown Stack Size
<LI>Call Chain = FrontendApplicationBase::gotoSplashScreenScreenNoTransitionImpl() &rArr; T2* touchgfx::makeTransition&lang;SplashScreenView, SplashScreenPresenter, touchgfx::NoTransition, Model&rang;(touchgfx::Screen**, touchgfx::Presenter**, touchgfx::MVPHeap&, touchgfx::Transition**, T4*) &rArr; SplashScreenView::SplashScreenView() &rArr; SplashScreenViewBase::SplashScreenViewBase() &rArr; touchgfx::FadeAnimator&lang;touchgfx::Image&rang;::FadeAnimator() &rArr; touchgfx::Image::Image(const touchgfx::Bitmap&) &rArr; touchgfx::Image::setBitmap(const touchgfx::Bitmap&) &rArr; touchgfx::Bitmap::getHeight() const &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[3b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;T2* touchgfx::makeTransition&lang;SplashScreenView, SplashScreenPresenter, touchgfx::NoTransition, Model&rang;(touchgfx::Screen**, touchgfx::Presenter**, touchgfx::MVPHeap&, touchgfx::Transition**, T4*)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> frontendapplicationbase.o(.constdata)
</UL>
<P><STRONG><a name="[df]"></a>FrontendApplicationBase::gotoSelectingMenuScreenNoTransitionImpl()</STRONG> (Thumb, 28 bytes, Stack size 16 bytes, frontendapplicationbase.o(i._ZN23FrontendApplicationBase39gotoSelectingMenuScreenNoTransitionImplEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 440 + Unknown Stack Size
<LI>Call Chain = FrontendApplicationBase::gotoSelectingMenuScreenNoTransitionImpl() &rArr; T2* touchgfx::makeTransition&lang;SelectingMenuView, SelectingMenuPresenter, touchgfx::NoTransition, Model&rang;(touchgfx::Screen**, touchgfx::Presenter**, touchgfx::MVPHeap&, touchgfx::Transition**, T4*) &rArr; SelectingMenuView::SelectingMenuView() &rArr; SelectingMenuViewBase::SelectingMenuViewBase() &rArr; touchgfx::Unicode::snprintf(unsigned short*, unsigned short, const char*, ...) &rArr; touchgfx::Unicode::vsnprintf(unsigned short*, unsigned short, const char*, std::__va_list) &rArr; touchgfx::Unicode::vsnprintf(unsigned short*, unsigned short, const unsigned short*, const char*, std::__va_list) &rArr; touchgfx::Unicode::itoa(int, unsigned short*, unsigned short, int) &rArr; touchgfx::Unicode::strncpy(unsigned short*, const char*, unsigned short)
</UL>
<BR>[Calls]<UL><LI><a href="#[3b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;T2* touchgfx::makeTransition&lang;SelectingMenuView, SelectingMenuPresenter, touchgfx::NoTransition, Model&rang;(touchgfx::Screen**, touchgfx::Presenter**, touchgfx::MVPHeap&, touchgfx::Transition**, T4*)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> frontendapplicationbase.o(.constdata)
</UL>
<P><STRONG><a name="[e1]"></a>FrontendApplicationBase::gotoInformationDemoScreenNoTransitionImpl()</STRONG> (Thumb, 28 bytes, Stack size 16 bytes, frontendapplicationbase.o(i._ZN23FrontendApplicationBase41gotoInformationDemoScreenNoTransitionImplEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 208 + Unknown Stack Size
<LI>Call Chain = FrontendApplicationBase::gotoInformationDemoScreenNoTransitionImpl() &rArr; T2* touchgfx::makeTransition&lang;InformationDemoView, InformationDemoPresenter, touchgfx::NoTransition, Model&rang;(touchgfx::Screen**, touchgfx::Presenter**, touchgfx::MVPHeap&, touchgfx::Transition**, T4*) &rArr; InformationDemoView::InformationDemoView() &rArr; InformationDemoViewBase::InformationDemoViewBase() &rArr; touchgfx::Image::setBitmap(const touchgfx::Bitmap&) &rArr; touchgfx::Bitmap::getHeight() const &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[3b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;T2* touchgfx::makeTransition&lang;InformationDemoView, InformationDemoPresenter, touchgfx::NoTransition, Model&rang;(touchgfx::Screen**, touchgfx::Presenter**, touchgfx::MVPHeap&, touchgfx::Transition**, T4*)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> frontendapplicationbase.o(.constdata)
</UL>
<P><STRONG><a name="[3a9]"></a>FrontendApplicationBase::FrontendApplicationBase(Model&, FrontendHeap&)</STRONG> (Thumb, 138 bytes, Stack size 24 bytes, frontendapplicationbase.o(i._ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = FrontendApplicationBase::FrontendApplicationBase(Model&, FrontendHeap&) &rArr; touchgfx::LCD16bpp::enableTextureMapperAll() &rArr; touchgfx::LCD16bpp::enableTextureMapperL8_ARGB8888() &rArr; touchgfx::LCD16bpp::enableTextureMapperL8_ARGB8888_BilinearInterpolation() &rArr; __aeabi_atexit &rArr; malloc &rArr; __Heap_Full &rArr; __Heap_ProvideMemory &rArr; free
</UL>
<BR>[Calls]<UL><LI><a href="#[35d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Texts::setLanguage(unsigned short)
<LI><a href="#[3bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::enableDecompressorL8_All()
<LI><a href="#[3bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::enableTextureMapperAll()
<LI><a href="#[3b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Application::Application()
<LI><a href="#[3bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::HAL::lcd()
<LI><a href="#[3ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::GenericCallback&lang;void, void, void&rang;::GenericCallback__sub_object()
</UL>
<BR>[Called By]<UL><LI><a href="#[34d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FrontendApplication::FrontendApplication(Model&, FrontendHeap&)
</UL>

<P><STRONG><a name="[57f]"></a>FrontendApplicationBase::FrontendApplicationBase__sub_object(Model&, FrontendHeap&)</STRONG> (Thumb, 0 bytes, Stack size 24 bytes, frontendapplicationbase.o(i._ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap), UNUSED)

<P><STRONG><a name="[1af]"></a>FrontendApplicationBase::~FrontendApplicationBase()</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, touchgfxconfiguration.o(i._ZN23FrontendApplicationBaseD1Ev))
<BR><BR>[Called By]<UL><LI><a href="#[d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FrontendHeap::~FrontendHeap()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> touchgfxconfiguration.o(.constdata__ZTV23FrontendApplicationBase)
</UL>
<P><STRONG><a name="[580]"></a>FrontendApplicationBase::~FrontendApplicationBase__sub_object()</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, touchgfxconfiguration.o(i._ZN23FrontendApplicationBaseD1Ev), UNUSED)

<P><STRONG><a name="[1b1]"></a>InformationDemoViewBase::setupScreen()</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, informationdemoviewbase.o(i._ZN23InformationDemoViewBase11setupScreenEv))
<BR><BR>[Called By]<UL><LI><a href="#[181]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InformationDemoView::setupScreen()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> informationdemoviewbase.o(.constdata__ZTV23InformationDemoViewBase)
</UL>
<P><STRONG><a name="[184]"></a>InformationDemoViewBase::handleKeyEvent(unsigned char)</STRONG> (Thumb, 20 bytes, Stack size 16 bytes, informationdemoviewbase.o(i._ZN23InformationDemoViewBase14handleKeyEventEh))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = InformationDemoViewBase::handleKeyEvent(unsigned char)
</UL>
<BR>[Address Reference Count : 2]<UL><LI> informationdemoview.o(.constdata__ZTV19InformationDemoView)
<LI> informationdemoviewbase.o(.constdata__ZTV23InformationDemoViewBase)
</UL>
<P><STRONG><a name="[186]"></a>InformationDemoViewBase::goToCookingMenu()</STRONG> (Thumb, 18 bytes, Stack size 16 bytes, informationdemoviewbase.o(i._ZN23InformationDemoViewBase15goToCookingMenuEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = InformationDemoViewBase::goToCookingMenu() &rArr; FrontendApplicationBase::gotoCookingScreenNoTransition() &rArr; touchgfx::Callback&lang;FrontendApplicationBase, void, void, void&rang;::Callback(FrontendApplicationBase*, void(FrontendApplicationBase::*)())
</UL>
<BR>[Calls]<UL><LI><a href="#[363]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Application::getInstance()
<LI><a href="#[385]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FrontendApplicationBase::gotoCookingScreenNoTransition()
</UL>
<BR>[Address Reference Count : 2]<UL><LI> informationdemoview.o(.constdata__ZTV19InformationDemoView)
<LI> informationdemoviewbase.o(.constdata__ZTV23InformationDemoViewBase)
</UL>
<P><STRONG><a name="[185]"></a>InformationDemoViewBase::goToSelectingMenu()</STRONG> (Thumb, 18 bytes, Stack size 16 bytes, informationdemoviewbase.o(i._ZN23InformationDemoViewBase17goToSelectingMenuEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = InformationDemoViewBase::goToSelectingMenu() &rArr; FrontendApplicationBase::gotoSelectingMenuScreenNoTransition() &rArr; touchgfx::Callback&lang;FrontendApplicationBase, void, void, void&rang;::Callback(FrontendApplicationBase*, void(FrontendApplicationBase::*)())
</UL>
<BR>[Calls]<UL><LI><a href="#[363]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Application::getInstance()
<LI><a href="#[365]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FrontendApplicationBase::gotoSelectingMenuScreenNoTransition()
</UL>
<BR>[Address Reference Count : 2]<UL><LI> informationdemoview.o(.constdata__ZTV19InformationDemoView)
<LI> informationdemoviewbase.o(.constdata__ZTV23InformationDemoViewBase)
</UL>
<P><STRONG><a name="[1b2]"></a>InformationDemoViewBase::pressCenterKeyFunction()</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, informationdemoviewbase.o(i._ZN23InformationDemoViewBase22pressCenterKeyFunctionEv))
<BR>[Address Reference Count : 1]<UL><LI> informationdemoviewbase.o(.constdata__ZTV23InformationDemoViewBase)
</UL>
<P><STRONG><a name="[e4]"></a>InformationDemoViewBase::flexButtonCallbackHandler(const touchgfx::AbstractButtonContainer&)</STRONG> (Thumb, 24 bytes, Stack size 16 bytes, informationdemoviewbase.o(i._ZN23InformationDemoViewBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = InformationDemoViewBase::flexButtonCallbackHandler(const touchgfx::AbstractButtonContainer&)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> informationdemoviewbase.o(.constdata)
</UL>
<P><STRONG><a name="[3af]"></a>InformationDemoViewBase::InformationDemoViewBase()</STRONG> (Thumb, 436 bytes, Stack size 48 bytes, informationdemoviewbase.o(i._ZN23InformationDemoViewBaseC1Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 120 + Unknown Stack Size
<LI>Call Chain = InformationDemoViewBase::InformationDemoViewBase() &rArr; touchgfx::Image::setBitmap(const touchgfx::Bitmap&) &rArr; touchgfx::Bitmap::getHeight() const &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[1f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Image::setBitmap(const touchgfx::Bitmap&)
<LI><a href="#[345]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Bitmap::Bitmap(unsigned short)
<LI><a href="#[350]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Drawable::setXY(short, short)
<LI><a href="#[358]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Color::getColorFromRGB(unsigned char, unsigned char, unsigned char)
<LI><a href="#[367]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Screen::Screen()
<LI><a href="#[373]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Drawable::setPosition(short, short, short, short)
<LI><a href="#[368]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Widget::Widget__sub_object()
<LI><a href="#[374]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Screen::add(touchgfx::Drawable&)
<LI><a href="#[389]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::BoxWithBorderButtonStyle&lang;touchgfx::ClickButtonTrigger&rang;::BoxWithBorderButtonStyle()
<LI><a href="#[386]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Box::Box()
<LI><a href="#[38c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Box::setColor(touchgfx::colortype)
<LI><a href="#[2d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[3ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InformationDemoView::InformationDemoView()
</UL>

<P><STRONG><a name="[581]"></a>InformationDemoViewBase::InformationDemoViewBase__sub_object()</STRONG> (Thumb, 0 bytes, Stack size 48 bytes, informationdemoviewbase.o(i._ZN23InformationDemoViewBaseC1Ev), UNUSED)

<P><STRONG><a name="[1b0]"></a>InformationDemoViewBase::~InformationDemoViewBase()</STRONG> (Thumb, 70 bytes, Stack size 16 bytes, informationdemoviewbase.o(i._ZN23InformationDemoViewBaseD1Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = InformationDemoViewBase::~InformationDemoViewBase() &rArr; touchgfx::BoxWithBorderButtonStyle&lang;touchgfx::ClickButtonTrigger&rang;::~BoxWithBorderButtonStyle() &rArr; touchgfx::ClickButtonTrigger::~ClickButtonTrigger() &rArr; touchgfx::AbstractButtonContainer::~AbstractButtonContainer()
</UL>
<BR>[Calls]<UL><LI><a href="#[256]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Widget::~Widget__sub_object()
<LI><a href="#[270]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Callback&lang;InformationDemoViewBase, const touchgfx::AbstractButtonContainer&, void, void&rang;::~Callback()
<LI><a href="#[24e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::View&lang;InformationDemoPresenter&rang;::~View()
<LI><a href="#[23b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Box::~Box()
<LI><a href="#[237]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::BoxWithBorderButtonStyle&lang;touchgfx::ClickButtonTrigger&rang;::~BoxWithBorderButtonStyle()
</UL>
<BR>[Called By]<UL><LI><a href="#[180]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InformationDemoView::~InformationDemoView()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> informationdemoviewbase.o(.constdata__ZTV23InformationDemoViewBase)
</UL>
<P><STRONG><a name="[582]"></a>InformationDemoViewBase::~InformationDemoViewBase__sub_object()</STRONG> (Thumb, 0 bytes, Stack size 16 bytes, informationdemoviewbase.o(i._ZN23InformationDemoViewBaseD1Ev), UNUSED)

<P><STRONG><a name="[1b4]"></a>InformationDemoPresenter::deactivate()</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, informationdemopresenter.o(i._ZN24InformationDemoPresenter10deactivateEv))
<BR>[Address Reference Count : 1]<UL><LI> informationdemopresenter.o(.constdata__ZTV24InformationDemoPresenter)
</UL>
<P><STRONG><a name="[1b3]"></a>InformationDemoPresenter::activate()</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, informationdemopresenter.o(i._ZN24InformationDemoPresenter8activateEv))
<BR>[Address Reference Count : 1]<UL><LI> informationdemopresenter.o(.constdata__ZTV24InformationDemoPresenter)
</UL>
<P><STRONG><a name="[51f]"></a>InformationDemoPresenter::InformationDemoPresenter(InformationDemoView&)</STRONG> (Thumb, 38 bytes, Stack size 0 bytes, informationdemopresenter.o(i._ZN24InformationDemoPresenterC1ER19InformationDemoView))
<BR><BR>[Called By]<UL><LI><a href="#[3b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;T2* touchgfx::makeTransition&lang;InformationDemoView, InformationDemoPresenter, touchgfx::NoTransition, Model&rang;(touchgfx::Screen**, touchgfx::Presenter**, touchgfx::MVPHeap&, touchgfx::Transition**, T4*)
</UL>

<P><STRONG><a name="[583]"></a>InformationDemoPresenter::InformationDemoPresenter__sub_object(InformationDemoView&)</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, informationdemopresenter.o(i._ZN24InformationDemoPresenterC1ER19InformationDemoView), UNUSED)

<P><STRONG><a name="[1b5]"></a>InformationDemoPresenter::~InformationDemoPresenter()</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, informationdemopresenter.o(i._ZN24InformationDemoPresenterD1Ev))
<BR>[Address Reference Count : 1]<UL><LI> informationdemopresenter.o(.constdata__ZTV24InformationDemoPresenter)
</UL>
<P><STRONG><a name="[584]"></a>InformationDemoPresenter::~InformationDemoPresenter__sub_object()</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, informationdemopresenter.o(i._ZN24InformationDemoPresenterD1Ev), UNUSED)

<P><STRONG><a name="[519]"></a>Model::bind(ModelListener*)</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, frontendapplicationbase.o(i._ZN5Model4bindEP13ModelListener))
<BR><BR>[Called By]<UL><LI><a href="#[3b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;T2* touchgfx::makeTransition&lang;InformationDemoView, InformationDemoPresenter, touchgfx::NoTransition, Model&rang;(touchgfx::Screen**, touchgfx::Presenter**, touchgfx::MVPHeap&, touchgfx::Transition**, T4*)
<LI><a href="#[3b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;T2* touchgfx::makeTransition&lang;SelectingMenuView, SelectingMenuPresenter, touchgfx::NoTransition, Model&rang;(touchgfx::Screen**, touchgfx::Presenter**, touchgfx::MVPHeap&, touchgfx::Transition**, T4*)
<LI><a href="#[3b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;T2* touchgfx::makeTransition&lang;SplashScreenView, SplashScreenPresenter, touchgfx::NoTransition, Model&rang;(touchgfx::Screen**, touchgfx::Presenter**, touchgfx::MVPHeap&, touchgfx::Transition**, T4*)
<LI><a href="#[3b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;T2* touchgfx::makeTransition&lang;InformationView, InformationPresenter, touchgfx::NoTransition, Model&rang;(touchgfx::Screen**, touchgfx::Presenter**, touchgfx::MVPHeap&, touchgfx::Transition**, T4*)
<LI><a href="#[3b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;T2* touchgfx::makeTransition&lang;SettingsView, SettingsPresenter, touchgfx::NoTransition, Model&rang;(touchgfx::Screen**, touchgfx::Presenter**, touchgfx::MVPHeap&, touchgfx::Transition**, T4*)
<LI><a href="#[3b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;T2* touchgfx::makeTransition&lang;CookingView, CookingPresenter, touchgfx::NoTransition, Model&rang;(touchgfx::Screen**, touchgfx::Presenter**, touchgfx::MVPHeap&, touchgfx::Transition**, T4*)
</UL>

<P><STRONG><a name="[3a8]"></a>Model::tick()</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, model.o(i._ZN5Model4tickEv))
<BR><BR>[Called By]<UL><LI><a href="#[179]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FrontendApplication::handleTickEvent()
</UL>

<P><STRONG><a name="[34c]"></a>Model::Model()</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, model.o(i._ZN5ModelC1Ev))
<BR><BR>[Called By]<UL><LI><a href="#[34a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FrontendHeap::FrontendHeap()
</UL>

<P><STRONG><a name="[585]"></a>Model::Model__sub_object()</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, model.o(i._ZN5ModelC1Ev), UNUSED)

<P><STRONG><a name="[1b6]"></a>STM32DMA::getBlitCaps()</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, stm32dma.o(i._ZN8STM32DMA11getBlitCapsEv))
<BR>[Address Reference Count : 1]<UL><LI> stm32dma.o(.constdata__ZTV8STM32DMA)
</UL>
<P><STRONG><a name="[1be]"></a>STM32DMA::setupDataCopy(const touchgfx::BlitOp&)</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, stm32dma.o(i._ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE))
<BR><BR>[Stack]<UL><LI>Max Depth = 64 + Unknown Stack Size
<LI>Call Chain = STM32DMA::setupDataCopy(const touchgfx::BlitOp&) &rArr; __aeabi_assert &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[2b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_assert
</UL>
<BR>[Address Reference Count : 1]<UL><LI> stm32dma.o(.constdata__ZTV8STM32DMA)
</UL>
<P><STRONG><a name="[1bf]"></a>STM32DMA::setupDataFill(const touchgfx::BlitOp&)</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, stm32dma.o(i._ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE))
<BR><BR>[Stack]<UL><LI>Max Depth = 64 + Unknown Stack Size
<LI>Call Chain = STM32DMA::setupDataFill(const touchgfx::BlitOp&) &rArr; __aeabi_assert &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[2b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_assert
</UL>
<BR>[Address Reference Count : 1]<UL><LI> stm32dma.o(.constdata__ZTV8STM32DMA)
</UL>
<P><STRONG><a name="[1b8]"></a>STM32DMA::flush()</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32dma.o(i._ZN8STM32DMA5flushEv))
<BR>[Address Reference Count : 1]<UL><LI> stm32dma.o(.constdata__ZTV8STM32DMA)
</UL>
<P><STRONG><a name="[3be]"></a>STM32DMA::STM32DMA()</STRONG> (Thumb, 72 bytes, Stack size 8 bytes, stm32dma.o(i._ZN8STM32DMAC1Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = STM32DMA::STM32DMA()
</UL>
<BR>[Calls]<UL><LI><a href="#[3bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LockFreeDMA_Queue::LockFreeDMA_Queue(touchgfx::BlitOp*, unsigned long)
</UL>
<BR>[Called By]<UL><LI><a href="#[291]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__sti___25_TouchGFXConfiguration_cpp_f5abfd34
</UL>

<P><STRONG><a name="[586]"></a>STM32DMA::STM32DMA__sub_object()</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, stm32dma.o(i._ZN8STM32DMAC1Ev), UNUSED)

<P><STRONG><a name="[d4]"></a>STM32DMA::~STM32DMA()</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, touchgfxconfiguration.o(i._ZN8STM32DMAD1Ev))
<BR>[Address Reference Count : 2]<UL><LI> touchgfxconfiguration.o(i.__sti___25_TouchGFXConfiguration_cpp_f5abfd34)
<LI> stm32dma.o(.constdata__ZTV8STM32DMA)
</UL>
<P><STRONG><a name="[587]"></a>STM32DMA::~STM32DMA__sub_object()</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, touchgfxconfiguration.o(i._ZN8STM32DMAD1Ev), UNUSED)

<P><STRONG><a name="[449]"></a>touchgfx::ClickEvent::ClickEvent(touchgfx::ClickEvent::ClickEventType, short, short, short)</STRONG> (Thumb, 18 bytes, Stack size 12 bytes, screen.o(i._ZN8touchgfx10ClickEventC1ENS0_14ClickEventTypeEsss))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = touchgfx::ClickEvent::ClickEvent(touchgfx::ClickEvent::ClickEventType, short, short, short)
</UL>
<BR>[Called By]<UL><LI><a href="#[f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Screen::handleClickEvent(const touchgfx::ClickEvent&)
<LI><a href="#[f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Screen::handleDragEvent(const touchgfx::DragEvent&)
</UL>

<P><STRONG><a name="[588]"></a>touchgfx::ClickEvent::ClickEvent__sub_object(touchgfx::ClickEvent::ClickEventType, short, short, short)</STRONG> (Thumb, 0 bytes, Stack size 12 bytes, screen.o(i._ZN8touchgfx10ClickEventC1ENS0_14ClickEventTypeEsss), UNUSED)

<P><STRONG><a name="[3c0]"></a>touchgfx::OSWrappers::initialize()</STRONG> (Thumb, 72 bytes, Stack size 8 bytes, oswrappers.o(i._ZN8touchgfx10OSWrappers10initializeEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 152 + Unknown Stack Size
<LI>Call Chain = touchgfx::OSWrappers::initialize() &rArr; osSemaphoreNew &rArr; xQueueCreateCountingSemaphoreStatic &rArr; xQueueGenericCreateStatic &rArr; prvInitialiseNewQueue &rArr; xQueueGenericReset &rArr; xTaskRemoveFromEventList
</UL>
<BR>[Calls]<UL><LI><a href="#[3c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osSemaphoreNew
<LI><a href="#[3c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osMessageQueueNew
<LI><a href="#[2b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_assert
</UL>
<BR>[Called By]<UL><LI><a href="#[23d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::HAL::initialize()
</UL>

<P><STRONG><a name="[2ee]"></a>touchgfx::OSWrappers::signalVSync()</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, oswrappers.o(i._ZN8touchgfx10OSWrappers11signalVSyncEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 144<LI>Call Chain = touchgfx::OSWrappers::signalVSync() &rArr; osMessageQueuePut &rArr; xQueueGenericSend &rArr; vTaskPlaceOnEventList &rArr; prvAddCurrentTaskToDelayedList &rArr; vListInsert
</UL>
<BR>[Calls]<UL><LI><a href="#[3c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osMessageQueuePut
</UL>
<BR>[Called By]<UL><LI><a href="#[2e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_LTDC_LineEventCallback
</UL>

<P><STRONG><a name="[3c4]"></a>touchgfx::OSWrappers::waitForVSync()</STRONG> (Thumb, 34 bytes, Stack size 8 bytes, oswrappers.o(i._ZN8touchgfx10OSWrappers12waitForVSyncEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 136<LI>Call Chain = touchgfx::OSWrappers::waitForVSync() &rArr; osMessageQueueGet &rArr; xQueueReceive &rArr; vTaskPlaceOnEventList &rArr; prvAddCurrentTaskToDelayedList &rArr; vListInsert
</UL>
<BR>[Calls]<UL><LI><a href="#[3c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osMessageQueueGet
</UL>
<BR>[Called By]<UL><LI><a href="#[103]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::HAL::taskEntry()
</UL>

<P><STRONG><a name="[3c6]"></a>touchgfx::OSWrappers::giveFrameBufferSemaphore()</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, oswrappers.o(i._ZN8touchgfx10OSWrappers24giveFrameBufferSemaphoreEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 136<LI>Call Chain = touchgfx::OSWrappers::giveFrameBufferSemaphore() &rArr; osSemaphoreRelease &rArr; xQueueGenericSend &rArr; vTaskPlaceOnEventList &rArr; prvAddCurrentTaskToDelayedList &rArr; vListInsert
</UL>
<BR>[Calls]<UL><LI><a href="#[3c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osSemaphoreRelease
</UL>
<BR>[Called By]<UL><LI><a href="#[108]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::HAL::unlockFrameBuffer()
<LI><a href="#[1c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::DMA_Interface::waitForFrameBufferSemaphore()
</UL>

<P><STRONG><a name="[3c8]"></a>touchgfx::OSWrappers::takeFrameBufferSemaphore()</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, oswrappers.o(i._ZN8touchgfx10OSWrappers24takeFrameBufferSemaphoreEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = touchgfx::OSWrappers::takeFrameBufferSemaphore() &rArr; osSemaphoreAcquire &rArr; xQueueSemaphoreTake &rArr; vTaskPlaceOnEventList &rArr; prvAddCurrentTaskToDelayedList &rArr; vListInsert
</UL>
<BR>[Calls]<UL><LI><a href="#[3c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osSemaphoreAcquire
</UL>
<BR>[Called By]<UL><LI><a href="#[107]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::HAL::lockFrameBuffer()
<LI><a href="#[1c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::DMA_Interface::waitForFrameBufferSemaphore()
</UL>

<P><STRONG><a name="[3ca]"></a>touchgfx::OSWrappers::tryTakeFrameBufferSemaphore()</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, oswrappers.o(i._ZN8touchgfx10OSWrappers27tryTakeFrameBufferSemaphoreEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = touchgfx::OSWrappers::tryTakeFrameBufferSemaphore() &rArr; osSemaphoreAcquire &rArr; xQueueSemaphoreTake &rArr; vTaskPlaceOnEventList &rArr; prvAddCurrentTaskToDelayedList &rArr; vListInsert
</UL>
<BR>[Calls]<UL><LI><a href="#[3c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osSemaphoreAcquire
</UL>
<BR>[Called By]<UL><LI><a href="#[1b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::DMA_Interface::addToQueue(const touchgfx::BlitOp&)
</UL>

<P><STRONG><a name="[b3]"></a>touchgfx::OSWrappers::taskDelay(unsigned short)</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, oswrappers.o(i._ZN8touchgfx10OSWrappers9taskDelayEt))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = touchgfx::OSWrappers::taskDelay(unsigned short) &rArr; osDelay &rArr; vTaskDelay &rArr; xTaskResumeAll &rArr; xTaskIncrementTick
</UL>
<BR>[Calls]<UL><LI><a href="#[31c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osDelay
</UL>
<BR>[Address Reference Count : 1]<UL><LI> touchgfxgeneratedhal.o(i._ZN20TouchGFXGeneratedHAL10initializeEv)
</UL>
<P><STRONG><a name="[3cb]"></a>touchgfx::Rasterizer::lineTo(int, int)</STRONG> (Thumb, 32 bytes, Stack size 16 bytes, canvas.o(i._ZN8touchgfx10Rasterizer6lineToEii))
<BR><BR>[Stack]<UL><LI>Max Depth = 256 + Unknown Stack Size
<LI>Call Chain = touchgfx::Rasterizer::lineTo(int, int) &rArr; touchgfx::Outline::lineTo(int, int) &rArr; touchgfx::Outline::renderLine(int, int, int, int) &rArr; touchgfx::Outline::renderScanline(int, int, int, int, int) &rArr; touchgfx::Outline::setCurCellNew(int, int) &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[3cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Outline::lineTo(int, int)
<LI><a href="#[3cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Outline::wasOutlineTooComplex()
</UL>
<BR>[Called By]<UL><LI><a href="#[252]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Canvas::lineTo(touchgfx::CWRUtil::Q5, touchgfx::CWRUtil::Q5)
<LI><a href="#[43f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Canvas::close()
</UL>

<P><STRONG><a name="[3ce]"></a>touchgfx::Rasterizer::moveTo(int, int)</STRONG> (Thumb, 32 bytes, Stack size 16 bytes, canvas.o(i._ZN8touchgfx10Rasterizer6moveToEii))
<BR><BR>[Stack]<UL><LI>Max Depth = 272 + Unknown Stack Size
<LI>Call Chain = touchgfx::Rasterizer::moveTo(int, int) &rArr; touchgfx::Outline::moveTo(int, int) &rArr; touchgfx::Outline::lineTo(int, int) &rArr; touchgfx::Outline::renderLine(int, int, int, int) &rArr; touchgfx::Outline::renderScanline(int, int, int, int, int) &rArr; touchgfx::Outline::setCurCellNew(int, int) &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[3cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Outline::moveTo(int, int)
<LI><a href="#[3cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Outline::wasOutlineTooComplex()
</UL>
<BR>[Called By]<UL><LI><a href="#[442]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Canvas::moveTo(touchgfx::CWRUtil::Q5, touchgfx::CWRUtil::Q5)
<LI><a href="#[252]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Canvas::lineTo(touchgfx::CWRUtil::Q5, touchgfx::CWRUtil::Q5)
</UL>

<P><STRONG><a name="[3d0]"></a>touchgfx::Rasterizer::render(const touchgfx::AbstractPainter*, unsigned char*, short, unsigned char, unsigned char)</STRONG> (Thumb, 344 bytes, Stack size 72 bytes, canvas.o(i._ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh))
<BR><BR>[Stack]<UL><LI>Max Depth = 440 + Unknown Stack Size
<LI>Call Chain = touchgfx::Rasterizer::render(const touchgfx::AbstractPainter*, unsigned char*, short, unsigned char, unsigned char) &rArr; touchgfx::Outline::closeOutlineAndSortCells() &rArr; touchgfx::Outline::qsortCells(touchgfx::Cell*, unsigned) &rArr; touchgfx::Outline::swapCells(touchgfx::Cell*, touchgfx::Cell*)
</UL>
<BR>[Calls]<UL><LI><a href="#[3d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Outline::closeOutlineAndSortCells()
<LI><a href="#[3d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Rasterizer::calculateAlpha(int) const
<LI><a href="#[3cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Outline::wasOutlineTooComplex()
</UL>
<BR>[Called By]<UL><LI><a href="#[443]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Canvas::render(unsigned char)
</UL>

<P><STRONG><a name="[1c7]"></a>touchgfx::Transition::invalidate()</STRONG> (Thumb, 20 bytes, Stack size 16 bytes, frontendapplicationbase.o(i._ZN8touchgfx10Transition10invalidateEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = touchgfx::Transition::invalidate()
</UL>
<BR>[Calls]<UL><LI><a href="#[363]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Application::getInstance()
</UL>
<BR>[Address Reference Count : 2]<UL><LI> frontendapplicationbase.o(.constdata__ZTVN8touchgfx10TransitionE)
<LI> frontendapplicationbase.o(.constdata__ZTVN8touchgfx12NoTransitionE)
</UL>
<P><STRONG><a name="[1c4]"></a>touchgfx::Transition::handleTickEvent()</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, frontendapplicationbase.o(i._ZN8touchgfx10Transition15handleTickEventEv))
<BR>[Address Reference Count : 1]<UL><LI> frontendapplicationbase.o(.constdata__ZTVN8touchgfx10TransitionE)
</UL>
<P><STRONG><a name="[1c8]"></a>touchgfx::Transition::setScreenContainer(touchgfx::Container&)</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, frontendapplicationbase.o(i._ZN8touchgfx10Transition18setScreenContainerERNS_9ContainerE))
<BR>[Address Reference Count : 2]<UL><LI> frontendapplicationbase.o(.constdata__ZTVN8touchgfx10TransitionE)
<LI> frontendapplicationbase.o(.constdata__ZTVN8touchgfx12NoTransitionE)
</UL>
<P><STRONG><a name="[1c6]"></a>touchgfx::Transition::init()</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, frontendapplicationbase.o(i._ZN8touchgfx10Transition4initEv))
<BR>[Address Reference Count : 2]<UL><LI> frontendapplicationbase.o(.constdata__ZTVN8touchgfx10TransitionE)
<LI> frontendapplicationbase.o(.constdata__ZTVN8touchgfx12NoTransitionE)
</UL>
<P><STRONG><a name="[1c5]"></a>touchgfx::Transition::tearDown()</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, frontendapplicationbase.o(i._ZN8touchgfx10Transition8tearDownEv))
<BR>[Address Reference Count : 2]<UL><LI> frontendapplicationbase.o(.constdata__ZTVN8touchgfx10TransitionE)
<LI> frontendapplicationbase.o(.constdata__ZTVN8touchgfx12NoTransitionE)
</UL>
<P><STRONG><a name="[1c3]"></a>touchgfx::Transition::~Transition()</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, frontendapplicationbase.o(i._ZN8touchgfx10TransitionD1Ev))
<BR>[Address Reference Count : 1]<UL><LI> frontendapplicationbase.o(.constdata__ZTVN8touchgfx10TransitionE)
</UL>
<P><STRONG><a name="[589]"></a>touchgfx::Transition::~Transition__sub_object()</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, frontendapplicationbase.o(i._ZN8touchgfx10TransitionD1Ev), UNUSED)

<P><STRONG><a name="[17d]"></a>touchgfx::Application::invalidate()</STRONG> (Thumb, 42 bytes, Stack size 24 bytes, application.o(i._ZN8touchgfx11Application10invalidateEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = touchgfx::Application::invalidate() &rArr; touchgfx::Rect::Rect(short, short, short, short)
</UL>
<BR>[Calls]<UL><LI><a href="#[3d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Rect::Rect(short, short, short, short)
</UL>
<BR>[Address Reference Count : 4]<UL><LI> touchgfxconfiguration.o(.constdata__ZTV23FrontendApplicationBase)
<LI> frontendapplication.o(.constdata__ZTV19FrontendApplication)
<LI> frontendapplicationbase.o(.constdata__ZTVN8touchgfx14MVPApplicationE)
<LI> application.o(.constdata__ZTVN8touchgfx11ApplicationE)
</UL>
<P><STRONG><a name="[363]"></a>touchgfx::Application::getInstance()</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, application.o(i._ZN8touchgfx11Application11getInstanceEv))
<BR><BR>[Called By]<UL><LI><a href="#[11f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::HAL::tick()
<LI><a href="#[191]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TouchGFXGeneratedHAL::initialize()
<LI><a href="#[f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CookingViewBase::goToInformationMenu()
<LI><a href="#[f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CookingViewBase::goToSelectingMenu()
<LI><a href="#[f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CookingViewBase::goToSettingMenu()
<LI><a href="#[513]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::FadeAnimator&lang;touchgfx::Button&rang;::nextFadeAnimationStep()
<LI><a href="#[344]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::FadeAnimator&lang;touchgfx::Button&rang;::startFadeAnimation(unsigned char, unsigned short, short(*)(unsigned short, short, short, unsigned short))
<LI><a href="#[512]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::FadeAnimator&lang;touchgfx::Image&rang;::nextFadeAnimationStep()
<LI><a href="#[343]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::FadeAnimator&lang;touchgfx::Image&rang;::startFadeAnimation(unsigned char, unsigned short, short(*)(unsigned short, short, short, unsigned short))
<LI><a href="#[341]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::FadeAnimator&lang;touchgfx::TextAreaWithTwoWildcards&rang;::startFadeAnimation(unsigned char, unsigned short, short(*)(unsigned short, short, short, unsigned short))
<LI><a href="#[14b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InformationViewBase::goToScreenInfo2()
<LI><a href="#[185]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InformationDemoViewBase::goToSelectingMenu()
<LI><a href="#[186]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InformationDemoViewBase::goToCookingMenu()
<LI><a href="#[412]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::prepareTransition(touchgfx::Screen**, touchgfx::Presenter**, touchgfx::Transition**)
<LI><a href="#[165]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SelectingMenuViewBase::goToInformationScreen()
<LI><a href="#[166]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SelectingMenuViewBase::goToSettingScreen()
<LI><a href="#[164]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SelectingMenuViewBase::goToCookingScreen()
<LI><a href="#[3a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::MoveAnimator&lang;touchgfx::Container&rang;::startMoveAnimation(short, short, unsigned short, short(*)(unsigned short, short, short, unsigned short), short(*)(unsigned short, short, short, unsigned short))
<LI><a href="#[12f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SettingsViewBase::goToCookingMenu()
<LI><a href="#[12e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SettingsViewBase::goToMainMenu()
<LI><a href="#[514]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::FadeAnimator&lang;touchgfx::TextArea&rang;::nextFadeAnimationStep()
<LI><a href="#[342]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::FadeAnimator&lang;touchgfx::TextArea&rang;::startFadeAnimation(unsigned char, unsigned short, short(*)(unsigned short, short, short, unsigned short))
<LI><a href="#[1cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Drawable::invalidateRect(touchgfx::Rect&) const
<LI><a href="#[511]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::FadeAnimator&lang;touchgfx::TextAreaWithTwoWildcards&rang;::nextFadeAnimationStep()
<LI><a href="#[1c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Transition::invalidate()
<LI><a href="#[515]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::MoveAnimator&lang;touchgfx::Container&rang;::nextMoveAnimationStep()
<LI><a href="#[ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SplashScreenViewBase::fadeOutDemoNameEndedCallbackHandler(const touchgfx::FadeAnimator&lang;touchgfx::Image&rang;&)
</UL>

<P><STRONG><a name="[3e3]"></a>touchgfx::Application::TimerWidgets::tickActive()</STRONG> (Thumb, 62 bytes, Stack size 16 bytes, application.o(i._ZN8touchgfx11Application12TimerWidgets10tickActiveEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = touchgfx::Application::TimerWidgets::tickActive()
</UL>
<BR>[Called By]<UL><LI><a href="#[1ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Application::handleTickEvent()
</UL>

<P><STRONG><a name="[3d4]"></a>touchgfx::Application::TimerWidgets::add(touchgfx::Drawable*)</STRONG> (Thumb, 112 bytes, Stack size 16 bytes, application.o(i._ZN8touchgfx11Application12TimerWidgets3addEPNS_8DrawableE))
<BR><BR>[Stack]<UL><LI>Max Depth = 88 + Unknown Stack Size
<LI>Call Chain = touchgfx::Application::TimerWidgets::add(touchgfx::Drawable*) &rArr; touchgfx::Application::TimerWidgets::compact() &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[3d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Application::TimerWidgets::compact()
<LI><a href="#[2ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;abort
</UL>
<BR>[Called By]<UL><LI><a href="#[3e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Application::registerTimerWidget(touchgfx::Drawable*)
</UL>

<P><STRONG><a name="[3e9]"></a>touchgfx::Application::TimerWidgets::clear()</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, application.o(i._ZN8touchgfx11Application12TimerWidgets5clearEv))
<BR><BR>[Called By]<UL><LI><a href="#[412]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::prepareTransition(touchgfx::Screen**, touchgfx::Presenter**, touchgfx::Transition**)
<LI><a href="#[3b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Application::Application()
</UL>

<P><STRONG><a name="[3e6]"></a>touchgfx::Application::TimerWidgets::remove(const touchgfx::Drawable*)</STRONG> (Thumb, 60 bytes, Stack size 8 bytes, application.o(i._ZN8touchgfx11Application12TimerWidgets6removeEPKNS_8DrawableE))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = touchgfx::Application::TimerWidgets::remove(const touchgfx::Drawable*)
</UL>
<BR>[Called By]<UL><LI><a href="#[3e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Application::unregisterTimerWidget(const touchgfx::Drawable*)
</UL>

<P><STRONG><a name="[3d5]"></a>touchgfx::Application::TimerWidgets::compact()</STRONG> (Thumb, 146 bytes, Stack size 24 bytes, application.o(i._ZN8touchgfx11Application12TimerWidgets7compactEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 72 + Unknown Stack Size
<LI>Call Chain = touchgfx::Application::TimerWidgets::compact() &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[2ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;abort
</UL>
<BR>[Called By]<UL><LI><a href="#[3d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Application::TimerWidgets::add(touchgfx::Drawable*)
<LI><a href="#[1ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Application::handleTickEvent()
</UL>

<P><STRONG><a name="[178]"></a>touchgfx::Application::handleKeyEvent(unsigned char)</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, application.o(i._ZN8touchgfx11Application14handleKeyEventEh))
<BR>[Address Reference Count : 4]<UL><LI> touchgfxconfiguration.o(.constdata__ZTV23FrontendApplicationBase)
<LI> frontendapplication.o(.constdata__ZTV19FrontendApplication)
<LI> frontendapplicationbase.o(.constdata__ZTVN8touchgfx14MVPApplicationE)
<LI> application.o(.constdata__ZTVN8touchgfx11ApplicationE)
</UL>
<P><STRONG><a name="[17e]"></a>touchgfx::Application::invalidateArea(touchgfx::Rect)</STRONG> (Thumb, 1742 bytes, Stack size 64 bytes, application.o(i._ZN8touchgfx11Application14invalidateAreaENS_4RectE))
<BR><BR>[Stack]<UL><LI>Max Depth = 120 + Unknown Stack Size
<LI>Call Chain = touchgfx::Application::invalidateArea(touchgfx::Rect) &rArr; touchgfx::Vector&lang;touchgfx::Rect, (unsigned short)8&rang;::add(touchgfx::Rect) &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[3dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Vector&lang;touchgfx::Rect, (unsigned short)8&rang;::add(touchgfx::Rect)
<LI><a href="#[3d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Vector&lang;touchgfx::Rect, (unsigned short)8&rang;::quickRemoveAt(unsigned short)
<LI><a href="#[3da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Rect::intersect(const touchgfx::Rect&) const
<LI><a href="#[3d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Rect::includes(const touchgfx::Rect&) const
<LI><a href="#[3de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Rect::expandToFit(const touchgfx::Rect&)
<LI><a href="#[3d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Rect::restrictTo(short, short)
<LI><a href="#[3d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Rect::isEmpty() const
<LI><a href="#[3dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Rect::bottom() const
<LI><a href="#[3db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Rect::right() const
</UL>
<BR>[Address Reference Count : 4]<UL><LI> touchgfxconfiguration.o(.constdata__ZTV23FrontendApplicationBase)
<LI> frontendapplication.o(.constdata__ZTV19FrontendApplication)
<LI> frontendapplicationbase.o(.constdata__ZTVN8touchgfx14MVPApplicationE)
<LI> application.o(.constdata__ZTVN8touchgfx11ApplicationE)
</UL>
<P><STRONG><a name="[17c]"></a>touchgfx::Application::drawCachedAreas()</STRONG> (Thumb, 1180 bytes, Stack size 144 bytes, application.o(i._ZN8touchgfx11Application15drawCachedAreasEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 200 + Unknown Stack Size
<LI>Call Chain = touchgfx::Application::drawCachedAreas() &rArr; touchgfx::Vector&lang;touchgfx::Rect, (unsigned short)8&rang;::add(touchgfx::Rect) &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Rect::Rect()
<LI><a href="#[3d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Rect::Rect(short, short, short, short)
<LI><a href="#[3e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::DisplayTransformation::transformFrameBufferToDisplay(touchgfx::Rect&)
<LI><a href="#[3df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Vector&lang;touchgfx::Rect, (unsigned short)8&rang;::Vector()
<LI><a href="#[3dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Vector&lang;touchgfx::Rect, (unsigned short)8&rang;::add(touchgfx::Rect)
<LI><a href="#[3d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Vector&lang;touchgfx::Rect, (unsigned short)8&rang;::quickRemoveAt(unsigned short)
<LI><a href="#[3e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Rect::operator &=(const touchgfx::Rect&)
<LI><a href="#[3e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::DisplayTransformation::transformDisplayToFrameBuffer(touchgfx::Rect&)
<LI><a href="#[3d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Rect::isEmpty() const
<LI><a href="#[3dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Rect::bottom() const
<LI><a href="#[3db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Rect::right() const
</UL>
<BR>[Address Reference Count : 4]<UL><LI> touchgfxconfiguration.o(.constdata__ZTV23FrontendApplicationBase)
<LI> frontendapplication.o(.constdata__ZTV19FrontendApplication)
<LI> frontendapplicationbase.o(.constdata__ZTVN8touchgfx14MVPApplicationE)
<LI> application.o(.constdata__ZTVN8touchgfx11ApplicationE)
</UL>
<P><STRONG><a name="[176]"></a>touchgfx::Application::handleDragEvent(const touchgfx::DragEvent&)</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, application.o(i._ZN8touchgfx11Application15handleDragEventERKNS_9DragEventE))
<BR>[Address Reference Count : 4]<UL><LI> touchgfxconfiguration.o(.constdata__ZTV23FrontendApplicationBase)
<LI> frontendapplication.o(.constdata__ZTV19FrontendApplication)
<LI> frontendapplicationbase.o(.constdata__ZTVN8touchgfx14MVPApplicationE)
<LI> application.o(.constdata__ZTVN8touchgfx11ApplicationE)
</UL>
<P><STRONG><a name="[1ae]"></a>touchgfx::Application::handleTickEvent()</STRONG> (Thumb, 94 bytes, Stack size 16 bytes, application.o(i._ZN8touchgfx11Application15handleTickEventEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 88 + Unknown Stack Size
<LI>Call Chain = touchgfx::Application::handleTickEvent() &rArr; touchgfx::Application::TimerWidgets::compact() &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[3d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Application::TimerWidgets::compact()
<LI><a href="#[3e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Application::TimerWidgets::tickActive()
</UL>
<BR>[Called By]<UL><LI><a href="#[179]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FrontendApplication::handleTickEvent()
</UL>
<BR>[Address Reference Count : 3]<UL><LI> touchgfxconfiguration.o(.constdata__ZTV23FrontendApplicationBase)
<LI> frontendapplicationbase.o(.constdata__ZTVN8touchgfx14MVPApplicationE)
<LI> application.o(.constdata__ZTVN8touchgfx11ApplicationE)
</UL>
<P><STRONG><a name="[17b]"></a>touchgfx::Application::clearCachedAreas()</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, application.o(i._ZN8touchgfx11Application16clearCachedAreasEv))
<BR>[Address Reference Count : 4]<UL><LI> touchgfxconfiguration.o(.constdata__ZTV23FrontendApplicationBase)
<LI> frontendapplication.o(.constdata__ZTV19FrontendApplication)
<LI> frontendapplicationbase.o(.constdata__ZTVN8touchgfx14MVPApplicationE)
<LI> application.o(.constdata__ZTVN8touchgfx11ApplicationE)
</UL>
<P><STRONG><a name="[175]"></a>touchgfx::Application::handleClickEvent(const touchgfx::ClickEvent&)</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, application.o(i._ZN8touchgfx11Application16handleClickEventERKNS_10ClickEventE))
<BR>[Address Reference Count : 4]<UL><LI> touchgfxconfiguration.o(.constdata__ZTV23FrontendApplicationBase)
<LI> frontendapplication.o(.constdata__ZTV19FrontendApplication)
<LI> frontendapplicationbase.o(.constdata__ZTVN8touchgfx14MVPApplicationE)
<LI> application.o(.constdata__ZTVN8touchgfx11ApplicationE)
</UL>
<P><STRONG><a name="[177]"></a>touchgfx::Application::handleGestureEvent(const touchgfx::GestureEvent&)</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, application.o(i._ZN8touchgfx11Application18handleGestureEventERKNS_12GestureEventE))
<BR>[Address Reference Count : 4]<UL><LI> touchgfxconfiguration.o(.constdata__ZTV23FrontendApplicationBase)
<LI> frontendapplication.o(.constdata__ZTV19FrontendApplication)
<LI> frontendapplicationbase.o(.constdata__ZTVN8touchgfx14MVPApplicationE)
<LI> application.o(.constdata__ZTVN8touchgfx11ApplicationE)
</UL>
<P><STRONG><a name="[3e4]"></a>touchgfx::Application::registerTimerWidget(touchgfx::Drawable*)</STRONG> (Thumb, 16 bytes, Stack size 16 bytes, cookingview.o(i._ZN8touchgfx11Application19registerTimerWidgetEPNS_8DrawableE))
<BR><BR>[Stack]<UL><LI>Max Depth = 104 + Unknown Stack Size
<LI>Call Chain = touchgfx::Application::registerTimerWidget(touchgfx::Drawable*) &rArr; touchgfx::Application::TimerWidgets::add(touchgfx::Drawable*) &rArr; touchgfx::Application::TimerWidgets::compact() &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[3d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Application::TimerWidgets::add(touchgfx::Drawable*)
</UL>
<BR>[Called By]<UL><LI><a href="#[344]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::FadeAnimator&lang;touchgfx::Button&rang;::startFadeAnimation(unsigned char, unsigned short, short(*)(unsigned short, short, short, unsigned short))
<LI><a href="#[343]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::FadeAnimator&lang;touchgfx::Image&rang;::startFadeAnimation(unsigned char, unsigned short, short(*)(unsigned short, short, short, unsigned short))
<LI><a href="#[341]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::FadeAnimator&lang;touchgfx::TextAreaWithTwoWildcards&rang;::startFadeAnimation(unsigned char, unsigned short, short(*)(unsigned short, short, short, unsigned short))
<LI><a href="#[3a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::MoveAnimator&lang;touchgfx::Container&rang;::startMoveAnimation(short, short, unsigned short, short(*)(unsigned short, short, short, unsigned short), short(*)(unsigned short, short, short, unsigned short))
<LI><a href="#[342]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::FadeAnimator&lang;touchgfx::TextArea&rang;::startFadeAnimation(unsigned char, unsigned short, short(*)(unsigned short, short, short, unsigned short))
</UL>

<P><STRONG><a name="[3e5]"></a>touchgfx::Application::unregisterTimerWidget(const touchgfx::Drawable*)</STRONG> (Thumb, 16 bytes, Stack size 16 bytes, cookingview.o(i._ZN8touchgfx11Application21unregisterTimerWidgetEPKNS_8DrawableE))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = touchgfx::Application::unregisterTimerWidget(const touchgfx::Drawable*) &rArr; touchgfx::Application::TimerWidgets::remove(const touchgfx::Drawable*)
</UL>
<BR>[Calls]<UL><LI><a href="#[3e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Application::TimerWidgets::remove(const touchgfx::Drawable*)
</UL>
<BR>[Called By]<UL><LI><a href="#[513]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::FadeAnimator&lang;touchgfx::Button&rang;::nextFadeAnimationStep()
<LI><a href="#[512]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::FadeAnimator&lang;touchgfx::Image&rang;::nextFadeAnimationStep()
<LI><a href="#[514]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::FadeAnimator&lang;touchgfx::TextArea&rang;::nextFadeAnimationStep()
<LI><a href="#[511]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::FadeAnimator&lang;touchgfx::TextAreaWithTwoWildcards&rang;::nextFadeAnimationStep()
<LI><a href="#[515]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::MoveAnimator&lang;touchgfx::Container&rang;::nextMoveAnimationStep()
</UL>

<P><STRONG><a name="[1c9]"></a>touchgfx::Application::handlePendingScreenTransition()</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, application.o(i._ZN8touchgfx11Application29handlePendingScreenTransitionEv))
<BR>[Address Reference Count : 1]<UL><LI> application.o(.constdata__ZTVN8touchgfx11ApplicationE)
</UL>
<P><STRONG><a name="[17f]"></a>touchgfx::Application::draw(touchgfx::Rect&)</STRONG> (Thumb, 68 bytes, Stack size 16 bytes, application.o(i._ZN8touchgfx11Application4drawERNS_4RectE))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = touchgfx::Application::draw(touchgfx::Rect&) &rArr; touchgfx::Rect::restrictTo(short, short)
</UL>
<BR>[Calls]<UL><LI><a href="#[3d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Rect::restrictTo(short, short)
</UL>
<BR>[Address Reference Count : 4]<UL><LI> touchgfxconfiguration.o(.constdata__ZTV23FrontendApplicationBase)
<LI> frontendapplication.o(.constdata__ZTV19FrontendApplication)
<LI> frontendapplicationbase.o(.constdata__ZTVN8touchgfx14MVPApplicationE)
<LI> application.o(.constdata__ZTVN8touchgfx11ApplicationE)
</UL>
<P><STRONG><a name="[3b9]"></a>touchgfx::Application::Application()</STRONG> (Thumb, 98 bytes, Stack size 16 bytes, application.o(i._ZN8touchgfx11ApplicationC1Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = touchgfx::Application::Application() &rArr; touchgfx::Screen::draw() &rArr; touchgfx::Rect::Rect(short, short, short, short)
</UL>
<BR>[Calls]<UL><LI><a href="#[dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Rect::Rect()
<LI><a href="#[3e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Application::TimerWidgets::clear()
<LI><a href="#[3e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Screen::draw()
<LI><a href="#[3e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CRC_Lock
<LI><a href="#[3df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Vector&lang;touchgfx::Rect, (unsigned short)8&rang;::Vector()
<LI><a href="#[2d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[3a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FrontendApplicationBase::FrontendApplicationBase(Model&, FrontendHeap&)
</UL>

<P><STRONG><a name="[58a]"></a>touchgfx::Application::Application__sub_object()</STRONG> (Thumb, 0 bytes, Stack size 16 bytes, application.o(i._ZN8touchgfx11ApplicationC1Ev), UNUSED)

<P><STRONG><a name="[4fc]"></a>touchgfx::FontManager::setFontProvider(touchgfx::FontProvider*)</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, fontmanager.o(i._ZN8touchgfx11FontManager15setFontProviderEPNS_12FontProviderE))
<BR><BR>[Called By]<UL><LI><a href="#[31b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx_init
</UL>

<P><STRONG><a name="[3ea]"></a>touchgfx::CanvasWidget::CanvasWidget__sub_object()</STRONG> (Thumb, 60 bytes, Stack size 8 bytes, canvaswidget.o(i._ZN8touchgfx12CanvasWidgetC2Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = touchgfx::CanvasWidget::CanvasWidget__sub_object() &rArr; __aeabi_memclr4
</UL>
<BR>[Calls]<UL><LI><a href="#[dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Rect::Rect()
<LI><a href="#[2d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[36e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Circle::Circle()
</UL>

<P><STRONG><a name="[1e0]"></a>touchgfx::FadeAnimator&lang;touchgfx::TextAreaWithTwoWildcards&rang;::~FadeAnimator()</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, cookingviewbase.o(i._ZN8touchgfx12FadeAnimatorINS_24TextAreaWithTwoWildcardsEED1Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = touchgfx::FadeAnimator&lang;touchgfx::TextAreaWithTwoWildcards&rang;::~FadeAnimator() &rArr; touchgfx::TextAreaWithTwoWildcards::~TextAreaWithTwoWildcards() &rArr; touchgfx::TextArea::~TextArea()
</UL>
<BR>[Calls]<UL><LI><a href="#[23a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextAreaWithTwoWildcards::~TextAreaWithTwoWildcards()
</UL>
<BR>[Called By]<UL><LI><a href="#[13a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CookingViewBase::~CookingViewBase()
<LI><a href="#[19c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SelectingMenuViewBase::~SelectingMenuViewBase()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> cookingviewbase.o(.constdata__ZTVN8touchgfx12FadeAnimatorINS_24TextAreaWithTwoWildcardsEEE)
</UL>
<P><STRONG><a name="[58b]"></a>touchgfx::FadeAnimator&lang;touchgfx::TextAreaWithTwoWildcards&rang;::~FadeAnimator__sub_object()</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, cookingviewbase.o(i._ZN8touchgfx12FadeAnimatorINS_24TextAreaWithTwoWildcardsEED1Ev), UNUSED)

<P><STRONG><a name="[1f0]"></a>touchgfx::FadeAnimator&lang;touchgfx::Image&rang;::~FadeAnimator()</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, cookingviewbase.o(i._ZN8touchgfx12FadeAnimatorINS_5ImageEED1Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = touchgfx::FadeAnimator&lang;touchgfx::Image&rang;::~FadeAnimator() &rArr; touchgfx::Image::~Image()
</UL>
<BR>[Calls]<UL><LI><a href="#[24f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Image::~Image()
</UL>
<BR>[Called By]<UL><LI><a href="#[13a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CookingViewBase::~CookingViewBase()
<LI><a href="#[19c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SelectingMenuViewBase::~SelectingMenuViewBase()
<LI><a href="#[18f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SplashScreenViewBase::~SplashScreenViewBase()
<LI><a href="#[150]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SettingsViewBase::~SettingsViewBase()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> cookingviewbase.o(.constdata__ZTVN8touchgfx12FadeAnimatorINS_5ImageEEE)
</UL>
<P><STRONG><a name="[58c]"></a>touchgfx::FadeAnimator&lang;touchgfx::Image&rang;::~FadeAnimator__sub_object()</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, cookingviewbase.o(i._ZN8touchgfx12FadeAnimatorINS_5ImageEED1Ev), UNUSED)

<P><STRONG><a name="[1f7]"></a>touchgfx::FadeAnimator&lang;touchgfx::Button&rang;::~FadeAnimator()</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, settingsviewbase.o(i._ZN8touchgfx12FadeAnimatorINS_6ButtonEED1Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = touchgfx::FadeAnimator&lang;touchgfx::Button&rang;::~FadeAnimator() &rArr; touchgfx::Button::~Button()
</UL>
<BR>[Calls]<UL><LI><a href="#[250]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Button::~Button()
</UL>
<BR>[Called By]<UL><LI><a href="#[13a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CookingViewBase::~CookingViewBase()
<LI><a href="#[19c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SelectingMenuViewBase::~SelectingMenuViewBase()
<LI><a href="#[150]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SettingsViewBase::~SettingsViewBase()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> cookingviewbase.o(.constdata__ZTVN8touchgfx12FadeAnimatorINS_6ButtonEEE)
</UL>
<P><STRONG><a name="[58d]"></a>touchgfx::FadeAnimator&lang;touchgfx::Button&rang;::~FadeAnimator__sub_object()</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, settingsviewbase.o(i._ZN8touchgfx12FadeAnimatorINS_6ButtonEED1Ev), UNUSED)

<P><STRONG><a name="[1ff]"></a>touchgfx::FadeAnimator&lang;touchgfx::TextArea&rang;::~FadeAnimator()</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, cookingviewbase.o(i._ZN8touchgfx12FadeAnimatorINS_8TextAreaEED1Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = touchgfx::FadeAnimator&lang;touchgfx::TextArea&rang;::~FadeAnimator() &rArr; touchgfx::TextArea::~TextArea()
</UL>
<BR>[Calls]<UL><LI><a href="#[283]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextArea::~TextArea()
</UL>
<BR>[Called By]<UL><LI><a href="#[13a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CookingViewBase::~CookingViewBase()
<LI><a href="#[19c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SelectingMenuViewBase::~SelectingMenuViewBase()
<LI><a href="#[150]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SettingsViewBase::~SettingsViewBase()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> cookingviewbase.o(.constdata__ZTVN8touchgfx12FadeAnimatorINS_8TextAreaEEE)
</UL>
<P><STRONG><a name="[58e]"></a>touchgfx::FadeAnimator&lang;touchgfx::TextArea&rang;::~FadeAnimator__sub_object()</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, cookingviewbase.o(i._ZN8touchgfx12FadeAnimatorINS_8TextAreaEED1Ev), UNUSED)

<P><STRONG><a name="[46d]"></a>touchgfx::GestureEvent::GestureEvent(touchgfx::GestureEvent::GestureEventType, short, short, short)</STRONG> (Thumb, 18 bytes, Stack size 12 bytes, gestures.o(i._ZN8touchgfx12GestureEventC1ENS0_16GestureEventTypeEsss))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = touchgfx::GestureEvent::GestureEvent(touchgfx::GestureEvent::GestureEventType, short, short, short)
</UL>
<BR>[Called By]<UL><LI><a href="#[426]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Gestures::registerClickEvent(touchgfx::ClickEvent::ClickEventType, unsigned short, unsigned short)
</UL>

<P><STRONG><a name="[58f]"></a>touchgfx::GestureEvent::GestureEvent__sub_object(touchgfx::GestureEvent::GestureEventType, short, short, short)</STRONG> (Thumb, 0 bytes, Stack size 12 bytes, gestures.o(i._ZN8touchgfx12GestureEventC1ENS0_16GestureEventTypeEsss), UNUSED)

<P><STRONG><a name="[206]"></a>touchgfx::MoveAnimator&lang;touchgfx::Container&rang;::~MoveAnimator()</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, selectingmenuviewbase.o(i._ZN8touchgfx12MoveAnimatorINS_9ContainerEED1Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = touchgfx::MoveAnimator&lang;touchgfx::Container&rang;::~MoveAnimator()
</UL>
<BR>[Calls]<UL><LI><a href="#[284]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Container::~Container()
</UL>
<BR>[Called By]<UL><LI><a href="#[19c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SelectingMenuViewBase::~SelectingMenuViewBase()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> selectingmenuviewbase.o(.constdata__ZTVN8touchgfx12MoveAnimatorINS_9ContainerEEE)
</UL>
<P><STRONG><a name="[590]"></a>touchgfx::MoveAnimator&lang;touchgfx::Container&rang;::~MoveAnimator__sub_object()</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, selectingmenuviewbase.o(i._ZN8touchgfx12MoveAnimatorINS_9ContainerEED1Ev), UNUSED)

<P><STRONG><a name="[20f]"></a>touchgfx::NoTransition::handleTickEvent()</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, frontendapplicationbase.o(i._ZN8touchgfx12NoTransition15handleTickEventEv))
<BR>[Address Reference Count : 1]<UL><LI> frontendapplicationbase.o(.constdata__ZTVN8touchgfx12NoTransitionE)
</UL>
<P><STRONG><a name="[517]"></a>touchgfx::NoTransition::NoTransition()</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, frontendapplicationbase.o(i._ZN8touchgfx12NoTransitionC1Ev))
<BR><BR>[Called By]<UL><LI><a href="#[3b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;T2* touchgfx::makeTransition&lang;InformationDemoView, InformationDemoPresenter, touchgfx::NoTransition, Model&rang;(touchgfx::Screen**, touchgfx::Presenter**, touchgfx::MVPHeap&, touchgfx::Transition**, T4*)
<LI><a href="#[3b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;T2* touchgfx::makeTransition&lang;SelectingMenuView, SelectingMenuPresenter, touchgfx::NoTransition, Model&rang;(touchgfx::Screen**, touchgfx::Presenter**, touchgfx::MVPHeap&, touchgfx::Transition**, T4*)
<LI><a href="#[3b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;T2* touchgfx::makeTransition&lang;SplashScreenView, SplashScreenPresenter, touchgfx::NoTransition, Model&rang;(touchgfx::Screen**, touchgfx::Presenter**, touchgfx::MVPHeap&, touchgfx::Transition**, T4*)
<LI><a href="#[3b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;T2* touchgfx::makeTransition&lang;InformationView, InformationPresenter, touchgfx::NoTransition, Model&rang;(touchgfx::Screen**, touchgfx::Presenter**, touchgfx::MVPHeap&, touchgfx::Transition**, T4*)
<LI><a href="#[3b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;T2* touchgfx::makeTransition&lang;SettingsView, SettingsPresenter, touchgfx::NoTransition, Model&rang;(touchgfx::Screen**, touchgfx::Presenter**, touchgfx::MVPHeap&, touchgfx::Transition**, T4*)
<LI><a href="#[3b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;T2* touchgfx::makeTransition&lang;CookingView, CookingPresenter, touchgfx::NoTransition, Model&rang;(touchgfx::Screen**, touchgfx::Presenter**, touchgfx::MVPHeap&, touchgfx::Transition**, T4*)
</UL>

<P><STRONG><a name="[591]"></a>touchgfx::NoTransition::NoTransition__sub_object()</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, frontendapplicationbase.o(i._ZN8touchgfx12NoTransitionC1Ev), UNUSED)

<P><STRONG><a name="[20e]"></a>touchgfx::NoTransition::~NoTransition()</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, frontendapplicationbase.o(i._ZN8touchgfx12NoTransitionD1Ev))
<BR>[Address Reference Count : 1]<UL><LI> frontendapplicationbase.o(.constdata__ZTVN8touchgfx12NoTransitionE)
</UL>
<P><STRONG><a name="[592]"></a>touchgfx::NoTransition::~NoTransition__sub_object()</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, frontendapplicationbase.o(i._ZN8touchgfx12NoTransitionD1Ev), UNUSED)

<P><STRONG><a name="[3eb]"></a>touchgfx::TextProvider::initialize(const unsigned short*, const unsigned short*, const touchgfx::FontContextualFormsTable*, ...)</STRONG> (Thumb, 22 bytes, Stack size 32 bytes, textprovider.o(i._ZN8touchgfx12TextProvider10initializeEPKtS2_PKNS_24FontContextualFormsTableEz))
<BR><BR>[Stack]<UL><LI>Max Depth = 120 + Unknown Stack Size
<LI>Call Chain = touchgfx::TextProvider::initialize(const unsigned short*, const unsigned short*, const touchgfx::FontContextualFormsTable*, ...) &rArr; touchgfx::TextProvider::initialize(const unsigned short*, std::__va_list, const unsigned short*, const touchgfx::FontContextualFormsTable*) &rArr; touchgfx::TextProvider::initializeInternal() &rArr; touchgfx::TextProvider::fillInputBuffer() &rArr; touchgfx::TextProvider::circularBuffer&lang;(unsigned)10&rang;::pushBack(unsigned short) &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[3ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextProvider::initialize(const unsigned short*, std::__va_list, const unsigned short*, const touchgfx::FontContextualFormsTable*)
</UL>
<BR>[Called By]<UL><LI><a href="#[205]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextArea::calculateBoundingArea() const
</UL>

<P><STRONG><a name="[3ec]"></a>touchgfx::TextProvider::initialize(const unsigned short*, std::__va_list, const unsigned short*, const touchgfx::FontContextualFormsTable*)</STRONG> (Thumb, 42 bytes, Stack size 8 bytes, textprovider.o(i._ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE))
<BR><BR>[Stack]<UL><LI>Max Depth = 88 + Unknown Stack Size
<LI>Call Chain = touchgfx::TextProvider::initialize(const unsigned short*, std::__va_list, const unsigned short*, const touchgfx::FontContextualFormsTable*) &rArr; touchgfx::TextProvider::initializeInternal() &rArr; touchgfx::TextProvider::fillInputBuffer() &rArr; touchgfx::TextProvider::circularBuffer&lang;(unsigned)10&rang;::pushBack(unsigned short) &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[3ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextProvider::initializeInternal()
</UL>
<BR>[Called By]<UL><LI><a href="#[1ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextArea::calculateTextHeight(const unsigned short*, ...) const
<LI><a href="#[4a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Font::getStringWidthLTR(unsigned char, const unsigned short*, std::__va_list) const
<LI><a href="#[429]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD::drawStringLTR(const touchgfx::Rect&, const touchgfx::Rect&, const touchgfx::LCD::StringVisuals&, const unsigned short*, std::__va_list)
<LI><a href="#[3eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextProvider::initialize(const unsigned short*, const unsigned short*, const touchgfx::FontContextualFormsTable*, ...)
</UL>

<P><STRONG><a name="[3ee]"></a>touchgfx::TextProvider::adjustGlyph(unsigned short, unsigned short, const touchgfx::GlyphNode*&, const touchgfx::Font*)</STRONG> (Thumb, 98 bytes, Stack size 16 bytes, textprovider.o(i._ZN8touchgfx12TextProvider11adjustGlyphEttRPKNS_9GlyphNodeEPKNS_4FontE))
<BR><BR>[Stack]<UL><LI>Max Depth = 128 + Unknown Stack Size
<LI>Call Chain = touchgfx::TextProvider::adjustGlyph(unsigned short, unsigned short, const touchgfx::GlyphNode*&, const touchgfx::Font*) &rArr; touchgfx::TextProvider::adjustThaiGlyph(const touchgfx::Font*, const touchgfx::GlyphNode*) &rArr; touchgfx::TextProvider::circularBuffer&lang;(unsigned)10&rang;::peekChar() &rArr; __aeabi_assert &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[3f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::GlyphNode::advance() const
<LI><a href="#[3ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextProvider::adjustArabicGlyph(const touchgfx::Font*, const touchgfx::GlyphNode*, unsigned short)
<LI><a href="#[3f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextProvider::adjustHindiGlyph(const touchgfx::GlyphNode*)
<LI><a href="#[3f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextProvider::adjustThaiGlyph(const touchgfx::Font*, const touchgfx::GlyphNode*)
</UL>
<BR>[Called By]<UL><LI><a href="#[405]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextProvider::getNextLigature(unsigned char, const touchgfx::Font*, const touchgfx::GlyphNode*&, const unsigned char*&, unsigned char&)
<LI><a href="#[404]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextProvider::getNextLigature(unsigned char, const touchgfx::Font*, const touchgfx::GlyphNode*&)
</UL>

<P><STRONG><a name="[3f3]"></a>touchgfx::TextProvider::endOfString()</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, textprovider.o(i._ZN8touchgfx12TextProvider11endOfStringEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 80 + Unknown Stack Size
<LI>Call Chain = touchgfx::TextProvider::endOfString() &rArr; touchgfx::TextProvider::circularBuffer&lang;(unsigned)10&rang;::peekChar() &rArr; __aeabi_assert &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[3f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextProvider::circularBuffer&lang;(unsigned)10&rang;::peekChar()
</UL>
<BR>[Called By]<UL><LI><a href="#[205]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextArea::calculateBoundingArea() const
</UL>

<P><STRONG><a name="[3f5]"></a>touchgfx::TextProvider::getNextChar()</STRONG> (Thumb, 84 bytes, Stack size 16 bytes, textprovider.o(i._ZN8touchgfx12TextProvider11getNextCharEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 88 + Unknown Stack Size
<LI>Call Chain = touchgfx::TextProvider::getNextChar() &rArr; touchgfx::TextProvider::fillInputBuffer() &rArr; touchgfx::TextProvider::circularBuffer&lang;(unsigned)10&rang;::pushBack(unsigned short) &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[3f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextProvider::fillInputBuffer()
<LI><a href="#[2ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;abort
</UL>
<BR>[Called By]<UL><LI><a href="#[402]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextProvider::getNextLigature(unsigned char)
<LI><a href="#[429]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD::drawStringLTR(const touchgfx::Rect&, const touchgfx::Rect&, const touchgfx::LCD::StringVisuals&, const unsigned short*, std::__va_list)
<LI><a href="#[42b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD::getNumLines(touchgfx::TextProvider&, touchgfx::WideTextAction, unsigned char, const touchgfx::Font*, short)
</UL>

<P><STRONG><a name="[3f7]"></a>touchgfx::TextProvider::gsubRuleMatch(const unsigned short*, unsigned short, unsigned short, unsigned short)</STRONG> (Thumb, 116 bytes, Stack size 32 bytes, textprovider.o(i._ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt))
<BR><BR>[Stack]<UL><LI>Max Depth = 88 + Unknown Stack Size
<LI>Call Chain = touchgfx::TextProvider::gsubRuleMatch(const unsigned short*, unsigned short, unsigned short, unsigned short) &rArr; touchgfx::TextProvider::circularBuffer&lang;(unsigned)10&rang;::peekChar(unsigned short) &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[3f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextProvider::circularBuffer&lang;(unsigned)10&rang;::peekChar(unsigned short)
<LI><a href="#[2ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;abort
</UL>
<BR>[Called By]<UL><LI><a href="#[3f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextProvider::applyGsubRules(const unsigned short*, unsigned short)
</UL>

<P><STRONG><a name="[3f9]"></a>touchgfx::TextProvider::applyGsubRules(const unsigned short*, unsigned short)</STRONG> (Thumb, 98 bytes, Stack size 40 bytes, textprovider.o(i._ZN8touchgfx12TextProvider14applyGsubRulesEPKtt))
<BR><BR>[Stack]<UL><LI>Max Depth = 152 + Unknown Stack Size
<LI>Call Chain = touchgfx::TextProvider::applyGsubRules(const unsigned short*, unsigned short) &rArr; touchgfx::TextProvider::replaceInputCharacters(unsigned short, unsigned short, const unsigned short*) &rArr; touchgfx::TextProvider::fillInputBuffer() &rArr; touchgfx::TextProvider::circularBuffer&lang;(unsigned)10&rang;::pushBack(unsigned short) &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[3fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextProvider::replaceInputCharacters(unsigned short, unsigned short, const unsigned short*)
<LI><a href="#[3f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextProvider::gsubRuleMatch(const unsigned short*, unsigned short, unsigned short, unsigned short)
</UL>
<BR>[Called By]<UL><LI><a href="#[403]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextProvider::substituteGlyphs()
</UL>

<P><STRONG><a name="[3f0]"></a>touchgfx::TextProvider::adjustThaiGlyph(const touchgfx::Font*, const touchgfx::GlyphNode*)</STRONG> (Thumb, 378 bytes, Stack size 40 bytes, textprovider.o(i._ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE))
<BR><BR>[Stack]<UL><LI>Max Depth = 112 + Unknown Stack Size
<LI>Call Chain = touchgfx::TextProvider::adjustThaiGlyph(const touchgfx::Font*, const touchgfx::GlyphNode*) &rArr; touchgfx::TextProvider::circularBuffer&lang;(unsigned)10&rang;::peekChar() &rArr; __aeabi_assert &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[3f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextProvider::circularBuffer&lang;(unsigned)10&rang;::peekChar()
<LI><a href="#[3f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::GlyphNode::advance() const
<LI><a href="#[3fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::GlyphNode::top() const
<LI><a href="#[3fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextProvider::thaiLookupGlyph(const touchgfx::GlyphNode*, const touchgfx::Font*, unsigned short) const
<LI><a href="#[3fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::GlyphNode::setTop(short)
<LI><a href="#[3fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[3ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextProvider::adjustGlyph(unsigned short, unsigned short, const touchgfx::GlyphNode*&, const touchgfx::Font*)
</UL>

<P><STRONG><a name="[3f6]"></a>touchgfx::TextProvider::fillInputBuffer()</STRONG> (Thumb, 98 bytes, Stack size 16 bytes, textprovider.o(i._ZN8touchgfx12TextProvider15fillInputBufferEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 72 + Unknown Stack Size
<LI>Call Chain = touchgfx::TextProvider::fillInputBuffer() &rArr; touchgfx::TextProvider::circularBuffer&lang;(unsigned)10&rang;::pushBack(unsigned short) &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[400]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextProvider::circularBuffer&lang;(unsigned)10&rang;::isFull() const
<LI><a href="#[3ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextProvider::circularBuffer&lang;(unsigned)10&rang;::pushBack(unsigned short)
<LI><a href="#[401]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextProvider::getNextCharInternal()
<LI><a href="#[2ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;abort
</UL>
<BR>[Called By]<UL><LI><a href="#[3f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextProvider::getNextChar()
<LI><a href="#[3ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextProvider::initializeInternal()
<LI><a href="#[3fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextProvider::replaceInputCharacters(unsigned short, unsigned short, const unsigned short*)
</UL>

<P><STRONG><a name="[402]"></a>touchgfx::TextProvider::getNextLigature(unsigned char)</STRONG> (Thumb, 168 bytes, Stack size 24 bytes, texts.o(i._ZN8touchgfx12TextProvider15getNextLigatureEh))
<BR><BR>[Stack]<UL><LI>Max Depth = 208 + Unknown Stack Size
<LI>Call Chain = touchgfx::TextProvider::getNextLigature(unsigned char) &rArr; touchgfx::TextProvider::substituteGlyphs() &rArr; touchgfx::TextProvider::applyGsubRules(const unsigned short*, unsigned short) &rArr; touchgfx::TextProvider::replaceInputCharacters(unsigned short, unsigned short, const unsigned short*) &rArr; touchgfx::TextProvider::fillInputBuffer() &rArr; touchgfx::TextProvider::circularBuffer&lang;(unsigned)10&rang;::pushBack(unsigned short) &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[403]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextProvider::substituteGlyphs()
<LI><a href="#[3f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextProvider::getNextChar()
<LI><a href="#[3f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextProvider::circularBuffer&lang;(unsigned)10&rang;::peekChar()
<LI><a href="#[2b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_assert
</UL>
<BR>[Called By]<UL><LI><a href="#[429]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD::drawStringLTR(const touchgfx::Rect&, const touchgfx::Rect&, const touchgfx::LCD::StringVisuals&, const unsigned short*, std::__va_list)
<LI><a href="#[405]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextProvider::getNextLigature(unsigned char, const touchgfx::Font*, const touchgfx::GlyphNode*&, const unsigned char*&, unsigned char&)
<LI><a href="#[430]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD::drawStringInternal(unsigned short*, const touchgfx::Rect*, short, short, const touchgfx::Rect&, const touchgfx::LCD::StringVisuals*, unsigned char, touchgfx::TextProvider&, int, bool)
<LI><a href="#[404]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextProvider::getNextLigature(unsigned char, const touchgfx::Font*, const touchgfx::GlyphNode*&)
</UL>

<P><STRONG><a name="[404]"></a>touchgfx::TextProvider::getNextLigature(unsigned char, const touchgfx::Font*, const touchgfx::GlyphNode*&)</STRONG> (Thumb, 70 bytes, Stack size 32 bytes, textprovider.o(i._ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE))
<BR><BR>[Stack]<UL><LI>Max Depth = 240 + Unknown Stack Size
<LI>Call Chain = touchgfx::TextProvider::getNextLigature(unsigned char, const touchgfx::Font*, const touchgfx::GlyphNode*&) &rArr; touchgfx::TextProvider::getNextLigature(unsigned char) &rArr; touchgfx::TextProvider::substituteGlyphs() &rArr; touchgfx::TextProvider::applyGsubRules(const unsigned short*, unsigned short) &rArr; touchgfx::TextProvider::replaceInputCharacters(unsigned short, unsigned short, const unsigned short*) &rArr; touchgfx::TextProvider::fillInputBuffer() &rArr; touchgfx::TextProvider::circularBuffer&lang;(unsigned)10&rang;::pushBack(unsigned short) &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[402]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextProvider::getNextLigature(unsigned char)
<LI><a href="#[3f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextProvider::circularBuffer&lang;(unsigned)10&rang;::peekChar()
<LI><a href="#[3ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextProvider::adjustGlyph(unsigned short, unsigned short, const touchgfx::GlyphNode*&, const touchgfx::Font*)
</UL>
<BR>[Called By]<UL><LI><a href="#[4a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Font::getStringWidthLTR(unsigned char, const unsigned short*, std::__va_list) const
<LI><a href="#[42d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD::WideTextInternalStruct::scanStringLengthForLine()
<LI><a href="#[42e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD::stringWidth(touchgfx::TextProvider&, const touchgfx::Font&, int, unsigned char)
</UL>

<P><STRONG><a name="[405]"></a>touchgfx::TextProvider::getNextLigature(unsigned char, const touchgfx::Font*, const touchgfx::GlyphNode*&, const unsigned char*&, unsigned char&)</STRONG> (Thumb, 80 bytes, Stack size 40 bytes, textprovider.o(i._ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh))
<BR><BR>[Stack]<UL><LI>Max Depth = 248 + Unknown Stack Size
<LI>Call Chain = touchgfx::TextProvider::getNextLigature(unsigned char, const touchgfx::Font*, const touchgfx::GlyphNode*&, const unsigned char*&, unsigned char&) &rArr; touchgfx::TextProvider::getNextLigature(unsigned char) &rArr; touchgfx::TextProvider::substituteGlyphs() &rArr; touchgfx::TextProvider::applyGsubRules(const unsigned short*, unsigned short) &rArr; touchgfx::TextProvider::replaceInputCharacters(unsigned short, unsigned short, const unsigned short*) &rArr; touchgfx::TextProvider::fillInputBuffer() &rArr; touchgfx::TextProvider::circularBuffer&lang;(unsigned)10&rang;::pushBack(unsigned short) &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[402]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextProvider::getNextLigature(unsigned char)
<LI><a href="#[3f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextProvider::circularBuffer&lang;(unsigned)10&rang;::peekChar()
<LI><a href="#[3ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextProvider::adjustGlyph(unsigned short, unsigned short, const touchgfx::GlyphNode*&, const touchgfx::Font*)
</UL>
<BR>[Called By]<UL><LI><a href="#[430]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD::drawStringInternal(unsigned short*, const touchgfx::Rect*, short, short, const touchgfx::Rect&, const touchgfx::LCD::StringVisuals*, unsigned char, touchgfx::TextProvider&, int, bool)
</UL>

<P><STRONG><a name="[3f1]"></a>touchgfx::TextProvider::adjustHindiGlyph(const touchgfx::GlyphNode*)</STRONG> (Thumb, 38 bytes, Stack size 16 bytes, textprovider.o(i._ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = touchgfx::TextProvider::adjustHindiGlyph(const touchgfx::GlyphNode*)
</UL>
<BR>[Calls]<UL><LI><a href="#[406]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::GlyphNode::width() const
<LI><a href="#[3fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[3ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextProvider::adjustGlyph(unsigned short, unsigned short, const touchgfx::GlyphNode*&, const touchgfx::Font*)
</UL>

<P><STRONG><a name="[403]"></a>touchgfx::TextProvider::substituteGlyphs()</STRONG> (Thumb, 74 bytes, Stack size 32 bytes, textprovider.o(i._ZN8touchgfx12TextProvider16substituteGlyphsEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 184 + Unknown Stack Size
<LI>Call Chain = touchgfx::TextProvider::substituteGlyphs() &rArr; touchgfx::TextProvider::applyGsubRules(const unsigned short*, unsigned short) &rArr; touchgfx::TextProvider::replaceInputCharacters(unsigned short, unsigned short, const unsigned short*) &rArr; touchgfx::TextProvider::fillInputBuffer() &rArr; touchgfx::TextProvider::circularBuffer&lang;(unsigned)10&rang;::pushBack(unsigned short) &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[3f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextProvider::circularBuffer&lang;(unsigned)10&rang;::peekChar()
<LI><a href="#[407]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextProvider::gsubTableBinarySearch(unsigned short, const unsigned short*, unsigned short) const
<LI><a href="#[3f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextProvider::applyGsubRules(const unsigned short*, unsigned short)
</UL>
<BR>[Called By]<UL><LI><a href="#[402]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextProvider::getNextLigature(unsigned char)
</UL>

<P><STRONG><a name="[3ef]"></a>touchgfx::TextProvider::adjustArabicGlyph(const touchgfx::Font*, const touchgfx::GlyphNode*, unsigned short)</STRONG> (Thumb, 598 bytes, Stack size 32 bytes, textprovider.o(i._ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = touchgfx::TextProvider::adjustArabicGlyph(const touchgfx::Font*, const touchgfx::GlyphNode*, unsigned short)
</UL>
<BR>[Calls]<UL><LI><a href="#[406]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::GlyphNode::width() const
<LI><a href="#[3fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::GlyphNode::top() const
<LI><a href="#[3fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::GlyphNode::setTop(short)
<LI><a href="#[3fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[3ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextProvider::adjustGlyph(unsigned short, unsigned short, const touchgfx::GlyphNode*&, const touchgfx::Font*)
</UL>

<P><STRONG><a name="[3ed]"></a>touchgfx::TextProvider::initializeInternal()</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, texts.o(i._ZN8touchgfx12TextProvider18initializeInternalEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 80 + Unknown Stack Size
<LI>Call Chain = touchgfx::TextProvider::initializeInternal() &rArr; touchgfx::TextProvider::fillInputBuffer() &rArr; touchgfx::TextProvider::circularBuffer&lang;(unsigned)10&rang;::pushBack(unsigned short) &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[3f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextProvider::fillInputBuffer()
</UL>
<BR>[Called By]<UL><LI><a href="#[409]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextProvider::TextProvider()
<LI><a href="#[3ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextProvider::initialize(const unsigned short*, std::__va_list, const unsigned short*, const touchgfx::FontContextualFormsTable*)
</UL>

<P><STRONG><a name="[401]"></a>touchgfx::TextProvider::getNextCharInternal()</STRONG> (Thumb, 96 bytes, Stack size 0 bytes, textprovider.o(i._ZN8touchgfx12TextProvider19getNextCharInternalEv))
<BR><BR>[Calls]<UL><LI><a href="#[401]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextProvider::getNextCharInternal()
</UL>
<BR>[Called By]<UL><LI><a href="#[3f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextProvider::fillInputBuffer()
<LI><a href="#[401]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextProvider::getNextCharInternal()
</UL>

<P><STRONG><a name="[3fa]"></a>touchgfx::TextProvider::replaceInputCharacters(unsigned short, unsigned short, const unsigned short*)</STRONG> (Thumb, 162 bytes, Stack size 40 bytes, textprovider.o(i._ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt))
<BR><BR>[Stack]<UL><LI>Max Depth = 112 + Unknown Stack Size
<LI>Call Chain = touchgfx::TextProvider::replaceInputCharacters(unsigned short, unsigned short, const unsigned short*) &rArr; touchgfx::TextProvider::fillInputBuffer() &rArr; touchgfx::TextProvider::circularBuffer&lang;(unsigned)10&rang;::pushBack(unsigned short) &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[3f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextProvider::fillInputBuffer()
<LI><a href="#[408]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextProvider::circularBuffer&lang;(unsigned)10&rang;::dropFront(unsigned short)
<LI><a href="#[3f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextProvider::circularBuffer&lang;(unsigned)10&rang;::peekChar(unsigned short)
<LI><a href="#[2ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;abort
</UL>
<BR>[Called By]<UL><LI><a href="#[3f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextProvider::applyGsubRules(const unsigned short*, unsigned short)
</UL>

<P><STRONG><a name="[409]"></a>touchgfx::TextProvider::TextProvider()</STRONG> (Thumb, 78 bytes, Stack size 16 bytes, textprovider.o(i._ZN8touchgfx12TextProviderC1Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 96 + Unknown Stack Size
<LI>Call Chain = touchgfx::TextProvider::TextProvider() &rArr; touchgfx::TextProvider::initializeInternal() &rArr; touchgfx::TextProvider::fillInputBuffer() &rArr; touchgfx::TextProvider::circularBuffer&lang;(unsigned)10&rang;::pushBack(unsigned short) &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[3ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextProvider::initializeInternal()
<LI><a href="#[2d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[205]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextArea::calculateBoundingArea() const
<LI><a href="#[1ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextArea::calculateTextHeight(const unsigned short*, ...) const
<LI><a href="#[4a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Font::getStringWidthLTR(unsigned char, const unsigned short*, std::__va_list) const
<LI><a href="#[429]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD::drawStringLTR(const touchgfx::Rect&, const touchgfx::Rect&, const touchgfx::LCD::StringVisuals&, const unsigned short*, std::__va_list)
</UL>

<P><STRONG><a name="[593]"></a>touchgfx::TextProvider::TextProvider__sub_object()</STRONG> (Thumb, 0 bytes, Stack size 16 bytes, textprovider.o(i._ZN8touchgfx12TextProviderC1Ev), UNUSED)

<P><STRONG><a name="[1b7]"></a>touchgfx::DMA_Interface::addToQueue(const touchgfx::BlitOp&)</STRONG> (Thumb, 70 bytes, Stack size 16 bytes, dma.o(i._ZN8touchgfx13DMA_Interface10addToQueueERKNS_6BlitOpE))
<BR><BR>[Stack]<UL><LI>Max Depth = 136<LI>Call Chain = touchgfx::DMA_Interface::addToQueue(const touchgfx::BlitOp&) &rArr; touchgfx::OSWrappers::tryTakeFrameBufferSemaphore() &rArr; osSemaphoreAcquire &rArr; xQueueSemaphoreTake &rArr; vTaskPlaceOnEventList &rArr; prvAddCurrentTaskToDelayedList &rArr; vListInsert
</UL>
<BR>[Calls]<UL><LI><a href="#[3ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::OSWrappers::tryTakeFrameBufferSemaphore()
<LI><a href="#[40a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::HAL::setRenderingMethod(touchgfx::HAL::RenderingMethod)
</UL>
<BR>[Address Reference Count : 2]<UL><LI> stm32dma.o(.constdata__ZTV8STM32DMA)
<LI> dma.o(.constdata__ZTVN8touchgfx13DMA_InterfaceE)
</UL>
<P><STRONG><a name="[1bb]"></a>touchgfx::DMA_Interface::getDMAType()</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, stm32dma.o(i._ZN8touchgfx13DMA_Interface10getDMATypeEv))
<BR>[Address Reference Count : 2]<UL><LI> stm32dma.o(.constdata__ZTV8STM32DMA)
<LI> dma.o(.constdata__ZTVN8touchgfx13DMA_InterfaceE)
</UL>
<P><STRONG><a name="[1b9]"></a>touchgfx::DMA_Interface::initialize()</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32dma.o(i._ZN8touchgfx13DMA_Interface10initializeEv))
<BR>[Address Reference Count : 2]<UL><LI> stm32dma.o(.constdata__ZTV8STM32DMA)
<LI> dma.o(.constdata__ZTVN8touchgfx13DMA_InterfaceE)
</UL>
<P><STRONG><a name="[1c0]"></a>touchgfx::DMA_Interface::enableAlpha(unsigned char)</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, dma.o(i._ZN8touchgfx13DMA_Interface11enableAlphaEh))
<BR>[Address Reference Count : 2]<UL><LI> stm32dma.o(.constdata__ZTV8STM32DMA)
<LI> dma.o(.constdata__ZTVN8touchgfx13DMA_InterfaceE)
</UL>
<P><STRONG><a name="[1c1]"></a>touchgfx::DMA_Interface::disableAlpha()</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, dma.o(i._ZN8touchgfx13DMA_Interface12disableAlphaEv))
<BR>[Address Reference Count : 2]<UL><LI> stm32dma.o(.constdata__ZTV8STM32DMA)
<LI> dma.o(.constdata__ZTVN8touchgfx13DMA_InterfaceE)
</UL>
<P><STRONG><a name="[1bd]"></a>touchgfx::DMA_Interface::seedExecution()</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, dma.o(i._ZN8touchgfx13DMA_Interface13seedExecutionEv))
<BR>[Address Reference Count : 2]<UL><LI> stm32dma.o(.constdata__ZTV8STM32DMA)
<LI> dma.o(.constdata__ZTVN8touchgfx13DMA_InterfaceE)
</UL>
<P><STRONG><a name="[41f]"></a>touchgfx::DMA_Interface::isDmaQueueEmpty()</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, dma.o(i._ZN8touchgfx13DMA_Interface15isDmaQueueEmptyEv))
<BR><BR>[Called By]<UL><LI><a href="#[107]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::HAL::lockFrameBuffer()
</UL>

<P><STRONG><a name="[1c2]"></a>touchgfx::DMA_Interface::waitForFrameBufferSemaphore()</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, dma.o(i._ZN8touchgfx13DMA_Interface27waitForFrameBufferSemaphoreEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 144<LI>Call Chain = touchgfx::DMA_Interface::waitForFrameBufferSemaphore() &rArr; touchgfx::OSWrappers::giveFrameBufferSemaphore() &rArr; osSemaphoreRelease &rArr; xQueueGenericSend &rArr; vTaskPlaceOnEventList &rArr; prvAddCurrentTaskToDelayedList &rArr; vListInsert
</UL>
<BR>[Calls]<UL><LI><a href="#[3c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::OSWrappers::takeFrameBufferSemaphore()
<LI><a href="#[3c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::OSWrappers::giveFrameBufferSemaphore()
</UL>
<BR>[Address Reference Count : 2]<UL><LI> stm32dma.o(.constdata__ZTV8STM32DMA)
<LI> dma.o(.constdata__ZTVN8touchgfx13DMA_InterfaceE)
</UL>
<P><STRONG><a name="[213]"></a>touchgfx::DMA_Interface::flush()</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, dma.o(i._ZN8touchgfx13DMA_Interface5flushEv))
<BR>[Address Reference Count : 1]<UL><LI> dma.o(.constdata__ZTVN8touchgfx13DMA_InterfaceE)
</UL>
<P><STRONG><a name="[1ba]"></a>touchgfx::DMA_Interface::start()</STRONG> (Thumb, 42 bytes, Stack size 8 bytes, dma.o(i._ZN8touchgfx13DMA_Interface5startEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = touchgfx::DMA_Interface::start()
</UL>
<BR>[Address Reference Count : 2]<UL><LI> stm32dma.o(.constdata__ZTV8STM32DMA)
<LI> dma.o(.constdata__ZTVN8touchgfx13DMA_InterfaceE)
</UL>
<P><STRONG><a name="[1bc]"></a>touchgfx::DMA_Interface::execute()</STRONG> (Thumb, 148 bytes, Stack size 16 bytes, dma.o(i._ZN8touchgfx13DMA_Interface7executeEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 64 + Unknown Stack Size
<LI>Call Chain = touchgfx::DMA_Interface::execute() &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[2ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;abort
</UL>
<BR>[Address Reference Count : 2]<UL><LI> stm32dma.o(.constdata__ZTV8STM32DMA)
<LI> dma.o(.constdata__ZTVN8touchgfx13DMA_InterfaceE)
</UL>
<P><STRONG><a name="[323]"></a>touchgfx::GeneratedFont::GeneratedFont(const touchgfx::GlyphNode*, unsigned short, unsigned short, unsigned short, unsigned char, unsigned char, unsigned char, unsigned char, unsigned char, unsigned char, const unsigned char*const *, const touchgfx::KerningNode*, unsigned short, unsigned short, const unsigned short*, const touchgfx::FontContextualFormsTable*)</STRONG> (Thumb, 66 bytes, Stack size 88 bytes, generatedfont.o(i._ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEttthhhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE))
<BR><BR>[Stack]<UL><LI>Max Depth = 124<LI>Call Chain = touchgfx::GeneratedFont::GeneratedFont(const touchgfx::GlyphNode*, unsigned short, unsigned short, unsigned short, unsigned char, unsigned char, unsigned char, unsigned char, unsigned char, unsigned char, const unsigned char*const *, const touchgfx::KerningNode*, unsigned short, unsigned short, const unsigned short*, const touchgfx::FontContextualFormsTable*) &rArr; touchgfx::ConstFont::ConstFont__sub_object(const touchgfx::GlyphNode*, unsigned short, unsigned short, unsigned short, unsigned char, unsigned char, unsigned char, unsigned char, unsigned char, unsigned char, unsigned short, unsigned short)
</UL>
<BR>[Calls]<UL><LI><a href="#[40b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::ConstFont::ConstFont__sub_object(const touchgfx::GlyphNode*, unsigned short, unsigned short, unsigned short, unsigned char, unsigned char, unsigned char, unsigned char, unsigned char, unsigned char, unsigned short, unsigned short)
</UL>
<BR>[Called By]<UL><LI><a href="#[32f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getFont_Nanum_Gothic_Bold_700_28_4bpp()
<LI><a href="#[32e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getFont_Nanum_Gothic_Bold_700_25_4bpp()
<LI><a href="#[32d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getFont_Nanum_Gothic_Bold_700_14_4bpp()
<LI><a href="#[32c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getFont_GommeSansW04Bold_30_4bpp()
<LI><a href="#[32b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getFont_GommeSansW04Bold_28_4bpp()
<LI><a href="#[32a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getFont_GommeSansW04Bold_25_4bpp()
<LI><a href="#[329]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getFont_GommeSansW04Bold_24_4bpp()
<LI><a href="#[328]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getFont_GommeSansW04Bold_20_4bpp()
<LI><a href="#[327]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getFont_GommeSansW04Bold_14_4bpp()
<LI><a href="#[321]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getFont_GILB_____TTF_24_4bpp()
<LI><a href="#[326]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getFont_chinese_msyh_28_4bpp()
<LI><a href="#[325]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getFont_chinese_msyh_25_4bpp()
<LI><a href="#[324]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getFont_chinese_msyh_14_4bpp()
</UL>

<P><STRONG><a name="[594]"></a>touchgfx::GeneratedFont::GeneratedFont__sub_object(const touchgfx::GlyphNode*, unsigned short, unsigned short, unsigned short, unsigned char, unsigned char, unsigned char, unsigned char, unsigned char, unsigned char, const unsigned char*const *, const touchgfx::KerningNode*, unsigned short, unsigned short, const unsigned short*, const touchgfx::FontContextualFormsTable*)</STRONG> (Thumb, 0 bytes, Stack size 88 bytes, generatedfont.o(i._ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEttthhhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE), UNUSED)

<P><STRONG><a name="[b0]"></a>touchgfx::GeneratedFont::~GeneratedFont()</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, generatedfont.o(i._ZN8touchgfx13GeneratedFontD1Ev))
<BR>[Address Reference Count : 14]<UL><LI> generatedfont.o(.constdata__ZTVN8touchgfx13GeneratedFontE)
<LI> table_gommesansw04bold_20_4bpp.o(i._Z32getFont_GommeSansW04Bold_20_4bppv)
<LI> table_gommesansw04bold_24_4bpp.o(i._Z32getFont_GommeSansW04Bold_24_4bppv)
<LI> table_gommesansw04bold_25_4bpp.o(i._Z32getFont_GommeSansW04Bold_25_4bppv)
<LI> table_gommesansw04bold_28_4bpp.o(i._Z32getFont_GommeSansW04Bold_28_4bppv)
<LI> table_gommesansw04bold_30_4bpp.o(i._Z32getFont_GommeSansW04Bold_30_4bppv)
<LI> table_nanum_gothic_bold_700_14_4bpp.o(i._Z37getFont_Nanum_Gothic_Bold_700_14_4bppv)
<LI> table_gilb_____ttf_24_4bpp.o(i._Z28getFont_GILB_____TTF_24_4bppv)
<LI> table_chinese_msyh_14_4bpp.o(i._Z28getFont_chinese_msyh_14_4bppv)
<LI> table_gommesansw04bold_14_4bpp.o(i._Z32getFont_GommeSansW04Bold_14_4bppv)
<LI> table_chinese_msyh_25_4bpp.o(i._Z28getFont_chinese_msyh_25_4bppv)
<LI> table_chinese_msyh_28_4bpp.o(i._Z28getFont_chinese_msyh_28_4bppv)
<LI> table_nanum_gothic_bold_700_28_4bpp.o(i._Z37getFont_Nanum_Gothic_Bold_700_28_4bppv)
<LI> table_nanum_gothic_bold_700_25_4bpp.o(i._Z37getFont_Nanum_Gothic_Bold_700_25_4bppv)
</UL>
<P><STRONG><a name="[595]"></a>touchgfx::GeneratedFont::~GeneratedFont__sub_object()</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, generatedfont.o(i._ZN8touchgfx13GeneratedFontD1Ev), UNUSED)

<P><STRONG><a name="[36f]"></a>touchgfx::PainterRGB565::PainterRGB565(touchgfx::colortype)</STRONG> (Thumb, 102 bytes, Stack size 24 bytes, cookingviewbase.o(i._ZN8touchgfx13PainterRGB565C1ENS_9colortypeE))
<BR><BR>[Stack]<UL><LI>Max Depth = 88 + Unknown Stack Size
<LI>Call Chain = touchgfx::PainterRGB565::PainterRGB565(touchgfx::colortype) &rArr; __aeabi_assert &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[232]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::AbstractPainterColor::setColor(touchgfx::colortype)
<LI><a href="#[40c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::AbstractPainter::compatibleFramebuffer(touchgfx::Bitmap::BitmapFormat)
<LI><a href="#[2b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_assert
</UL>
<BR>[Called By]<UL><LI><a href="#[349]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CookingViewBase::CookingViewBase()
</UL>

<P><STRONG><a name="[596]"></a>touchgfx::PainterRGB565::PainterRGB565__sub_object(touchgfx::colortype)</STRONG> (Thumb, 0 bytes, Stack size 24 bytes, cookingviewbase.o(i._ZN8touchgfx13PainterRGB565C1ENS_9colortypeE), UNUSED)

<P><STRONG><a name="[1fd]"></a>touchgfx::AbstractButton::executeAction()</STRONG> (Thumb, 30 bytes, Stack size 8 bytes, cookingviewbase.o(i._ZN8touchgfx14AbstractButton13executeActionEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = touchgfx::AbstractButton::executeAction()
</UL>
<BR>[Address Reference Count : 3]<UL><LI> cookingviewbase.o(.constdata__ZTVN8touchgfx12FadeAnimatorINS_6ButtonEEE)
<LI> abstractbutton.o(.constdata__ZTVN8touchgfx14AbstractButtonE)
<LI> button.o(.constdata__ZTVN8touchgfx6ButtonE)
</UL>
<P><STRONG><a name="[1fb]"></a>touchgfx::AbstractButton::handleClickEvent(const touchgfx::ClickEvent&)</STRONG> (Thumb, 66 bytes, Stack size 16 bytes, abstractbutton.o(i._ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = touchgfx::AbstractButton::handleClickEvent(const touchgfx::ClickEvent&)
</UL>
<BR>[Address Reference Count : 3]<UL><LI> cookingviewbase.o(.constdata__ZTVN8touchgfx12FadeAnimatorINS_6ButtonEEE)
<LI> abstractbutton.o(.constdata__ZTVN8touchgfx14AbstractButtonE)
<LI> button.o(.constdata__ZTVN8touchgfx6ButtonE)
</UL>
<P><STRONG><a name="[375]"></a>touchgfx::AbstractButton::setAction(touchgfx::GenericCallback&lang;const touchgfx::AbstractButton&, void, void&rang;&)</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, cookingviewbase.o(i._ZN8touchgfx14AbstractButton9setActionERNS_15GenericCallbackIRKS0_vvEE))
<BR><BR>[Called By]<UL><LI><a href="#[349]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CookingViewBase::CookingViewBase()
<LI><a href="#[3a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SelectingMenuViewBase::SelectingMenuViewBase()
<LI><a href="#[362]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SettingsViewBase::SettingsViewBase()
</UL>

<P><STRONG><a name="[17a]"></a>touchgfx::MVPApplication::handlePendingScreenTransition()</STRONG> (Thumb, 44 bytes, Stack size 8 bytes, touchgfxconfiguration.o(i._ZN8touchgfx14MVPApplication29handlePendingScreenTransitionEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = touchgfx::MVPApplication::handlePendingScreenTransition()
</UL>
<BR>[Address Reference Count : 3]<UL><LI> touchgfxconfiguration.o(.constdata__ZTV23FrontendApplicationBase)
<LI> frontendapplication.o(.constdata__ZTV19FrontendApplication)
<LI> frontendapplicationbase.o(.constdata__ZTVN8touchgfx14MVPApplicationE)
</UL>
<P><STRONG><a name="[40c]"></a>touchgfx::AbstractPainter::compatibleFramebuffer(touchgfx::Bitmap::BitmapFormat)</STRONG> (Thumb, 110 bytes, Stack size 24 bytes, cookingviewbase.o(i._ZN8touchgfx15AbstractPainter21compatibleFramebufferENS_6Bitmap12BitmapFormatE))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = touchgfx::AbstractPainter::compatibleFramebuffer(touchgfx::Bitmap::BitmapFormat)
</UL>
<BR>[Called By]<UL><LI><a href="#[36f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::PainterRGB565::PainterRGB565(touchgfx::colortype)
</UL>

<P><STRONG><a name="[b2]"></a>touchgfx::EasingEquations::linearEaseIn(unsigned short, short, short, unsigned short)</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, easingequations.o(i._ZN8touchgfx15EasingEquations12linearEaseInEtsst))
<BR>[Address Reference Count : 1]<UL><LI> splashscreenviewbase.o(i._ZN20SplashScreenViewBase15afterTransitionEv)
</UL>
<P><STRONG><a name="[b1]"></a>touchgfx::EasingEquations::linearEaseNone(unsigned short, short, short, unsigned short)</STRONG> (Thumb, 60 bytes, Stack size 0 bytes, easingequations.o(i._ZN8touchgfx15EasingEquations14linearEaseNoneEtsst))
<BR><BR>[Calls]<UL><LI><a href="#[40d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::EasingEquations::roundRespectSign(float)
</UL>
<BR>[Address Reference Count : 11]<UL><LI> selectingmenuview.o(i._ZN17SelectingMenuView11fadeInTextsEv)
<LI> selectingmenuview.o(i._ZN17SelectingMenuView20screenEnterAnimationEv)
<LI> cookingview.o(i._ZN11CookingView23EXITSCREEN_STATEMACHINEEv)
<LI> cookingview.o(i._ZN11CookingView24ENTERSCREEN_STATEMACHINEEv)
<LI> selectingmenuview.o(i._ZN17SelectingMenuView21hideRemainingElementsEv)
<LI> selectingmenuview.o(i._ZN17SelectingMenuView23EXITSCREEN_STATEMACHINEEv)
<LI> selectingmenuview.o(i._ZN17SelectingMenuView23fadeInRemainingElementsEv)
<LI> selectingmenuview.o(i._ZN17SelectingMenuView24ENTERSCREEN_STATEMACHINEEv)
<LI> selectingmenuview.o(i._ZN17SelectingMenuView29ANIMATION_CHANGE_STATEMACHINEEv)
<LI> settingsview.o(i._ZN12SettingsView23EXITSCREEN_STATEMACHINEEv)
<LI> settingsview.o(i._ZN12SettingsView24ENTERSCREEN_STATEMACHINEEv)
</UL>
<P><STRONG><a name="[40d]"></a>touchgfx::EasingEquations::roundRespectSign(float)</STRONG> (Thumb, 36 bytes, Stack size 0 bytes, easingequations.o(i._ZN8touchgfx15EasingEquations16roundRespectSignEf))
<BR><BR>[Called By]<UL><LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::EasingEquations::linearEaseNone(unsigned short, short, short, unsigned short)
</UL>

<P><STRONG><a name="[3ba]"></a>touchgfx::GenericCallback&lang;void, void, void&rang;::GenericCallback__sub_object()</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, frontendapplicationbase.o(i._ZN8touchgfx15GenericCallbackIvvvEC2Ev))
<BR><BR>[Called By]<UL><LI><a href="#[3a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FrontendApplicationBase::FrontendApplicationBase(Model&, FrontendHeap&)
<LI><a href="#[3b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Callback&lang;FrontendApplicationBase, void, void, void&rang;::Callback(FrontendApplicationBase*, void(FrontendApplicationBase::*)())
</UL>

<P><STRONG><a name="[40e]"></a>touchgfx::TouchCalibration::translatePoint(touchgfx::Point&)</STRONG> (Thumb, 116 bytes, Stack size 32 bytes, touchcalibration.o(i._ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = touchgfx::TouchCalibration::translatePoint(touchgfx::Point&) &rArr; touchgfx::TouchCalibration::muldiv(int, int, int, int, int&) &rArr; touchgfx::TouchCalibration::muldivu(unsigned, unsigned, unsigned, unsigned, unsigned, unsigned&) &rArr;  touchgfx::TouchCalibration::muldivu(unsigned, unsigned, unsigned, unsigned, unsigned, unsigned&) (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[40f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TouchCalibration::muldiv(int, int, int, int, int&)
</UL>
<BR>[Called By]<UL><LI><a href="#[123]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::HAL::touch(int, int)
</UL>

<P><STRONG><a name="[410]"></a>touchgfx::TouchCalibration::clzu(unsigned)</STRONG> (Thumb, 52 bytes, Stack size 0 bytes, touchcalibration.o(i._ZN8touchgfx16TouchCalibration4clzuEj))
<BR><BR>[Called By]<UL><LI><a href="#[411]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TouchCalibration::muldivu(unsigned, unsigned, unsigned, unsigned, unsigned, unsigned&)
<LI><a href="#[40f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TouchCalibration::muldiv(int, int, int, int, int&)
</UL>

<P><STRONG><a name="[40f]"></a>touchgfx::TouchCalibration::muldiv(int, int, int, int, int&)</STRONG> (Thumb, 154 bytes, Stack size 44 bytes, touchcalibration.o(i._ZN8touchgfx16TouchCalibration6muldivEiiiiRi))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = touchgfx::TouchCalibration::muldiv(int, int, int, int, int&) &rArr; touchgfx::TouchCalibration::muldivu(unsigned, unsigned, unsigned, unsigned, unsigned, unsigned&) &rArr;  touchgfx::TouchCalibration::muldivu(unsigned, unsigned, unsigned, unsigned, unsigned, unsigned&) (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[411]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TouchCalibration::muldivu(unsigned, unsigned, unsigned, unsigned, unsigned, unsigned&)
<LI><a href="#[410]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TouchCalibration::clzu(unsigned)
</UL>
<BR>[Called By]<UL><LI><a href="#[40e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TouchCalibration::translatePoint(touchgfx::Point&)
</UL>

<P><STRONG><a name="[411]"></a>touchgfx::TouchCalibration::muldivu(unsigned, unsigned, unsigned, unsigned, unsigned, unsigned&)</STRONG> (Thumb, 234 bytes, Stack size 52 bytes, touchcalibration.o(i._ZN8touchgfx16TouchCalibration7muldivuEjjjjjRj))
<BR><BR>[Stack]<UL><LI>Max Depth = 52 + In Cycle
<LI>Call Chain = touchgfx::TouchCalibration::muldivu(unsigned, unsigned, unsigned, unsigned, unsigned, unsigned&) &rArr;  touchgfx::TouchCalibration::muldivu(unsigned, unsigned, unsigned, unsigned, unsigned, unsigned&) (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[411]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TouchCalibration::muldivu(unsigned, unsigned, unsigned, unsigned, unsigned, unsigned&)
<LI><a href="#[410]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TouchCalibration::clzu(unsigned)
</UL>
<BR>[Called By]<UL><LI><a href="#[411]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TouchCalibration::muldivu(unsigned, unsigned, unsigned, unsigned, unsigned, unsigned&)
<LI><a href="#[40f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TouchCalibration::muldiv(int, int, int, int, int&)
</UL>

<P><STRONG><a name="[34b]"></a>touchgfx::AbstractPartition::AbstractPartition__sub_object()</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, abstractpartition.o(i._ZN8touchgfx17AbstractPartitionC2Ev))
<BR><BR>[Called By]<UL><LI><a href="#[34a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FrontendHeap::FrontendHeap()
</UL>

<P><STRONG><a name="[597]"></a>touchgfx::AbstractPartition::~AbstractPartition()</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, abstractpartition.o(i._ZN8touchgfx17AbstractPartitionD2Ev), UNUSED)

<P><STRONG><a name="[228]"></a>touchgfx::AbstractPartition::~AbstractPartition__sub_object()</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, abstractpartition.o(i._ZN8touchgfx17AbstractPartitionD2Ev))
<BR><BR>[Called By]<UL><LI><a href="#[28b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Partition&lang;touchgfx::meta::TypeList&lang;touchgfx::NoTransition, touchgfx::meta::TypeList&lang;touchgfx::meta::Nil, touchgfx::meta::Nil&rang;&rang;, (unsigned short)1&rang;::~Partition()
<LI><a href="#[288]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Partition&lang;touchgfx::meta::TypeList&lang;InformationPresenter, touchgfx::meta::TypeList&lang;touchgfx::meta::Nil, touchgfx::meta::Nil&rang;&rang;, (unsigned short)1&rang;::~Partition()
<LI><a href="#[285]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Partition&lang;touchgfx::meta::TypeList&lang;CookingView, touchgfx::meta::TypeList&lang;touchgfx::meta::Nil, touchgfx::meta::Nil&rang;&rang;, (unsigned short)1&rang;::~Partition()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> abstractpartition.o(.constdata__ZTVN8touchgfx17AbstractPartitionE)
</UL>
<P><STRONG><a name="[22b]"></a>touchgfx::LockFreeDMA_Queue::pushCopyOf(const touchgfx::BlitOp&)</STRONG> (Thumb, 58 bytes, Stack size 8 bytes, dma.o(i._ZN8touchgfx17LockFreeDMA_Queue10pushCopyOfERKNS_6BlitOpE))
<BR><BR>[Stack]<UL><LI>Max Depth = 56 + Unknown Stack Size
<LI>Call Chain = touchgfx::LockFreeDMA_Queue::pushCopyOf(const touchgfx::BlitOp&) &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[2b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
<LI><a href="#[2ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;abort
</UL>
<BR>[Address Reference Count : 1]<UL><LI> dma.o(.constdata__ZTVN8touchgfx17LockFreeDMA_QueueE)
</UL>
<P><STRONG><a name="[22c]"></a>touchgfx::LockFreeDMA_Queue::first()</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, dma.o(i._ZN8touchgfx17LockFreeDMA_Queue5firstEv))
<BR>[Address Reference Count : 1]<UL><LI> dma.o(.constdata__ZTVN8touchgfx17LockFreeDMA_QueueE)
</UL>
<P><STRONG><a name="[22a]"></a>touchgfx::LockFreeDMA_Queue::isFull()</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, dma.o(i._ZN8touchgfx17LockFreeDMA_Queue6isFullEv))
<BR>[Address Reference Count : 1]<UL><LI> dma.o(.constdata__ZTVN8touchgfx17LockFreeDMA_QueueE)
</UL>
<P><STRONG><a name="[229]"></a>touchgfx::LockFreeDMA_Queue::isEmpty()</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, dma.o(i._ZN8touchgfx17LockFreeDMA_Queue7isEmptyEv))
<BR>[Address Reference Count : 1]<UL><LI> dma.o(.constdata__ZTVN8touchgfx17LockFreeDMA_QueueE)
</UL>
<P><STRONG><a name="[3bf]"></a>touchgfx::LockFreeDMA_Queue::LockFreeDMA_Queue(touchgfx::BlitOp*, unsigned long)</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, dma.o(i._ZN8touchgfx17LockFreeDMA_QueueC1EPNS_6BlitOpEm))
<BR><BR>[Called By]<UL><LI><a href="#[3be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;STM32DMA::STM32DMA()
</UL>

<P><STRONG><a name="[598]"></a>touchgfx::LockFreeDMA_Queue::LockFreeDMA_Queue__sub_object(touchgfx::BlitOp*, unsigned long)</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, dma.o(i._ZN8touchgfx17LockFreeDMA_QueueC1EPNS_6BlitOpEm), UNUSED)

<P><STRONG><a name="[22e]"></a>touchgfx::ClickButtonTrigger::handleClickEvent(const touchgfx::ClickEvent&)</STRONG> (Thumb, 88 bytes, Stack size 24 bytes, informationdemoviewbase.o(i._ZN8touchgfx18ClickButtonTrigger16handleClickEventERKNS_10ClickEventE))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = touchgfx::ClickButtonTrigger::handleClickEvent(const touchgfx::ClickEvent&)
</UL>
<BR>[Address Reference Count : 2]<UL><LI> informationdemoviewbase.o(.constdata__ZTVN8touchgfx18ClickButtonTriggerE)
<LI> informationdemoviewbase.o(.constdata__ZTVN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEE)
</UL>
<P><STRONG><a name="[413]"></a>touchgfx::ClickButtonTrigger::ClickButtonTrigger()</STRONG> (Thumb, 70 bytes, Stack size 16 bytes, informationdemoviewbase.o(i._ZN8touchgfx18ClickButtonTriggerC1Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = touchgfx::ClickButtonTrigger::ClickButtonTrigger() &rArr; touchgfx::Drawable::Drawable__sub_object()
</UL>
<BR>[Calls]<UL><LI><a href="#[36b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Drawable::Drawable__sub_object()
</UL>
<BR>[Called By]<UL><LI><a href="#[389]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::BoxWithBorderButtonStyle&lang;touchgfx::ClickButtonTrigger&rang;::BoxWithBorderButtonStyle()
</UL>

<P><STRONG><a name="[599]"></a>touchgfx::ClickButtonTrigger::ClickButtonTrigger__sub_object()</STRONG> (Thumb, 0 bytes, Stack size 16 bytes, informationdemoviewbase.o(i._ZN8touchgfx18ClickButtonTriggerC1Ev), UNUSED)

<P><STRONG><a name="[22d]"></a>touchgfx::ClickButtonTrigger::~ClickButtonTrigger()</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, informationdemoviewbase.o(i._ZN8touchgfx18ClickButtonTriggerD1Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = touchgfx::ClickButtonTrigger::~ClickButtonTrigger() &rArr; touchgfx::AbstractButtonContainer::~AbstractButtonContainer()
</UL>
<BR>[Calls]<UL><LI><a href="#[234]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::AbstractButtonContainer::~AbstractButtonContainer()
</UL>
<BR>[Called By]<UL><LI><a href="#[237]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::BoxWithBorderButtonStyle&lang;touchgfx::ClickButtonTrigger&rang;::~BoxWithBorderButtonStyle()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> informationdemoviewbase.o(.constdata__ZTVN8touchgfx18ClickButtonTriggerE)
</UL>
<P><STRONG><a name="[59a]"></a>touchgfx::ClickButtonTrigger::~ClickButtonTrigger__sub_object()</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, informationdemoviewbase.o(i._ZN8touchgfx18ClickButtonTriggerD1Ev), UNUSED)

<P><STRONG><a name="[232]"></a>touchgfx::AbstractPainterColor::setColor(touchgfx::colortype)</STRONG> (Thumb, 8 bytes, Stack size 12 bytes, cookingviewbase.o(i._ZN8touchgfx20AbstractPainterColor8setColorENS_9colortypeE))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = touchgfx::AbstractPainterColor::setColor(touchgfx::colortype)
</UL>
<BR>[Called By]<UL><LI><a href="#[349]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CookingViewBase::CookingViewBase()
<LI><a href="#[36f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::PainterRGB565::PainterRGB565(touchgfx::colortype)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> cookingviewbase.o(.constdata__ZTVN8touchgfx20AbstractPainterColorE)
</UL>
<P><STRONG><a name="[37d]"></a>touchgfx::CanvasWidgetRenderer::resetBuffer()</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, canvaswidgetrenderer.o(i._ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv))
<BR><BR>[Called By]<UL><LI><a href="#[13a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CookingViewBase::~CookingViewBase()
</UL>

<P><STRONG><a name="[372]"></a>touchgfx::CanvasWidgetRenderer::setupBuffer(unsigned char*, unsigned)</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, canvaswidgetrenderer.o(i._ZN8touchgfx20CanvasWidgetRenderer11setupBufferEPhj))
<BR><BR>[Stack]<UL><LI>Max Depth = 56 + Unknown Stack Size
<LI>Call Chain = touchgfx::CanvasWidgetRenderer::setupBuffer(unsigned char*, unsigned) &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[2ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;abort
</UL>
<BR>[Called By]<UL><LI><a href="#[349]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CookingViewBase::CookingViewBase()
</UL>

<P><STRONG><a name="[416]"></a>touchgfx::CanvasWidgetRenderer::getOutlineBuffer()</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, canvaswidgetrenderer.o(i._ZN8touchgfx20CanvasWidgetRenderer16getOutlineBufferEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 56 + Unknown Stack Size
<LI>Call Chain = touchgfx::CanvasWidgetRenderer::getOutlineBuffer() &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[417]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::CanvasWidgetRenderer::hasBuffer()
<LI><a href="#[2ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;abort
</UL>
<BR>[Called By]<UL><LI><a href="#[446]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Outline::reset()
</UL>

<P><STRONG><a name="[418]"></a>touchgfx::CanvasWidgetRenderer::getOutlineBufferSize()</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, canvaswidgetrenderer.o(i._ZN8touchgfx20CanvasWidgetRenderer20getOutlineBufferSizeEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 56 + Unknown Stack Size
<LI>Call Chain = touchgfx::CanvasWidgetRenderer::getOutlineBufferSize() &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[417]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::CanvasWidgetRenderer::hasBuffer()
<LI><a href="#[2ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;abort
</UL>
<BR>[Called By]<UL><LI><a href="#[446]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Outline::reset()
</UL>

<P><STRONG><a name="[417]"></a>touchgfx::CanvasWidgetRenderer::hasBuffer()</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, canvaswidgetrenderer.o(i._ZN8touchgfx20CanvasWidgetRenderer9hasBufferEv))
<BR><BR>[Called By]<UL><LI><a href="#[418]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::CanvasWidgetRenderer::getOutlineBufferSize()
<LI><a href="#[416]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::CanvasWidgetRenderer::getOutlineBuffer()
<LI><a href="#[444]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Canvas::Canvas(const touchgfx::AbstractPainter*, const touchgfx::Rect&, const touchgfx::Rect&, unsigned char)
</UL>

<P><STRONG><a name="[59b]"></a>touchgfx::AbstractPainterRGB565::~AbstractPainterRGB565()</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, cookingviewbase.o(i._ZN8touchgfx21AbstractPainterRGB565D2Ev), UNUSED)

<P><STRONG><a name="[233]"></a>touchgfx::AbstractPainterRGB565::~AbstractPainterRGB565__sub_object()</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, cookingviewbase.o(i._ZN8touchgfx21AbstractPainterRGB565D2Ev))
<BR><BR>[Called By]<UL><LI><a href="#[13a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CookingViewBase::~CookingViewBase()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> cookingviewbase.o(.constdata__ZTVN8touchgfx21AbstractPainterRGB565E)
</UL>
<P><STRONG><a name="[3e2]"></a>touchgfx::DisplayTransformation::transformDisplayToFrameBuffer(touchgfx::Rect&)</STRONG> (Thumb, 42 bytes, Stack size 0 bytes, displaytransformation.o(i._ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE))
<BR><BR>[Called By]<UL><LI><a href="#[17c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Application::drawCachedAreas()
<LI><a href="#[444]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Canvas::Canvas(const touchgfx::AbstractPainter*, const touchgfx::Rect&, const touchgfx::Rect&, unsigned char)
<LI><a href="#[275]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::DecompressorL8_L4::blitCopyRGB888(const unsigned char*, const unsigned char*, const touchgfx::Rect&, const touchgfx::Rect&, unsigned char)
<LI><a href="#[273]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::DecompressorL8_L4::blitCopyRGB565(const unsigned char*, const unsigned char*, const touchgfx::Rect&, const touchgfx::Rect&, unsigned char)
<LI><a href="#[479]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::blitCopyARGB8888(const unsigned*, const touchgfx::Rect&, const touchgfx::Rect&, unsigned char)
<LI><a href="#[478]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::blitCopyRGB888(const unsigned char*, const touchgfx::Rect&, const touchgfx::Rect&, unsigned char)
<LI><a href="#[482]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::blitCopyARGB8888Solid(const unsigned*, const touchgfx::Rect&, const touchgfx::Rect&) const
<LI><a href="#[27e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::fillRect(const touchgfx::Rect&, touchgfx::colortype, unsigned char)
<LI><a href="#[27d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::blitCopy(const unsigned short*, const touchgfx::Rect&, const touchgfx::Rect&, unsigned char, bool)
<LI><a href="#[483]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::blitCopyAlphaPerPixel(const unsigned short*, const unsigned char*, const touchgfx::Rect&, const touchgfx::Rect&, unsigned char)
<LI><a href="#[470]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::blitCopyL8_ARGB8888(const unsigned char*, const unsigned char*, const touchgfx::Rect&, const touchgfx::Rect&, unsigned char)
<LI><a href="#[27a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::DecompressorL8_LZW9::blitCopyARGB8888(const unsigned char*, const unsigned char*, const touchgfx::Rect&, const touchgfx::Rect&, unsigned char)
<LI><a href="#[27b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::DecompressorL8_LZW9::blitCopyRGB888(const unsigned char*, const unsigned char*, const touchgfx::Rect&, const touchgfx::Rect&, unsigned char)
<LI><a href="#[279]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::DecompressorL8_LZW9::blitCopyRGB565(const unsigned char*, const unsigned char*, const touchgfx::Rect&, const touchgfx::Rect&, unsigned char)
<LI><a href="#[277]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::DecompressorL8_RLE::blitCopyARGB8888(const unsigned char*, const unsigned char*, const touchgfx::Rect&, const touchgfx::Rect&, unsigned char)
<LI><a href="#[278]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::DecompressorL8_RLE::blitCopyRGB888(const unsigned char*, const unsigned char*, const touchgfx::Rect&, const touchgfx::Rect&, unsigned char)
<LI><a href="#[276]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::DecompressorL8_RLE::blitCopyRGB565(const unsigned char*, const unsigned char*, const touchgfx::Rect&, const touchgfx::Rect&, unsigned char)
<LI><a href="#[471]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::blitCopyL8_RGB888(const unsigned char*, const unsigned char*, const touchgfx::Rect&, const touchgfx::Rect&, unsigned char)
<LI><a href="#[46f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::blitCopyL8_RGB565(const unsigned char*, const unsigned char*, const touchgfx::Rect&, const touchgfx::Rect&, unsigned char)
<LI><a href="#[274]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::DecompressorL8_L4::blitCopyARGB8888(const unsigned char*, const unsigned char*, const touchgfx::Rect&, const touchgfx::Rect&, unsigned char)
</UL>

<P><STRONG><a name="[419]"></a>touchgfx::DisplayTransformation::transformDisplayToFrameBuffer(touchgfx::Rect&, const touchgfx::Rect&)</STRONG> (Thumb, 46 bytes, Stack size 8 bytes, displaytransformation.o(i._ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = touchgfx::DisplayTransformation::transformDisplayToFrameBuffer(touchgfx::Rect&, const touchgfx::Rect&) &rArr; touchgfx::DisplayTransformation::transformDisplayToFrameBuffer(short&, short&, const touchgfx::Rect&)
</UL>
<BR>[Calls]<UL><LI><a href="#[41a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::DisplayTransformation::transformDisplayToFrameBuffer(short&, short&, const touchgfx::Rect&)
</UL>
<BR>[Called By]<UL><LI><a href="#[444]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Canvas::Canvas(const touchgfx::AbstractPainter*, const touchgfx::Rect&, const touchgfx::Rect&, unsigned char)
<LI><a href="#[275]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::DecompressorL8_L4::blitCopyRGB888(const unsigned char*, const unsigned char*, const touchgfx::Rect&, const touchgfx::Rect&, unsigned char)
<LI><a href="#[273]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::DecompressorL8_L4::blitCopyRGB565(const unsigned char*, const unsigned char*, const touchgfx::Rect&, const touchgfx::Rect&, unsigned char)
<LI><a href="#[479]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::blitCopyARGB8888(const unsigned*, const touchgfx::Rect&, const touchgfx::Rect&, unsigned char)
<LI><a href="#[478]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::blitCopyRGB888(const unsigned char*, const touchgfx::Rect&, const touchgfx::Rect&, unsigned char)
<LI><a href="#[482]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::blitCopyARGB8888Solid(const unsigned*, const touchgfx::Rect&, const touchgfx::Rect&) const
<LI><a href="#[27d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::blitCopy(const unsigned short*, const touchgfx::Rect&, const touchgfx::Rect&, unsigned char, bool)
<LI><a href="#[483]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::blitCopyAlphaPerPixel(const unsigned short*, const unsigned char*, const touchgfx::Rect&, const touchgfx::Rect&, unsigned char)
<LI><a href="#[470]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::blitCopyL8_ARGB8888(const unsigned char*, const unsigned char*, const touchgfx::Rect&, const touchgfx::Rect&, unsigned char)
<LI><a href="#[27a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::DecompressorL8_LZW9::blitCopyARGB8888(const unsigned char*, const unsigned char*, const touchgfx::Rect&, const touchgfx::Rect&, unsigned char)
<LI><a href="#[27b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::DecompressorL8_LZW9::blitCopyRGB888(const unsigned char*, const unsigned char*, const touchgfx::Rect&, const touchgfx::Rect&, unsigned char)
<LI><a href="#[279]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::DecompressorL8_LZW9::blitCopyRGB565(const unsigned char*, const unsigned char*, const touchgfx::Rect&, const touchgfx::Rect&, unsigned char)
<LI><a href="#[277]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::DecompressorL8_RLE::blitCopyARGB8888(const unsigned char*, const unsigned char*, const touchgfx::Rect&, const touchgfx::Rect&, unsigned char)
<LI><a href="#[278]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::DecompressorL8_RLE::blitCopyRGB888(const unsigned char*, const unsigned char*, const touchgfx::Rect&, const touchgfx::Rect&, unsigned char)
<LI><a href="#[276]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::DecompressorL8_RLE::blitCopyRGB565(const unsigned char*, const unsigned char*, const touchgfx::Rect&, const touchgfx::Rect&, unsigned char)
<LI><a href="#[471]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::blitCopyL8_RGB888(const unsigned char*, const unsigned char*, const touchgfx::Rect&, const touchgfx::Rect&, unsigned char)
<LI><a href="#[46f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::blitCopyL8_RGB565(const unsigned char*, const unsigned char*, const touchgfx::Rect&, const touchgfx::Rect&, unsigned char)
<LI><a href="#[274]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::DecompressorL8_L4::blitCopyARGB8888(const unsigned char*, const unsigned char*, const touchgfx::Rect&, const touchgfx::Rect&, unsigned char)
</UL>

<P><STRONG><a name="[49d]"></a>touchgfx::DisplayTransformation::transformDisplayToFrameBuffer(short&, short&)</STRONG> (Thumb, 30 bytes, Stack size 0 bytes, displaytransformation.o(i._ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_))
<BR><BR>[Called By]<UL><LI><a href="#[282]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::drawGlyph(unsigned short*, touchgfx::Rect, short, short, unsigned short, unsigned short, const touchgfx::Rect&, const touchgfx::GlyphNode*, const unsigned char*, unsigned char, touchgfx::colortype, unsigned char, unsigned char, touchgfx::TextRotation)
</UL>

<P><STRONG><a name="[41a]"></a>touchgfx::DisplayTransformation::transformDisplayToFrameBuffer(short&, short&, const touchgfx::Rect&)</STRONG> (Thumb, 30 bytes, Stack size 8 bytes, displaytransformation.o(i._ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_RKNS_4RectE))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = touchgfx::DisplayTransformation::transformDisplayToFrameBuffer(short&, short&, const touchgfx::Rect&)
</UL>
<BR>[Called By]<UL><LI><a href="#[419]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::DisplayTransformation::transformDisplayToFrameBuffer(touchgfx::Rect&, const touchgfx::Rect&)
</UL>

<P><STRONG><a name="[3e0]"></a>touchgfx::DisplayTransformation::transformFrameBufferToDisplay(touchgfx::Rect&)</STRONG> (Thumb, 40 bytes, Stack size 8 bytes, displaytransformation.o(i._ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = touchgfx::DisplayTransformation::transformFrameBufferToDisplay(touchgfx::Rect&)
</UL>
<BR>[Called By]<UL><LI><a href="#[17c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Application::drawCachedAreas()
</UL>

<P><STRONG><a name="[424]"></a>touchgfx::DisplayTransformation::transformFrameBufferToDisplay(short&, short&)</STRONG> (Thumb, 32 bytes, Stack size 8 bytes, displaytransformation.o(i._ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = touchgfx::DisplayTransformation::transformFrameBufferToDisplay(short&, short&)
</UL>
<BR>[Called By]<UL><LI><a href="#[123]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::HAL::touch(int, int)
</UL>

<P><STRONG><a name="[22f]"></a>touchgfx::AbstractButtonContainer::executeAction()</STRONG> (Thumb, 30 bytes, Stack size 8 bytes, informationdemoviewbase.o(i._ZN8touchgfx23AbstractButtonContainer13executeActionEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = touchgfx::AbstractButtonContainer::executeAction()
</UL>
<BR>[Address Reference Count : 3]<UL><LI> informationdemoviewbase.o(.constdata__ZTVN8touchgfx23AbstractButtonContainerE)
<LI> informationdemoviewbase.o(.constdata__ZTVN8touchgfx18ClickButtonTriggerE)
<LI> informationdemoviewbase.o(.constdata__ZTVN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEE)
</UL>
<P><STRONG><a name="[231]"></a>touchgfx::AbstractButtonContainer::handleAlphaUpdated()</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, informationdemoviewbase.o(i._ZN8touchgfx23AbstractButtonContainer18handleAlphaUpdatedEv))
<BR>[Address Reference Count : 2]<UL><LI> informationdemoviewbase.o(.constdata__ZTVN8touchgfx23AbstractButtonContainerE)
<LI> informationdemoviewbase.o(.constdata__ZTVN8touchgfx18ClickButtonTriggerE)
</UL>
<P><STRONG><a name="[230]"></a>touchgfx::AbstractButtonContainer::handlePressedUpdated()</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, informationdemoviewbase.o(i._ZN8touchgfx23AbstractButtonContainer20handlePressedUpdatedEv))
<BR>[Address Reference Count : 2]<UL><LI> informationdemoviewbase.o(.constdata__ZTVN8touchgfx23AbstractButtonContainerE)
<LI> informationdemoviewbase.o(.constdata__ZTVN8touchgfx18ClickButtonTriggerE)
</UL>
<P><STRONG><a name="[390]"></a>touchgfx::AbstractButtonContainer::setAlpha(unsigned char)</STRONG> (Thumb, 22 bytes, Stack size 16 bytes, selectingmenuviewbase.o(i._ZN8touchgfx23AbstractButtonContainer8setAlphaEh))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = touchgfx::AbstractButtonContainer::setAlpha(unsigned char)
</UL>
<BR>[Called By]<UL><LI><a href="#[3a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SelectingMenuViewBase::SelectingMenuViewBase()
<LI><a href="#[362]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SettingsViewBase::SettingsViewBase()
</UL>

<P><STRONG><a name="[391]"></a>touchgfx::AbstractButtonContainer::setAction(touchgfx::GenericCallback&lang;const touchgfx::AbstractButtonContainer&, void, void&rang;&)</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, selectingmenuviewbase.o(i._ZN8touchgfx23AbstractButtonContainer9setActionERNS_15GenericCallbackIRKS0_vvEE))
<BR><BR>[Called By]<UL><LI><a href="#[3a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SelectingMenuViewBase::SelectingMenuViewBase()
<LI><a href="#[362]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SettingsViewBase::SettingsViewBase()
</UL>

<P><STRONG><a name="[234]"></a>touchgfx::AbstractButtonContainer::~AbstractButtonContainer()</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, informationdemoviewbase.o(i._ZN8touchgfx23AbstractButtonContainerD1Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = touchgfx::AbstractButtonContainer::~AbstractButtonContainer()
</UL>
<BR>[Calls]<UL><LI><a href="#[284]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Container::~Container()
</UL>
<BR>[Called By]<UL><LI><a href="#[22d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::ClickButtonTrigger::~ClickButtonTrigger()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> informationdemoviewbase.o(.constdata__ZTVN8touchgfx23AbstractButtonContainerE)
</UL>
<P><STRONG><a name="[59c]"></a>touchgfx::AbstractButtonContainer::~AbstractButtonContainer__sub_object()</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, informationdemoviewbase.o(i._ZN8touchgfx23AbstractButtonContainerD1Ev), UNUSED)

<P><STRONG><a name="[392]"></a>touchgfx::TextAreaWithOneWildcard::setWildcard(const unsigned short*)</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, settingsviewbase.o(i._ZN8touchgfx23TextAreaWithOneWildcard11setWildcardEPKt))
<BR><BR>[Called By]<UL><LI><a href="#[362]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SettingsViewBase::SettingsViewBase()
</UL>

<P><STRONG><a name="[38a]"></a>touchgfx::TextAreaWithOneWildcard::TextAreaWithOneWildcard()</STRONG> (Thumb, 34 bytes, Stack size 16 bytes, settingsviewbase.o(i._ZN8touchgfx23TextAreaWithOneWildcardC1Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = touchgfx::TextAreaWithOneWildcard::TextAreaWithOneWildcard() &rArr; touchgfx::TextArea::TextArea() &rArr; touchgfx::Widget::Widget__sub_object() &rArr; touchgfx::Drawable::Drawable__sub_object()
</UL>
<BR>[Calls]<UL><LI><a href="#[371]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextArea::TextArea()
</UL>
<BR>[Called By]<UL><LI><a href="#[362]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SettingsViewBase::SettingsViewBase()
</UL>

<P><STRONG><a name="[59d]"></a>touchgfx::TextAreaWithOneWildcard::TextAreaWithOneWildcard__sub_object()</STRONG> (Thumb, 0 bytes, Stack size 16 bytes, settingsviewbase.o(i._ZN8touchgfx23TextAreaWithOneWildcardC1Ev), UNUSED)

<P><STRONG><a name="[235]"></a>touchgfx::TextAreaWithOneWildcard::~TextAreaWithOneWildcard()</STRONG> (Thumb, 16 bytes, Stack size 16 bytes, settingsviewbase.o(i._ZN8touchgfx23TextAreaWithOneWildcardD1Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = touchgfx::TextAreaWithOneWildcard::~TextAreaWithOneWildcard() &rArr; touchgfx::TextArea::~TextArea()
</UL>
<BR>[Calls]<UL><LI><a href="#[283]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextArea::~TextArea()
</UL>
<BR>[Called By]<UL><LI><a href="#[150]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SettingsViewBase::~SettingsViewBase()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> settingsviewbase.o(.constdata__ZTVN8touchgfx23TextAreaWithOneWildcardE)
</UL>
<P><STRONG><a name="[59e]"></a>touchgfx::TextAreaWithOneWildcard::~TextAreaWithOneWildcard__sub_object()</STRONG> (Thumb, 0 bytes, Stack size 16 bytes, settingsviewbase.o(i._ZN8touchgfx23TextAreaWithOneWildcardD1Ev), UNUSED)

<P><STRONG><a name="[237]"></a>touchgfx::BoxWithBorderButtonStyle&lang;touchgfx::ClickButtonTrigger&rang;::~BoxWithBorderButtonStyle()</STRONG> (Thumb, 32 bytes, Stack size 16 bytes, informationdemoviewbase.o(i._ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEED1Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = touchgfx::BoxWithBorderButtonStyle&lang;touchgfx::ClickButtonTrigger&rang;::~BoxWithBorderButtonStyle() &rArr; touchgfx::ClickButtonTrigger::~ClickButtonTrigger() &rArr; touchgfx::AbstractButtonContainer::~AbstractButtonContainer()
</UL>
<BR>[Calls]<UL><LI><a href="#[23b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Box::~Box()
<LI><a href="#[22d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::ClickButtonTrigger::~ClickButtonTrigger()
</UL>
<BR>[Called By]<UL><LI><a href="#[188]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InformationViewBase::~InformationViewBase()
<LI><a href="#[1b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InformationDemoViewBase::~InformationDemoViewBase()
<LI><a href="#[19c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SelectingMenuViewBase::~SelectingMenuViewBase()
<LI><a href="#[150]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SettingsViewBase::~SettingsViewBase()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> informationdemoviewbase.o(.constdata__ZTVN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEE)
</UL>
<P><STRONG><a name="[59f]"></a>touchgfx::BoxWithBorderButtonStyle&lang;touchgfx::ClickButtonTrigger&rang;::~BoxWithBorderButtonStyle__sub_object()</STRONG> (Thumb, 0 bytes, Stack size 16 bytes, informationdemoviewbase.o(i._ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEED1Ev), UNUSED)

<P><STRONG><a name="[37b]"></a>touchgfx::TextAreaWithTwoWildcards::setWildcard1(const unsigned short*)</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, cookingviewbase.o(i._ZN8touchgfx24TextAreaWithTwoWildcards12setWildcard1EPKt))
<BR><BR>[Called By]<UL><LI><a href="#[349]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CookingViewBase::CookingViewBase()
</UL>

<P><STRONG><a name="[37c]"></a>touchgfx::TextAreaWithTwoWildcards::setWildcard2(const unsigned short*)</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, cookingviewbase.o(i._ZN8touchgfx24TextAreaWithTwoWildcards12setWildcard2EPKt))
<BR><BR>[Called By]<UL><LI><a href="#[349]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CookingViewBase::CookingViewBase()
</UL>

<P><STRONG><a name="[23a]"></a>touchgfx::TextAreaWithTwoWildcards::~TextAreaWithTwoWildcards()</STRONG> (Thumb, 16 bytes, Stack size 16 bytes, cookingviewbase.o(i._ZN8touchgfx24TextAreaWithTwoWildcardsD1Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = touchgfx::TextAreaWithTwoWildcards::~TextAreaWithTwoWildcards() &rArr; touchgfx::TextArea::~TextArea()
</UL>
<BR>[Calls]<UL><LI><a href="#[283]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextArea::~TextArea()
</UL>
<BR>[Called By]<UL><LI><a href="#[1e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::FadeAnimator&lang;touchgfx::TextAreaWithTwoWildcards&rang;::~FadeAnimator()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> cookingviewbase.o(.constdata__ZTVN8touchgfx24TextAreaWithTwoWildcardsE)
</UL>
<P><STRONG><a name="[5a0]"></a>touchgfx::TextAreaWithTwoWildcards::~TextAreaWithTwoWildcards__sub_object()</STRONG> (Thumb, 0 bytes, Stack size 16 bytes, cookingviewbase.o(i._ZN8touchgfx24TextAreaWithTwoWildcardsD1Ev), UNUSED)

<P><STRONG><a name="[360]"></a>touchgfx::Box::setAlpha(unsigned char)</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, settingsview.o(i._ZN8touchgfx3Box8setAlphaEh))
<BR><BR>[Called By]<UL><LI><a href="#[362]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SettingsViewBase::SettingsViewBase()
<LI><a href="#[356]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SettingsView::ENTERSCREEN_STATEMACHINE()
<LI><a href="#[357]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SettingsView::EXITSCREEN_STATEMACHINE()
</UL>

<P><STRONG><a name="[38c]"></a>touchgfx::Box::setColor(touchgfx::colortype)</STRONG> (Thumb, 8 bytes, Stack size 12 bytes, informationdemoviewbase.o(i._ZN8touchgfx3Box8setColorENS_9colortypeE))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = touchgfx::Box::setColor(touchgfx::colortype)
</UL>
<BR>[Called By]<UL><LI><a href="#[383]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InformationViewBase::InformationViewBase()
<LI><a href="#[3af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InformationDemoViewBase::InformationDemoViewBase()
<LI><a href="#[3a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SelectingMenuViewBase::SelectingMenuViewBase()
<LI><a href="#[362]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SettingsViewBase::SettingsViewBase()
<LI><a href="#[238]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::BoxWithBorderButtonStyle&lang;touchgfx::ClickButtonTrigger&rang;::handlePressedUpdated()
</UL>

<P><STRONG><a name="[386]"></a>touchgfx::Box::Box()</STRONG> (Thumb, 48 bytes, Stack size 8 bytes, informationdemoviewbase.o(i._ZN8touchgfx3BoxC1Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = touchgfx::Box::Box() &rArr; touchgfx::Widget::Widget__sub_object() &rArr; touchgfx::Drawable::Drawable__sub_object()
</UL>
<BR>[Calls]<UL><LI><a href="#[369]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::colortype::colortype(unsigned)
<LI><a href="#[368]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Widget::Widget__sub_object()
<LI><a href="#[2d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[383]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InformationViewBase::InformationViewBase()
<LI><a href="#[3af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InformationDemoViewBase::InformationDemoViewBase()
<LI><a href="#[3a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SelectingMenuViewBase::SelectingMenuViewBase()
<LI><a href="#[362]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SettingsViewBase::SettingsViewBase()
<LI><a href="#[389]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::BoxWithBorderButtonStyle&lang;touchgfx::ClickButtonTrigger&rang;::BoxWithBorderButtonStyle()
</UL>

<P><STRONG><a name="[5a1]"></a>touchgfx::Box::Box__sub_object()</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, informationdemoviewbase.o(i._ZN8touchgfx3BoxC1Ev), UNUSED)

<P><STRONG><a name="[23b]"></a>touchgfx::Box::~Box()</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, informationdemoviewbase.o(i._ZN8touchgfx3BoxD1Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = touchgfx::Box::~Box()
</UL>
<BR>[Calls]<UL><LI><a href="#[256]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Widget::~Widget__sub_object()
</UL>
<BR>[Called By]<UL><LI><a href="#[188]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InformationViewBase::~InformationViewBase()
<LI><a href="#[1b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InformationDemoViewBase::~InformationDemoViewBase()
<LI><a href="#[19c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SelectingMenuViewBase::~SelectingMenuViewBase()
<LI><a href="#[150]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SettingsViewBase::~SettingsViewBase()
<LI><a href="#[237]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::BoxWithBorderButtonStyle&lang;touchgfx::ClickButtonTrigger&rang;::~BoxWithBorderButtonStyle()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> box.o(.constdata__ZTVN8touchgfx3BoxE)
</UL>
<P><STRONG><a name="[5a2]"></a>touchgfx::Box::~Box__sub_object()</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, informationdemoviewbase.o(i._ZN8touchgfx3BoxD1Ev), UNUSED)

<P><STRONG><a name="[244]"></a>touchgfx::HAL::FlushCache()</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, hal.o(i._ZN8touchgfx3HAL10FlushCacheEv))
<BR>[Address Reference Count : 1]<UL><LI> hal.o(.constdata__ZTVN8touchgfx3HALE)
</UL>
<P><STRONG><a name="[241]"></a>touchgfx::HAL::beginFrame()</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, hal.o(i._ZN8touchgfx3HAL10beginFrameEv))
<BR><BR>[Called By]<UL><LI><a href="#[199]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TouchGFXGeneratedHAL::beginFrame()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> hal.o(.constdata__ZTVN8touchgfx3HALE)
</UL>
<P><STRONG><a name="[11e]"></a>touchgfx::HAL::getDMAType()</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, touchgfxhal.o(i._ZN8touchgfx3HAL10getDMATypeEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = touchgfx::HAL::getDMAType()
</UL>
<BR>[Address Reference Count : 3]<UL><LI> touchgfxhal.o(.constdata__ZTV11TouchGFXHAL)
<LI> touchgfxgeneratedhal.o(.constdata__ZTV20TouchGFXGeneratedHAL)
<LI> hal.o(.constdata__ZTVN8touchgfx3HALE)
</UL>
<P><STRONG><a name="[23d]"></a>touchgfx::HAL::initialize()</STRONG> (Thumb, 40 bytes, Stack size 8 bytes, hal.o(i._ZN8touchgfx3HAL10initializeEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 160 + Unknown Stack Size
<LI>Call Chain = touchgfx::HAL::initialize() &rArr; touchgfx::OSWrappers::initialize() &rArr; osSemaphoreNew &rArr; xQueueCreateCountingSemaphoreStatic &rArr; xQueueGenericCreateStatic &rArr; prvInitialiseNewQueue &rArr; xQueueGenericReset &rArr; xTaskRemoveFromEventList
</UL>
<BR>[Calls]<UL><LI><a href="#[41b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::GPIO::init()
<LI><a href="#[3c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::OSWrappers::initialize()
</UL>
<BR>[Called By]<UL><LI><a href="#[191]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TouchGFXGeneratedHAL::initialize()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> hal.o(.constdata__ZTVN8touchgfx3HALE)
</UL>
<P><STRONG><a name="[10b]"></a>touchgfx::HAL::getBlitCaps()</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, touchgfxhal.o(i._ZN8touchgfx3HAL11getBlitCapsEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = touchgfx::HAL::getBlitCaps()
</UL>
<BR>[Address Reference Count : 3]<UL><LI> touchgfxhal.o(.constdata__ZTV11TouchGFXHAL)
<LI> touchgfxgeneratedhal.o(.constdata__ZTV20TouchGFXGeneratedHAL)
<LI> hal.o(.constdata__ZTVN8touchgfx3HALE)
</UL>
<P><STRONG><a name="[110]"></a>touchgfx::HAL::blitCopyGlyph(const unsigned char*, unsigned short, unsigned short, unsigned short, unsigned short, unsigned short, touchgfx::colortype, unsigned char, touchgfx::BlitOperations, bool)</STRONG> (Thumb, 148 bytes, Stack size 88 bytes, hal.o(i._ZN8touchgfx3HAL13blitCopyGlyphEPKhtttttNS_9colortypeEhNS_14BlitOperationsEb))
<BR><BR>[Stack]<UL><LI>Max Depth = 200 + Unknown Stack Size
<LI>Call Chain = touchgfx::HAL::blitCopyGlyph(const unsigned char*, unsigned short, unsigned short, unsigned short, unsigned short, unsigned short, touchgfx::colortype, unsigned char, touchgfx::BlitOperations, bool) &rArr; touchgfx::HAL::getDstAddress(unsigned short, unsigned short, unsigned short*) const &rArr; touchgfx::HAL::getDstAddress(unsigned short, unsigned short, unsigned short*, unsigned short, touchgfx::Bitmap::BitmapFormat) const &rArr; touchgfx::HAL::getBitDepth(touchgfx::Bitmap::BitmapFormat) const &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[3bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::HAL::lcd()
<LI><a href="#[41e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::HAL::getDstAddress(unsigned short, unsigned short, unsigned short*) const
<LI><a href="#[41c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::BlitOp::BlitOp()
<LI><a href="#[41d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::HAL::getClientFrameBuffer()
<LI><a href="#[2ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;abort
</UL>
<BR>[Address Reference Count : 3]<UL><LI> touchgfxhal.o(.constdata__ZTV11TouchGFXHAL)
<LI> touchgfxgeneratedhal.o(.constdata__ZTV20TouchGFXGeneratedHAL)
<LI> hal.o(.constdata__ZTVN8touchgfx3HALE)
</UL>
<P><STRONG><a name="[243]"></a>touchgfx::HAL::InvalidateCache()</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, hal.o(i._ZN8touchgfx3HAL15InvalidateCacheEv))
<BR>[Address Reference Count : 1]<UL><LI> hal.o(.constdata__ZTVN8touchgfx3HALE)
</UL>
<P><STRONG><a name="[114]"></a>touchgfx::HAL::backPorchExited()</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, touchgfxhal.o(i._ZN8touchgfx3HAL15backPorchExitedEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = touchgfx::HAL::backPorchExited() &rArr; touchgfx::HAL::swapFrameBuffers() &rArr; touchgfx::HAL::getClientFrameBuffer()
</UL>
<BR>[Calls]<UL><LI><a href="#[2ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::HAL::swapFrameBuffers()
</UL>
<BR>[Address Reference Count : 3]<UL><LI> touchgfxhal.o(.constdata__ZTV11TouchGFXHAL)
<LI> touchgfxgeneratedhal.o(.constdata__ZTV20TouchGFXGeneratedHAL)
<LI> hal.o(.constdata__ZTVN8touchgfx3HALE)
</UL>
<P><STRONG><a name="[107]"></a>touchgfx::HAL::lockFrameBuffer()</STRONG> (Thumb, 56 bytes, Stack size 8 bytes, hal.o(i._ZN8touchgfx3HAL15lockFrameBufferEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = touchgfx::HAL::lockFrameBuffer() &rArr; touchgfx::OSWrappers::takeFrameBufferSemaphore() &rArr; osSemaphoreAcquire &rArr; xQueueSemaphoreTake &rArr; vTaskPlaceOnEventList &rArr; prvAddCurrentTaskToDelayedList &rArr; vListInsert
</UL>
<BR>[Calls]<UL><LI><a href="#[3c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::OSWrappers::takeFrameBufferSemaphore()
<LI><a href="#[40a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::HAL::setRenderingMethod(touchgfx::HAL::RenderingMethod)
<LI><a href="#[41f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::DMA_Interface::isDmaQueueEmpty()
<LI><a href="#[41d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::HAL::getClientFrameBuffer()
</UL>
<BR>[Address Reference Count : 3]<UL><LI> touchgfxhal.o(.constdata__ZTV11TouchGFXHAL)
<LI> touchgfxgeneratedhal.o(.constdata__ZTV20TouchGFXGeneratedHAL)
<LI> hal.o(.constdata__ZTVN8touchgfx3HALE)
</UL>
<P><STRONG><a name="[10f]"></a>touchgfx::HAL::blitCopyARGB8888(const unsigned short*, unsigned short, unsigned short, unsigned short, unsigned short, unsigned short, unsigned char, bool)</STRONG> (Thumb, 72 bytes, Stack size 96 bytes, hal.o(i._ZN8touchgfx3HAL16blitCopyARGB8888EPKtttttthb))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = touchgfx::HAL::blitCopyARGB8888(const unsigned short*, unsigned short, unsigned short, unsigned short, unsigned short, unsigned short, unsigned char, bool)
</UL>
<BR>[Calls]<UL><LI><a href="#[3bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::HAL::lcd()
</UL>
<BR>[Address Reference Count : 3]<UL><LI> touchgfxhal.o(.constdata__ZTV11TouchGFXHAL)
<LI> touchgfxgeneratedhal.o(.constdata__ZTV20TouchGFXGeneratedHAL)
<LI> hal.o(.constdata__ZTVN8touchgfx3HALE)
</UL>
<P><STRONG><a name="[23e]"></a>touchgfx::HAL::flushFrameBuffer(const touchgfx::Rect&)</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, hal.o(i._ZN8touchgfx3HAL16flushFrameBufferERKNS_4RectE))
<BR><BR>[Called By]<UL><LI><a href="#[192]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TouchGFXGeneratedHAL::flushFrameBuffer(const touchgfx::Rect&)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> hal.o(.constdata__ZTVN8touchgfx3HALE)
</UL>
<P><STRONG><a name="[2ef]"></a>touchgfx::HAL::swapFrameBuffers()</STRONG> (Thumb, 52 bytes, Stack size 8 bytes, hal.o(i._ZN8touchgfx3HAL16swapFrameBuffersEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = touchgfx::HAL::swapFrameBuffers() &rArr; touchgfx::HAL::getClientFrameBuffer()
</UL>
<BR>[Calls]<UL><LI><a href="#[420]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::GPIO::toggle(touchgfx::GPIO::GPIO_ID)
<LI><a href="#[41d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::HAL::getClientFrameBuffer()
</UL>
<BR>[Called By]<UL><LI><a href="#[114]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::HAL::backPorchExited()
<LI><a href="#[2e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_LTDC_LineEventCallback
</UL>

<P><STRONG><a name="[105]"></a>touchgfx::HAL::allowDMATransfers()</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, hal.o(i._ZN8touchgfx3HAL17allowDMATransfersEv))
<BR>[Address Reference Count : 3]<UL><LI> touchgfxhal.o(.constdata__ZTV11TouchGFXHAL)
<LI> touchgfxgeneratedhal.o(.constdata__ZTV20TouchGFXGeneratedHAL)
<LI> hal.o(.constdata__ZTVN8touchgfx3HALE)
</UL>
<P><STRONG><a name="[240]"></a>touchgfx::HAL::getTFTCurrentLine()</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, hal.o(i._ZN8touchgfx3HAL17getTFTCurrentLineEv))
<BR>[Address Reference Count : 1]<UL><LI> hal.o(.constdata__ZTVN8touchgfx3HALE)
</UL>
<P><STRONG><a name="[108]"></a>touchgfx::HAL::unlockFrameBuffer()</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, hal.o(i._ZN8touchgfx3HAL17unlockFrameBufferEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 144<LI>Call Chain = touchgfx::HAL::unlockFrameBuffer() &rArr; touchgfx::OSWrappers::giveFrameBufferSemaphore() &rArr; osSemaphoreRelease &rArr; xQueueGenericSend &rArr; vTaskPlaceOnEventList &rArr; prvAddCurrentTaskToDelayedList &rArr; vListInsert
</UL>
<BR>[Calls]<UL><LI><a href="#[3c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::OSWrappers::giveFrameBufferSemaphore()
</UL>
<BR>[Address Reference Count : 3]<UL><LI> touchgfxhal.o(.constdata__ZTV11TouchGFXHAL)
<LI> touchgfxgeneratedhal.o(.constdata__ZTV20TouchGFXGeneratedHAL)
<LI> hal.o(.constdata__ZTVN8touchgfx3HALE)
</UL>
<P><STRONG><a name="[40a]"></a>touchgfx::HAL::setRenderingMethod(touchgfx::HAL::RenderingMethod)</STRONG> (Thumb, 38 bytes, Stack size 16 bytes, hal.o(i._ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = touchgfx::HAL::setRenderingMethod(touchgfx::HAL::RenderingMethod)
</UL>
<BR>[Called By]<UL><LI><a href="#[107]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::HAL::lockFrameBuffer()
<LI><a href="#[1b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::DMA_Interface::addToQueue(const touchgfx::BlitOp&)
<LI><a href="#[422]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::HAL::lockFrameBufferForRenderingMethod(touchgfx::HAL::RenderingMethod)
</UL>

<P><STRONG><a name="[11a]"></a>touchgfx::HAL::setAnimationStorage(void*)</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, touchgfxhal.o(i._ZN8touchgfx3HAL19setAnimationStorageEPv))
<BR>[Address Reference Count : 3]<UL><LI> touchgfxhal.o(.constdata__ZTV11TouchGFXHAL)
<LI> touchgfxgeneratedhal.o(.constdata__ZTV20TouchGFXGeneratedHAL)
<LI> hal.o(.constdata__ZTVN8touchgfx3HALE)
</UL>
<P><STRONG><a name="[41d]"></a>touchgfx::HAL::getClientFrameBuffer()</STRONG> (Thumb, 32 bytes, Stack size 8 bytes, hal.o(i._ZN8touchgfx3HAL20getClientFrameBufferEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = touchgfx::HAL::getClientFrameBuffer()
</UL>
<BR>[Called By]<UL><LI><a href="#[111]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::HAL::blitFill(touchgfx::colortype, unsigned short, unsigned short, unsigned short, unsigned short, unsigned char, unsigned short, touchgfx::Bitmap::BitmapFormat, bool)
<LI><a href="#[10c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::HAL::blitCopy(const unsigned short*, const unsigned char*, unsigned short, unsigned short, unsigned short, unsigned short, unsigned short, unsigned char, bool, unsigned short, touchgfx::Bitmap::BitmapFormat, touchgfx::Bitmap::BitmapFormat, bool)
<LI><a href="#[2ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::HAL::swapFrameBuffers()
<LI><a href="#[107]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::HAL::lockFrameBuffer()
<LI><a href="#[110]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::HAL::blitCopyGlyph(const unsigned char*, unsigned short, unsigned short, unsigned short, unsigned short, unsigned short, touchgfx::colortype, unsigned char, touchgfx::BlitOperations, bool)
</UL>

<P><STRONG><a name="[113]"></a>touchgfx::HAL::registerEventListener(touchgfx::UIEventListener&)</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, hal.o(i._ZN8touchgfx3HAL21registerEventListenerERNS_15UIEventListenerE))
<BR><BR>[Calls]<UL><LI><a href="#[421]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Gestures::registerEventListener(touchgfx::UIEventListener&)
</UL>
<BR>[Address Reference Count : 3]<UL><LI> touchgfxhal.o(.constdata__ZTV11TouchGFXHAL)
<LI> touchgfxgeneratedhal.o(.constdata__ZTV20TouchGFXGeneratedHAL)
<LI> hal.o(.constdata__ZTVN8touchgfx3HALE)
</UL>
<P><STRONG><a name="[101]"></a>touchgfx::HAL::setDisplayOrientation(touchgfx::DisplayOrientation)</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, touchgfxhal.o(i._ZN8touchgfx3HAL21setDisplayOrientationENS_18DisplayOrientationE))
<BR>[Address Reference Count : 3]<UL><LI> touchgfxhal.o(.constdata__ZTV11TouchGFXHAL)
<LI> touchgfxgeneratedhal.o(.constdata__ZTV20TouchGFXGeneratedHAL)
<LI> hal.o(.constdata__ZTVN8touchgfx3HALE)
</UL>
<P><STRONG><a name="[11b]"></a>touchgfx::HAL::configurePartialFrameBuffer(unsigned short, unsigned short, unsigned short, unsigned short)</STRONG> (Thumb, 122 bytes, Stack size 40 bytes, hal.o(i._ZN8touchgfx3HAL27configurePartialFrameBufferEtttt))
<BR><BR>[Stack]<UL><LI>Max Depth = 88 + Unknown Stack Size
<LI>Call Chain = touchgfx::HAL::configurePartialFrameBuffer(unsigned short, unsigned short, unsigned short, unsigned short) &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[3bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::HAL::lcd()
<LI><a href="#[2ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;abort
</UL>
<BR>[Address Reference Count : 3]<UL><LI> touchgfxhal.o(.constdata__ZTV11TouchGFXHAL)
<LI> touchgfxgeneratedhal.o(.constdata__ZTV20TouchGFXGeneratedHAL)
<LI> hal.o(.constdata__ZTVN8touchgfx3HALE)
</UL>
<P><STRONG><a name="[119]"></a>touchgfx::HAL::setFrameBufferStartAddresses(void*, void*, void*)</STRONG> (Thumb, 62 bytes, Stack size 24 bytes, touchgfxhal.o(i._ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_))
<BR><BR>[Stack]<UL><LI>Max Depth = 88 + Unknown Stack Size
<LI>Call Chain = touchgfx::HAL::setFrameBufferStartAddresses(void*, void*, void*) &rArr; __aeabi_assert &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[2b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_assert
</UL>
<BR>[Address Reference Count : 3]<UL><LI> touchgfxhal.o(.constdata__ZTV11TouchGFXHAL)
<LI> touchgfxgeneratedhal.o(.constdata__ZTV20TouchGFXGeneratedHAL)
<LI> hal.o(.constdata__ZTVN8touchgfx3HALE)
</UL>
<P><STRONG><a name="[125]"></a>touchgfx::HAL::performDisplayOrientationChange()</STRONG> (Thumb, 74 bytes, Stack size 0 bytes, touchgfxhal.o(i._ZN8touchgfx3HAL31performDisplayOrientationChangeEv))
<BR>[Address Reference Count : 3]<UL><LI> touchgfxhal.o(.constdata__ZTV11TouchGFXHAL)
<LI> touchgfxgeneratedhal.o(.constdata__ZTV20TouchGFXGeneratedHAL)
<LI> hal.o(.constdata__ZTVN8touchgfx3HALE)
</UL>
<P><STRONG><a name="[422]"></a>touchgfx::HAL::lockFrameBufferForRenderingMethod(touchgfx::HAL::RenderingMethod)</STRONG> (Thumb, 58 bytes, Stack size 16 bytes, hal.o(i._ZN8touchgfx3HAL33lockFrameBufferForRenderingMethodENS0_15RenderingMethodE))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = touchgfx::HAL::lockFrameBufferForRenderingMethod(touchgfx::HAL::RenderingMethod) &rArr; touchgfx::HAL::setRenderingMethod(touchgfx::HAL::RenderingMethod)
</UL>
<BR>[Calls]<UL><LI><a href="#[40a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::HAL::setRenderingMethod(touchgfx::HAL::RenderingMethod)
</UL>
<BR>[Called By]<UL><LI><a href="#[443]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Canvas::render(unsigned char)
</UL>

<P><STRONG><a name="[3bb]"></a>touchgfx::HAL::lcd()</STRONG> (Thumb, 34 bytes, Stack size 0 bytes, frontendapplicationbase.o(i._ZN8touchgfx3HAL3lcdEv))
<BR><BR>[Called By]<UL><LI><a href="#[112]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::HAL::blitFill(touchgfx::colortype, unsigned short, unsigned short, unsigned short, unsigned short, unsigned char, bool)
<LI><a href="#[10e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::HAL::blitCopy(const unsigned short*, unsigned short, unsigned short, unsigned short, unsigned short, unsigned short, unsigned char, bool, bool)
<LI><a href="#[11b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::HAL::configurePartialFrameBuffer(unsigned short, unsigned short, unsigned short, unsigned short)
<LI><a href="#[10f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::HAL::blitCopyARGB8888(const unsigned short*, unsigned short, unsigned short, unsigned short, unsigned short, unsigned short, unsigned char, bool)
<LI><a href="#[110]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::HAL::blitCopyGlyph(const unsigned char*, unsigned short, unsigned short, unsigned short, unsigned short, unsigned short, touchgfx::colortype, unsigned char, touchgfx::BlitOperations, bool)
<LI><a href="#[3a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FrontendApplicationBase::FrontendApplicationBase(Model&, FrontendHeap&)
<LI><a href="#[210]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::BoxWithBorder::draw(const touchgfx::Rect&) const
<LI><a href="#[443]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Canvas::render(unsigned char)
<LI><a href="#[47f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Bitmap::getFormat() const
<LI><a href="#[41e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::HAL::getDstAddress(unsigned short, unsigned short, unsigned short*) const
</UL>

<P><STRONG><a name="[11f]"></a>touchgfx::HAL::tick()</STRONG> (Thumb, 368 bytes, Stack size 32 bytes, hal.o(i._ZN8touchgfx3HAL4tickEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = touchgfx::HAL::tick()
</UL>
<BR>[Calls]<UL><LI><a href="#[2f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::GPIO::clear(touchgfx::GPIO::GPIO_ID)
<LI><a href="#[2f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::GPIO::set(touchgfx::GPIO::GPIO_ID)
<LI><a href="#[363]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Application::getInstance()
<LI><a href="#[423]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Gestures::tick()
</UL>
<BR>[Address Reference Count : 3]<UL><LI> touchgfxhal.o(.constdata__ZTV11TouchGFXHAL)
<LI> touchgfxgeneratedhal.o(.constdata__ZTV20TouchGFXGeneratedHAL)
<LI> hal.o(.constdata__ZTVN8touchgfx3HALE)
</UL>
<P><STRONG><a name="[123]"></a>touchgfx::HAL::touch(int, int)</STRONG> (Thumb, 120 bytes, Stack size 32 bytes, hal.o(i._ZN8touchgfx3HAL5touchEii))
<BR><BR>[Stack]<UL><LI>Max Depth = 160<LI>Call Chain = touchgfx::HAL::touch(int, int) &rArr; touchgfx::TouchCalibration::translatePoint(touchgfx::Point&) &rArr; touchgfx::TouchCalibration::muldiv(int, int, int, int, int&) &rArr; touchgfx::TouchCalibration::muldivu(unsigned, unsigned, unsigned, unsigned, unsigned, unsigned&) &rArr;  touchgfx::TouchCalibration::muldivu(unsigned, unsigned, unsigned, unsigned, unsigned, unsigned&) (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[426]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Gestures::registerClickEvent(touchgfx::ClickEvent::ClickEventType, unsigned short, unsigned short)
<LI><a href="#[425]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Gestures::registerDragEvent(unsigned short, unsigned short, unsigned short, unsigned short)
<LI><a href="#[424]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::DisplayTransformation::transformFrameBufferToDisplay(short&, short&)
<LI><a href="#[40e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TouchCalibration::translatePoint(touchgfx::Point&)
</UL>
<BR>[Address Reference Count : 3]<UL><LI> touchgfxhal.o(.constdata__ZTV11TouchGFXHAL)
<LI> touchgfxgeneratedhal.o(.constdata__ZTV20TouchGFXGeneratedHAL)
<LI> hal.o(.constdata__ZTVN8touchgfx3HALE)
</UL>
<P><STRONG><a name="[124]"></a>touchgfx::HAL::noTouch()</STRONG> (Thumb, 42 bytes, Stack size 8 bytes, hal.o(i._ZN8touchgfx3HAL7noTouchEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 68<LI>Call Chain = touchgfx::HAL::noTouch() &rArr; touchgfx::Gestures::registerClickEvent(touchgfx::ClickEvent::ClickEventType, unsigned short, unsigned short) &rArr; touchgfx::GestureEvent::GestureEvent(touchgfx::GestureEvent::GestureEventType, short, short, short)
</UL>
<BR>[Calls]<UL><LI><a href="#[426]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Gestures::registerClickEvent(touchgfx::ClickEvent::ClickEventType, unsigned short, unsigned short)
</UL>
<BR>[Address Reference Count : 3]<UL><LI> touchgfxhal.o(.constdata__ZTV11TouchGFXHAL)
<LI> touchgfxgeneratedhal.o(.constdata__ZTV20TouchGFXGeneratedHAL)
<LI> hal.o(.constdata__ZTVN8touchgfx3HALE)
</UL>
<P><STRONG><a name="[10c]"></a>touchgfx::HAL::blitCopy(const unsigned short*, const unsigned char*, unsigned short, unsigned short, unsigned short, unsigned short, unsigned short, unsigned char, bool, unsigned short, touchgfx::Bitmap::BitmapFormat, touchgfx::Bitmap::BitmapFormat, bool)</STRONG> (Thumb, 198 bytes, Stack size 96 bytes, hal.o(i._ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b))
<BR><BR>[Stack]<UL><LI>Max Depth = 176 + Unknown Stack Size
<LI>Call Chain = touchgfx::HAL::blitCopy(const unsigned short*, const unsigned char*, unsigned short, unsigned short, unsigned short, unsigned short, unsigned short, unsigned char, bool, unsigned short, touchgfx::Bitmap::BitmapFormat, touchgfx::Bitmap::BitmapFormat, bool) &rArr; touchgfx::HAL::getDstAddress(unsigned short, unsigned short, unsigned short*, unsigned short, touchgfx::Bitmap::BitmapFormat) const &rArr; touchgfx::HAL::getBitDepth(touchgfx::Bitmap::BitmapFormat) const &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[427]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::HAL::getDstAddress(unsigned short, unsigned short, unsigned short*, unsigned short, touchgfx::Bitmap::BitmapFormat) const
<LI><a href="#[41c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::BlitOp::BlitOp()
<LI><a href="#[41d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::HAL::getClientFrameBuffer()
<LI><a href="#[2ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;abort
</UL>
<BR>[Address Reference Count : 3]<UL><LI> touchgfxhal.o(.constdata__ZTV11TouchGFXHAL)
<LI> touchgfxgeneratedhal.o(.constdata__ZTV20TouchGFXGeneratedHAL)
<LI> hal.o(.constdata__ZTVN8touchgfx3HALE)
</UL>
<P><STRONG><a name="[10e]"></a>touchgfx::HAL::blitCopy(const unsigned short*, unsigned short, unsigned short, unsigned short, unsigned short, unsigned short, unsigned char, bool, bool)</STRONG> (Thumb, 72 bytes, Stack size 96 bytes, hal.o(i._ZN8touchgfx3HAL8blitCopyEPKtttttthbb))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = touchgfx::HAL::blitCopy(const unsigned short*, unsigned short, unsigned short, unsigned short, unsigned short, unsigned short, unsigned char, bool, bool)
</UL>
<BR>[Calls]<UL><LI><a href="#[3bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::HAL::lcd()
</UL>
<BR>[Address Reference Count : 3]<UL><LI> touchgfxhal.o(.constdata__ZTV11TouchGFXHAL)
<LI> touchgfxgeneratedhal.o(.constdata__ZTV20TouchGFXGeneratedHAL)
<LI> hal.o(.constdata__ZTVN8touchgfx3HALE)
</UL>
<P><STRONG><a name="[10d]"></a>touchgfx::HAL::blitCopy(const unsigned short*, unsigned short, unsigned short, unsigned short, unsigned short, unsigned short, unsigned char, bool, unsigned short, touchgfx::Bitmap::BitmapFormat, touchgfx::Bitmap::BitmapFormat, bool)</STRONG> (Thumb, 56 bytes, Stack size 80 bytes, hal.o(i._ZN8touchgfx3HAL8blitCopyEPKtttttthbtNS_6Bitmap12BitmapFormatES4_b))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = touchgfx::HAL::blitCopy(const unsigned short*, unsigned short, unsigned short, unsigned short, unsigned short, unsigned short, unsigned char, bool, unsigned short, touchgfx::Bitmap::BitmapFormat, touchgfx::Bitmap::BitmapFormat, bool)
</UL>
<BR>[Address Reference Count : 3]<UL><LI> touchgfxhal.o(.constdata__ZTV11TouchGFXHAL)
<LI> touchgfxgeneratedhal.o(.constdata__ZTV20TouchGFXGeneratedHAL)
<LI> hal.o(.constdata__ZTVN8touchgfx3HALE)
</UL>
<P><STRONG><a name="[112]"></a>touchgfx::HAL::blitFill(touchgfx::colortype, unsigned short, unsigned short, unsigned short, unsigned short, unsigned char, bool)</STRONG> (Thumb, 66 bytes, Stack size 64 bytes, hal.o(i._ZN8touchgfx3HAL8blitFillENS_9colortypeEtttthb))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = touchgfx::HAL::blitFill(touchgfx::colortype, unsigned short, unsigned short, unsigned short, unsigned short, unsigned char, bool)
</UL>
<BR>[Calls]<UL><LI><a href="#[3bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::HAL::lcd()
</UL>
<BR>[Address Reference Count : 3]<UL><LI> touchgfxhal.o(.constdata__ZTV11TouchGFXHAL)
<LI> touchgfxgeneratedhal.o(.constdata__ZTV20TouchGFXGeneratedHAL)
<LI> hal.o(.constdata__ZTVN8touchgfx3HALE)
</UL>
<P><STRONG><a name="[111]"></a>touchgfx::HAL::blitFill(touchgfx::colortype, unsigned short, unsigned short, unsigned short, unsigned short, unsigned char, unsigned short, touchgfx::Bitmap::BitmapFormat, bool)</STRONG> (Thumb, 146 bytes, Stack size 96 bytes, hal.o(i._ZN8touchgfx3HAL8blitFillENS_9colortypeEtttthtNS_6Bitmap12BitmapFormatEb))
<BR><BR>[Stack]<UL><LI>Max Depth = 176 + Unknown Stack Size
<LI>Call Chain = touchgfx::HAL::blitFill(touchgfx::colortype, unsigned short, unsigned short, unsigned short, unsigned short, unsigned char, unsigned short, touchgfx::Bitmap::BitmapFormat, bool) &rArr; touchgfx::HAL::getDstAddress(unsigned short, unsigned short, unsigned short*, unsigned short, touchgfx::Bitmap::BitmapFormat) const &rArr; touchgfx::HAL::getBitDepth(touchgfx::Bitmap::BitmapFormat) const &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[427]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::HAL::getDstAddress(unsigned short, unsigned short, unsigned short*, unsigned short, touchgfx::Bitmap::BitmapFormat) const
<LI><a href="#[41c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::BlitOp::BlitOp()
<LI><a href="#[41d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::HAL::getClientFrameBuffer()
<LI><a href="#[2ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;abort
</UL>
<BR>[Address Reference Count : 3]<UL><LI> touchgfxhal.o(.constdata__ZTV11TouchGFXHAL)
<LI> touchgfxgeneratedhal.o(.constdata__ZTV20TouchGFXGeneratedHAL)
<LI> hal.o(.constdata__ZTVN8touchgfx3HALE)
</UL>
<P><STRONG><a name="[242]"></a>touchgfx::HAL::endFrame()</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, hal.o(i._ZN8touchgfx3HAL8endFrameEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = touchgfx::HAL::endFrame()
</UL>
<BR>[Called By]<UL><LI><a href="#[19a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TouchGFXGeneratedHAL::endFrame()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> hal.o(.constdata__ZTVN8touchgfx3HALE)
</UL>
<P><STRONG><a name="[106]"></a>touchgfx::HAL::flushDMA()</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, hal.o(i._ZN8touchgfx3HAL8flushDMAEv))
<BR>[Address Reference Count : 3]<UL><LI> touchgfxhal.o(.constdata__ZTV11TouchGFXHAL)
<LI> touchgfxgeneratedhal.o(.constdata__ZTV20TouchGFXGeneratedHAL)
<LI> hal.o(.constdata__ZTVN8touchgfx3HALE)
</UL>
<P><STRONG><a name="[23f]"></a>touchgfx::HAL::blockCopy(void*, const void*, unsigned)</STRONG> (Thumb, 140 bytes, Stack size 8 bytes, hal.o(i._ZN8touchgfx3HAL9blockCopyEPvPKvj))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = touchgfx::HAL::blockCopy(void*, const void*, unsigned)
</UL>
<BR>[Called By]<UL><LI><a href="#[194]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TouchGFXGeneratedHAL::blockCopy(void*, const void*, unsigned)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> hal.o(.constdata__ZTVN8touchgfx3HALE)
</UL>
<P><STRONG><a name="[11c]"></a>touchgfx::HAL::taskDelay(unsigned short)</STRONG> (Thumb, 18 bytes, Stack size 16 bytes, touchgfxhal.o(i._ZN8touchgfx3HAL9taskDelayEt))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = touchgfx::HAL::taskDelay(unsigned short)
</UL>
<BR>[Address Reference Count : 3]<UL><LI> touchgfxhal.o(.constdata__ZTV11TouchGFXHAL)
<LI> touchgfxgeneratedhal.o(.constdata__ZTV20TouchGFXGeneratedHAL)
<LI> hal.o(.constdata__ZTVN8touchgfx3HALE)
</UL>
<P><STRONG><a name="[103]"></a>touchgfx::HAL::taskEntry()</STRONG> (Thumb, 30 bytes, Stack size 0 bytes, hal.o(i._ZN8touchgfx3HAL9taskEntryEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 136<LI>Call Chain = touchgfx::HAL::taskEntry() &rArr; touchgfx::OSWrappers::waitForVSync() &rArr; osMessageQueueGet &rArr; xQueueReceive &rArr; vTaskPlaceOnEventList &rArr; prvAddCurrentTaskToDelayedList &rArr; vListInsert
</UL>
<BR>[Calls]<UL><LI><a href="#[3c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::OSWrappers::waitForVSync()
</UL>
<BR>[Called By]<UL><LI><a href="#[320]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx_taskEntry
</UL>
<BR>[Address Reference Count : 3]<UL><LI> touchgfxhal.o(.constdata__ZTV11TouchGFXHAL)
<LI> touchgfxgeneratedhal.o(.constdata__ZTV20TouchGFXGeneratedHAL)
<LI> hal.o(.constdata__ZTVN8touchgfx3HALE)
</UL>
<P><STRONG><a name="[4bc]"></a>touchgfx::HAL::HAL__sub_object(touchgfx::DMA_Interface&, touchgfx::LCD&, touchgfx::TouchController&, unsigned short, unsigned short)</STRONG> (Thumb, 208 bytes, Stack size 20 bytes, touchgfxconfiguration.o(i._ZN8touchgfx3HALC2ERNS_13DMA_InterfaceERNS_3LCDERNS_15TouchControllerEtt))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = touchgfx::HAL::HAL__sub_object(touchgfx::DMA_Interface&, touchgfx::LCD&, touchgfx::TouchController&, unsigned short, unsigned short)
</UL>
<BR>[Called By]<UL><LI><a href="#[291]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__sti___25_TouchGFXConfiguration_cpp_f5abfd34
</UL>

<P><STRONG><a name="[428]"></a>touchgfx::LCD::drawString(touchgfx::Rect, const touchgfx::Rect&, const touchgfx::LCD::StringVisuals&, const unsigned short*, ...)</STRONG> (Thumb, 44 bytes, Stack size 48 bytes, texts.o(i._ZN8touchgfx3LCD10drawStringENS_4RectERKS1_RKNS0_13StringVisualsEPKtz))
<BR><BR>[Stack]<UL><LI>Max Depth = 864 + Unknown Stack Size
<LI>Call Chain = touchgfx::LCD::drawString(touchgfx::Rect, const touchgfx::Rect&, const touchgfx::LCD::StringVisuals&, const unsigned short*, ...) &rArr; touchgfx::LCD::drawStringLTR(const touchgfx::Rect&, const touchgfx::Rect&, const touchgfx::LCD::StringVisuals&, const unsigned short*, std::__va_list) &rArr; touchgfx::LCD::drawStringInternal(unsigned short*, const touchgfx::Rect*, short, short, const touchgfx::Rect&, const touchgfx::LCD::StringVisuals*, unsigned char, touchgfx::TextProvider&, int, bool) &rArr; touchgfx::TextProvider::getNextLigature(unsigned char, const touchgfx::Font*, const touchgfx::GlyphNode*&, const unsigned char*&, unsigned char&) &rArr; touchgfx::TextProvider::getNextLigature(unsigned char) &rArr; touchgfx::TextProvider::substituteGlyphs() &rArr; touchgfx::TextProvider::applyGsubRules(const unsigned short*, unsigned short) &rArr; touchgfx::TextProvider::replaceInputCharacters(unsigned short, unsigned short, const unsigned short*) &rArr; touchgfx::TextProvider::fillInputBuffer() &rArr; touchgfx::TextProvider::circularBuffer&lang;(unsigned)10&rang;::pushBack(unsigned short) &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[429]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD::drawStringLTR(const touchgfx::Rect&, const touchgfx::Rect&, const touchgfx::LCD::StringVisuals&, const unsigned short*, std::__va_list)
</UL>
<BR>[Called By]<UL><LI><a href="#[200]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextArea::draw(const touchgfx::Rect&) const
<LI><a href="#[1e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextAreaWithWildcardBase::draw(const touchgfx::Rect&) const
</UL>

<P><STRONG><a name="[42a]"></a>touchgfx::LCD::rotateRect(touchgfx::Rect&, const touchgfx::Rect&, touchgfx::TextRotation)</STRONG> (Thumb, 132 bytes, Stack size 48 bytes, lcd.o(i._ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = touchgfx::LCD::rotateRect(touchgfx::Rect&, const touchgfx::Rect&, touchgfx::TextRotation) &rArr; touchgfx::Rect::Rect(short, short, short, short)
</UL>
<BR>[Calls]<UL><LI><a href="#[3d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Rect::Rect(short, short, short, short)
<LI><a href="#[3dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Rect::bottom() const
<LI><a href="#[3db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Rect::right() const
</UL>
<BR>[Called By]<UL><LI><a href="#[429]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD::drawStringLTR(const touchgfx::Rect&, const touchgfx::Rect&, const touchgfx::LCD::StringVisuals&, const unsigned short*, std::__va_list)
</UL>

<P><STRONG><a name="[42b]"></a>touchgfx::LCD::getNumLines(touchgfx::TextProvider&, touchgfx::WideTextAction, unsigned char, const touchgfx::Font*, short)</STRONG> (Thumb, 104 bytes, Stack size 80 bytes, lcd.o(i._ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs))
<BR><BR>[Stack]<UL><LI>Max Depth = 376 + Unknown Stack Size
<LI>Call Chain = touchgfx::LCD::getNumLines(touchgfx::TextProvider&, touchgfx::WideTextAction, unsigned char, const touchgfx::Font*, short) &rArr; touchgfx::LCD::WideTextInternalStruct::scanStringLengthForLine() &rArr; touchgfx::TextProvider::getNextLigature(unsigned char, const touchgfx::Font*, const touchgfx::GlyphNode*&) &rArr; touchgfx::TextProvider::getNextLigature(unsigned char) &rArr; touchgfx::TextProvider::substituteGlyphs() &rArr; touchgfx::TextProvider::applyGsubRules(const unsigned short*, unsigned short) &rArr; touchgfx::TextProvider::replaceInputCharacters(unsigned short, unsigned short, const unsigned short*) &rArr; touchgfx::TextProvider::fillInputBuffer() &rArr; touchgfx::TextProvider::circularBuffer&lang;(unsigned)10&rang;::pushBack(unsigned short) &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[3f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextProvider::getNextChar()
<LI><a href="#[42c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD::WideTextInternalStruct::WideTextInternalStruct(touchgfx::TextProvider&, unsigned short, unsigned short, unsigned char, const touchgfx::Font*, short, touchgfx::WideTextAction)
<LI><a href="#[42d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD::WideTextInternalStruct::scanStringLengthForLine()
</UL>
<BR>[Called By]<UL><LI><a href="#[1ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextArea::calculateTextHeight(const unsigned short*, ...) const
</UL>

<P><STRONG><a name="[42e]"></a>touchgfx::LCD::stringWidth(touchgfx::TextProvider&, const touchgfx::Font&, int, unsigned char)</STRONG> (Thumb, 102 bytes, Stack size 56 bytes, lcd.o(i._ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih))
<BR><BR>[Stack]<UL><LI>Max Depth = 296 + Unknown Stack Size
<LI>Call Chain = touchgfx::LCD::stringWidth(touchgfx::TextProvider&, const touchgfx::Font&, int, unsigned char) &rArr; touchgfx::TextProvider::getNextLigature(unsigned char, const touchgfx::Font*, const touchgfx::GlyphNode*&) &rArr; touchgfx::TextProvider::getNextLigature(unsigned char) &rArr; touchgfx::TextProvider::substituteGlyphs() &rArr; touchgfx::TextProvider::applyGsubRules(const unsigned short*, unsigned short) &rArr; touchgfx::TextProvider::replaceInputCharacters(unsigned short, unsigned short, const unsigned short*) &rArr; touchgfx::TextProvider::fillInputBuffer() &rArr; touchgfx::TextProvider::circularBuffer&lang;(unsigned)10&rang;::pushBack(unsigned short) &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[3f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::GlyphNode::advance() const
<LI><a href="#[42f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Font::isInvisibleZeroWidth(unsigned short)
<LI><a href="#[404]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextProvider::getNextLigature(unsigned char, const touchgfx::Font*, const touchgfx::GlyphNode*&)
</UL>
<BR>[Called By]<UL><LI><a href="#[205]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextArea::calculateBoundingArea() const
<LI><a href="#[429]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD::drawStringLTR(const touchgfx::Rect&, const touchgfx::Rect&, const touchgfx::LCD::StringVisuals&, const unsigned short*, std::__va_list)
</UL>

<P><STRONG><a name="[429]"></a>touchgfx::LCD::drawStringLTR(const touchgfx::Rect&, const touchgfx::Rect&, const touchgfx::LCD::StringVisuals&, const unsigned short*, std::__va_list)</STRONG> (Thumb, 584 bytes, Stack size 432 bytes, lcd.o(i._ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list))
<BR><BR>[Stack]<UL><LI>Max Depth = 816 + Unknown Stack Size
<LI>Call Chain = touchgfx::LCD::drawStringLTR(const touchgfx::Rect&, const touchgfx::Rect&, const touchgfx::LCD::StringVisuals&, const unsigned short*, std::__va_list) &rArr; touchgfx::LCD::drawStringInternal(unsigned short*, const touchgfx::Rect*, short, short, const touchgfx::Rect&, const touchgfx::LCD::StringVisuals*, unsigned char, touchgfx::TextProvider&, int, bool) &rArr; touchgfx::TextProvider::getNextLigature(unsigned char, const touchgfx::Font*, const touchgfx::GlyphNode*&, const unsigned char*&, unsigned char&) &rArr; touchgfx::TextProvider::getNextLigature(unsigned char) &rArr; touchgfx::TextProvider::substituteGlyphs() &rArr; touchgfx::TextProvider::applyGsubRules(const unsigned short*, unsigned short) &rArr; touchgfx::TextProvider::replaceInputCharacters(unsigned short, unsigned short, const unsigned short*) &rArr; touchgfx::TextProvider::fillInputBuffer() &rArr; touchgfx::TextProvider::circularBuffer&lang;(unsigned)10&rang;::pushBack(unsigned short) &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[409]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextProvider::TextProvider()
<LI><a href="#[402]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextProvider::getNextLigature(unsigned char)
<LI><a href="#[3ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextProvider::initialize(const unsigned short*, std::__va_list, const unsigned short*, const touchgfx::FontContextualFormsTable*)
<LI><a href="#[3f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextProvider::getNextChar()
<LI><a href="#[3d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Rect::Rect(short, short, short, short)
<LI><a href="#[3dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Rect::bottom() const
<LI><a href="#[42c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD::WideTextInternalStruct::WideTextInternalStruct(touchgfx::TextProvider&, unsigned short, unsigned short, unsigned char, const touchgfx::Font*, short, touchgfx::WideTextAction)
<LI><a href="#[42d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD::WideTextInternalStruct::scanStringLengthForLine()
<LI><a href="#[430]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD::drawStringInternal(unsigned short*, const touchgfx::Rect*, short, short, const touchgfx::Rect&, const touchgfx::LCD::StringVisuals*, unsigned char, touchgfx::TextProvider&, int, bool)
<LI><a href="#[42a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD::rotateRect(touchgfx::Rect&, const touchgfx::Rect&, touchgfx::TextRotation)
<LI><a href="#[42e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD::stringWidth(touchgfx::TextProvider&, const touchgfx::Font&, int, unsigned char)
<LI><a href="#[2b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
</UL>
<BR>[Called By]<UL><LI><a href="#[428]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD::drawString(touchgfx::Rect, const touchgfx::Rect&, const touchgfx::LCD::StringVisuals&, const unsigned short*, ...)
</UL>

<P><STRONG><a name="[430]"></a>touchgfx::LCD::drawStringInternal(unsigned short*, const touchgfx::Rect*, short, short, const touchgfx::Rect&, const touchgfx::LCD::StringVisuals*, unsigned char, touchgfx::TextProvider&, int, bool)</STRONG> (Thumb, 672 bytes, Stack size 136 bytes, lcd.o(i._ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib))
<BR><BR>[Stack]<UL><LI>Max Depth = 384 + Unknown Stack Size
<LI>Call Chain = touchgfx::LCD::drawStringInternal(unsigned short*, const touchgfx::Rect*, short, short, const touchgfx::Rect&, const touchgfx::LCD::StringVisuals*, unsigned char, touchgfx::TextProvider&, int, bool) &rArr; touchgfx::TextProvider::getNextLigature(unsigned char, const touchgfx::Font*, const touchgfx::GlyphNode*&, const unsigned char*&, unsigned char&) &rArr; touchgfx::TextProvider::getNextLigature(unsigned char) &rArr; touchgfx::TextProvider::substituteGlyphs() &rArr; touchgfx::TextProvider::applyGsubRules(const unsigned short*, unsigned short) &rArr; touchgfx::TextProvider::replaceInputCharacters(unsigned short, unsigned short, const unsigned short*) &rArr; touchgfx::TextProvider::fillInputBuffer() &rArr; touchgfx::TextProvider::circularBuffer&lang;(unsigned)10&rang;::pushBack(unsigned short) &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[402]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextProvider::getNextLigature(unsigned char)
<LI><a href="#[3db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Rect::right() const
<LI><a href="#[405]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextProvider::getNextLigature(unsigned char, const touchgfx::Font*, const touchgfx::GlyphNode*&, const unsigned char*&, unsigned char&)
<LI><a href="#[3f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::GlyphNode::advance() const
<LI><a href="#[42f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Font::isInvisibleZeroWidth(unsigned short)
<LI><a href="#[2ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;abort
</UL>
<BR>[Called By]<UL><LI><a href="#[429]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD::drawStringLTR(const touchgfx::Rect&, const touchgfx::Rect&, const touchgfx::LCD::StringVisuals&, const unsigned short*, std::__va_list)
</UL>

<P><STRONG><a name="[42d]"></a>touchgfx::LCD::WideTextInternalStruct::scanStringLengthForLine()</STRONG> (Thumb, 458 bytes, Stack size 56 bytes, lcd.o(i._ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 296 + Unknown Stack Size
<LI>Call Chain = touchgfx::LCD::WideTextInternalStruct::scanStringLengthForLine() &rArr; touchgfx::TextProvider::getNextLigature(unsigned char, const touchgfx::Font*, const touchgfx::GlyphNode*&) &rArr; touchgfx::TextProvider::getNextLigature(unsigned char) &rArr; touchgfx::TextProvider::substituteGlyphs() &rArr; touchgfx::TextProvider::applyGsubRules(const unsigned short*, unsigned short) &rArr; touchgfx::TextProvider::replaceInputCharacters(unsigned short, unsigned short, const unsigned short*) &rArr; touchgfx::TextProvider::fillInputBuffer() &rArr; touchgfx::TextProvider::circularBuffer&lang;(unsigned)10&rang;::pushBack(unsigned short) &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[3f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::GlyphNode::advance() const
<LI><a href="#[42f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Font::isInvisibleZeroWidth(unsigned short)
<LI><a href="#[431]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD::WideTextInternalStruct::isSpace(unsigned short)
<LI><a href="#[432]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD::WideTextInternalStruct::addWord(unsigned short, unsigned short, unsigned short)
<LI><a href="#[404]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextProvider::getNextLigature(unsigned char, const touchgfx::Font*, const touchgfx::GlyphNode*&)
<LI><a href="#[2ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;abort
</UL>
<BR>[Called By]<UL><LI><a href="#[205]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextArea::calculateBoundingArea() const
<LI><a href="#[429]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD::drawStringLTR(const touchgfx::Rect&, const touchgfx::Rect&, const touchgfx::LCD::StringVisuals&, const unsigned short*, std::__va_list)
<LI><a href="#[42b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD::getNumLines(touchgfx::TextProvider&, touchgfx::WideTextAction, unsigned char, const touchgfx::Font*, short)
</UL>

<P><STRONG><a name="[432]"></a>touchgfx::LCD::WideTextInternalStruct::addWord(unsigned short, unsigned short, unsigned short)</STRONG> (Thumb, 32 bytes, Stack size 12 bytes, lcd.o(i._ZN8touchgfx3LCD22WideTextInternalStruct7addWordEttt))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = touchgfx::LCD::WideTextInternalStruct::addWord(unsigned short, unsigned short, unsigned short)
</UL>
<BR>[Called By]<UL><LI><a href="#[42d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD::WideTextInternalStruct::scanStringLengthForLine()
</UL>

<P><STRONG><a name="[431]"></a>touchgfx::LCD::WideTextInternalStruct::isSpace(unsigned short)</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, lcd.o(i._ZN8touchgfx3LCD22WideTextInternalStruct7isSpaceEt))
<BR><BR>[Called By]<UL><LI><a href="#[42d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD::WideTextInternalStruct::scanStringLengthForLine()
</UL>

<P><STRONG><a name="[42c]"></a>touchgfx::LCD::WideTextInternalStruct::WideTextInternalStruct(touchgfx::TextProvider&, unsigned short, unsigned short, unsigned char, const touchgfx::Font*, short, touchgfx::WideTextAction)</STRONG> (Thumb, 126 bytes, Stack size 24 bytes, lcd.o(i._ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEtthPKNS_4FontEsNS_14WideTextActionE))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = touchgfx::LCD::WideTextInternalStruct::WideTextInternalStruct(touchgfx::TextProvider&, unsigned short, unsigned short, unsigned char, const touchgfx::Font*, short, touchgfx::WideTextAction)
</UL>
<BR>[Calls]<UL><LI><a href="#[3f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::GlyphNode::advance() const
</UL>
<BR>[Called By]<UL><LI><a href="#[205]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextArea::calculateBoundingArea() const
<LI><a href="#[429]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD::drawStringLTR(const touchgfx::Rect&, const touchgfx::Rect&, const touchgfx::LCD::StringVisuals&, const unsigned short*, std::__va_list)
<LI><a href="#[42b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD::getNumLines(touchgfx::TextProvider&, touchgfx::WideTextAction, unsigned char, const touchgfx::Font*, short)
</UL>

<P><STRONG><a name="[5a3]"></a>touchgfx::LCD::WideTextInternalStruct::WideTextInternalStruct__sub_object(touchgfx::TextProvider&, unsigned short, unsigned short, unsigned char, const touchgfx::Font*, short, touchgfx::WideTextAction)</STRONG> (Thumb, 0 bytes, Stack size 24 bytes, lcd.o(i._ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEtthPKNS_4FontEsNS_14WideTextActionE), UNUSED)

<P><STRONG><a name="[433]"></a>touchgfx::LCD::realX(const touchgfx::Rect&, short, short, touchgfx::TextRotation)</STRONG> (Thumb, 58 bytes, Stack size 16 bytes, lcd.o(i._ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE))
<BR><BR>[Stack]<UL><LI>Max Depth = 64 + Unknown Stack Size
<LI>Call Chain = touchgfx::LCD::realX(const touchgfx::Rect&, short, short, touchgfx::TextRotation) &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[3db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Rect::right() const
<LI><a href="#[2ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;abort
</UL>
<BR>[Called By]<UL><LI><a href="#[282]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::drawGlyph(unsigned short*, touchgfx::Rect, short, short, unsigned short, unsigned short, const touchgfx::Rect&, const touchgfx::GlyphNode*, const unsigned char*, unsigned char, touchgfx::colortype, unsigned char, unsigned char, touchgfx::TextRotation)
</UL>

<P><STRONG><a name="[434]"></a>touchgfx::LCD::realY(const touchgfx::Rect&, short, short, touchgfx::TextRotation)</STRONG> (Thumb, 58 bytes, Stack size 16 bytes, lcd.o(i._ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE))
<BR><BR>[Stack]<UL><LI>Max Depth = 64 + Unknown Stack Size
<LI>Call Chain = touchgfx::LCD::realY(const touchgfx::Rect&, short, short, touchgfx::TextRotation) &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[3dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Rect::bottom() const
<LI><a href="#[2ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;abort
</UL>
<BR>[Called By]<UL><LI><a href="#[282]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::drawGlyph(unsigned short*, touchgfx::Rect, short, short, unsigned short, unsigned short, const touchgfx::Rect&, const touchgfx::GlyphNode*, const unsigned char*, unsigned char, touchgfx::colortype, unsigned char, unsigned char, touchgfx::TextRotation)
</UL>

<P><STRONG><a name="[475]"></a>touchgfx::LCD::div255(unsigned short)</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, touchgfxgeneratedhal.o(i._ZN8touchgfx3LCD6div255Et))
<BR><BR>[Called By]<UL><LI><a href="#[479]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::blitCopyARGB8888(const unsigned*, const touchgfx::Rect&, const touchgfx::Rect&, unsigned char)
<LI><a href="#[478]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::blitCopyRGB888(const unsigned char*, const touchgfx::Rect&, const touchgfx::Rect&, unsigned char)
<LI><a href="#[27f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::fillBuffer(unsigned char*, unsigned short, const touchgfx::Rect&, touchgfx::colortype, unsigned char)
<LI><a href="#[47c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::DecompressorL8_L4::blendPixelARGB8888(unsigned, unsigned short, int, unsigned char) const
<LI><a href="#[47b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::DecompressorL8_L4::blendPixelRGB888(const unsigned char*, unsigned short, unsigned char, unsigned char) const
<LI><a href="#[47a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::DecompressorL8_L4::blendPixelRGB565(unsigned short, unsigned short, int, int) const
<LI><a href="#[282]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::drawGlyph(unsigned short*, touchgfx::Rect, short, short, unsigned short, unsigned short, const touchgfx::Rect&, const touchgfx::GlyphNode*, const unsigned char*, unsigned char, touchgfx::colortype, unsigned char, unsigned char, touchgfx::TextRotation)
<LI><a href="#[27d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::blitCopy(const unsigned short*, const touchgfx::Rect&, const touchgfx::Rect&, unsigned char, bool)
<LI><a href="#[483]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::blitCopyAlphaPerPixel(const unsigned short*, const unsigned char*, const touchgfx::Rect&, const touchgfx::Rect&, unsigned char)
<LI><a href="#[470]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::blitCopyL8_ARGB8888(const unsigned char*, const unsigned char*, const touchgfx::Rect&, const touchgfx::Rect&, unsigned char)
<LI><a href="#[27a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::DecompressorL8_LZW9::blitCopyARGB8888(const unsigned char*, const unsigned char*, const touchgfx::Rect&, const touchgfx::Rect&, unsigned char)
<LI><a href="#[27b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::DecompressorL8_LZW9::blitCopyRGB888(const unsigned char*, const unsigned char*, const touchgfx::Rect&, const touchgfx::Rect&, unsigned char)
<LI><a href="#[279]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::DecompressorL8_LZW9::blitCopyRGB565(const unsigned char*, const unsigned char*, const touchgfx::Rect&, const touchgfx::Rect&, unsigned char)
<LI><a href="#[277]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::DecompressorL8_RLE::blitCopyARGB8888(const unsigned char*, const unsigned char*, const touchgfx::Rect&, const touchgfx::Rect&, unsigned char)
<LI><a href="#[278]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::DecompressorL8_RLE::blitCopyRGB888(const unsigned char*, const unsigned char*, const touchgfx::Rect&, const touchgfx::Rect&, unsigned char)
<LI><a href="#[276]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::DecompressorL8_RLE::blitCopyRGB565(const unsigned char*, const unsigned char*, const touchgfx::Rect&, const touchgfx::Rect&, unsigned char)
<LI><a href="#[471]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::blitCopyL8_RGB888(const unsigned char*, const unsigned char*, const touchgfx::Rect&, const touchgfx::Rect&, unsigned char)
<LI><a href="#[46f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::blitCopyL8_RGB565(const unsigned char*, const unsigned char*, const touchgfx::Rect&, const touchgfx::Rect&, unsigned char)
</UL>

<P><STRONG><a name="[45f]"></a>touchgfx::Cell::set(int, int, int, int)</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, outline.o(i._ZN8touchgfx4Cell3setEiiii))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = touchgfx::Cell::set(int, int, int, int)
</UL>
<BR>[Called By]<UL><LI><a href="#[446]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Outline::reset()
<LI><a href="#[45d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Outline::setCurCellNew(int, int)
<LI><a href="#[45c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Outline::setCurCell(int, int)
</UL>

<P><STRONG><a name="[460]"></a>touchgfx::Cell::addCover(int, int)</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, outline.o(i._ZN8touchgfx4Cell8addCoverEii))
<BR><BR>[Called By]<UL><LI><a href="#[45b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Outline::renderScanline(int, int, int, int, int)
</UL>

<P><STRONG><a name="[42f]"></a>touchgfx::Font::isInvisibleZeroWidth(unsigned short)</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, lcd.o(i._ZN8touchgfx4Font20isInvisibleZeroWidthEt))
<BR><BR>[Called By]<UL><LI><a href="#[42d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD::WideTextInternalStruct::scanStringLengthForLine()
<LI><a href="#[430]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD::drawStringInternal(unsigned short*, const touchgfx::Rect*, short, short, const touchgfx::Rect&, const touchgfx::LCD::StringVisuals*, unsigned char, touchgfx::TextProvider&, int, bool)
<LI><a href="#[42e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD::stringWidth(touchgfx::TextProvider&, const touchgfx::Font&, int, unsigned char)
</UL>

<P><STRONG><a name="[2f0]"></a>touchgfx::GPIO::set(touchgfx::GPIO::GPIO_ID)</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, touchgfxgpio.o(i._ZN8touchgfx4GPIO3setENS0_7GPIO_IDE))
<BR><BR>[Called By]<UL><LI><a href="#[11f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::HAL::tick()
<LI><a href="#[2e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_LTDC_LineEventCallback
</UL>

<P><STRONG><a name="[41b]"></a>touchgfx::GPIO::init()</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, touchgfxgpio.o(i._ZN8touchgfx4GPIO4initEv))
<BR><BR>[Called By]<UL><LI><a href="#[23d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::HAL::initialize()
</UL>

<P><STRONG><a name="[2f1]"></a>touchgfx::GPIO::clear(touchgfx::GPIO::GPIO_ID)</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, touchgfxgpio.o(i._ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE))
<BR><BR>[Called By]<UL><LI><a href="#[11f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::HAL::tick()
<LI><a href="#[2e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_LTDC_LineEventCallback
</UL>

<P><STRONG><a name="[420]"></a>touchgfx::GPIO::toggle(touchgfx::GPIO::GPIO_ID)</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, touchgfxgpio.o(i._ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE))
<BR><BR>[Called By]<UL><LI><a href="#[2ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::HAL::swapFrameBuffers()
</UL>

<P><STRONG><a name="[3d6]"></a>touchgfx::Rect::restrictTo(short, short)</STRONG> (Thumb, 70 bytes, Stack size 12 bytes, application.o(i._ZN8touchgfx4Rect10restrictToEss))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = touchgfx::Rect::restrictTo(short, short)
</UL>
<BR>[Called By]<UL><LI><a href="#[17f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Application::draw(touchgfx::Rect&)
<LI><a href="#[17e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Application::invalidateArea(touchgfx::Rect)
</UL>

<P><STRONG><a name="[3de]"></a>touchgfx::Rect::expandToFit(const touchgfx::Rect&)</STRONG> (Thumb, 150 bytes, Stack size 32 bytes, application.o(i._ZN8touchgfx4Rect11expandToFitERKS0_))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = touchgfx::Rect::expandToFit(const touchgfx::Rect&)
</UL>
<BR>[Calls]<UL><LI><a href="#[3d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Rect::isEmpty() const
<LI><a href="#[3dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Rect::bottom() const
<LI><a href="#[3db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Rect::right() const
</UL>
<BR>[Called By]<UL><LI><a href="#[17e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Application::invalidateArea(touchgfx::Rect)
</UL>

<P><STRONG><a name="[3d3]"></a>touchgfx::Rect::Rect(short, short, short, short)</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, lcd16bpp.o(i._ZN8touchgfx4RectC1Essss))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = touchgfx::Rect::Rect(short, short, short, short)
</UL>
<BR>[Called By]<UL><LI><a href="#[1cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::CanvasWidget::invalidate() const
<LI><a href="#[17c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Application::drawCachedAreas()
<LI><a href="#[17d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Application::invalidate()
<LI><a href="#[205]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextArea::calculateBoundingArea() const
<LI><a href="#[429]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD::drawStringLTR(const touchgfx::Rect&, const touchgfx::Rect&, const touchgfx::LCD::StringVisuals&, const unsigned short*, std::__va_list)
<LI><a href="#[210]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::BoxWithBorder::draw(const touchgfx::Rect&) const
<LI><a href="#[3e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Screen::draw()
<LI><a href="#[481]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Bitmap::getSolidRect() const
<LI><a href="#[27c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::drawPartialBitmap(const touchgfx::Bitmap&, short, short, const touchgfx::Rect&, unsigned char, bool)
<LI><a href="#[42a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD::rotateRect(touchgfx::Rect&, const touchgfx::Rect&, touchgfx::TextRotation)
<LI><a href="#[44d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Drawable::getCachedVisibleRect()
<LI><a href="#[44b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Screen::startSMOC(const touchgfx::Rect&)
<LI><a href="#[44c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Screen::JSMOC(const touchgfx::Rect&, touchgfx::Drawable*)
</UL>

<P><STRONG><a name="[5a4]"></a>touchgfx::Rect::Rect__sub_object(short, short, short, short)</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, lcd16bpp.o(i._ZN8touchgfx4RectC1Essss), UNUSED)

<P><STRONG><a name="[dc]"></a>touchgfx::Rect::Rect()</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, cookingviewbase.o(i._ZN8touchgfx4RectC1Ev))
<BR><BR>[Called By]<UL><LI><a href="#[17c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Application::drawCachedAreas()
<LI><a href="#[1f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Button::draw(const touchgfx::Rect&) const
<LI><a href="#[1f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Button::getSolidRect() const
<LI><a href="#[1f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Image::draw(const touchgfx::Rect&) const
<LI><a href="#[1f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Image::getSolidRect() const
<LI><a href="#[367]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Screen::Screen()
<LI><a href="#[1e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextArea::getSolidRect() const
<LI><a href="#[36b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Drawable::Drawable__sub_object()
<LI><a href="#[3b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Application::Application()
<LI><a href="#[208]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Container::getSolidRect() const
<LI><a href="#[1cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::CanvasWidget::getSolidRect() const
<LI><a href="#[3ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::CanvasWidget::CanvasWidget__sub_object()
<LI><a href="#[293]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__sti___15_Application_cpp_63cd8d44
<LI><a href="#[481]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Bitmap::getSolidRect() const
<LI><a href="#[44c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Screen::JSMOC(const touchgfx::Rect&, touchgfx::Drawable*)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> application.o(t._ZN8touchgfx6VectorINS_4RectELt8EEC1Ev)
</UL>
<P><STRONG><a name="[5a5]"></a>touchgfx::Rect::Rect__sub_object()</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, cookingviewbase.o(i._ZN8touchgfx4RectC1Ev), UNUSED)

<P><STRONG><a name="[3e1]"></a>touchgfx::Rect::operator &=(const touchgfx::Rect&)</STRONG> (Thumb, 128 bytes, Stack size 24 bytes, application.o(i._ZN8touchgfx4RectaNERKS0_))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = touchgfx::Rect::operator &=(const touchgfx::Rect&) &rArr; touchgfx::Rect::intersect(const touchgfx::Rect&) const
</UL>
<BR>[Calls]<UL><LI><a href="#[3da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Rect::intersect(const touchgfx::Rect&) const
<LI><a href="#[3dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Rect::bottom() const
<LI><a href="#[3db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Rect::right() const
</UL>
<BR>[Called By]<UL><LI><a href="#[1cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::CanvasWidget::invalidate() const
<LI><a href="#[17c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Application::drawCachedAreas()
<LI><a href="#[200]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextArea::draw(const touchgfx::Rect&) const
<LI><a href="#[1cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Drawable::invalidateRect(touchgfx::Rect&) const
<LI><a href="#[1d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Drawable::getVisibleRect(touchgfx::Rect&) const
<LI><a href="#[1f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Button::draw(const touchgfx::Rect&) const
<LI><a href="#[1f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Image::draw(const touchgfx::Rect&) const
<LI><a href="#[1ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::CanvasWidget::draw(const touchgfx::Rect&) const
<LI><a href="#[44a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Rect::operator &(const touchgfx::Rect&) const
</UL>

<P><STRONG><a name="[248]"></a>touchgfx::View&lang;CookingPresenter&rang;::~View()</STRONG> (Thumb, 26 bytes, Stack size 16 bytes, cookingviewbase.o(i._ZN8touchgfx4ViewI16CookingPresenterED1Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = touchgfx::View&lang;CookingPresenter&rang;::~View()
</UL>
<BR>[Calls]<UL><LI><a href="#[284]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Container::~Container()
</UL>
<BR>[Called By]<UL><LI><a href="#[13a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CookingViewBase::~CookingViewBase()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> cookingviewbase.o(.constdata__ZTVN8touchgfx4ViewI16CookingPresenterEE)
</UL>
<P><STRONG><a name="[5a6]"></a>touchgfx::View&lang;CookingPresenter&rang;::~View__sub_object()</STRONG> (Thumb, 0 bytes, Stack size 16 bytes, cookingviewbase.o(i._ZN8touchgfx4ViewI16CookingPresenterED1Ev), UNUSED)

<P><STRONG><a name="[24a]"></a>touchgfx::View&lang;SettingsPresenter&rang;::~View()</STRONG> (Thumb, 26 bytes, Stack size 16 bytes, settingsviewbase.o(i._ZN8touchgfx4ViewI17SettingsPresenterED1Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = touchgfx::View&lang;SettingsPresenter&rang;::~View()
</UL>
<BR>[Calls]<UL><LI><a href="#[284]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Container::~Container()
</UL>
<BR>[Called By]<UL><LI><a href="#[150]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SettingsViewBase::~SettingsViewBase()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> settingsviewbase.o(.constdata__ZTVN8touchgfx4ViewI17SettingsPresenterEE)
</UL>
<P><STRONG><a name="[5a7]"></a>touchgfx::View&lang;SettingsPresenter&rang;::~View__sub_object()</STRONG> (Thumb, 0 bytes, Stack size 16 bytes, settingsviewbase.o(i._ZN8touchgfx4ViewI17SettingsPresenterED1Ev), UNUSED)

<P><STRONG><a name="[24b]"></a>touchgfx::View&lang;InformationPresenter&rang;::~View()</STRONG> (Thumb, 26 bytes, Stack size 16 bytes, informationviewbase.o(i._ZN8touchgfx4ViewI20InformationPresenterED1Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = touchgfx::View&lang;InformationPresenter&rang;::~View()
</UL>
<BR>[Calls]<UL><LI><a href="#[284]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Container::~Container()
</UL>
<BR>[Called By]<UL><LI><a href="#[188]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InformationViewBase::~InformationViewBase()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> informationviewbase.o(.constdata__ZTVN8touchgfx4ViewI20InformationPresenterEE)
</UL>
<P><STRONG><a name="[5a8]"></a>touchgfx::View&lang;InformationPresenter&rang;::~View__sub_object()</STRONG> (Thumb, 0 bytes, Stack size 16 bytes, informationviewbase.o(i._ZN8touchgfx4ViewI20InformationPresenterED1Ev), UNUSED)

<P><STRONG><a name="[24c]"></a>touchgfx::View&lang;SplashScreenPresenter&rang;::~View()</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, splashscreenviewbase.o(i._ZN8touchgfx4ViewI21SplashScreenPresenterED1Ev))
<BR><BR>[Called By]<UL><LI><a href="#[18f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SplashScreenViewBase::~SplashScreenViewBase()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> splashscreenviewbase.o(.constdata__ZTVN8touchgfx4ViewI21SplashScreenPresenterEE)
</UL>
<P><STRONG><a name="[5a9]"></a>touchgfx::View&lang;SplashScreenPresenter&rang;::~View__sub_object()</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, splashscreenviewbase.o(i._ZN8touchgfx4ViewI21SplashScreenPresenterED1Ev), UNUSED)

<P><STRONG><a name="[24d]"></a>touchgfx::View&lang;SelectingMenuPresenter&rang;::~View()</STRONG> (Thumb, 26 bytes, Stack size 16 bytes, selectingmenuviewbase.o(i._ZN8touchgfx4ViewI22SelectingMenuPresenterED1Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = touchgfx::View&lang;SelectingMenuPresenter&rang;::~View()
</UL>
<BR>[Calls]<UL><LI><a href="#[284]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Container::~Container()
</UL>
<BR>[Called By]<UL><LI><a href="#[19c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SelectingMenuViewBase::~SelectingMenuViewBase()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> selectingmenuviewbase.o(.constdata__ZTVN8touchgfx4ViewI22SelectingMenuPresenterEE)
</UL>
<P><STRONG><a name="[5aa]"></a>touchgfx::View&lang;SelectingMenuPresenter&rang;::~View__sub_object()</STRONG> (Thumb, 0 bytes, Stack size 16 bytes, selectingmenuviewbase.o(i._ZN8touchgfx4ViewI22SelectingMenuPresenterED1Ev), UNUSED)

<P><STRONG><a name="[24e]"></a>touchgfx::View&lang;InformationDemoPresenter&rang;::~View()</STRONG> (Thumb, 26 bytes, Stack size 16 bytes, informationdemoviewbase.o(i._ZN8touchgfx4ViewI24InformationDemoPresenterED1Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = touchgfx::View&lang;InformationDemoPresenter&rang;::~View()
</UL>
<BR>[Calls]<UL><LI><a href="#[284]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Container::~Container()
</UL>
<BR>[Called By]<UL><LI><a href="#[1b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InformationDemoViewBase::~InformationDemoViewBase()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> informationdemoviewbase.o(.constdata__ZTVN8touchgfx4ViewI24InformationDemoPresenterEE)
</UL>
<P><STRONG><a name="[5ab]"></a>touchgfx::View&lang;InformationDemoPresenter&rang;::~View__sub_object()</STRONG> (Thumb, 0 bytes, Stack size 16 bytes, informationdemoviewbase.o(i._ZN8touchgfx4ViewI24InformationDemoPresenterED1Ev), UNUSED)

<P><STRONG><a name="[46b]"></a>touchgfx::clzu(unsigned)</STRONG> (Thumb, 52 bytes, Stack size 0 bytes, utils.o(i._ZN8touchgfx4clzuEj))
<BR><BR>[Called By]<UL><LI><a href="#[451]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::muldivu(unsigned, unsigned, unsigned, unsigned&)
</UL>

<P><STRONG><a name="[358]"></a>touchgfx::Color::getColorFromRGB(unsigned char, unsigned char, unsigned char)</STRONG> (Thumb, 30 bytes, Stack size 16 bytes, settingsview.o(i._ZN8touchgfx5Color15getColorFromRGBEhhh))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = touchgfx::Color::getColorFromRGB(unsigned char, unsigned char, unsigned char)
</UL>
<BR>[Called By]<UL><LI><a href="#[349]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CookingViewBase::CookingViewBase()
<LI><a href="#[383]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InformationViewBase::InformationViewBase()
<LI><a href="#[3af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InformationDemoViewBase::InformationDemoViewBase()
<LI><a href="#[3a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SelectingMenuViewBase::SelectingMenuViewBase()
<LI><a href="#[362]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SettingsViewBase::SettingsViewBase()
<LI><a href="#[130]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SettingsView::pressCenterKeyFunction()
<LI><a href="#[139]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SettingsView::returnButtonIsClicked()
<LI><a href="#[135]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SettingsView::languageButtonClicked()
<LI><a href="#[131]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SettingsView::pressDownKeyFunction()
<LI><a href="#[134]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SettingsView::pressUpKeyFunction()
<LI><a href="#[136]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SettingsView::clockButtonClicked()
</UL>

<P><STRONG><a name="[472]"></a>touchgfx::Color::getRedFromRGB565(unsigned short)</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, lcd16bpp.o(i._ZN8touchgfx5Color16getRedFromRGB565Et))
<BR><BR>[Called By]<UL><LI><a href="#[479]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::blitCopyARGB8888(const unsigned*, const touchgfx::Rect&, const touchgfx::Rect&, unsigned char)
<LI><a href="#[478]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::blitCopyRGB888(const unsigned char*, const touchgfx::Rect&, const touchgfx::Rect&, unsigned char)
<LI><a href="#[27f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::fillBuffer(unsigned char*, unsigned short, const touchgfx::Rect&, touchgfx::colortype, unsigned char)
<LI><a href="#[47c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::DecompressorL8_L4::blendPixelARGB8888(unsigned, unsigned short, int, unsigned char) const
<LI><a href="#[47b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::DecompressorL8_L4::blendPixelRGB888(const unsigned char*, unsigned short, unsigned char, unsigned char) const
<LI><a href="#[282]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::drawGlyph(unsigned short*, touchgfx::Rect, short, short, unsigned short, unsigned short, const touchgfx::Rect&, const touchgfx::GlyphNode*, const unsigned char*, unsigned char, touchgfx::colortype, unsigned char, unsigned char, touchgfx::TextRotation)
<LI><a href="#[470]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::blitCopyL8_ARGB8888(const unsigned char*, const unsigned char*, const touchgfx::Rect&, const touchgfx::Rect&, unsigned char)
<LI><a href="#[27a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::DecompressorL8_LZW9::blitCopyARGB8888(const unsigned char*, const unsigned char*, const touchgfx::Rect&, const touchgfx::Rect&, unsigned char)
<LI><a href="#[27b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::DecompressorL8_LZW9::blitCopyRGB888(const unsigned char*, const unsigned char*, const touchgfx::Rect&, const touchgfx::Rect&, unsigned char)
<LI><a href="#[277]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::DecompressorL8_RLE::blitCopyARGB8888(const unsigned char*, const unsigned char*, const touchgfx::Rect&, const touchgfx::Rect&, unsigned char)
<LI><a href="#[278]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::DecompressorL8_RLE::blitCopyRGB888(const unsigned char*, const unsigned char*, const touchgfx::Rect&, const touchgfx::Rect&, unsigned char)
<LI><a href="#[471]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::blitCopyL8_RGB888(const unsigned char*, const unsigned char*, const touchgfx::Rect&, const touchgfx::Rect&, unsigned char)
</UL>

<P><STRONG><a name="[474]"></a>touchgfx::Color::getBlueFromRGB565(unsigned short)</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, lcd16bpp.o(i._ZN8touchgfx5Color17getBlueFromRGB565Et))
<BR><BR>[Called By]<UL><LI><a href="#[479]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::blitCopyARGB8888(const unsigned*, const touchgfx::Rect&, const touchgfx::Rect&, unsigned char)
<LI><a href="#[478]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::blitCopyRGB888(const unsigned char*, const touchgfx::Rect&, const touchgfx::Rect&, unsigned char)
<LI><a href="#[27f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::fillBuffer(unsigned char*, unsigned short, const touchgfx::Rect&, touchgfx::colortype, unsigned char)
<LI><a href="#[47c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::DecompressorL8_L4::blendPixelARGB8888(unsigned, unsigned short, int, unsigned char) const
<LI><a href="#[47b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::DecompressorL8_L4::blendPixelRGB888(const unsigned char*, unsigned short, unsigned char, unsigned char) const
<LI><a href="#[282]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::drawGlyph(unsigned short*, touchgfx::Rect, short, short, unsigned short, unsigned short, const touchgfx::Rect&, const touchgfx::GlyphNode*, const unsigned char*, unsigned char, touchgfx::colortype, unsigned char, unsigned char, touchgfx::TextRotation)
<LI><a href="#[470]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::blitCopyL8_ARGB8888(const unsigned char*, const unsigned char*, const touchgfx::Rect&, const touchgfx::Rect&, unsigned char)
<LI><a href="#[27a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::DecompressorL8_LZW9::blitCopyARGB8888(const unsigned char*, const unsigned char*, const touchgfx::Rect&, const touchgfx::Rect&, unsigned char)
<LI><a href="#[27b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::DecompressorL8_LZW9::blitCopyRGB888(const unsigned char*, const unsigned char*, const touchgfx::Rect&, const touchgfx::Rect&, unsigned char)
<LI><a href="#[277]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::DecompressorL8_RLE::blitCopyARGB8888(const unsigned char*, const unsigned char*, const touchgfx::Rect&, const touchgfx::Rect&, unsigned char)
<LI><a href="#[278]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::DecompressorL8_RLE::blitCopyRGB888(const unsigned char*, const unsigned char*, const touchgfx::Rect&, const touchgfx::Rect&, unsigned char)
<LI><a href="#[471]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::blitCopyL8_RGB888(const unsigned char*, const unsigned char*, const touchgfx::Rect&, const touchgfx::Rect&, unsigned char)
</UL>

<P><STRONG><a name="[473]"></a>touchgfx::Color::getGreenFromRGB565(unsigned short)</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, lcd16bpp.o(i._ZN8touchgfx5Color18getGreenFromRGB565Et))
<BR><BR>[Called By]<UL><LI><a href="#[479]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::blitCopyARGB8888(const unsigned*, const touchgfx::Rect&, const touchgfx::Rect&, unsigned char)
<LI><a href="#[478]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::blitCopyRGB888(const unsigned char*, const touchgfx::Rect&, const touchgfx::Rect&, unsigned char)
<LI><a href="#[27f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::fillBuffer(unsigned char*, unsigned short, const touchgfx::Rect&, touchgfx::colortype, unsigned char)
<LI><a href="#[47c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::DecompressorL8_L4::blendPixelARGB8888(unsigned, unsigned short, int, unsigned char) const
<LI><a href="#[47b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::DecompressorL8_L4::blendPixelRGB888(const unsigned char*, unsigned short, unsigned char, unsigned char) const
<LI><a href="#[282]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::drawGlyph(unsigned short*, touchgfx::Rect, short, short, unsigned short, unsigned short, const touchgfx::Rect&, const touchgfx::GlyphNode*, const unsigned char*, unsigned char, touchgfx::colortype, unsigned char, unsigned char, touchgfx::TextRotation)
<LI><a href="#[470]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::blitCopyL8_ARGB8888(const unsigned char*, const unsigned char*, const touchgfx::Rect&, const touchgfx::Rect&, unsigned char)
<LI><a href="#[27a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::DecompressorL8_LZW9::blitCopyARGB8888(const unsigned char*, const unsigned char*, const touchgfx::Rect&, const touchgfx::Rect&, unsigned char)
<LI><a href="#[27b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::DecompressorL8_LZW9::blitCopyRGB888(const unsigned char*, const unsigned char*, const touchgfx::Rect&, const touchgfx::Rect&, unsigned char)
<LI><a href="#[277]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::DecompressorL8_RLE::blitCopyARGB8888(const unsigned char*, const unsigned char*, const touchgfx::Rect&, const touchgfx::Rect&, unsigned char)
<LI><a href="#[278]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::DecompressorL8_RLE::blitCopyRGB888(const unsigned char*, const unsigned char*, const touchgfx::Rect&, const touchgfx::Rect&, unsigned char)
<LI><a href="#[471]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::blitCopyL8_RGB888(const unsigned char*, const unsigned char*, const touchgfx::Rect&, const touchgfx::Rect&, unsigned char)
</UL>

<P><STRONG><a name="[35f]"></a>touchgfx::Image::setAlpha(unsigned char)</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, cookingview.o(i._ZN8touchgfx5Image8setAlphaEh))
<BR><BR>[Called By]<UL><LI><a href="#[349]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CookingViewBase::CookingViewBase()
<LI><a href="#[512]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::FadeAnimator&lang;touchgfx::Image&rang;::nextFadeAnimationStep()
<LI><a href="#[3a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SelectingMenuViewBase::SelectingMenuViewBase()
<LI><a href="#[362]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SettingsViewBase::SettingsViewBase()
<LI><a href="#[356]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SettingsView::ENTERSCREEN_STATEMACHINE()
<LI><a href="#[357]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SettingsView::EXITSCREEN_STATEMACHINE()
</UL>

<P><STRONG><a name="[1f5]"></a>touchgfx::Image::setBitmap(const touchgfx::Bitmap&)</STRONG> (Thumb, 50 bytes, Stack size 16 bytes, image.o(i._ZN8touchgfx5Image9setBitmapERKNS_6BitmapE))
<BR><BR>[Stack]<UL><LI>Max Depth = 72 + Unknown Stack Size
<LI>Call Chain = touchgfx::Image::setBitmap(const touchgfx::Bitmap&) &rArr; touchgfx::Bitmap::getHeight() const &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[436]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Bitmap::getHeight() const
<LI><a href="#[435]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Bitmap::getWidth() const
</UL>
<BR>[Called By]<UL><LI><a href="#[349]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CookingViewBase::CookingViewBase()
<LI><a href="#[339]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CookingView::setUpInfoAboutCookingFood()
<LI><a href="#[383]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InformationViewBase::InformationViewBase()
<LI><a href="#[3af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InformationDemoViewBase::InformationDemoViewBase()
<LI><a href="#[3a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SelectingMenuViewBase::SelectingMenuViewBase()
<LI><a href="#[39e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SelectingMenuView::changeSelectedItem()
<LI><a href="#[394]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SplashScreenViewBase::SplashScreenViewBase()
<LI><a href="#[362]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SettingsViewBase::SettingsViewBase()
<LI><a href="#[36a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Image::Image(const touchgfx::Bitmap&)
</UL>
<BR>[Address Reference Count : 2]<UL><LI> cookingviewbase.o(.constdata__ZTVN8touchgfx12FadeAnimatorINS_5ImageEEE)
<LI> image.o(.constdata__ZTVN8touchgfx5ImageE)
</UL>
<P><STRONG><a name="[36a]"></a>touchgfx::Image::Image(const touchgfx::Bitmap&)</STRONG> (Thumb, 48 bytes, Stack size 16 bytes, cookingviewbase.o(i._ZN8touchgfx5ImageC1ERKNS_6BitmapE))
<BR><BR>[Stack]<UL><LI>Max Depth = 88 + Unknown Stack Size
<LI>Call Chain = touchgfx::Image::Image(const touchgfx::Bitmap&) &rArr; touchgfx::Image::setBitmap(const touchgfx::Bitmap&) &rArr; touchgfx::Bitmap::getHeight() const &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[1f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Image::setBitmap(const touchgfx::Bitmap&)
<LI><a href="#[368]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Widget::Widget__sub_object()
<LI><a href="#[2d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[349]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CookingViewBase::CookingViewBase()
<LI><a href="#[3a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SelectingMenuViewBase::SelectingMenuViewBase()
<LI><a href="#[394]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SplashScreenViewBase::SplashScreenViewBase()
<LI><a href="#[362]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SettingsViewBase::SettingsViewBase()
<LI><a href="#[36d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::FadeAnimator&lang;touchgfx::Image&rang;::FadeAnimator()
</UL>

<P><STRONG><a name="[5ac]"></a>touchgfx::Image::Image__sub_object(const touchgfx::Bitmap&)</STRONG> (Thumb, 0 bytes, Stack size 16 bytes, cookingviewbase.o(i._ZN8touchgfx5ImageC1ERKNS_6BitmapE), UNUSED)

<P><STRONG><a name="[24f]"></a>touchgfx::Image::~Image()</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, cookingviewbase.o(i._ZN8touchgfx5ImageD1Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = touchgfx::Image::~Image()
</UL>
<BR>[Calls]<UL><LI><a href="#[256]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Widget::~Widget__sub_object()
</UL>
<BR>[Called By]<UL><LI><a href="#[13a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CookingViewBase::~CookingViewBase()
<LI><a href="#[19c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SelectingMenuViewBase::~SelectingMenuViewBase()
<LI><a href="#[18f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SplashScreenViewBase::~SplashScreenViewBase()
<LI><a href="#[150]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SettingsViewBase::~SettingsViewBase()
<LI><a href="#[1f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::FadeAnimator&lang;touchgfx::Image&rang;::~FadeAnimator()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> image.o(.constdata__ZTVN8touchgfx5ImageE)
</UL>
<P><STRONG><a name="[5ad]"></a>touchgfx::Image::~Image__sub_object()</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, cookingviewbase.o(i._ZN8touchgfx5ImageD1Ev), UNUSED)

<P><STRONG><a name="[35d]"></a>touchgfx::Texts::setLanguage(unsigned short)</STRONG> (Thumb, 108 bytes, Stack size 24 bytes, texts.o(i._ZN8touchgfx5Texts11setLanguageEt))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = touchgfx::Texts::setLanguage(unsigned short)
</UL>
<BR>[Calls]<UL><LI><a href="#[437]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TypedTextDatabase::getFonts()
<LI><a href="#[438]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TypedTextDatabase::getInstanceSize()
</UL>
<BR>[Called By]<UL><LI><a href="#[31b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx_init
<LI><a href="#[3a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FrontendApplicationBase::FrontendApplicationBase(Model&, FrontendHeap&)
<LI><a href="#[35a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SettingsView::languageSettingsOption()
</UL>

<P><STRONG><a name="[439]"></a>touchgfx::paint::rgb565::alphaBlend(unsigned short, unsigned short, unsigned char)</STRONG> (Thumb, 30 bytes, Stack size 24 bytes, touchgfxgeneratedhal.o(i._ZN8touchgfx5paint6rgb56510alphaBlendEtth))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = touchgfx::paint::rgb565::alphaBlend(unsigned short, unsigned short, unsigned char) &rArr; touchgfx::paint::rgb565::alphaBlend(unsigned short, unsigned short, unsigned short, unsigned short, unsigned char)
</UL>
<BR>[Calls]<UL><LI><a href="#[43a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::paint::rgb565::alphaBlend(unsigned short, unsigned short, unsigned short, unsigned short, unsigned char)
</UL>
<BR>[Called By]<UL><LI><a href="#[43b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::paint::rgb565::lineFromColor(unsigned short*, unsigned, unsigned, unsigned char, unsigned)
</UL>

<P><STRONG><a name="[43a]"></a>touchgfx::paint::rgb565::alphaBlend(unsigned short, unsigned short, unsigned short, unsigned short, unsigned char)</STRONG> (Thumb, 88 bytes, Stack size 20 bytes, touchgfxgeneratedhal.o(i._ZN8touchgfx5paint6rgb56510alphaBlendEtttth))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = touchgfx::paint::rgb565::alphaBlend(unsigned short, unsigned short, unsigned short, unsigned short, unsigned char)
</UL>
<BR>[Called By]<UL><LI><a href="#[439]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::paint::rgb565::alphaBlend(unsigned short, unsigned short, unsigned char)
</UL>

<P><STRONG><a name="[43b]"></a>touchgfx::paint::rgb565::lineFromColor(unsigned short*, unsigned, unsigned, unsigned char, unsigned)</STRONG> (Thumb, 70 bytes, Stack size 32 bytes, touchgfxgeneratedhal.o(i._ZN8touchgfx5paint6rgb56513lineFromColorEPtjjhj))
<BR><BR>[Stack]<UL><LI>Max Depth = 76<LI>Call Chain = touchgfx::paint::rgb565::lineFromColor(unsigned short*, unsigned, unsigned, unsigned char, unsigned) &rArr; touchgfx::paint::rgb565::alphaBlend(unsigned short, unsigned short, unsigned char) &rArr; touchgfx::paint::rgb565::alphaBlend(unsigned short, unsigned short, unsigned short, unsigned short, unsigned char)
</UL>
<BR>[Calls]<UL><LI><a href="#[439]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::paint::rgb565::alphaBlend(unsigned short, unsigned short, unsigned char)
</UL>
<BR>[Called By]<UL><LI><a href="#[225]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::PainterRGB565::paint(unsigned char*, short, short, short, short, unsigned char) const
</UL>

<P><STRONG><a name="[4a4]"></a>touchgfx::paint::tearDown()</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, touchgfxgeneratedhal.o(i._ZN8touchgfx5paint8tearDownEv))
<BR><BR>[Called By]<UL><LI><a href="#[224]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::PainterRGB565::tearDown() const
</UL>

<P><STRONG><a name="[43e]"></a>touchgfx::Bitmap::clearCache()</STRONG> (Thumb, 128 bytes, Stack size 16 bytes, bitmap.o(i._ZN8touchgfx6Bitmap10clearCacheEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = touchgfx::Bitmap::clearCache()
</UL>
<BR>[Called By]<UL><LI><a href="#[43d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Bitmap::setCache(unsigned short*, unsigned, unsigned)
</UL>

<P><STRONG><a name="[43c]"></a>touchgfx::Bitmap::registerBitmapDatabase(const touchgfx::Bitmap::BitmapData*, unsigned short, unsigned short*, unsigned, unsigned)</STRONG> (Thumb, 36 bytes, Stack size 16 bytes, bitmap.o(i._ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtjj))
<BR><BR>[Stack]<UL><LI>Max Depth = 72 + Unknown Stack Size
<LI>Call Chain = touchgfx::Bitmap::registerBitmapDatabase(const touchgfx::Bitmap::BitmapData*, unsigned short, unsigned short*, unsigned, unsigned) &rArr; touchgfx::Bitmap::setCache(unsigned short*, unsigned, unsigned) &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[43d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Bitmap::setCache(unsigned short*, unsigned, unsigned)
</UL>
<BR>[Called By]<UL><LI><a href="#[31b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx_init
</UL>

<P><STRONG><a name="[43d]"></a>touchgfx::Bitmap::setCache(unsigned short*, unsigned, unsigned)</STRONG> (Thumb, 58 bytes, Stack size 8 bytes, bitmap.o(i._ZN8touchgfx6Bitmap8setCacheEPtjj))
<BR><BR>[Stack]<UL><LI>Max Depth = 56 + Unknown Stack Size
<LI>Call Chain = touchgfx::Bitmap::setCache(unsigned short*, unsigned, unsigned) &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[43e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Bitmap::clearCache()
<LI><a href="#[2ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;abort
</UL>
<BR>[Called By]<UL><LI><a href="#[43c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Bitmap::registerBitmapDatabase(const touchgfx::Bitmap::BitmapData*, unsigned short, unsigned short*, unsigned, unsigned)
</UL>

<P><STRONG><a name="[345]"></a>touchgfx::Bitmap::Bitmap(unsigned short)</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, cookingview.o(i._ZN8touchgfx6BitmapC1Et))
<BR><BR>[Called By]<UL><LI><a href="#[349]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CookingViewBase::CookingViewBase()
<LI><a href="#[33c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CookingView::changeColorUnselectedMenuBackground()
<LI><a href="#[33d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CookingView::changeColorOverviewedMenuBackground()
<LI><a href="#[339]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CookingView::setUpInfoAboutCookingFood()
<LI><a href="#[383]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InformationViewBase::InformationViewBase()
<LI><a href="#[3af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InformationDemoViewBase::InformationDemoViewBase()
<LI><a href="#[3a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SelectingMenuViewBase::SelectingMenuViewBase()
<LI><a href="#[3a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SelectingMenuView::changeColorUnselectedMenuBackground()
<LI><a href="#[39f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SelectingMenuView::changeColorOverviewedMenuBackground()
<LI><a href="#[39e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SelectingMenuView::changeSelectedItem()
<LI><a href="#[394]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SplashScreenViewBase::SplashScreenViewBase()
<LI><a href="#[362]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SettingsViewBase::SettingsViewBase()
<LI><a href="#[135]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SettingsView::languageButtonClicked()
<LI><a href="#[131]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SettingsView::pressDownKeyFunction()
<LI><a href="#[134]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SettingsView::pressUpKeyFunction()
<LI><a href="#[136]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SettingsView::clockButtonClicked()
<LI><a href="#[34f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SettingsView::customEntrySetup()
<LI><a href="#[36d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::FadeAnimator&lang;touchgfx::Image&rang;::FadeAnimator()
<LI><a href="#[38b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Button::Button()
</UL>

<P><STRONG><a name="[5ae]"></a>touchgfx::Bitmap::Bitmap__sub_object(unsigned short)</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, cookingview.o(i._ZN8touchgfx6BitmapC1Et), UNUSED)

<P><STRONG><a name="[41c]"></a>touchgfx::BlitOp::BlitOp()</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, hal.o(i._ZN8touchgfx6BlitOpC1Ev))
<BR><BR>[Called By]<UL><LI><a href="#[111]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::HAL::blitFill(touchgfx::colortype, unsigned short, unsigned short, unsigned short, unsigned short, unsigned char, unsigned short, touchgfx::Bitmap::BitmapFormat, bool)
<LI><a href="#[10c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::HAL::blitCopy(const unsigned short*, const unsigned char*, unsigned short, unsigned short, unsigned short, unsigned short, unsigned short, unsigned char, bool, unsigned short, touchgfx::Bitmap::BitmapFormat, touchgfx::Bitmap::BitmapFormat, bool)
<LI><a href="#[110]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::HAL::blitCopyGlyph(const unsigned char*, unsigned short, unsigned short, unsigned short, unsigned short, unsigned short, touchgfx::colortype, unsigned char, touchgfx::BlitOperations, bool)
</UL>

<P><STRONG><a name="[5af]"></a>touchgfx::BlitOp::BlitOp__sub_object()</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, hal.o(i._ZN8touchgfx6BlitOpC1Ev), UNUSED)

<P><STRONG><a name="[1fe]"></a>touchgfx::Button::setBitmaps(const touchgfx::Bitmap&, const touchgfx::Bitmap&)</STRONG> (Thumb, 58 bytes, Stack size 24 bytes, button.o(i._ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_))
<BR><BR>[Stack]<UL><LI>Max Depth = 80 + Unknown Stack Size
<LI>Call Chain = touchgfx::Button::setBitmaps(const touchgfx::Bitmap&, const touchgfx::Bitmap&) &rArr; touchgfx::Bitmap::getHeight() const &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[436]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Bitmap::getHeight() const
<LI><a href="#[435]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Bitmap::getWidth() const
</UL>
<BR>[Called By]<UL><LI><a href="#[349]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CookingViewBase::CookingViewBase()
<LI><a href="#[33c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CookingView::changeColorUnselectedMenuBackground()
<LI><a href="#[33d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CookingView::changeColorOverviewedMenuBackground()
<LI><a href="#[3a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SelectingMenuViewBase::SelectingMenuViewBase()
<LI><a href="#[3a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SelectingMenuView::changeColorUnselectedMenuBackground()
<LI><a href="#[39f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SelectingMenuView::changeColorOverviewedMenuBackground()
<LI><a href="#[362]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SettingsViewBase::SettingsViewBase()
<LI><a href="#[135]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SettingsView::languageButtonClicked()
<LI><a href="#[131]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SettingsView::pressDownKeyFunction()
<LI><a href="#[134]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SettingsView::pressUpKeyFunction()
<LI><a href="#[136]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SettingsView::clockButtonClicked()
<LI><a href="#[34f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SettingsView::customEntrySetup()
</UL>
<BR>[Address Reference Count : 2]<UL><LI> cookingviewbase.o(.constdata__ZTVN8touchgfx12FadeAnimatorINS_6ButtonEEE)
<LI> button.o(.constdata__ZTVN8touchgfx6ButtonE)
</UL>
<P><STRONG><a name="[376]"></a>touchgfx::Button::setAlpha(unsigned char)</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, cookingview.o(i._ZN8touchgfx6Button8setAlphaEh))
<BR><BR>[Called By]<UL><LI><a href="#[349]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CookingViewBase::CookingViewBase()
<LI><a href="#[513]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::FadeAnimator&lang;touchgfx::Button&rang;::nextFadeAnimationStep()
</UL>

<P><STRONG><a name="[38b]"></a>touchgfx::Button::Button()</STRONG> (Thumb, 92 bytes, Stack size 16 bytes, selectingmenuviewbase.o(i._ZN8touchgfx6ButtonC1Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = touchgfx::Button::Button() &rArr; touchgfx::Widget::Widget__sub_object() &rArr; touchgfx::Drawable::Drawable__sub_object()
</UL>
<BR>[Calls]<UL><LI><a href="#[33e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Drawable::setTouchable(bool)
<LI><a href="#[345]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Bitmap::Bitmap(unsigned short)
<LI><a href="#[368]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Widget::Widget__sub_object()
<LI><a href="#[2d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[362]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SettingsViewBase::SettingsViewBase()
<LI><a href="#[36c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::FadeAnimator&lang;touchgfx::Button&rang;::FadeAnimator()
</UL>

<P><STRONG><a name="[5b0]"></a>touchgfx::Button::Button__sub_object()</STRONG> (Thumb, 0 bytes, Stack size 16 bytes, selectingmenuviewbase.o(i._ZN8touchgfx6ButtonC1Ev), UNUSED)

<P><STRONG><a name="[250]"></a>touchgfx::Button::~Button()</STRONG> (Thumb, 16 bytes, Stack size 16 bytes, settingsviewbase.o(i._ZN8touchgfx6ButtonD1Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = touchgfx::Button::~Button()
</UL>
<BR>[Calls]<UL><LI><a href="#[256]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Widget::~Widget__sub_object()
</UL>
<BR>[Called By]<UL><LI><a href="#[150]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SettingsViewBase::~SettingsViewBase()
<LI><a href="#[1f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::FadeAnimator&lang;touchgfx::Button&rang;::~FadeAnimator()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> button.o(.constdata__ZTVN8touchgfx6ButtonE)
</UL>
<P><STRONG><a name="[5b1]"></a>touchgfx::Button::~Button__sub_object()</STRONG> (Thumb, 0 bytes, Stack size 16 bytes, settingsviewbase.o(i._ZN8touchgfx6ButtonD1Ev), UNUSED)

<P><STRONG><a name="[43f]"></a>touchgfx::Canvas::close()</STRONG> (Thumb, 66 bytes, Stack size 16 bytes, canvas.o(i._ZN8touchgfx6Canvas5closeEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 272 + Unknown Stack Size
<LI>Call Chain = touchgfx::Canvas::close() &rArr; touchgfx::Rasterizer::lineTo(int, int) &rArr; touchgfx::Outline::lineTo(int, int) &rArr; touchgfx::Outline::renderLine(int, int, int, int) &rArr; touchgfx::Outline::renderScanline(int, int, int, int, int) &rArr; touchgfx::Outline::setCurCellNew(int, int) &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[3cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Outline::wasOutlineTooComplex()
<LI><a href="#[3cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Rasterizer::lineTo(int, int)
</UL>
<BR>[Called By]<UL><LI><a href="#[443]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Canvas::render(unsigned char)
<LI><a href="#[442]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Canvas::moveTo(touchgfx::CWRUtil::Q5, touchgfx::CWRUtil::Q5)
</UL>

<P><STRONG><a name="[252]"></a>touchgfx::Canvas::lineTo(touchgfx::CWRUtil::Q5, touchgfx::CWRUtil::Q5)</STRONG> (Thumb, 138 bytes, Stack size 32 bytes, canvas.o(i._ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_))
<BR><BR>[Stack]<UL><LI>Max Depth = 304 + Unknown Stack Size
<LI>Call Chain = touchgfx::Canvas::lineTo(touchgfx::CWRUtil::Q5, touchgfx::CWRUtil::Q5) &rArr; touchgfx::Rasterizer::moveTo(int, int) &rArr; touchgfx::Outline::moveTo(int, int) &rArr; touchgfx::Outline::lineTo(int, int) &rArr; touchgfx::Outline::renderLine(int, int, int, int) &rArr; touchgfx::Outline::renderScanline(int, int, int, int, int) &rArr; touchgfx::Outline::setCurCellNew(int, int) &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[441]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Canvas::isOutside(const touchgfx::CWRUtil::Q5&, const touchgfx::CWRUtil::Q5&, const touchgfx::CWRUtil::Q5&, const touchgfx::CWRUtil::Q5&) const
<LI><a href="#[440]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Canvas::transformFrameBufferToDisplay(touchgfx::CWRUtil::Q5&, touchgfx::CWRUtil::Q5&) const
<LI><a href="#[3ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Rasterizer::moveTo(int, int)
<LI><a href="#[3cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Rasterizer::lineTo(int, int)
</UL>
<BR>[Called By]<UL><LI><a href="#[254]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Circle::drawCanvasWidget(const touchgfx::Rect&) const
</UL>
<BR>[Address Reference Count : 1]<UL><LI> canvas.o(.constdata__ZTVN8touchgfx6CanvasE)
</UL>
<P><STRONG><a name="[442]"></a>touchgfx::Canvas::moveTo(touchgfx::CWRUtil::Q5, touchgfx::CWRUtil::Q5)</STRONG> (Thumb, 124 bytes, Stack size 32 bytes, canvas.o(i._ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_))
<BR><BR>[Stack]<UL><LI>Max Depth = 304 + Unknown Stack Size
<LI>Call Chain = touchgfx::Canvas::moveTo(touchgfx::CWRUtil::Q5, touchgfx::CWRUtil::Q5) &rArr; touchgfx::Canvas::close() &rArr; touchgfx::Rasterizer::lineTo(int, int) &rArr; touchgfx::Outline::lineTo(int, int) &rArr; touchgfx::Outline::renderLine(int, int, int, int) &rArr; touchgfx::Outline::renderScanline(int, int, int, int, int) &rArr; touchgfx::Outline::setCurCellNew(int, int) &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[441]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Canvas::isOutside(const touchgfx::CWRUtil::Q5&, const touchgfx::CWRUtil::Q5&, const touchgfx::CWRUtil::Q5&, const touchgfx::CWRUtil::Q5&) const
<LI><a href="#[440]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Canvas::transformFrameBufferToDisplay(touchgfx::CWRUtil::Q5&, touchgfx::CWRUtil::Q5&) const
<LI><a href="#[43f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Canvas::close()
<LI><a href="#[3ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Rasterizer::moveTo(int, int)
</UL>
<BR>[Called By]<UL><LI><a href="#[254]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Circle::drawCanvasWidget(const touchgfx::Rect&) const
</UL>

<P><STRONG><a name="[443]"></a>touchgfx::Canvas::render(unsigned char)</STRONG> (Thumb, 306 bytes, Stack size 40 bytes, canvas.o(i._ZN8touchgfx6Canvas6renderEh))
<BR><BR>[Stack]<UL><LI>Max Depth = 480 + Unknown Stack Size
<LI>Call Chain = touchgfx::Canvas::render(unsigned char) &rArr; touchgfx::Rasterizer::render(const touchgfx::AbstractPainter*, unsigned char*, short, unsigned char, unsigned char) &rArr; touchgfx::Outline::closeOutlineAndSortCells() &rArr; touchgfx::Outline::qsortCells(touchgfx::Cell*, unsigned) &rArr; touchgfx::Outline::swapCells(touchgfx::Cell*, touchgfx::Cell*)
</UL>
<BR>[Calls]<UL><LI><a href="#[3bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::HAL::lcd()
<LI><a href="#[422]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::HAL::lockFrameBufferForRenderingMethod(touchgfx::HAL::RenderingMethod)
<LI><a href="#[43f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Canvas::close()
<LI><a href="#[3d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Rasterizer::render(const touchgfx::AbstractPainter*, unsigned char*, short, unsigned char, unsigned char)
<LI><a href="#[2ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;abort
</UL>
<BR>[Called By]<UL><LI><a href="#[254]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Circle::drawCanvasWidget(const touchgfx::Rect&) const
</UL>

<P><STRONG><a name="[444]"></a>touchgfx::Canvas::Canvas(const touchgfx::AbstractPainter*, const touchgfx::Rect&, const touchgfx::Rect&, unsigned char)</STRONG> (Thumb, 246 bytes, Stack size 40 bytes, canvas.o(i._ZN8touchgfx6CanvasC1EPKNS_15AbstractPainterERKNS_4RectES6_h))
<BR><BR>[Stack]<UL><LI>Max Depth = 120 + Unknown Stack Size
<LI>Call Chain = touchgfx::Canvas::Canvas(const touchgfx::AbstractPainter*, const touchgfx::Rect&, const touchgfx::Rect&, unsigned char) &rArr; touchgfx::Outline::Outline() &rArr; touchgfx::Outline::reset() &rArr; touchgfx::CanvasWidgetRenderer::getOutlineBufferSize() &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[33b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::CWRUtil::Q5 touchgfx::CWRUtil::toQ5&lang;int&rang;(T1)
<LI><a href="#[417]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::CanvasWidgetRenderer::hasBuffer()
<LI><a href="#[419]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::DisplayTransformation::transformDisplayToFrameBuffer(touchgfx::Rect&, const touchgfx::Rect&)
<LI><a href="#[3e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::DisplayTransformation::transformDisplayToFrameBuffer(touchgfx::Rect&)
<LI><a href="#[445]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Outline::Outline()
<LI><a href="#[446]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Outline::reset()
<LI><a href="#[2ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;abort
</UL>
<BR>[Called By]<UL><LI><a href="#[254]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Circle::drawCanvasWidget(const touchgfx::Rect&) const
</UL>

<P><STRONG><a name="[5b2]"></a>touchgfx::Canvas::Canvas__sub_object(const touchgfx::AbstractPainter*, const touchgfx::Rect&, const touchgfx::Rect&, unsigned char)</STRONG> (Thumb, 0 bytes, Stack size 40 bytes, canvas.o(i._ZN8touchgfx6CanvasC1EPKNS_15AbstractPainterERKNS_4RectES6_h), UNUSED)

<P><STRONG><a name="[251]"></a>touchgfx::Canvas::~Canvas()</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, circle.o(i._ZN8touchgfx6CanvasD1Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = touchgfx::Canvas::~Canvas()
</UL>
<BR>[Calls]<UL><LI><a href="#[257]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Outline::~Outline()
</UL>
<BR>[Called By]<UL><LI><a href="#[254]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Circle::drawCanvasWidget(const touchgfx::Rect&) const
</UL>
<BR>[Address Reference Count : 1]<UL><LI> canvas.o(.constdata__ZTVN8touchgfx6CanvasE)
</UL>
<P><STRONG><a name="[5b3]"></a>touchgfx::Canvas::~Canvas__sub_object()</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, circle.o(i._ZN8touchgfx6CanvasD1Ev), UNUSED)

<P><STRONG><a name="[378]"></a>touchgfx::Circle::setCapPrecision(int)</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, circle.o(i._ZN8touchgfx6Circle15setCapPrecisionEi))
<BR><BR>[Called By]<UL><LI><a href="#[349]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CookingViewBase::CookingViewBase()
</UL>

<P><STRONG><a name="[36e]"></a>touchgfx::Circle::Circle()</STRONG> (Thumb, 78 bytes, Stack size 16 bytes, circle.o(i._ZN8touchgfx6CircleC1Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = touchgfx::Circle::Circle() &rArr; touchgfx::CWRUtil::Q5 touchgfx::CWRUtil::toQ5&lang;int&rang;(T1)
</UL>
<BR>[Calls]<UL><LI><a href="#[33b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::CWRUtil::Q5 touchgfx::CWRUtil::toQ5&lang;int&rang;(T1)
<LI><a href="#[3ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::CanvasWidget::CanvasWidget__sub_object()
</UL>
<BR>[Called By]<UL><LI><a href="#[349]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CookingViewBase::CookingViewBase()
</UL>

<P><STRONG><a name="[5b4]"></a>touchgfx::Circle::Circle__sub_object()</STRONG> (Thumb, 0 bytes, Stack size 16 bytes, circle.o(i._ZN8touchgfx6CircleC1Ev), UNUSED)

<P><STRONG><a name="[249]"></a>touchgfx::Screen::setupScreen()</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, cookingviewbase.o(i._ZN8touchgfx6Screen11setupScreenEv))
<BR>[Address Reference Count : 7]<UL><LI> informationdemoviewbase.o(.constdata__ZTVN8touchgfx4ViewI24InformationDemoPresenterEE)
<LI> informationviewbase.o(.constdata__ZTVN8touchgfx4ViewI20InformationPresenterEE)
<LI> splashscreenviewbase.o(.constdata__ZTVN8touchgfx4ViewI21SplashScreenPresenterEE)
<LI> cookingviewbase.o(.constdata__ZTVN8touchgfx4ViewI16CookingPresenterEE)
<LI> settingsviewbase.o(.constdata__ZTVN8touchgfx4ViewI17SettingsPresenterEE)
<LI> selectingmenuviewbase.o(.constdata__ZTVN8touchgfx4ViewI22SelectingMenuPresenterEE)
<LI> screen.o(.constdata__ZTVN8touchgfx6ScreenE)
</UL>
<P><STRONG><a name="[415]"></a>touchgfx::Screen::bindTransition(touchgfx::Transition&)</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, screen.o(i._ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE))
<BR><BR>[Called By]<UL><LI><a href="#[414]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::finalizeTransition(touchgfx::Screen*, touchgfx::Presenter*, touchgfx::Transition*)
</UL>

<P><STRONG><a name="[15e]"></a>touchgfx::Screen::handleKeyEvent(unsigned char)</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, splashscreenview.o(i._ZN8touchgfx6Screen14handleKeyEventEh))
<BR>[Address Reference Count : 9]<UL><LI> splashscreenview.o(.constdata__ZTV16SplashScreenView)
<LI> informationdemoviewbase.o(.constdata__ZTVN8touchgfx4ViewI24InformationDemoPresenterEE)
<LI> informationviewbase.o(.constdata__ZTVN8touchgfx4ViewI20InformationPresenterEE)
<LI> splashscreenviewbase.o(.constdata__ZTV20SplashScreenViewBase)
<LI> splashscreenviewbase.o(.constdata__ZTVN8touchgfx4ViewI21SplashScreenPresenterEE)
<LI> cookingviewbase.o(.constdata__ZTVN8touchgfx4ViewI16CookingPresenterEE)
<LI> settingsviewbase.o(.constdata__ZTVN8touchgfx4ViewI17SettingsPresenterEE)
<LI> selectingmenuviewbase.o(.constdata__ZTVN8touchgfx4ViewI22SelectingMenuPresenterEE)
<LI> screen.o(.constdata__ZTVN8touchgfx6ScreenE)
</UL>
<P><STRONG><a name="[13c]"></a>touchgfx::Screen::tearDownScreen()</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, cookingviewbase.o(i._ZN8touchgfx6Screen14tearDownScreenEv))
<BR>[Address Reference Count : 13]<UL><LI> informationdemoviewbase.o(.constdata__ZTV23InformationDemoViewBase)
<LI> informationdemoviewbase.o(.constdata__ZTVN8touchgfx4ViewI24InformationDemoPresenterEE)
<LI> informationviewbase.o(.constdata__ZTV19InformationViewBase)
<LI> informationviewbase.o(.constdata__ZTVN8touchgfx4ViewI20InformationPresenterEE)
<LI> splashscreenviewbase.o(.constdata__ZTV20SplashScreenViewBase)
<LI> splashscreenviewbase.o(.constdata__ZTVN8touchgfx4ViewI21SplashScreenPresenterEE)
<LI> cookingviewbase.o(.constdata__ZTV15CookingViewBase)
<LI> cookingviewbase.o(.constdata__ZTVN8touchgfx4ViewI16CookingPresenterEE)
<LI> settingsviewbase.o(.constdata__ZTV16SettingsViewBase)
<LI> settingsviewbase.o(.constdata__ZTVN8touchgfx4ViewI17SettingsPresenterEE)
<LI> selectingmenuviewbase.o(.constdata__ZTV21SelectingMenuViewBase)
<LI> selectingmenuviewbase.o(.constdata__ZTVN8touchgfx4ViewI22SelectingMenuPresenterEE)
<LI> screen.o(.constdata__ZTVN8touchgfx6ScreenE)
</UL>
<P><STRONG><a name="[ee]"></a>touchgfx::Screen::afterTransition()</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, cookingview.o(i._ZN8touchgfx6Screen15afterTransitionEv))
<BR>[Address Reference Count : 17]<UL><LI> cookingview.o(.constdata__ZTV11CookingView)
<LI> informationdemoview.o(.constdata__ZTV19InformationDemoView)
<LI> informationview.o(.constdata__ZTV15InformationView)
<LI> selectingmenuview.o(.constdata__ZTV17SelectingMenuView)
<LI> settingsview.o(.constdata__ZTV12SettingsView)
<LI> informationdemoviewbase.o(.constdata__ZTV23InformationDemoViewBase)
<LI> informationdemoviewbase.o(.constdata__ZTVN8touchgfx4ViewI24InformationDemoPresenterEE)
<LI> informationviewbase.o(.constdata__ZTV19InformationViewBase)
<LI> informationviewbase.o(.constdata__ZTVN8touchgfx4ViewI20InformationPresenterEE)
<LI> splashscreenviewbase.o(.constdata__ZTVN8touchgfx4ViewI21SplashScreenPresenterEE)
<LI> cookingviewbase.o(.constdata__ZTV15CookingViewBase)
<LI> cookingviewbase.o(.constdata__ZTVN8touchgfx4ViewI16CookingPresenterEE)
<LI> settingsviewbase.o(.constdata__ZTV16SettingsViewBase)
<LI> settingsviewbase.o(.constdata__ZTVN8touchgfx4ViewI17SettingsPresenterEE)
<LI> selectingmenuviewbase.o(.constdata__ZTV21SelectingMenuViewBase)
<LI> selectingmenuviewbase.o(.constdata__ZTVN8touchgfx4ViewI22SelectingMenuPresenterEE)
<LI> screen.o(.constdata__ZTVN8touchgfx6ScreenE)
</UL>
<P><STRONG><a name="[f1]"></a>touchgfx::Screen::handleDragEvent(const touchgfx::DragEvent&)</STRONG> (Thumb, 200 bytes, Stack size 72 bytes, screen.o(i._ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = touchgfx::Screen::handleDragEvent(const touchgfx::DragEvent&) &rArr; touchgfx::Drawable::getAbsoluteRect() const
</UL>
<BR>[Calls]<UL><LI><a href="#[448]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Rect::intersect(short, short) const
<LI><a href="#[447]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Drawable::getAbsoluteRect() const
<LI><a href="#[449]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::ClickEvent::ClickEvent(touchgfx::ClickEvent::ClickEventType, short, short, short)
</UL>
<BR>[Address Reference Count : 19]<UL><LI> cookingview.o(.constdata__ZTV11CookingView)
<LI> informationdemoview.o(.constdata__ZTV19InformationDemoView)
<LI> informationview.o(.constdata__ZTV15InformationView)
<LI> selectingmenuview.o(.constdata__ZTV17SelectingMenuView)
<LI> settingsview.o(.constdata__ZTV12SettingsView)
<LI> splashscreenview.o(.constdata__ZTV16SplashScreenView)
<LI> informationdemoviewbase.o(.constdata__ZTV23InformationDemoViewBase)
<LI> informationdemoviewbase.o(.constdata__ZTVN8touchgfx4ViewI24InformationDemoPresenterEE)
<LI> informationviewbase.o(.constdata__ZTV19InformationViewBase)
<LI> informationviewbase.o(.constdata__ZTVN8touchgfx4ViewI20InformationPresenterEE)
<LI> splashscreenviewbase.o(.constdata__ZTV20SplashScreenViewBase)
<LI> splashscreenviewbase.o(.constdata__ZTVN8touchgfx4ViewI21SplashScreenPresenterEE)
<LI> cookingviewbase.o(.constdata__ZTV15CookingViewBase)
<LI> cookingviewbase.o(.constdata__ZTVN8touchgfx4ViewI16CookingPresenterEE)
<LI> settingsviewbase.o(.constdata__ZTV16SettingsViewBase)
<LI> settingsviewbase.o(.constdata__ZTVN8touchgfx4ViewI17SettingsPresenterEE)
<LI> selectingmenuviewbase.o(.constdata__ZTV21SelectingMenuViewBase)
<LI> selectingmenuviewbase.o(.constdata__ZTVN8touchgfx4ViewI22SelectingMenuPresenterEE)
<LI> screen.o(.constdata__ZTVN8touchgfx6ScreenE)
</UL>
<P><STRONG><a name="[13d]"></a>touchgfx::Screen::handleTickEvent()</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, splashscreenview.o(i._ZN8touchgfx6Screen15handleTickEventEv))
<BR>[Address Reference Count : 14]<UL><LI> splashscreenview.o(.constdata__ZTV16SplashScreenView)
<LI> informationdemoviewbase.o(.constdata__ZTV23InformationDemoViewBase)
<LI> informationdemoviewbase.o(.constdata__ZTVN8touchgfx4ViewI24InformationDemoPresenterEE)
<LI> informationviewbase.o(.constdata__ZTV19InformationViewBase)
<LI> informationviewbase.o(.constdata__ZTVN8touchgfx4ViewI20InformationPresenterEE)
<LI> splashscreenviewbase.o(.constdata__ZTV20SplashScreenViewBase)
<LI> splashscreenviewbase.o(.constdata__ZTVN8touchgfx4ViewI21SplashScreenPresenterEE)
<LI> cookingviewbase.o(.constdata__ZTV15CookingViewBase)
<LI> cookingviewbase.o(.constdata__ZTVN8touchgfx4ViewI16CookingPresenterEE)
<LI> settingsviewbase.o(.constdata__ZTV16SettingsViewBase)
<LI> settingsviewbase.o(.constdata__ZTVN8touchgfx4ViewI17SettingsPresenterEE)
<LI> selectingmenuviewbase.o(.constdata__ZTV21SelectingMenuViewBase)
<LI> selectingmenuviewbase.o(.constdata__ZTVN8touchgfx4ViewI22SelectingMenuPresenterEE)
<LI> screen.o(.constdata__ZTVN8touchgfx6ScreenE)
</UL>
<P><STRONG><a name="[f0]"></a>touchgfx::Screen::handleClickEvent(const touchgfx::ClickEvent&)</STRONG> (Thumb, 158 bytes, Stack size 56 bytes, screen.o(i._ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE))
<BR><BR>[Stack]<UL><LI>Max Depth = 248<LI>Call Chain = touchgfx::Screen::handleClickEvent(const touchgfx::ClickEvent&) &rArr; touchgfx::Container::getLastChildNear(short, short, touchgfx::Drawable**, short*, short*) &rArr; touchgfx::Container::getLastChild(short, short, touchgfx::Drawable**) &rArr; touchgfx::Rect::intersect(short, short) const
</UL>
<BR>[Calls]<UL><LI><a href="#[20d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Container::getLastChildNear(short, short, touchgfx::Drawable**, short*, short*)
<LI><a href="#[447]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Drawable::getAbsoluteRect() const
<LI><a href="#[449]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::ClickEvent::ClickEvent(touchgfx::ClickEvent::ClickEventType, short, short, short)
</UL>
<BR>[Address Reference Count : 19]<UL><LI> cookingview.o(.constdata__ZTV11CookingView)
<LI> informationdemoview.o(.constdata__ZTV19InformationDemoView)
<LI> informationview.o(.constdata__ZTV15InformationView)
<LI> selectingmenuview.o(.constdata__ZTV17SelectingMenuView)
<LI> settingsview.o(.constdata__ZTV12SettingsView)
<LI> splashscreenview.o(.constdata__ZTV16SplashScreenView)
<LI> informationdemoviewbase.o(.constdata__ZTV23InformationDemoViewBase)
<LI> informationdemoviewbase.o(.constdata__ZTVN8touchgfx4ViewI24InformationDemoPresenterEE)
<LI> informationviewbase.o(.constdata__ZTV19InformationViewBase)
<LI> informationviewbase.o(.constdata__ZTVN8touchgfx4ViewI20InformationPresenterEE)
<LI> splashscreenviewbase.o(.constdata__ZTV20SplashScreenViewBase)
<LI> splashscreenviewbase.o(.constdata__ZTVN8touchgfx4ViewI21SplashScreenPresenterEE)
<LI> cookingviewbase.o(.constdata__ZTV15CookingViewBase)
<LI> cookingviewbase.o(.constdata__ZTVN8touchgfx4ViewI16CookingPresenterEE)
<LI> settingsviewbase.o(.constdata__ZTV16SettingsViewBase)
<LI> settingsviewbase.o(.constdata__ZTVN8touchgfx4ViewI17SettingsPresenterEE)
<LI> selectingmenuviewbase.o(.constdata__ZTV21SelectingMenuViewBase)
<LI> selectingmenuviewbase.o(.constdata__ZTVN8touchgfx4ViewI22SelectingMenuPresenterEE)
<LI> screen.o(.constdata__ZTVN8touchgfx6ScreenE)
</UL>
<P><STRONG><a name="[f2]"></a>touchgfx::Screen::handleGestureEvent(const touchgfx::GestureEvent&)</STRONG> (Thumb, 82 bytes, Stack size 32 bytes, screen.o(i._ZN8touchgfx6Screen18handleGestureEventERKNS_12GestureEventE))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = touchgfx::Screen::handleGestureEvent(const touchgfx::GestureEvent&) &rArr; touchgfx::Drawable::getAbsoluteRect() const
</UL>
<BR>[Calls]<UL><LI><a href="#[447]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Drawable::getAbsoluteRect() const
</UL>
<BR>[Address Reference Count : 19]<UL><LI> cookingview.o(.constdata__ZTV11CookingView)
<LI> informationdemoview.o(.constdata__ZTV19InformationDemoView)
<LI> informationview.o(.constdata__ZTV15InformationView)
<LI> selectingmenuview.o(.constdata__ZTV17SelectingMenuView)
<LI> settingsview.o(.constdata__ZTV12SettingsView)
<LI> splashscreenview.o(.constdata__ZTV16SplashScreenView)
<LI> informationdemoviewbase.o(.constdata__ZTV23InformationDemoViewBase)
<LI> informationdemoviewbase.o(.constdata__ZTVN8touchgfx4ViewI24InformationDemoPresenterEE)
<LI> informationviewbase.o(.constdata__ZTV19InformationViewBase)
<LI> informationviewbase.o(.constdata__ZTVN8touchgfx4ViewI20InformationPresenterEE)
<LI> splashscreenviewbase.o(.constdata__ZTV20SplashScreenViewBase)
<LI> splashscreenviewbase.o(.constdata__ZTVN8touchgfx4ViewI21SplashScreenPresenterEE)
<LI> cookingviewbase.o(.constdata__ZTV15CookingViewBase)
<LI> cookingviewbase.o(.constdata__ZTVN8touchgfx4ViewI16CookingPresenterEE)
<LI> settingsviewbase.o(.constdata__ZTV16SettingsViewBase)
<LI> settingsviewbase.o(.constdata__ZTVN8touchgfx4ViewI17SettingsPresenterEE)
<LI> selectingmenuviewbase.o(.constdata__ZTV21SelectingMenuViewBase)
<LI> selectingmenuviewbase.o(.constdata__ZTVN8touchgfx4ViewI22SelectingMenuPresenterEE)
<LI> screen.o(.constdata__ZTVN8touchgfx6ScreenE)
</UL>
<P><STRONG><a name="[374]"></a>touchgfx::Screen::add(touchgfx::Drawable&)</STRONG> (Thumb, 16 bytes, Stack size 16 bytes, cookingviewbase.o(i._ZN8touchgfx6Screen3addERNS_8DrawableE))
<BR><BR>[Stack]<UL><LI>Max Depth = 72 + Unknown Stack Size
<LI>Call Chain = touchgfx::Screen::add(touchgfx::Drawable&) &rArr; touchgfx::Container::add(touchgfx::Drawable&) &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[20c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Container::add(touchgfx::Drawable&)
</UL>
<BR>[Called By]<UL><LI><a href="#[349]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CookingViewBase::CookingViewBase()
<LI><a href="#[383]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InformationViewBase::InformationViewBase()
<LI><a href="#[3af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InformationDemoViewBase::InformationDemoViewBase()
<LI><a href="#[3a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SelectingMenuViewBase::SelectingMenuViewBase()
<LI><a href="#[394]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SplashScreenViewBase::SplashScreenViewBase()
<LI><a href="#[362]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SettingsViewBase::SettingsViewBase()
</UL>

<P><STRONG><a name="[ec]"></a>touchgfx::Screen::draw(touchgfx::Rect&)</STRONG> (Thumb, 78 bytes, Stack size 24 bytes, screen.o(i._ZN8touchgfx6Screen4drawERNS_4RectE))
<BR><BR>[Stack]<UL><LI>Max Depth = 192<LI>Call Chain = touchgfx::Screen::draw(touchgfx::Rect&) &rArr; touchgfx::Screen::startSMOC(const touchgfx::Rect&) &rArr; touchgfx::Screen::JSMOC(const touchgfx::Rect&, touchgfx::Drawable*) &rArr;  touchgfx::Screen::JSMOC(const touchgfx::Rect&, touchgfx::Drawable*) (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[207]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Container::draw(const touchgfx::Rect&) const
<LI><a href="#[447]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Drawable::getAbsoluteRect() const
<LI><a href="#[44a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Rect::operator &(const touchgfx::Rect&) const
<LI><a href="#[44b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Screen::startSMOC(const touchgfx::Rect&)
</UL>
<BR>[Address Reference Count : 19]<UL><LI> cookingview.o(.constdata__ZTV11CookingView)
<LI> informationdemoview.o(.constdata__ZTV19InformationDemoView)
<LI> informationview.o(.constdata__ZTV15InformationView)
<LI> selectingmenuview.o(.constdata__ZTV17SelectingMenuView)
<LI> settingsview.o(.constdata__ZTV12SettingsView)
<LI> splashscreenview.o(.constdata__ZTV16SplashScreenView)
<LI> informationdemoviewbase.o(.constdata__ZTV23InformationDemoViewBase)
<LI> informationdemoviewbase.o(.constdata__ZTVN8touchgfx4ViewI24InformationDemoPresenterEE)
<LI> informationviewbase.o(.constdata__ZTV19InformationViewBase)
<LI> informationviewbase.o(.constdata__ZTVN8touchgfx4ViewI20InformationPresenterEE)
<LI> splashscreenviewbase.o(.constdata__ZTV20SplashScreenViewBase)
<LI> splashscreenviewbase.o(.constdata__ZTVN8touchgfx4ViewI21SplashScreenPresenterEE)
<LI> cookingviewbase.o(.constdata__ZTV15CookingViewBase)
<LI> cookingviewbase.o(.constdata__ZTVN8touchgfx4ViewI16CookingPresenterEE)
<LI> settingsviewbase.o(.constdata__ZTV16SettingsViewBase)
<LI> settingsviewbase.o(.constdata__ZTVN8touchgfx4ViewI17SettingsPresenterEE)
<LI> selectingmenuviewbase.o(.constdata__ZTV21SelectingMenuViewBase)
<LI> selectingmenuviewbase.o(.constdata__ZTVN8touchgfx4ViewI22SelectingMenuPresenterEE)
<LI> screen.o(.constdata__ZTVN8touchgfx6ScreenE)
</UL>
<P><STRONG><a name="[3e8]"></a>touchgfx::Screen::draw()</STRONG> (Thumb, 40 bytes, Stack size 24 bytes, screen.o(i._ZN8touchgfx6Screen4drawEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = touchgfx::Screen::draw() &rArr; touchgfx::Rect::Rect(short, short, short, short)
</UL>
<BR>[Calls]<UL><LI><a href="#[3d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Rect::Rect(short, short, short, short)
</UL>
<BR>[Called By]<UL><LI><a href="#[3b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Application::Application()
</UL>

<P><STRONG><a name="[44c]"></a>touchgfx::Screen::JSMOC(const touchgfx::Rect&, touchgfx::Drawable*)</STRONG> (Thumb, 532 bytes, Stack size 72 bytes, screen.o(i._ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE))
<BR><BR>[Stack]<UL><LI>Max Depth = 128 + In Cycle
<LI>Call Chain = touchgfx::Screen::JSMOC(const touchgfx::Rect&, touchgfx::Drawable*) &rArr;  touchgfx::Screen::JSMOC(const touchgfx::Rect&, touchgfx::Drawable*) (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Rect::Rect()
<LI><a href="#[3d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Rect::Rect(short, short, short, short)
<LI><a href="#[3da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Rect::intersect(const touchgfx::Rect&) const
<LI><a href="#[44a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Rect::operator &(const touchgfx::Rect&) const
<LI><a href="#[3d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Rect::isEmpty() const
<LI><a href="#[3dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Rect::bottom() const
<LI><a href="#[3db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Rect::right() const
<LI><a href="#[44d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Drawable::getCachedVisibleRect()
<LI><a href="#[44e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Drawable::getCachedAbsY()
<LI><a href="#[44f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Drawable::getCachedAbsX()
<LI><a href="#[44c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Screen::JSMOC(const touchgfx::Rect&, touchgfx::Drawable*)
</UL>
<BR>[Called By]<UL><LI><a href="#[44b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Screen::startSMOC(const touchgfx::Rect&)
<LI><a href="#[44c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Screen::JSMOC(const touchgfx::Rect&, touchgfx::Drawable*)
</UL>

<P><STRONG><a name="[44b]"></a>touchgfx::Screen::startSMOC(const touchgfx::Rect&)</STRONG> (Thumb, 84 bytes, Stack size 40 bytes, screen.o(i._ZN8touchgfx6Screen9startSMOCERKNS_4RectE))
<BR><BR>[Stack]<UL><LI>Max Depth = 168<LI>Call Chain = touchgfx::Screen::startSMOC(const touchgfx::Rect&) &rArr; touchgfx::Screen::JSMOC(const touchgfx::Rect&, touchgfx::Drawable*) &rArr;  touchgfx::Screen::JSMOC(const touchgfx::Rect&, touchgfx::Drawable*) (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[20b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Container::setupDrawChain(const touchgfx::Rect&, touchgfx::Drawable**)
<LI><a href="#[447]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Drawable::getAbsoluteRect() const
<LI><a href="#[3d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Rect::Rect(short, short, short, short)
<LI><a href="#[44c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Screen::JSMOC(const touchgfx::Rect&, touchgfx::Drawable*)
</UL>
<BR>[Called By]<UL><LI><a href="#[ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Screen::draw(touchgfx::Rect&)
</UL>

<P><STRONG><a name="[367]"></a>touchgfx::Screen::Screen()</STRONG> (Thumb, 124 bytes, Stack size 24 bytes, screen.o(i._ZN8touchgfx6ScreenC1Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = touchgfx::Screen::Screen()
</UL>
<BR>[Calls]<UL><LI><a href="#[dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Rect::Rect()
</UL>
<BR>[Called By]<UL><LI><a href="#[349]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CookingViewBase::CookingViewBase()
<LI><a href="#[383]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InformationViewBase::InformationViewBase()
<LI><a href="#[3af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InformationDemoViewBase::InformationDemoViewBase()
<LI><a href="#[3a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SelectingMenuViewBase::SelectingMenuViewBase()
<LI><a href="#[394]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SplashScreenViewBase::SplashScreenViewBase()
<LI><a href="#[362]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SettingsViewBase::SettingsViewBase()
</UL>

<P><STRONG><a name="[5b5]"></a>touchgfx::Screen::Screen__sub_object()</STRONG> (Thumb, 0 bytes, Stack size 24 bytes, screen.o(i._ZN8touchgfx6ScreenC1Ev), UNUSED)

<P><STRONG><a name="[255]"></a>touchgfx::Screen::~Screen()</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, screen.o(i._ZN8touchgfx6ScreenD1Ev))
<BR>[Address Reference Count : 1]<UL><LI> screen.o(.constdata__ZTVN8touchgfx6ScreenE)
</UL>
<P><STRONG><a name="[5b6]"></a>touchgfx::Screen::~Screen__sub_object()</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, screen.o(i._ZN8touchgfx6ScreenD1Ev), UNUSED)

<P><STRONG><a name="[1cf]"></a>touchgfx::Widget::getLastChild(short, short, touchgfx::Drawable**)</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, cookingviewbase.o(i._ZN8touchgfx6Widget12getLastChildEssPPNS_8DrawableE))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = touchgfx::Widget::getLastChild(short, short, touchgfx::Drawable**)
</UL>
<BR>[Address Reference Count : 16]<UL><LI> cookingviewbase.o(.constdata__ZTVN8touchgfx6WidgetE)
<LI> cookingviewbase.o(.constdata__ZTVN8touchgfx24TextAreaWithTwoWildcardsE)
<LI> cookingviewbase.o(.constdata__ZTVN8touchgfx12FadeAnimatorINS_6ButtonEEE)
<LI> cookingviewbase.o(.constdata__ZTVN8touchgfx12FadeAnimatorINS_5ImageEEE)
<LI> cookingviewbase.o(.constdata__ZTVN8touchgfx12FadeAnimatorINS_24TextAreaWithTwoWildcardsEEE)
<LI> cookingviewbase.o(.constdata__ZTVN8touchgfx12FadeAnimatorINS_8TextAreaEEE)
<LI> abstractbutton.o(.constdata__ZTVN8touchgfx14AbstractButtonE)
<LI> box.o(.constdata__ZTVN8touchgfx3BoxE)
<LI> boxwithborder.o(.constdata__ZTVN8touchgfx13BoxWithBorderE)
<LI> button.o(.constdata__ZTVN8touchgfx6ButtonE)
<LI> canvaswidget.o(.constdata__ZTVN8touchgfx12CanvasWidgetE)
<LI> circle.o(.constdata__ZTVN8touchgfx6CircleE)
<LI> settingsviewbase.o(.constdata__ZTVN8touchgfx23TextAreaWithOneWildcardE)
<LI> image.o(.constdata__ZTVN8touchgfx5ImageE)
<LI> textareawithwildcard.o(.constdata__ZTVN8touchgfx24TextAreaWithWildcardBaseE)
<LI> textarea.o(.constdata__ZTVN8touchgfx8TextAreaE)
</UL>
<P><STRONG><a name="[368]"></a>touchgfx::Widget::Widget__sub_object()</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, cookingviewbase.o(i._ZN8touchgfx6WidgetC2Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = touchgfx::Widget::Widget__sub_object() &rArr; touchgfx::Drawable::Drawable__sub_object()
</UL>
<BR>[Calls]<UL><LI><a href="#[36b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Drawable::Drawable__sub_object()
</UL>
<BR>[Called By]<UL><LI><a href="#[349]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CookingViewBase::CookingViewBase()
<LI><a href="#[383]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InformationViewBase::InformationViewBase()
<LI><a href="#[3af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InformationDemoViewBase::InformationDemoViewBase()
<LI><a href="#[394]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SplashScreenViewBase::SplashScreenViewBase()
<LI><a href="#[371]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextArea::TextArea()
<LI><a href="#[36a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Image::Image(const touchgfx::Bitmap&)
<LI><a href="#[386]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Box::Box()
<LI><a href="#[38b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Button::Button()
</UL>

<P><STRONG><a name="[5b7]"></a>touchgfx::Widget::~Widget()</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, cookingviewbase.o(i._ZN8touchgfx6WidgetD2Ev), UNUSED)

<P><STRONG><a name="[256]"></a>touchgfx::Widget::~Widget__sub_object()</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, cookingviewbase.o(i._ZN8touchgfx6WidgetD2Ev))
<BR><BR>[Called By]<UL><LI><a href="#[13a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CookingViewBase::~CookingViewBase()
<LI><a href="#[188]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InformationViewBase::~InformationViewBase()
<LI><a href="#[1b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InformationDemoViewBase::~InformationDemoViewBase()
<LI><a href="#[18f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SplashScreenViewBase::~SplashScreenViewBase()
<LI><a href="#[283]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextArea::~TextArea()
<LI><a href="#[24f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Image::~Image()
<LI><a href="#[23b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Box::~Box()
<LI><a href="#[250]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Button::~Button()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> cookingviewbase.o(.constdata__ZTVN8touchgfx6WidgetE)
</UL>
<P><STRONG><a name="[450]"></a>touchgfx::muldiv(int, int, int, int&)</STRONG> (Thumb, 58 bytes, Stack size 20 bytes, utils.o(i._ZN8touchgfx6muldivEiiiRi))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = touchgfx::muldiv(int, int, int, int&) &rArr; touchgfx::muldivu(unsigned, unsigned, unsigned, unsigned&) &rArr;  touchgfx::muldivu(unsigned, unsigned, unsigned, unsigned&) (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[451]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::muldivu(unsigned, unsigned, unsigned, unsigned&)
</UL>
<BR>[Called By]<UL><LI><a href="#[4af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::CWRUtil::Q5::operator *(const touchgfx::CWRUtil::Q15&) const
<LI><a href="#[452]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::CWRUtil::sine(touchgfx::CWRUtil::Q5)
</UL>

<P><STRONG><a name="[377]"></a>touchgfx::CWRUtil::Q5::Q5(int)</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, cookingview.o(i._ZN8touchgfx7CWRUtil2Q5C1Ei))
<BR><BR>[Called By]<UL><LI><a href="#[349]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CookingViewBase::CookingViewBase()
<LI><a href="#[33b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::CWRUtil::Q5 touchgfx::CWRUtil::toQ5&lang;int&rang;(T1)
<LI><a href="#[33a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;void touchgfx::Circle::updateArcEnd&lang;float&rang;(T1)
</UL>

<P><STRONG><a name="[5b8]"></a>touchgfx::CWRUtil::Q5::Q5__sub_object(int)</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, cookingview.o(i._ZN8touchgfx7CWRUtil2Q5C1Ei), UNUSED)

<P><STRONG><a name="[452]"></a>touchgfx::CWRUtil::sine(touchgfx::CWRUtil::Q5)</STRONG> (Thumb, 104 bytes, Stack size 32 bytes, circle.o(i._ZN8touchgfx7CWRUtil4sineENS0_2Q5E))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = touchgfx::CWRUtil::sine(touchgfx::CWRUtil::Q5) &rArr; touchgfx::muldiv(int, int, int, int&) &rArr; touchgfx::muldivu(unsigned, unsigned, unsigned, unsigned&) &rArr;  touchgfx::muldivu(unsigned, unsigned, unsigned, unsigned&) (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[33b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::CWRUtil::Q5 touchgfx::CWRUtil::toQ5&lang;int&rang;(T1)
<LI><a href="#[450]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::muldiv(int, int, int, int&)
<LI><a href="#[453]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;T1 touchgfx::CWRUtil::Q5::to&lang;int&rang;() const
<LI><a href="#[454]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::CWRUtil::sine(int)
</UL>
<BR>[Called By]<UL><LI><a href="#[4b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Circle::updateMinMaxAngleSolid(const touchgfx::CWRUtil::Q5&, touchgfx::CWRUtil::Q5&, touchgfx::CWRUtil::Q5&, touchgfx::CWRUtil::Q5&, touchgfx::CWRUtil::Q5&) const
<LI><a href="#[4b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Circle::updateMinMaxAngleLine(const touchgfx::CWRUtil::Q5&, const touchgfx::CWRUtil::Q5&, touchgfx::CWRUtil::Q5&, touchgfx::CWRUtil::Q5&, touchgfx::CWRUtil::Q5&, touchgfx::CWRUtil::Q5&) const
<LI><a href="#[4b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Circle::lineToXYAngleRadius2(touchgfx::Canvas&, const touchgfx::CWRUtil::Q5&, const touchgfx::CWRUtil::Q5&, const touchgfx::CWRUtil::Q5&, const touchgfx::CWRUtil::Q5&) const
<LI><a href="#[254]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Circle::drawCanvasWidget(const touchgfx::Rect&) const
<LI><a href="#[455]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::CWRUtil::cosine(touchgfx::CWRUtil::Q5)
</UL>

<P><STRONG><a name="[454]"></a>touchgfx::CWRUtil::sine(int)</STRONG> (Thumb, 82 bytes, Stack size 12 bytes, circle.o(i._ZN8touchgfx7CWRUtil4sineEi))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = touchgfx::CWRUtil::sine(int)
</UL>
<BR>[Called By]<UL><LI><a href="#[254]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Circle::drawCanvasWidget(const touchgfx::Rect&) const
<LI><a href="#[452]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::CWRUtil::sine(touchgfx::CWRUtil::Q5)
</UL>

<P><STRONG><a name="[455]"></a>touchgfx::CWRUtil::cosine(touchgfx::CWRUtil::Q5)</STRONG> (Thumb, 26 bytes, Stack size 16 bytes, circle.o(i._ZN8touchgfx7CWRUtil6cosineENS0_2Q5E))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = touchgfx::CWRUtil::cosine(touchgfx::CWRUtil::Q5) &rArr; touchgfx::CWRUtil::sine(touchgfx::CWRUtil::Q5) &rArr; touchgfx::muldiv(int, int, int, int&) &rArr; touchgfx::muldivu(unsigned, unsigned, unsigned, unsigned&) &rArr;  touchgfx::muldivu(unsigned, unsigned, unsigned, unsigned&) (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[33b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::CWRUtil::Q5 touchgfx::CWRUtil::toQ5&lang;int&rang;(T1)
<LI><a href="#[456]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::CWRUtil::Q5::operator -(const touchgfx::CWRUtil::Q5&) const
<LI><a href="#[452]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::CWRUtil::sine(touchgfx::CWRUtil::Q5)
</UL>
<BR>[Called By]<UL><LI><a href="#[4b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Circle::updateMinMaxAngleSolid(const touchgfx::CWRUtil::Q5&, touchgfx::CWRUtil::Q5&, touchgfx::CWRUtil::Q5&, touchgfx::CWRUtil::Q5&, touchgfx::CWRUtil::Q5&) const
<LI><a href="#[4b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Circle::updateMinMaxAngleLine(const touchgfx::CWRUtil::Q5&, const touchgfx::CWRUtil::Q5&, touchgfx::CWRUtil::Q5&, touchgfx::CWRUtil::Q5&, touchgfx::CWRUtil::Q5&, touchgfx::CWRUtil::Q5&) const
<LI><a href="#[4b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Circle::lineToXYAngleRadius2(touchgfx::Canvas&, const touchgfx::CWRUtil::Q5&, const touchgfx::CWRUtil::Q5&, const touchgfx::CWRUtil::Q5&, const touchgfx::CWRUtil::Q5&) const
<LI><a href="#[254]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Circle::drawCanvasWidget(const touchgfx::Rect&) const
</UL>

<P><STRONG><a name="[45e]"></a>touchgfx::Outline::addCurCell()</STRONG> (Thumb, 46 bytes, Stack size 0 bytes, outline.o(i._ZN8touchgfx7Outline10addCurCellEv))
<BR><BR>[Called By]<UL><LI><a href="#[3d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Outline::closeOutlineAndSortCells()
<LI><a href="#[45d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Outline::setCurCellNew(int, int)
<LI><a href="#[45c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Outline::setCurCell(int, int)
</UL>

<P><STRONG><a name="[457]"></a>touchgfx::Outline::qsortCells(touchgfx::Cell*, unsigned)</STRONG> (Thumb, 244 bytes, Stack size 352 bytes, outline.o(i._ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj))
<BR><BR>[Stack]<UL><LI>Max Depth = 360<LI>Call Chain = touchgfx::Outline::qsortCells(touchgfx::Cell*, unsigned) &rArr; touchgfx::Outline::swapCells(touchgfx::Cell*, touchgfx::Cell*)
</UL>
<BR>[Calls]<UL><LI><a href="#[458]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Outline::swapCells(touchgfx::Cell*, touchgfx::Cell*)
<LI><a href="#[459]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Outline::lessThan(const touchgfx::Cell*, const touchgfx::Cell*)
</UL>
<BR>[Called By]<UL><LI><a href="#[3d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Outline::closeOutlineAndSortCells()
</UL>

<P><STRONG><a name="[45a]"></a>touchgfx::Outline::renderLine(int, int, int, int)</STRONG> (Thumb, 292 bytes, Stack size 72 bytes, outline.o(i._ZN8touchgfx7Outline10renderLineEiiii))
<BR><BR>[Stack]<UL><LI>Max Depth = 216 + Unknown Stack Size
<LI>Call Chain = touchgfx::Outline::renderLine(int, int, int, int) &rArr; touchgfx::Outline::renderScanline(int, int, int, int, int) &rArr; touchgfx::Outline::setCurCellNew(int, int) &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[45b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Outline::renderScanline(int, int, int, int, int)
<LI><a href="#[45d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Outline::setCurCellNew(int, int)
<LI><a href="#[45c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Outline::setCurCell(int, int)
</UL>
<BR>[Called By]<UL><LI><a href="#[3cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Outline::lineTo(int, int)
</UL>

<P><STRONG><a name="[45c]"></a>touchgfx::Outline::setCurCell(int, int)</STRONG> (Thumb, 50 bytes, Stack size 24 bytes, outline.o(i._ZN8touchgfx7Outline10setCurCellEii))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = touchgfx::Outline::setCurCell(int, int) &rArr; touchgfx::Cell::set(int, int, int, int)
</UL>
<BR>[Calls]<UL><LI><a href="#[45e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Outline::addCurCell()
<LI><a href="#[45f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Cell::set(int, int, int, int)
</UL>
<BR>[Called By]<UL><LI><a href="#[3cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Outline::moveTo(int, int)
<LI><a href="#[45b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Outline::renderScanline(int, int, int, int, int)
<LI><a href="#[45a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Outline::renderLine(int, int, int, int)
</UL>

<P><STRONG><a name="[45d]"></a>touchgfx::Outline::setCurCellNew(int, int)</STRONG> (Thumb, 54 bytes, Stack size 24 bytes, outline.o(i._ZN8touchgfx7Outline13setCurCellNewEii))
<BR><BR>[Stack]<UL><LI>Max Depth = 72 + Unknown Stack Size
<LI>Call Chain = touchgfx::Outline::setCurCellNew(int, int) &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[2ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;abort
<LI><a href="#[45e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Outline::addCurCell()
<LI><a href="#[45f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Cell::set(int, int, int, int)
</UL>
<BR>[Called By]<UL><LI><a href="#[45b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Outline::renderScanline(int, int, int, int, int)
<LI><a href="#[45a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Outline::renderLine(int, int, int, int)
</UL>

<P><STRONG><a name="[45b]"></a>touchgfx::Outline::renderScanline(int, int, int, int, int)</STRONG> (Thumb, 270 bytes, Stack size 72 bytes, outline.o(i._ZN8touchgfx7Outline14renderScanlineEiiiii))
<BR><BR>[Stack]<UL><LI>Max Depth = 144 + Unknown Stack Size
<LI>Call Chain = touchgfx::Outline::renderScanline(int, int, int, int, int) &rArr; touchgfx::Outline::setCurCellNew(int, int) &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[45d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Outline::setCurCellNew(int, int)
<LI><a href="#[45c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Outline::setCurCell(int, int)
<LI><a href="#[460]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Cell::addCover(int, int)
</UL>
<BR>[Called By]<UL><LI><a href="#[45a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Outline::renderLine(int, int, int, int)
</UL>

<P><STRONG><a name="[3cc]"></a>touchgfx::Outline::wasOutlineTooComplex()</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, canvas.o(i._ZN8touchgfx7Outline20wasOutlineTooComplexEv))
<BR><BR>[Called By]<UL><LI><a href="#[43f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Canvas::close()
<LI><a href="#[3d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Rasterizer::render(const touchgfx::AbstractPainter*, unsigned char*, short, unsigned char, unsigned char)
<LI><a href="#[3ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Rasterizer::moveTo(int, int)
<LI><a href="#[3cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Rasterizer::lineTo(int, int)
</UL>

<P><STRONG><a name="[3d1]"></a>touchgfx::Outline::closeOutlineAndSortCells()</STRONG> (Thumb, 72 bytes, Stack size 8 bytes, outline.o(i._ZN8touchgfx7Outline24closeOutlineAndSortCellsEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 368 + Unknown Stack Size
<LI>Call Chain = touchgfx::Outline::closeOutlineAndSortCells() &rArr; touchgfx::Outline::qsortCells(touchgfx::Cell*, unsigned) &rArr; touchgfx::Outline::swapCells(touchgfx::Cell*, touchgfx::Cell*)
</UL>
<BR>[Calls]<UL><LI><a href="#[3cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Outline::lineTo(int, int)
<LI><a href="#[457]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Outline::qsortCells(touchgfx::Cell*, unsigned)
<LI><a href="#[45e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Outline::addCurCell()
</UL>
<BR>[Called By]<UL><LI><a href="#[3d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Rasterizer::render(const touchgfx::AbstractPainter*, unsigned char*, short, unsigned char, unsigned char)
</UL>

<P><STRONG><a name="[446]"></a>touchgfx::Outline::reset()</STRONG> (Thumb, 66 bytes, Stack size 16 bytes, outline.o(i._ZN8touchgfx7Outline5resetEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 72 + Unknown Stack Size
<LI>Call Chain = touchgfx::Outline::reset() &rArr; touchgfx::CanvasWidgetRenderer::getOutlineBufferSize() &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[418]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::CanvasWidgetRenderer::getOutlineBufferSize()
<LI><a href="#[416]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::CanvasWidgetRenderer::getOutlineBuffer()
<LI><a href="#[2ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;abort
<LI><a href="#[45f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Cell::set(int, int, int, int)
</UL>
<BR>[Called By]<UL><LI><a href="#[444]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Canvas::Canvas(const touchgfx::AbstractPainter*, const touchgfx::Rect&, const touchgfx::Rect&, unsigned char)
<LI><a href="#[445]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Outline::Outline()
<LI><a href="#[3cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Outline::moveTo(int, int)
</UL>

<P><STRONG><a name="[3cd]"></a>touchgfx::Outline::lineTo(int, int)</STRONG> (Thumb, 56 bytes, Stack size 24 bytes, outline.o(i._ZN8touchgfx7Outline6lineToEii))
<BR><BR>[Stack]<UL><LI>Max Depth = 240 + Unknown Stack Size
<LI>Call Chain = touchgfx::Outline::lineTo(int, int) &rArr; touchgfx::Outline::renderLine(int, int, int, int) &rArr; touchgfx::Outline::renderScanline(int, int, int, int, int) &rArr; touchgfx::Outline::setCurCellNew(int, int) &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[45a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Outline::renderLine(int, int, int, int)
</UL>
<BR>[Called By]<UL><LI><a href="#[3cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Outline::moveTo(int, int)
<LI><a href="#[3d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Outline::closeOutlineAndSortCells()
<LI><a href="#[3cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Rasterizer::lineTo(int, int)
</UL>

<P><STRONG><a name="[3cf]"></a>touchgfx::Outline::moveTo(int, int)</STRONG> (Thumb, 60 bytes, Stack size 16 bytes, outline.o(i._ZN8touchgfx7Outline6moveToEii))
<BR><BR>[Stack]<UL><LI>Max Depth = 256 + Unknown Stack Size
<LI>Call Chain = touchgfx::Outline::moveTo(int, int) &rArr; touchgfx::Outline::lineTo(int, int) &rArr; touchgfx::Outline::renderLine(int, int, int, int) &rArr; touchgfx::Outline::renderScanline(int, int, int, int, int) &rArr; touchgfx::Outline::setCurCellNew(int, int) &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[3cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Outline::lineTo(int, int)
<LI><a href="#[446]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Outline::reset()
<LI><a href="#[45c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Outline::setCurCell(int, int)
</UL>
<BR>[Called By]<UL><LI><a href="#[3ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Rasterizer::moveTo(int, int)
</UL>

<P><STRONG><a name="[459]"></a>touchgfx::Outline::lessThan(const touchgfx::Cell*, const touchgfx::Cell*)</STRONG> (Thumb, 34 bytes, Stack size 0 bytes, outline.o(i._ZN8touchgfx7Outline8lessThanEPKNS_4CellES3_))
<BR><BR>[Called By]<UL><LI><a href="#[457]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Outline::qsortCells(touchgfx::Cell*, unsigned)
</UL>

<P><STRONG><a name="[458]"></a>touchgfx::Outline::swapCells(touchgfx::Cell*, touchgfx::Cell*)</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, outline.o(i._ZN8touchgfx7Outline9swapCellsEPNS_4CellES2_))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = touchgfx::Outline::swapCells(touchgfx::Cell*, touchgfx::Cell*)
</UL>
<BR>[Called By]<UL><LI><a href="#[457]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Outline::qsortCells(touchgfx::Cell*, unsigned)
</UL>

<P><STRONG><a name="[445]"></a>touchgfx::Outline::Outline()</STRONG> (Thumb, 46 bytes, Stack size 8 bytes, outline.o(i._ZN8touchgfx7OutlineC1Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 80 + Unknown Stack Size
<LI>Call Chain = touchgfx::Outline::Outline() &rArr; touchgfx::Outline::reset() &rArr; touchgfx::CanvasWidgetRenderer::getOutlineBufferSize() &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[446]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Outline::reset()
</UL>
<BR>[Called By]<UL><LI><a href="#[444]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Canvas::Canvas(const touchgfx::AbstractPainter*, const touchgfx::Rect&, const touchgfx::Rect&, unsigned char)
</UL>

<P><STRONG><a name="[5b9]"></a>touchgfx::Outline::Outline__sub_object()</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, outline.o(i._ZN8touchgfx7OutlineC1Ev), UNUSED)

<P><STRONG><a name="[257]"></a>touchgfx::Outline::~Outline()</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, outline.o(i._ZN8touchgfx7OutlineD1Ev))
<BR><BR>[Called By]<UL><LI><a href="#[251]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Canvas::~Canvas()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> outline.o(.constdata__ZTVN8touchgfx7OutlineE)
</UL>
<P><STRONG><a name="[5ba]"></a>touchgfx::Outline::~Outline__sub_object()</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, outline.o(i._ZN8touchgfx7OutlineD1Ev), UNUSED)

<P><STRONG><a name="[461]"></a>touchgfx::Unicode::composeString(const unsigned short*&, unsigned short, unsigned short, bool, bool, int, bool, int, bool, int&, unsigned short, unsigned short*)</STRONG> (Thumb, 368 bytes, Stack size 52 bytes, unicode.o(i._ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = touchgfx::Unicode::composeString(const unsigned short*&, unsigned short, unsigned short, bool, bool, int, bool, int, bool, int&, unsigned short, unsigned short*)
</UL>
<BR>[Calls]<UL><LI><a href="#[462]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Unicode::strlen(const unsigned short*)
</UL>
<BR>[Called By]<UL><LI><a href="#[46a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Unicode::vsnprintf(unsigned short*, unsigned short, const unsigned short*, const char*, std::__va_list)
</UL>

<P><STRONG><a name="[463]"></a>touchgfx::Unicode::parseFlagsAndPrecision(const unsigned short*&, const char*&, unsigned short&, bool&, bool&, bool&, bool&, int&, bool&, int&)</STRONG> (Thumb, 332 bytes, Stack size 40 bytes, unicode.o(i._ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = touchgfx::Unicode::parseFlagsAndPrecision(const unsigned short*&, const char*&, unsigned short&, bool&, bool&, bool&, bool&, int&, bool&, int&)
</UL>
<BR>[Calls]<UL><LI><a href="#[464]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Unicode::peekChar(const unsigned short*, const char*)
<LI><a href="#[465]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Unicode::nextChar(const unsigned short*&, const char*&)
</UL>
<BR>[Called By]<UL><LI><a href="#[46a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Unicode::vsnprintf(unsigned short*, unsigned short, const unsigned short*, const char*, std::__va_list)
</UL>

<P><STRONG><a name="[466]"></a>touchgfx::Unicode::itoa(int, unsigned short*, unsigned short, int)</STRONG> (Thumb, 90 bytes, Stack size 56 bytes, unicode.o(i._ZN8touchgfx7Unicode4itoaEiPtti))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = touchgfx::Unicode::itoa(int, unsigned short*, unsigned short, int) &rArr; touchgfx::Unicode::strncpy(unsigned short*, const char*, unsigned short)
</UL>
<BR>[Calls]<UL><LI><a href="#[467]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Unicode::strncpy(unsigned short*, const char*, unsigned short)
</UL>
<BR>[Called By]<UL><LI><a href="#[46a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Unicode::vsnprintf(unsigned short*, unsigned short, const unsigned short*, const char*, std::__va_list)
</UL>

<P><STRONG><a name="[468]"></a>touchgfx::Unicode::utoa(unsigned, unsigned short*, unsigned short, int)</STRONG> (Thumb, 72 bytes, Stack size 52 bytes, unicode.o(i._ZN8touchgfx7Unicode4utoaEjPtti))
<BR><BR>[Stack]<UL><LI>Max Depth = 60<LI>Call Chain = touchgfx::Unicode::utoa(unsigned, unsigned short*, unsigned short, int) &rArr; touchgfx::Unicode::strncpy(unsigned short*, const char*, unsigned short)
</UL>
<BR>[Calls]<UL><LI><a href="#[467]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Unicode::strncpy(unsigned short*, const char*, unsigned short)
</UL>
<BR>[Called By]<UL><LI><a href="#[46a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Unicode::vsnprintf(unsigned short*, unsigned short, const unsigned short*, const char*, std::__va_list)
</UL>

<P><STRONG><a name="[462]"></a>touchgfx::Unicode::strlen(const unsigned short*)</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, unicode.o(i._ZN8touchgfx7Unicode6strlenEPKt))
<BR><BR>[Called By]<UL><LI><a href="#[461]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Unicode::composeString(const unsigned short*&, unsigned short, unsigned short, bool, bool, int, bool, int, bool, int&, unsigned short, unsigned short*)
</UL>

<P><STRONG><a name="[467]"></a>touchgfx::Unicode::strncpy(unsigned short*, const char*, unsigned short)</STRONG> (Thumb, 36 bytes, Stack size 8 bytes, unicode.o(i._ZN8touchgfx7Unicode7strncpyEPtPKct))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = touchgfx::Unicode::strncpy(unsigned short*, const char*, unsigned short)
</UL>
<BR>[Called By]<UL><LI><a href="#[468]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Unicode::utoa(unsigned, unsigned short*, unsigned short, int)
<LI><a href="#[466]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Unicode::itoa(int, unsigned short*, unsigned short, int)
</UL>

<P><STRONG><a name="[465]"></a>touchgfx::Unicode::nextChar(const unsigned short*&, const char*&)</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, unicode.o(i._ZN8touchgfx7Unicode8nextCharERPKtRPKc))
<BR><BR>[Called By]<UL><LI><a href="#[46a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Unicode::vsnprintf(unsigned short*, unsigned short, const unsigned short*, const char*, std::__va_list)
<LI><a href="#[463]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Unicode::parseFlagsAndPrecision(const unsigned short*&, const char*&, unsigned short&, bool&, bool&, bool&, bool&, int&, bool&, int&)
</UL>

<P><STRONG><a name="[464]"></a>touchgfx::Unicode::peekChar(const unsigned short*, const char*)</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, unicode.o(i._ZN8touchgfx7Unicode8peekCharEPKtPKc))
<BR><BR>[Called By]<UL><LI><a href="#[46a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Unicode::vsnprintf(unsigned short*, unsigned short, const unsigned short*, const char*, std::__va_list)
<LI><a href="#[463]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Unicode::parseFlagsAndPrecision(const unsigned short*&, const char*&, unsigned short&, bool&, bool&, bool&, bool&, int&, bool&, int&)
</UL>

<P><STRONG><a name="[333]"></a>touchgfx::Unicode::snprintf(unsigned short*, unsigned short, const char*, ...)</STRONG> (Thumb, 18 bytes, Stack size 24 bytes, unicode.o(i._ZN8touchgfx7Unicode8snprintfEPttPKcz))
<BR><BR>[Stack]<UL><LI>Max Depth = 288<LI>Call Chain = touchgfx::Unicode::snprintf(unsigned short*, unsigned short, const char*, ...) &rArr; touchgfx::Unicode::vsnprintf(unsigned short*, unsigned short, const char*, std::__va_list) &rArr; touchgfx::Unicode::vsnprintf(unsigned short*, unsigned short, const unsigned short*, const char*, std::__va_list) &rArr; touchgfx::Unicode::itoa(int, unsigned short*, unsigned short, int) &rArr; touchgfx::Unicode::strncpy(unsigned short*, const char*, unsigned short)
</UL>
<BR>[Calls]<UL><LI><a href="#[469]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Unicode::vsnprintf(unsigned short*, unsigned short, const char*, std::__va_list)
</UL>
<BR>[Called By]<UL><LI><a href="#[349]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CookingViewBase::CookingViewBase()
<LI><a href="#[339]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CookingView::setUpInfoAboutCookingFood()
<LI><a href="#[331]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CookingView::customSetupScreen()
<LI><a href="#[334]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CookingView::clockAnimation()
<LI><a href="#[330]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CookingView::setUpTheClock()
<LI><a href="#[332]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CookingView::updateTimer()
<LI><a href="#[3a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SelectingMenuViewBase::SelectingMenuViewBase()
<LI><a href="#[399]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SelectingMenuView::clockAnimation()
<LI><a href="#[398]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SelectingMenuView::setUpTheClock()
<LI><a href="#[362]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SettingsViewBase::SettingsViewBase()
<LI><a href="#[35b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SettingsView::increaseClockSettings()
<LI><a href="#[35c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SettingsView::decreaseClockSettings()
<LI><a href="#[353]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SettingsView::clockAnimation()
<LI><a href="#[352]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SettingsView::setUpTheClock()
</UL>

<P><STRONG><a name="[469]"></a>touchgfx::Unicode::vsnprintf(unsigned short*, unsigned short, const char*, std::__va_list)</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, unicode.o(i._ZN8touchgfx7Unicode9vsnprintfEPttPKcSt9__va_list))
<BR><BR>[Stack]<UL><LI>Max Depth = 264<LI>Call Chain = touchgfx::Unicode::vsnprintf(unsigned short*, unsigned short, const char*, std::__va_list) &rArr; touchgfx::Unicode::vsnprintf(unsigned short*, unsigned short, const unsigned short*, const char*, std::__va_list) &rArr; touchgfx::Unicode::itoa(int, unsigned short*, unsigned short, int) &rArr; touchgfx::Unicode::strncpy(unsigned short*, const char*, unsigned short)
</UL>
<BR>[Calls]<UL><LI><a href="#[46a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Unicode::vsnprintf(unsigned short*, unsigned short, const unsigned short*, const char*, std::__va_list)
</UL>
<BR>[Called By]<UL><LI><a href="#[333]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Unicode::snprintf(unsigned short*, unsigned short, const char*, ...)
</UL>

<P><STRONG><a name="[46a]"></a>touchgfx::Unicode::vsnprintf(unsigned short*, unsigned short, const unsigned short*, const char*, std::__va_list)</STRONG> (Thumb, 602 bytes, Stack size 192 bytes, unicode.o(i._ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list))
<BR><BR>[Stack]<UL><LI>Max Depth = 256<LI>Call Chain = touchgfx::Unicode::vsnprintf(unsigned short*, unsigned short, const unsigned short*, const char*, std::__va_list) &rArr; touchgfx::Unicode::itoa(int, unsigned short*, unsigned short, int) &rArr; touchgfx::Unicode::strncpy(unsigned short*, const char*, unsigned short)
</UL>
<BR>[Calls]<UL><LI><a href="#[464]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Unicode::peekChar(const unsigned short*, const char*)
<LI><a href="#[465]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Unicode::nextChar(const unsigned short*&, const char*&)
<LI><a href="#[468]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Unicode::utoa(unsigned, unsigned short*, unsigned short, int)
<LI><a href="#[466]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Unicode::itoa(int, unsigned short*, unsigned short, int)
<LI><a href="#[463]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Unicode::parseFlagsAndPrecision(const unsigned short*&, const char*&, unsigned short&, bool&, bool&, bool&, bool&, int&, bool&, int&)
<LI><a href="#[461]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Unicode::composeString(const unsigned short*&, unsigned short, unsigned short, bool, bool, int, bool, int, bool, int&, unsigned short, unsigned short*)
<LI><a href="#[2d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[469]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Unicode::vsnprintf(unsigned short*, unsigned short, const char*, std::__va_list)
</UL>

<P><STRONG><a name="[451]"></a>touchgfx::muldivu(unsigned, unsigned, unsigned, unsigned&)</STRONG> (Thumb, 176 bytes, Stack size 36 bytes, utils.o(i._ZN8touchgfx7muldivuEjjjRj))
<BR><BR>[Stack]<UL><LI>Max Depth = 36 + In Cycle
<LI>Call Chain = touchgfx::muldivu(unsigned, unsigned, unsigned, unsigned&) &rArr;  touchgfx::muldivu(unsigned, unsigned, unsigned, unsigned&) (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[451]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::muldivu(unsigned, unsigned, unsigned, unsigned&)
<LI><a href="#[46b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::clzu(unsigned)
</UL>
<BR>[Called By]<UL><LI><a href="#[450]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::muldiv(int, int, int, int&)
<LI><a href="#[451]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::muldivu(unsigned, unsigned, unsigned, unsigned&)
</UL>

<P><STRONG><a name="[258]"></a>touchgfx::Callback&lang;CookingViewBase, const touchgfx::AbstractButton&, void, void&rang;::~Callback()</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, cookingviewbase.o(i._ZN8touchgfx8CallbackI15CookingViewBaseRKNS_14AbstractButtonEvvED1Ev))
<BR><BR>[Called By]<UL><LI><a href="#[13a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CookingViewBase::~CookingViewBase()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> cookingviewbase.o(.constdata__ZTVN8touchgfx8CallbackI15CookingViewBaseRKNS_14AbstractButtonEvvEE)
</UL>
<P><STRONG><a name="[5bb]"></a>touchgfx::Callback&lang;CookingViewBase, const touchgfx::AbstractButton&, void, void&rang;::~Callback__sub_object()</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, cookingviewbase.o(i._ZN8touchgfx8CallbackI15CookingViewBaseRKNS_14AbstractButtonEvvED1Ev), UNUSED)

<P><STRONG><a name="[25b]"></a>touchgfx::Callback&lang;SettingsViewBase, const touchgfx::AbstractButton&, void, void&rang;::~Callback()</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, settingsviewbase.o(i._ZN8touchgfx8CallbackI16SettingsViewBaseRKNS_14AbstractButtonEvvED1Ev))
<BR><BR>[Called By]<UL><LI><a href="#[150]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SettingsViewBase::~SettingsViewBase()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> settingsviewbase.o(.constdata__ZTVN8touchgfx8CallbackI16SettingsViewBaseRKNS_14AbstractButtonEvvEE)
</UL>
<P><STRONG><a name="[5bc]"></a>touchgfx::Callback&lang;SettingsViewBase, const touchgfx::AbstractButton&, void, void&rang;::~Callback__sub_object()</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, settingsviewbase.o(i._ZN8touchgfx8CallbackI16SettingsViewBaseRKNS_14AbstractButtonEvvED1Ev), UNUSED)

<P><STRONG><a name="[25e]"></a>touchgfx::Callback&lang;SettingsViewBase, const touchgfx::AbstractButtonContainer&, void, void&rang;::~Callback()</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, settingsviewbase.o(i._ZN8touchgfx8CallbackI16SettingsViewBaseRKNS_23AbstractButtonContainerEvvED1Ev))
<BR><BR>[Called By]<UL><LI><a href="#[150]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SettingsViewBase::~SettingsViewBase()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> settingsviewbase.o(.constdata__ZTVN8touchgfx8CallbackI16SettingsViewBaseRKNS_23AbstractButtonContainerEvvEE)
</UL>
<P><STRONG><a name="[5bd]"></a>touchgfx::Callback&lang;SettingsViewBase, const touchgfx::AbstractButtonContainer&, void, void&rang;::~Callback__sub_object()</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, settingsviewbase.o(i._ZN8touchgfx8CallbackI16SettingsViewBaseRKNS_23AbstractButtonContainerEvvED1Ev), UNUSED)

<P><STRONG><a name="[261]"></a>touchgfx::Callback&lang;InformationViewBase, const touchgfx::AbstractButtonContainer&, void, void&rang;::~Callback()</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, informationviewbase.o(i._ZN8touchgfx8CallbackI19InformationViewBaseRKNS_23AbstractButtonContainerEvvED1Ev))
<BR><BR>[Called By]<UL><LI><a href="#[188]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InformationViewBase::~InformationViewBase()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> informationviewbase.o(.constdata__ZTVN8touchgfx8CallbackI19InformationViewBaseRKNS_23AbstractButtonContainerEvvEE)
</UL>
<P><STRONG><a name="[5be]"></a>touchgfx::Callback&lang;InformationViewBase, const touchgfx::AbstractButtonContainer&, void, void&rang;::~Callback__sub_object()</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, informationviewbase.o(i._ZN8touchgfx8CallbackI19InformationViewBaseRKNS_23AbstractButtonContainerEvvED1Ev), UNUSED)

<P><STRONG><a name="[264]"></a>touchgfx::Callback&lang;SplashScreenViewBase, const touchgfx::FadeAnimator&lang;touchgfx::Image&rang;&, void, void&rang;::~Callback()</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, splashscreenviewbase.o(i._ZN8touchgfx8CallbackI20SplashScreenViewBaseRKNS_12FadeAnimatorINS_5ImageEEEvvED1Ev))
<BR><BR>[Called By]<UL><LI><a href="#[18f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SplashScreenViewBase::~SplashScreenViewBase()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> splashscreenviewbase.o(.constdata__ZTVN8touchgfx8CallbackI20SplashScreenViewBaseRKNS_12FadeAnimatorINS_5ImageEEEvvEE)
</UL>
<P><STRONG><a name="[5bf]"></a>touchgfx::Callback&lang;SplashScreenViewBase, const touchgfx::FadeAnimator&lang;touchgfx::Image&rang;&, void, void&rang;::~Callback__sub_object()</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, splashscreenviewbase.o(i._ZN8touchgfx8CallbackI20SplashScreenViewBaseRKNS_12FadeAnimatorINS_5ImageEEEvvED1Ev), UNUSED)

<P><STRONG><a name="[267]"></a>touchgfx::Callback&lang;SelectingMenuViewBase, const touchgfx::AbstractButton&, void, void&rang;::~Callback()</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, selectingmenuviewbase.o(i._ZN8touchgfx8CallbackI21SelectingMenuViewBaseRKNS_14AbstractButtonEvvED1Ev))
<BR><BR>[Called By]<UL><LI><a href="#[19c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SelectingMenuViewBase::~SelectingMenuViewBase()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> selectingmenuviewbase.o(.constdata__ZTVN8touchgfx8CallbackI21SelectingMenuViewBaseRKNS_14AbstractButtonEvvEE)
</UL>
<P><STRONG><a name="[5c0]"></a>touchgfx::Callback&lang;SelectingMenuViewBase, const touchgfx::AbstractButton&, void, void&rang;::~Callback__sub_object()</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, selectingmenuviewbase.o(i._ZN8touchgfx8CallbackI21SelectingMenuViewBaseRKNS_14AbstractButtonEvvED1Ev), UNUSED)

<P><STRONG><a name="[26a]"></a>touchgfx::Callback&lang;SelectingMenuViewBase, const touchgfx::AbstractButtonContainer&, void, void&rang;::~Callback()</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, selectingmenuviewbase.o(i._ZN8touchgfx8CallbackI21SelectingMenuViewBaseRKNS_23AbstractButtonContainerEvvED1Ev))
<BR><BR>[Called By]<UL><LI><a href="#[19c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SelectingMenuViewBase::~SelectingMenuViewBase()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> selectingmenuviewbase.o(.constdata__ZTVN8touchgfx8CallbackI21SelectingMenuViewBaseRKNS_23AbstractButtonContainerEvvEE)
</UL>
<P><STRONG><a name="[5c1]"></a>touchgfx::Callback&lang;SelectingMenuViewBase, const touchgfx::AbstractButtonContainer&, void, void&rang;::~Callback__sub_object()</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, selectingmenuviewbase.o(i._ZN8touchgfx8CallbackI21SelectingMenuViewBaseRKNS_23AbstractButtonContainerEvvED1Ev), UNUSED)

<P><STRONG><a name="[26d]"></a>touchgfx::Callback&lang;FrontendApplicationBase, void, void, void&rang;::~Callback()</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, frontendapplicationbase.o(i._ZN8touchgfx8CallbackI23FrontendApplicationBasevvvED1Ev))
<BR><BR>[Called By]<UL><LI><a href="#[384]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FrontendApplicationBase::gotoSplashScreenScreenNoTransition()
<LI><a href="#[365]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FrontendApplicationBase::gotoSelectingMenuScreenNoTransition()
<LI><a href="#[366]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FrontendApplicationBase::gotoInformationScreenNoTransition()
<LI><a href="#[364]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FrontendApplicationBase::gotoSettingsScreenNoTransition()
<LI><a href="#[3b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FrontendApplicationBase::gotoInformationDemoScreenNoTransition()
<LI><a href="#[385]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FrontendApplicationBase::gotoCookingScreenNoTransition()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> frontendapplicationbase.o(.constdata__ZTVN8touchgfx8CallbackI23FrontendApplicationBasevvvEE)
</UL>
<P><STRONG><a name="[5c2]"></a>touchgfx::Callback&lang;FrontendApplicationBase, void, void, void&rang;::~Callback__sub_object()</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, frontendapplicationbase.o(i._ZN8touchgfx8CallbackI23FrontendApplicationBasevvvED1Ev), UNUSED)

<P><STRONG><a name="[3b2]"></a>touchgfx::Callback&lang;FrontendApplicationBase, void, void, void&rang;::operator =(const touchgfx::Callback&lang;FrontendApplicationBase, void, void, void&rang;&)</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, frontendapplicationbase.o(i._ZN8touchgfx8CallbackI23FrontendApplicationBasevvvEaSERKS2_))
<BR><BR>[Called By]<UL><LI><a href="#[384]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FrontendApplicationBase::gotoSplashScreenScreenNoTransition()
<LI><a href="#[365]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FrontendApplicationBase::gotoSelectingMenuScreenNoTransition()
<LI><a href="#[366]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FrontendApplicationBase::gotoInformationScreenNoTransition()
<LI><a href="#[364]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FrontendApplicationBase::gotoSettingsScreenNoTransition()
<LI><a href="#[3b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FrontendApplicationBase::gotoInformationDemoScreenNoTransition()
<LI><a href="#[385]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FrontendApplicationBase::gotoCookingScreenNoTransition()
</UL>

<P><STRONG><a name="[270]"></a>touchgfx::Callback&lang;InformationDemoViewBase, const touchgfx::AbstractButtonContainer&, void, void&rang;::~Callback()</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, informationdemoviewbase.o(i._ZN8touchgfx8CallbackI23InformationDemoViewBaseRKNS_23AbstractButtonContainerEvvED1Ev))
<BR><BR>[Called By]<UL><LI><a href="#[1b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InformationDemoViewBase::~InformationDemoViewBase()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> informationdemoviewbase.o(.constdata__ZTVN8touchgfx8CallbackI23InformationDemoViewBaseRKNS_23AbstractButtonContainerEvvEE)
</UL>
<P><STRONG><a name="[5c3]"></a>touchgfx::Callback&lang;InformationDemoViewBase, const touchgfx::AbstractButtonContainer&, void, void&rang;::~Callback__sub_object()</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, informationdemoviewbase.o(i._ZN8touchgfx8CallbackI23InformationDemoViewBaseRKNS_23AbstractButtonContainerEvvED1Ev), UNUSED)

<P><STRONG><a name="[351]"></a>touchgfx::Drawable::setVisible(bool)</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, selectingmenuview.o(i._ZN8touchgfx8Drawable10setVisibleEb))
<BR><BR>[Called By]<UL><LI><a href="#[39c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SelectingMenuView::ANIMATION_CHANGE_STATEMACHINE()
<LI><a href="#[362]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SettingsViewBase::SettingsViewBase()
<LI><a href="#[130]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SettingsView::pressCenterKeyFunction()
<LI><a href="#[139]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SettingsView::returnButtonIsClicked()
<LI><a href="#[135]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SettingsView::languageButtonClicked()
<LI><a href="#[136]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SettingsView::clockButtonClicked()
<LI><a href="#[138]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SettingsView::minuteIsClicked()
<LI><a href="#[137]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SettingsView::hourIsClicked()
</UL>

<P><STRONG><a name="[373]"></a>touchgfx::Drawable::setPosition(short, short, short, short)</STRONG> (Thumb, 52 bytes, Stack size 24 bytes, cookingviewbase.o(i._ZN8touchgfx8Drawable11setPositionEssss))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = touchgfx::Drawable::setPosition(short, short, short, short) &rArr; touchgfx::Drawable::setXY(short, short)
</UL>
<BR>[Calls]<UL><LI><a href="#[350]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Drawable::setXY(short, short)
</UL>
<BR>[Called By]<UL><LI><a href="#[349]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CookingViewBase::CookingViewBase()
<LI><a href="#[383]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InformationViewBase::InformationViewBase()
<LI><a href="#[3af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InformationDemoViewBase::InformationDemoViewBase()
<LI><a href="#[3a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SelectingMenuViewBase::SelectingMenuViewBase()
<LI><a href="#[362]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SettingsViewBase::SettingsViewBase()
<LI><a href="#[38d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::BoxWithBorderButtonStyle&lang;touchgfx::ClickButtonTrigger&rang;::setBoxWithBorderPosition(short, short, short, short)
</UL>

<P><STRONG><a name="[1da]"></a>touchgfx::Drawable::moveRelative(short, short)</STRONG> (Thumb, 54 bytes, Stack size 16 bytes, drawable.o(i._ZN8touchgfx8Drawable12moveRelativeEss))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = touchgfx::Drawable::moveRelative(short, short) &rArr; touchgfx::Drawable::setXY(short, short)
</UL>
<BR>[Calls]<UL><LI><a href="#[350]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Drawable::setXY(short, short)
</UL>
<BR>[Called By]<UL><LI><a href="#[39c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SelectingMenuView::ANIMATION_CHANGE_STATEMACHINE()
</UL>
<BR>[Address Reference Count : 22]<UL><LI> informationdemoviewbase.o(.constdata__ZTVN8touchgfx23AbstractButtonContainerE)
<LI> informationdemoviewbase.o(.constdata__ZTVN8touchgfx18ClickButtonTriggerE)
<LI> informationdemoviewbase.o(.constdata__ZTVN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEE)
<LI> cookingviewbase.o(.constdata__ZTVN8touchgfx6WidgetE)
<LI> cookingviewbase.o(.constdata__ZTVN8touchgfx24TextAreaWithTwoWildcardsE)
<LI> cookingviewbase.o(.constdata__ZTVN8touchgfx12FadeAnimatorINS_6ButtonEEE)
<LI> cookingviewbase.o(.constdata__ZTVN8touchgfx12FadeAnimatorINS_5ImageEEE)
<LI> cookingviewbase.o(.constdata__ZTVN8touchgfx12FadeAnimatorINS_24TextAreaWithTwoWildcardsEEE)
<LI> cookingviewbase.o(.constdata__ZTVN8touchgfx12FadeAnimatorINS_8TextAreaEEE)
<LI> abstractbutton.o(.constdata__ZTVN8touchgfx14AbstractButtonE)
<LI> box.o(.constdata__ZTVN8touchgfx3BoxE)
<LI> boxwithborder.o(.constdata__ZTVN8touchgfx13BoxWithBorderE)
<LI> button.o(.constdata__ZTVN8touchgfx6ButtonE)
<LI> canvaswidget.o(.constdata__ZTVN8touchgfx12CanvasWidgetE)
<LI> circle.o(.constdata__ZTVN8touchgfx6CircleE)
<LI> container.o(.constdata__ZTVN8touchgfx9ContainerE)
<LI> settingsviewbase.o(.constdata__ZTVN8touchgfx23TextAreaWithOneWildcardE)
<LI> selectingmenuviewbase.o(.constdata__ZTVN8touchgfx12MoveAnimatorINS_9ContainerEEE)
<LI> drawable.o(.constdata__ZTVN8touchgfx8DrawableE)
<LI> image.o(.constdata__ZTVN8touchgfx5ImageE)
<LI> textareawithwildcard.o(.constdata__ZTVN8touchgfx24TextAreaWithWildcardBaseE)
<LI> textarea.o(.constdata__ZTVN8touchgfx8TextAreaE)
</UL>
<P><STRONG><a name="[33e]"></a>touchgfx::Drawable::setTouchable(bool)</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, cookingview.o(i._ZN8touchgfx8Drawable12setTouchableEb))
<BR><BR>[Called By]<UL><LI><a href="#[337]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CookingView::EXITSCREEN_STATEMACHINE()
<LI><a href="#[39b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SelectingMenuView::ENTERSCREEN_STATEMACHINE()
<LI><a href="#[396]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SelectingMenuView::setUpEnterScreen()
<LI><a href="#[130]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SettingsView::pressCenterKeyFunction()
<LI><a href="#[135]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SettingsView::languageButtonClicked()
<LI><a href="#[34f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SettingsView::customEntrySetup()
<LI><a href="#[38b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Button::Button()
</UL>

<P><STRONG><a name="[44f]"></a>touchgfx::Drawable::getCachedAbsX()</STRONG> (Thumb, 38 bytes, Stack size 16 bytes, screen.o(i._ZN8touchgfx8Drawable13getCachedAbsXEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = touchgfx::Drawable::getCachedAbsX() &rArr; touchgfx::Drawable::getAbsoluteRect() const
</UL>
<BR>[Calls]<UL><LI><a href="#[447]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Drawable::getAbsoluteRect() const
</UL>
<BR>[Called By]<UL><LI><a href="#[44c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Screen::JSMOC(const touchgfx::Rect&, touchgfx::Drawable*)
</UL>

<P><STRONG><a name="[44e]"></a>touchgfx::Drawable::getCachedAbsY()</STRONG> (Thumb, 38 bytes, Stack size 16 bytes, screen.o(i._ZN8touchgfx8Drawable13getCachedAbsYEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = touchgfx::Drawable::getCachedAbsY() &rArr; touchgfx::Drawable::getAbsoluteRect() const
</UL>
<BR>[Calls]<UL><LI><a href="#[447]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Drawable::getAbsoluteRect() const
</UL>
<BR>[Called By]<UL><LI><a href="#[44c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Screen::JSMOC(const touchgfx::Rect&, touchgfx::Drawable*)
</UL>

<P><STRONG><a name="[4a1]"></a>touchgfx::Drawable::setWidthHeight(short, short)</STRONG> (Thumb, 28 bytes, Stack size 16 bytes, textarea.o(i._ZN8touchgfx8Drawable14setWidthHeightEss))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = touchgfx::Drawable::setWidthHeight(short, short)
</UL>
<BR>[Called By]<UL><LI><a href="#[49f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextArea::resizeToCurrentText()
</UL>

<P><STRONG><a name="[1dc]"></a>touchgfx::Drawable::setupDrawChain(const touchgfx::Rect&, touchgfx::Drawable**)</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, cookingviewbase.o(i._ZN8touchgfx8Drawable14setupDrawChainERKNS_4RectEPPS0_))
<BR>[Address Reference Count : 17]<UL><LI> cookingviewbase.o(.constdata__ZTVN8touchgfx6WidgetE)
<LI> cookingviewbase.o(.constdata__ZTVN8touchgfx24TextAreaWithTwoWildcardsE)
<LI> cookingviewbase.o(.constdata__ZTVN8touchgfx12FadeAnimatorINS_6ButtonEEE)
<LI> cookingviewbase.o(.constdata__ZTVN8touchgfx12FadeAnimatorINS_5ImageEEE)
<LI> cookingviewbase.o(.constdata__ZTVN8touchgfx12FadeAnimatorINS_24TextAreaWithTwoWildcardsEEE)
<LI> cookingviewbase.o(.constdata__ZTVN8touchgfx12FadeAnimatorINS_8TextAreaEEE)
<LI> abstractbutton.o(.constdata__ZTVN8touchgfx14AbstractButtonE)
<LI> box.o(.constdata__ZTVN8touchgfx3BoxE)
<LI> boxwithborder.o(.constdata__ZTVN8touchgfx13BoxWithBorderE)
<LI> button.o(.constdata__ZTVN8touchgfx6ButtonE)
<LI> canvaswidget.o(.constdata__ZTVN8touchgfx12CanvasWidgetE)
<LI> circle.o(.constdata__ZTVN8touchgfx6CircleE)
<LI> settingsviewbase.o(.constdata__ZTVN8touchgfx23TextAreaWithOneWildcardE)
<LI> drawable.o(.constdata__ZTVN8touchgfx8DrawableE)
<LI> image.o(.constdata__ZTVN8touchgfx5ImageE)
<LI> textareawithwildcard.o(.constdata__ZTVN8touchgfx24TextAreaWithWildcardBaseE)
<LI> textarea.o(.constdata__ZTVN8touchgfx8TextAreaE)
</UL>
<P><STRONG><a name="[1d8]"></a>touchgfx::Drawable::handleDragEvent(const touchgfx::DragEvent&)</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, cookingviewbase.o(i._ZN8touchgfx8Drawable15handleDragEventERKNS_9DragEventE))
<BR>[Address Reference Count : 22]<UL><LI> informationdemoviewbase.o(.constdata__ZTVN8touchgfx23AbstractButtonContainerE)
<LI> informationdemoviewbase.o(.constdata__ZTVN8touchgfx18ClickButtonTriggerE)
<LI> informationdemoviewbase.o(.constdata__ZTVN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEE)
<LI> cookingviewbase.o(.constdata__ZTVN8touchgfx6WidgetE)
<LI> cookingviewbase.o(.constdata__ZTVN8touchgfx24TextAreaWithTwoWildcardsE)
<LI> cookingviewbase.o(.constdata__ZTVN8touchgfx12FadeAnimatorINS_6ButtonEEE)
<LI> cookingviewbase.o(.constdata__ZTVN8touchgfx12FadeAnimatorINS_5ImageEEE)
<LI> cookingviewbase.o(.constdata__ZTVN8touchgfx12FadeAnimatorINS_24TextAreaWithTwoWildcardsEEE)
<LI> cookingviewbase.o(.constdata__ZTVN8touchgfx12FadeAnimatorINS_8TextAreaEEE)
<LI> abstractbutton.o(.constdata__ZTVN8touchgfx14AbstractButtonE)
<LI> box.o(.constdata__ZTVN8touchgfx3BoxE)
<LI> boxwithborder.o(.constdata__ZTVN8touchgfx13BoxWithBorderE)
<LI> button.o(.constdata__ZTVN8touchgfx6ButtonE)
<LI> canvaswidget.o(.constdata__ZTVN8touchgfx12CanvasWidgetE)
<LI> circle.o(.constdata__ZTVN8touchgfx6CircleE)
<LI> container.o(.constdata__ZTVN8touchgfx9ContainerE)
<LI> settingsviewbase.o(.constdata__ZTVN8touchgfx23TextAreaWithOneWildcardE)
<LI> selectingmenuviewbase.o(.constdata__ZTVN8touchgfx12MoveAnimatorINS_9ContainerEEE)
<LI> drawable.o(.constdata__ZTVN8touchgfx8DrawableE)
<LI> image.o(.constdata__ZTVN8touchgfx5ImageE)
<LI> textareawithwildcard.o(.constdata__ZTVN8touchgfx24TextAreaWithWildcardBaseE)
<LI> textarea.o(.constdata__ZTVN8touchgfx8TextAreaE)
</UL>
<P><STRONG><a name="[1d9]"></a>touchgfx::Drawable::handleTickEvent()</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, cookingviewbase.o(i._ZN8touchgfx8Drawable15handleTickEventEv))
<BR>[Address Reference Count : 17]<UL><LI> informationdemoviewbase.o(.constdata__ZTVN8touchgfx23AbstractButtonContainerE)
<LI> informationdemoviewbase.o(.constdata__ZTVN8touchgfx18ClickButtonTriggerE)
<LI> informationdemoviewbase.o(.constdata__ZTVN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEE)
<LI> cookingviewbase.o(.constdata__ZTVN8touchgfx6WidgetE)
<LI> cookingviewbase.o(.constdata__ZTVN8touchgfx24TextAreaWithTwoWildcardsE)
<LI> abstractbutton.o(.constdata__ZTVN8touchgfx14AbstractButtonE)
<LI> box.o(.constdata__ZTVN8touchgfx3BoxE)
<LI> boxwithborder.o(.constdata__ZTVN8touchgfx13BoxWithBorderE)
<LI> button.o(.constdata__ZTVN8touchgfx6ButtonE)
<LI> canvaswidget.o(.constdata__ZTVN8touchgfx12CanvasWidgetE)
<LI> circle.o(.constdata__ZTVN8touchgfx6CircleE)
<LI> container.o(.constdata__ZTVN8touchgfx9ContainerE)
<LI> settingsviewbase.o(.constdata__ZTVN8touchgfx23TextAreaWithOneWildcardE)
<LI> drawable.o(.constdata__ZTVN8touchgfx8DrawableE)
<LI> image.o(.constdata__ZTVN8touchgfx5ImageE)
<LI> textareawithwildcard.o(.constdata__ZTVN8touchgfx24TextAreaWithWildcardBaseE)
<LI> textarea.o(.constdata__ZTVN8touchgfx8TextAreaE)
</UL>
<P><STRONG><a name="[1d6]"></a>touchgfx::Drawable::handleClickEvent(const touchgfx::ClickEvent&)</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, cookingviewbase.o(i._ZN8touchgfx8Drawable16handleClickEventERKNS_10ClickEventE))
<BR>[Address Reference Count : 17]<UL><LI> informationdemoviewbase.o(.constdata__ZTVN8touchgfx23AbstractButtonContainerE)
<LI> cookingviewbase.o(.constdata__ZTVN8touchgfx6WidgetE)
<LI> cookingviewbase.o(.constdata__ZTVN8touchgfx24TextAreaWithTwoWildcardsE)
<LI> cookingviewbase.o(.constdata__ZTVN8touchgfx12FadeAnimatorINS_5ImageEEE)
<LI> cookingviewbase.o(.constdata__ZTVN8touchgfx12FadeAnimatorINS_24TextAreaWithTwoWildcardsEEE)
<LI> cookingviewbase.o(.constdata__ZTVN8touchgfx12FadeAnimatorINS_8TextAreaEEE)
<LI> box.o(.constdata__ZTVN8touchgfx3BoxE)
<LI> boxwithborder.o(.constdata__ZTVN8touchgfx13BoxWithBorderE)
<LI> canvaswidget.o(.constdata__ZTVN8touchgfx12CanvasWidgetE)
<LI> circle.o(.constdata__ZTVN8touchgfx6CircleE)
<LI> container.o(.constdata__ZTVN8touchgfx9ContainerE)
<LI> settingsviewbase.o(.constdata__ZTVN8touchgfx23TextAreaWithOneWildcardE)
<LI> selectingmenuviewbase.o(.constdata__ZTVN8touchgfx12MoveAnimatorINS_9ContainerEEE)
<LI> drawable.o(.constdata__ZTVN8touchgfx8DrawableE)
<LI> image.o(.constdata__ZTVN8touchgfx5ImageE)
<LI> textareawithwildcard.o(.constdata__ZTVN8touchgfx24TextAreaWithWildcardBaseE)
<LI> textarea.o(.constdata__ZTVN8touchgfx8TextAreaE)
</UL>
<P><STRONG><a name="[1d7]"></a>touchgfx::Drawable::handleGestureEvent(const touchgfx::GestureEvent&)</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, cookingviewbase.o(i._ZN8touchgfx8Drawable18handleGestureEventERKNS_12GestureEventE))
<BR>[Address Reference Count : 22]<UL><LI> informationdemoviewbase.o(.constdata__ZTVN8touchgfx23AbstractButtonContainerE)
<LI> informationdemoviewbase.o(.constdata__ZTVN8touchgfx18ClickButtonTriggerE)
<LI> informationdemoviewbase.o(.constdata__ZTVN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEE)
<LI> cookingviewbase.o(.constdata__ZTVN8touchgfx6WidgetE)
<LI> cookingviewbase.o(.constdata__ZTVN8touchgfx24TextAreaWithTwoWildcardsE)
<LI> cookingviewbase.o(.constdata__ZTVN8touchgfx12FadeAnimatorINS_6ButtonEEE)
<LI> cookingviewbase.o(.constdata__ZTVN8touchgfx12FadeAnimatorINS_5ImageEEE)
<LI> cookingviewbase.o(.constdata__ZTVN8touchgfx12FadeAnimatorINS_24TextAreaWithTwoWildcardsEEE)
<LI> cookingviewbase.o(.constdata__ZTVN8touchgfx12FadeAnimatorINS_8TextAreaEEE)
<LI> abstractbutton.o(.constdata__ZTVN8touchgfx14AbstractButtonE)
<LI> box.o(.constdata__ZTVN8touchgfx3BoxE)
<LI> boxwithborder.o(.constdata__ZTVN8touchgfx13BoxWithBorderE)
<LI> button.o(.constdata__ZTVN8touchgfx6ButtonE)
<LI> canvaswidget.o(.constdata__ZTVN8touchgfx12CanvasWidgetE)
<LI> circle.o(.constdata__ZTVN8touchgfx6CircleE)
<LI> container.o(.constdata__ZTVN8touchgfx9ContainerE)
<LI> settingsviewbase.o(.constdata__ZTVN8touchgfx23TextAreaWithOneWildcardE)
<LI> selectingmenuviewbase.o(.constdata__ZTVN8touchgfx12MoveAnimatorINS_9ContainerEEE)
<LI> drawable.o(.constdata__ZTVN8touchgfx8DrawableE)
<LI> image.o(.constdata__ZTVN8touchgfx5ImageE)
<LI> textareawithwildcard.o(.constdata__ZTVN8touchgfx24TextAreaWithWildcardBaseE)
<LI> textarea.o(.constdata__ZTVN8touchgfx8TextAreaE)
</UL>
<P><STRONG><a name="[44d]"></a>touchgfx::Drawable::getCachedVisibleRect()</STRONG> (Thumb, 56 bytes, Stack size 24 bytes, screen.o(i._ZN8touchgfx8Drawable20getCachedVisibleRectEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = touchgfx::Drawable::getCachedVisibleRect() &rArr; touchgfx::Rect::Rect(short, short, short, short)
</UL>
<BR>[Calls]<UL><LI><a href="#[3d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Rect::Rect(short, short, short, short)
</UL>
<BR>[Called By]<UL><LI><a href="#[44c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Screen::JSMOC(const touchgfx::Rect&, touchgfx::Drawable*)
</UL>

<P><STRONG><a name="[1d2]"></a>touchgfx::Drawable::setX(short)</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, cookingviewbase.o(i._ZN8touchgfx8Drawable4setXEs))
<BR>[Address Reference Count : 22]<UL><LI> informationdemoviewbase.o(.constdata__ZTVN8touchgfx23AbstractButtonContainerE)
<LI> informationdemoviewbase.o(.constdata__ZTVN8touchgfx18ClickButtonTriggerE)
<LI> informationdemoviewbase.o(.constdata__ZTVN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEE)
<LI> cookingviewbase.o(.constdata__ZTVN8touchgfx6WidgetE)
<LI> cookingviewbase.o(.constdata__ZTVN8touchgfx24TextAreaWithTwoWildcardsE)
<LI> cookingviewbase.o(.constdata__ZTVN8touchgfx12FadeAnimatorINS_6ButtonEEE)
<LI> cookingviewbase.o(.constdata__ZTVN8touchgfx12FadeAnimatorINS_5ImageEEE)
<LI> cookingviewbase.o(.constdata__ZTVN8touchgfx12FadeAnimatorINS_24TextAreaWithTwoWildcardsEEE)
<LI> cookingviewbase.o(.constdata__ZTVN8touchgfx12FadeAnimatorINS_8TextAreaEEE)
<LI> abstractbutton.o(.constdata__ZTVN8touchgfx14AbstractButtonE)
<LI> box.o(.constdata__ZTVN8touchgfx3BoxE)
<LI> boxwithborder.o(.constdata__ZTVN8touchgfx13BoxWithBorderE)
<LI> button.o(.constdata__ZTVN8touchgfx6ButtonE)
<LI> canvaswidget.o(.constdata__ZTVN8touchgfx12CanvasWidgetE)
<LI> circle.o(.constdata__ZTVN8touchgfx6CircleE)
<LI> container.o(.constdata__ZTVN8touchgfx9ContainerE)
<LI> settingsviewbase.o(.constdata__ZTVN8touchgfx23TextAreaWithOneWildcardE)
<LI> selectingmenuviewbase.o(.constdata__ZTVN8touchgfx12MoveAnimatorINS_9ContainerEEE)
<LI> drawable.o(.constdata__ZTVN8touchgfx8DrawableE)
<LI> image.o(.constdata__ZTVN8touchgfx5ImageE)
<LI> textareawithwildcard.o(.constdata__ZTVN8touchgfx24TextAreaWithWildcardBaseE)
<LI> textarea.o(.constdata__ZTVN8touchgfx8TextAreaE)
</UL>
<P><STRONG><a name="[1d3]"></a>touchgfx::Drawable::setY(short)</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, cookingviewbase.o(i._ZN8touchgfx8Drawable4setYEs))
<BR>[Address Reference Count : 22]<UL><LI> informationdemoviewbase.o(.constdata__ZTVN8touchgfx23AbstractButtonContainerE)
<LI> informationdemoviewbase.o(.constdata__ZTVN8touchgfx18ClickButtonTriggerE)
<LI> informationdemoviewbase.o(.constdata__ZTVN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEE)
<LI> cookingviewbase.o(.constdata__ZTVN8touchgfx6WidgetE)
<LI> cookingviewbase.o(.constdata__ZTVN8touchgfx24TextAreaWithTwoWildcardsE)
<LI> cookingviewbase.o(.constdata__ZTVN8touchgfx12FadeAnimatorINS_6ButtonEEE)
<LI> cookingviewbase.o(.constdata__ZTVN8touchgfx12FadeAnimatorINS_5ImageEEE)
<LI> cookingviewbase.o(.constdata__ZTVN8touchgfx12FadeAnimatorINS_24TextAreaWithTwoWildcardsEEE)
<LI> cookingviewbase.o(.constdata__ZTVN8touchgfx12FadeAnimatorINS_8TextAreaEEE)
<LI> abstractbutton.o(.constdata__ZTVN8touchgfx14AbstractButtonE)
<LI> box.o(.constdata__ZTVN8touchgfx3BoxE)
<LI> boxwithborder.o(.constdata__ZTVN8touchgfx13BoxWithBorderE)
<LI> button.o(.constdata__ZTVN8touchgfx6ButtonE)
<LI> canvaswidget.o(.constdata__ZTVN8touchgfx12CanvasWidgetE)
<LI> circle.o(.constdata__ZTVN8touchgfx6CircleE)
<LI> container.o(.constdata__ZTVN8touchgfx9ContainerE)
<LI> settingsviewbase.o(.constdata__ZTVN8touchgfx23TextAreaWithOneWildcardE)
<LI> selectingmenuviewbase.o(.constdata__ZTVN8touchgfx12MoveAnimatorINS_9ContainerEEE)
<LI> drawable.o(.constdata__ZTVN8touchgfx8DrawableE)
<LI> image.o(.constdata__ZTVN8touchgfx5ImageE)
<LI> textareawithwildcard.o(.constdata__ZTVN8touchgfx24TextAreaWithWildcardBaseE)
<LI> textarea.o(.constdata__ZTVN8touchgfx8TextAreaE)
</UL>
<P><STRONG><a name="[350]"></a>touchgfx::Drawable::setXY(short, short)</STRONG> (Thumb, 30 bytes, Stack size 16 bytes, settingsview.o(i._ZN8touchgfx8Drawable5setXYEss))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = touchgfx::Drawable::setXY(short, short)
</UL>
<BR>[Called By]<UL><LI><a href="#[349]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CookingViewBase::CookingViewBase()
<LI><a href="#[383]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InformationViewBase::InformationViewBase()
<LI><a href="#[3af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InformationDemoViewBase::InformationDemoViewBase()
<LI><a href="#[1da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Drawable::moveRelative(short, short)
<LI><a href="#[3a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SelectingMenuViewBase::SelectingMenuViewBase()
<LI><a href="#[394]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SplashScreenViewBase::SplashScreenViewBase()
<LI><a href="#[362]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SettingsViewBase::SettingsViewBase()
<LI><a href="#[135]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SettingsView::languageButtonClicked()
<LI><a href="#[136]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SettingsView::clockButtonClicked()
<LI><a href="#[138]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SettingsView::minuteIsClicked()
<LI><a href="#[137]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SettingsView::hourIsClicked()
<LI><a href="#[373]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Drawable::setPosition(short, short, short, short)
<LI><a href="#[389]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::BoxWithBorderButtonStyle&lang;touchgfx::ClickButtonTrigger&rang;::BoxWithBorderButtonStyle()
</UL>

<P><STRONG><a name="[1db]"></a>touchgfx::Drawable::moveTo(short, short)</STRONG> (Thumb, 30 bytes, Stack size 16 bytes, cookingviewbase.o(i._ZN8touchgfx8Drawable6moveToEss))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = touchgfx::Drawable::moveTo(short, short)
</UL>
<BR>[Called By]<UL><LI><a href="#[515]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::MoveAnimator&lang;touchgfx::Container&rang;::nextMoveAnimationStep()
</UL>
<BR>[Address Reference Count : 22]<UL><LI> informationdemoviewbase.o(.constdata__ZTVN8touchgfx23AbstractButtonContainerE)
<LI> informationdemoviewbase.o(.constdata__ZTVN8touchgfx18ClickButtonTriggerE)
<LI> informationdemoviewbase.o(.constdata__ZTVN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEE)
<LI> cookingviewbase.o(.constdata__ZTVN8touchgfx6WidgetE)
<LI> cookingviewbase.o(.constdata__ZTVN8touchgfx24TextAreaWithTwoWildcardsE)
<LI> cookingviewbase.o(.constdata__ZTVN8touchgfx12FadeAnimatorINS_6ButtonEEE)
<LI> cookingviewbase.o(.constdata__ZTVN8touchgfx12FadeAnimatorINS_5ImageEEE)
<LI> cookingviewbase.o(.constdata__ZTVN8touchgfx12FadeAnimatorINS_24TextAreaWithTwoWildcardsEEE)
<LI> cookingviewbase.o(.constdata__ZTVN8touchgfx12FadeAnimatorINS_8TextAreaEEE)
<LI> abstractbutton.o(.constdata__ZTVN8touchgfx14AbstractButtonE)
<LI> box.o(.constdata__ZTVN8touchgfx3BoxE)
<LI> boxwithborder.o(.constdata__ZTVN8touchgfx13BoxWithBorderE)
<LI> button.o(.constdata__ZTVN8touchgfx6ButtonE)
<LI> canvaswidget.o(.constdata__ZTVN8touchgfx12CanvasWidgetE)
<LI> circle.o(.constdata__ZTVN8touchgfx6CircleE)
<LI> container.o(.constdata__ZTVN8touchgfx9ContainerE)
<LI> settingsviewbase.o(.constdata__ZTVN8touchgfx23TextAreaWithOneWildcardE)
<LI> selectingmenuviewbase.o(.constdata__ZTVN8touchgfx12MoveAnimatorINS_9ContainerEEE)
<LI> drawable.o(.constdata__ZTVN8touchgfx8DrawableE)
<LI> image.o(.constdata__ZTVN8touchgfx5ImageE)
<LI> textareawithwildcard.o(.constdata__ZTVN8touchgfx24TextAreaWithWildcardBaseE)
<LI> textarea.o(.constdata__ZTVN8touchgfx8TextAreaE)
</UL>
<P><STRONG><a name="[1d4]"></a>touchgfx::Drawable::setWidth(short)</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, cookingviewbase.o(i._ZN8touchgfx8Drawable8setWidthEs))
<BR><BR>[Called By]<UL><LI><a href="#[1e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextArea::setWidth(short)
</UL>
<BR>[Address Reference Count : 16]<UL><LI> informationdemoviewbase.o(.constdata__ZTVN8touchgfx23AbstractButtonContainerE)
<LI> informationdemoviewbase.o(.constdata__ZTVN8touchgfx18ClickButtonTriggerE)
<LI> informationdemoviewbase.o(.constdata__ZTVN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEE)
<LI> cookingviewbase.o(.constdata__ZTVN8touchgfx6WidgetE)
<LI> cookingviewbase.o(.constdata__ZTVN8touchgfx12FadeAnimatorINS_6ButtonEEE)
<LI> cookingviewbase.o(.constdata__ZTVN8touchgfx12FadeAnimatorINS_5ImageEEE)
<LI> abstractbutton.o(.constdata__ZTVN8touchgfx14AbstractButtonE)
<LI> box.o(.constdata__ZTVN8touchgfx3BoxE)
<LI> boxwithborder.o(.constdata__ZTVN8touchgfx13BoxWithBorderE)
<LI> button.o(.constdata__ZTVN8touchgfx6ButtonE)
<LI> canvaswidget.o(.constdata__ZTVN8touchgfx12CanvasWidgetE)
<LI> circle.o(.constdata__ZTVN8touchgfx6CircleE)
<LI> container.o(.constdata__ZTVN8touchgfx9ContainerE)
<LI> selectingmenuviewbase.o(.constdata__ZTVN8touchgfx12MoveAnimatorINS_9ContainerEEE)
<LI> drawable.o(.constdata__ZTVN8touchgfx8DrawableE)
<LI> image.o(.constdata__ZTVN8touchgfx5ImageE)
</UL>
<P><STRONG><a name="[1d5]"></a>touchgfx::Drawable::setHeight(short)</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, cookingviewbase.o(i._ZN8touchgfx8Drawable9setHeightEs))
<BR><BR>[Called By]<UL><LI><a href="#[1e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextArea::setHeight(short)
</UL>
<BR>[Address Reference Count : 16]<UL><LI> informationdemoviewbase.o(.constdata__ZTVN8touchgfx23AbstractButtonContainerE)
<LI> informationdemoviewbase.o(.constdata__ZTVN8touchgfx18ClickButtonTriggerE)
<LI> informationdemoviewbase.o(.constdata__ZTVN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEE)
<LI> cookingviewbase.o(.constdata__ZTVN8touchgfx6WidgetE)
<LI> cookingviewbase.o(.constdata__ZTVN8touchgfx12FadeAnimatorINS_6ButtonEEE)
<LI> cookingviewbase.o(.constdata__ZTVN8touchgfx12FadeAnimatorINS_5ImageEEE)
<LI> abstractbutton.o(.constdata__ZTVN8touchgfx14AbstractButtonE)
<LI> box.o(.constdata__ZTVN8touchgfx3BoxE)
<LI> boxwithborder.o(.constdata__ZTVN8touchgfx13BoxWithBorderE)
<LI> button.o(.constdata__ZTVN8touchgfx6ButtonE)
<LI> canvaswidget.o(.constdata__ZTVN8touchgfx12CanvasWidgetE)
<LI> circle.o(.constdata__ZTVN8touchgfx6CircleE)
<LI> container.o(.constdata__ZTVN8touchgfx9ContainerE)
<LI> selectingmenuviewbase.o(.constdata__ZTVN8touchgfx12MoveAnimatorINS_9ContainerEEE)
<LI> drawable.o(.constdata__ZTVN8touchgfx8DrawableE)
<LI> image.o(.constdata__ZTVN8touchgfx5ImageE)
</UL>
<P><STRONG><a name="[36b]"></a>touchgfx::Drawable::Drawable__sub_object()</STRONG> (Thumb, 54 bytes, Stack size 8 bytes, cookingviewbase.o(i._ZN8touchgfx8DrawableC2Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = touchgfx::Drawable::Drawable__sub_object()
</UL>
<BR>[Calls]<UL><LI><a href="#[dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Rect::Rect()
</UL>
<BR>[Called By]<UL><LI><a href="#[349]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CookingViewBase::CookingViewBase()
<LI><a href="#[368]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Widget::Widget__sub_object()
<LI><a href="#[413]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::ClickButtonTrigger::ClickButtonTrigger()
<LI><a href="#[387]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Container::Container()
</UL>

<P><STRONG><a name="[425]"></a>touchgfx::Gestures::registerDragEvent(unsigned short, unsigned short, unsigned short, unsigned short)</STRONG> (Thumb, 122 bytes, Stack size 40 bytes, gestures.o(i._ZN8touchgfx8Gestures17registerDragEventEtttt))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = touchgfx::Gestures::registerDragEvent(unsigned short, unsigned short, unsigned short, unsigned short)
</UL>
<BR>[Calls]<UL><LI><a href="#[46c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;T1 touchgfx::abs&lang;short&rang;(T1)
</UL>
<BR>[Called By]<UL><LI><a href="#[123]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::HAL::touch(int, int)
</UL>

<P><STRONG><a name="[426]"></a>touchgfx::Gestures::registerClickEvent(touchgfx::ClickEvent::ClickEventType, unsigned short, unsigned short)</STRONG> (Thumb, 152 bytes, Stack size 48 bytes, gestures.o(i._ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt))
<BR><BR>[Stack]<UL><LI>Max Depth = 60<LI>Call Chain = touchgfx::Gestures::registerClickEvent(touchgfx::ClickEvent::ClickEventType, unsigned short, unsigned short) &rArr; touchgfx::GestureEvent::GestureEvent(touchgfx::GestureEvent::GestureEventType, short, short, short)
</UL>
<BR>[Calls]<UL><LI><a href="#[46d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::GestureEvent::GestureEvent(touchgfx::GestureEvent::GestureEventType, short, short, short)
</UL>
<BR>[Called By]<UL><LI><a href="#[124]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::HAL::noTouch()
<LI><a href="#[123]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::HAL::touch(int, int)
</UL>

<P><STRONG><a name="[421]"></a>touchgfx::Gestures::registerEventListener(touchgfx::UIEventListener&)</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, gestures.o(i._ZN8touchgfx8Gestures21registerEventListenerERNS_15UIEventListenerE))
<BR><BR>[Called By]<UL><LI><a href="#[113]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::HAL::registerEventListener(touchgfx::UIEventListener&)
</UL>

<P><STRONG><a name="[423]"></a>touchgfx::Gestures::tick()</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, gestures.o(i._ZN8touchgfx8Gestures4tickEv))
<BR><BR>[Called By]<UL><LI><a href="#[11f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::HAL::tick()
</UL>

<P><STRONG><a name="[46e]"></a>touchgfx::LCD16bpp::blitCopyL8(const unsigned char*, const unsigned char*, const touchgfx::Rect&, const touchgfx::Rect&, unsigned char)</STRONG> (Thumb, 220 bytes, Stack size 32 bytes, lcd16bpp.o(i._ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h))
<BR><BR>[Stack]<UL><LI>Max Depth = 176 + Unknown Stack Size
<LI>Call Chain = touchgfx::LCD16bpp::blitCopyL8(const unsigned char*, const unsigned char*, const touchgfx::Rect&, const touchgfx::Rect&, unsigned char) &rArr; touchgfx::LCD16bpp::blitCopyL8_ARGB8888(const unsigned char*, const unsigned char*, const touchgfx::Rect&, const touchgfx::Rect&, unsigned char) &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[470]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::blitCopyL8_ARGB8888(const unsigned char*, const unsigned char*, const touchgfx::Rect&, const touchgfx::Rect&, unsigned char)
<LI><a href="#[471]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::blitCopyL8_RGB888(const unsigned char*, const unsigned char*, const touchgfx::Rect&, const touchgfx::Rect&, unsigned char)
<LI><a href="#[46f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::blitCopyL8_RGB565(const unsigned char*, const unsigned char*, const touchgfx::Rect&, const touchgfx::Rect&, unsigned char)
<LI><a href="#[2ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;abort
</UL>
<BR>[Called By]<UL><LI><a href="#[27c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::drawPartialBitmap(const touchgfx::Bitmap&, short, short, const touchgfx::Rect&, unsigned char, bool)
</UL>

<P><STRONG><a name="[27f]"></a>touchgfx::LCD16bpp::fillBuffer(unsigned char*, unsigned short, const touchgfx::Rect&, touchgfx::colortype, unsigned char)</STRONG> (Thumb, 352 bytes, Stack size 64 bytes, lcd16bpp.o(i._ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh))
<BR><BR>[Stack]<UL><LI>Max Depth = 112 + Unknown Stack Size
<LI>Call Chain = touchgfx::LCD16bpp::fillBuffer(unsigned char*, unsigned short, const touchgfx::Rect&, touchgfx::colortype, unsigned char) &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[475]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD::div255(unsigned short)
<LI><a href="#[477]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::getNativeColor(touchgfx::colortype)
<LI><a href="#[473]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Color::getGreenFromRGB565(unsigned short)
<LI><a href="#[474]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Color::getBlueFromRGB565(unsigned short)
<LI><a href="#[472]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Color::getRedFromRGB565(unsigned short)
<LI><a href="#[3d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Rect::isEmpty() const
<LI><a href="#[476]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::getNativeColorFromRGB(unsigned char, unsigned char, unsigned char)
<LI><a href="#[2ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;abort
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lcd16bpp.o(.constdata__ZTVN8touchgfx8LCD16bppE)
</UL>
<P><STRONG><a name="[478]"></a>touchgfx::LCD16bpp::blitCopyRGB888(const unsigned char*, const touchgfx::Rect&, const touchgfx::Rect&, unsigned char)</STRONG> (Thumb, 440 bytes, Stack size 88 bytes, lcd16bpp.o(i._ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = touchgfx::LCD16bpp::blitCopyRGB888(const unsigned char*, const touchgfx::Rect&, const touchgfx::Rect&, unsigned char) &rArr; touchgfx::DisplayTransformation::transformDisplayToFrameBuffer(touchgfx::Rect&, const touchgfx::Rect&) &rArr; touchgfx::DisplayTransformation::transformDisplayToFrameBuffer(short&, short&, const touchgfx::Rect&)
</UL>
<BR>[Calls]<UL><LI><a href="#[475]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD::div255(unsigned short)
<LI><a href="#[473]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Color::getGreenFromRGB565(unsigned short)
<LI><a href="#[474]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Color::getBlueFromRGB565(unsigned short)
<LI><a href="#[472]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Color::getRedFromRGB565(unsigned short)
<LI><a href="#[419]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::DisplayTransformation::transformDisplayToFrameBuffer(touchgfx::Rect&, const touchgfx::Rect&)
<LI><a href="#[3e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::DisplayTransformation::transformDisplayToFrameBuffer(touchgfx::Rect&)
<LI><a href="#[476]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::getNativeColorFromRGB(unsigned char, unsigned char, unsigned char)
</UL>
<BR>[Called By]<UL><LI><a href="#[27c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::drawPartialBitmap(const touchgfx::Bitmap&, short, short, const touchgfx::Rect&, unsigned char, bool)
</UL>

<P><STRONG><a name="[477]"></a>touchgfx::LCD16bpp::getNativeColor(touchgfx::colortype)</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, lcd16bpp.o(i._ZN8touchgfx8LCD16bpp14getNativeColorENS_9colortypeE))
<BR><BR>[Called By]<UL><LI><a href="#[479]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::blitCopyARGB8888(const unsigned*, const touchgfx::Rect&, const touchgfx::Rect&, unsigned char)
<LI><a href="#[27f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::fillBuffer(unsigned char*, unsigned short, const touchgfx::Rect&, touchgfx::colortype, unsigned char)
<LI><a href="#[482]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::blitCopyARGB8888Solid(const unsigned*, const touchgfx::Rect&, const touchgfx::Rect&) const
<LI><a href="#[47c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::DecompressorL8_L4::blendPixelARGB8888(unsigned, unsigned short, int, unsigned char) const
<LI><a href="#[282]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::drawGlyph(unsigned short*, touchgfx::Rect, short, short, unsigned short, unsigned short, const touchgfx::Rect&, const touchgfx::GlyphNode*, const unsigned char*, unsigned char, touchgfx::colortype, unsigned char, unsigned char, touchgfx::TextRotation)
<LI><a href="#[470]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::blitCopyL8_ARGB8888(const unsigned char*, const unsigned char*, const touchgfx::Rect&, const touchgfx::Rect&, unsigned char)
<LI><a href="#[27a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::DecompressorL8_LZW9::blitCopyARGB8888(const unsigned char*, const unsigned char*, const touchgfx::Rect&, const touchgfx::Rect&, unsigned char)
<LI><a href="#[277]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::DecompressorL8_RLE::blitCopyARGB8888(const unsigned char*, const unsigned char*, const touchgfx::Rect&, const touchgfx::Rect&, unsigned char)
</UL>

<P><STRONG><a name="[479]"></a>touchgfx::LCD16bpp::blitCopyARGB8888(const unsigned*, const touchgfx::Rect&, const touchgfx::Rect&, unsigned char)</STRONG> (Thumb, 408 bytes, Stack size 80 bytes, lcd16bpp.o(i._ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKjRKNS_4RectES5_h))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = touchgfx::LCD16bpp::blitCopyARGB8888(const unsigned*, const touchgfx::Rect&, const touchgfx::Rect&, unsigned char) &rArr; touchgfx::DisplayTransformation::transformDisplayToFrameBuffer(touchgfx::Rect&, const touchgfx::Rect&) &rArr; touchgfx::DisplayTransformation::transformDisplayToFrameBuffer(short&, short&, const touchgfx::Rect&)
</UL>
<BR>[Calls]<UL><LI><a href="#[475]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD::div255(unsigned short)
<LI><a href="#[477]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::getNativeColor(touchgfx::colortype)
<LI><a href="#[473]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Color::getGreenFromRGB565(unsigned short)
<LI><a href="#[474]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Color::getBlueFromRGB565(unsigned short)
<LI><a href="#[472]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Color::getRedFromRGB565(unsigned short)
<LI><a href="#[419]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::DisplayTransformation::transformDisplayToFrameBuffer(touchgfx::Rect&, const touchgfx::Rect&)
<LI><a href="#[3e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::DisplayTransformation::transformDisplayToFrameBuffer(touchgfx::Rect&)
<LI><a href="#[476]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::getNativeColorFromRGB(unsigned char, unsigned char, unsigned char)
</UL>
<BR>[Called By]<UL><LI><a href="#[27c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::drawPartialBitmap(const touchgfx::Bitmap&, short, short, const touchgfx::Rect&, unsigned char, bool)
</UL>

<P><STRONG><a name="[273]"></a>touchgfx::LCD16bpp::DecompressorL8_L4::blitCopyRGB565(const unsigned char*, const unsigned char*, const touchgfx::Rect&, const touchgfx::Rect&, unsigned char)</STRONG> (Thumb, 480 bytes, Stack size 80 bytes, lcd16bpp.o(i._ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h))
<BR><BR>[Stack]<UL><LI>Max Depth = 128 + Unknown Stack Size
<LI>Call Chain = touchgfx::LCD16bpp::DecompressorL8_L4::blitCopyRGB565(const unsigned char*, const unsigned char*, const touchgfx::Rect&, const touchgfx::Rect&, unsigned char) &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[419]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::DisplayTransformation::transformDisplayToFrameBuffer(touchgfx::Rect&, const touchgfx::Rect&)
<LI><a href="#[3e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::DisplayTransformation::transformDisplayToFrameBuffer(touchgfx::Rect&)
<LI><a href="#[47a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::DecompressorL8_L4::blendPixelRGB565(unsigned short, unsigned short, int, int) const
<LI><a href="#[2ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;abort
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lcd16bpp.o(.constdata__ZTVN8touchgfx8LCD16bpp17DecompressorL8_L4E)
</UL>
<P><STRONG><a name="[275]"></a>touchgfx::LCD16bpp::DecompressorL8_L4::blitCopyRGB888(const unsigned char*, const unsigned char*, const touchgfx::Rect&, const touchgfx::Rect&, unsigned char)</STRONG> (Thumb, 536 bytes, Stack size 80 bytes, lcd16bpp.o(i._ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h))
<BR><BR>[Stack]<UL><LI>Max Depth = 128 + Unknown Stack Size
<LI>Call Chain = touchgfx::LCD16bpp::DecompressorL8_L4::blitCopyRGB888(const unsigned char*, const unsigned char*, const touchgfx::Rect&, const touchgfx::Rect&, unsigned char) &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[419]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::DisplayTransformation::transformDisplayToFrameBuffer(touchgfx::Rect&, const touchgfx::Rect&)
<LI><a href="#[3e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::DisplayTransformation::transformDisplayToFrameBuffer(touchgfx::Rect&)
<LI><a href="#[47b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::DecompressorL8_L4::blendPixelRGB888(const unsigned char*, unsigned short, unsigned char, unsigned char) const
<LI><a href="#[476]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::getNativeColorFromRGB(unsigned char, unsigned char, unsigned char)
<LI><a href="#[2ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;abort
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lcd16bpp.o(.constdata__ZTVN8touchgfx8LCD16bpp17DecompressorL8_L4E)
</UL>
<P><STRONG><a name="[274]"></a>touchgfx::LCD16bpp::DecompressorL8_L4::blitCopyARGB8888(const unsigned char*, const unsigned char*, const touchgfx::Rect&, const touchgfx::Rect&, unsigned char)</STRONG> (Thumb, 348 bytes, Stack size 80 bytes, lcd16bpp.o(i._ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h))
<BR><BR>[Stack]<UL><LI>Max Depth = 128 + Unknown Stack Size
<LI>Call Chain = touchgfx::LCD16bpp::DecompressorL8_L4::blitCopyARGB8888(const unsigned char*, const unsigned char*, const touchgfx::Rect&, const touchgfx::Rect&, unsigned char) &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[419]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::DisplayTransformation::transformDisplayToFrameBuffer(touchgfx::Rect&, const touchgfx::Rect&)
<LI><a href="#[3e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::DisplayTransformation::transformDisplayToFrameBuffer(touchgfx::Rect&)
<LI><a href="#[47c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::DecompressorL8_L4::blendPixelARGB8888(unsigned, unsigned short, int, unsigned char) const
<LI><a href="#[2ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;abort
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lcd16bpp.o(.constdata__ZTVN8touchgfx8LCD16bpp17DecompressorL8_L4E)
</UL>
<P><STRONG><a name="[b4]"></a>touchgfx::LCD16bpp::DecompressorL8_L4::~DecompressorL8_L4()</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, lcd16bpp.o(i._ZN8touchgfx8LCD16bpp17DecompressorL8_L4D1Ev))
<BR>[Address Reference Count : 2]<UL><LI> lcd16bpp.o(i._ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev)
<LI> lcd16bpp.o(.constdata__ZTVN8touchgfx8LCD16bpp17DecompressorL8_L4E)
</UL>
<P><STRONG><a name="[5c4]"></a>touchgfx::LCD16bpp::DecompressorL8_L4::~DecompressorL8_L4__sub_object()</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, lcd16bpp.o(i._ZN8touchgfx8LCD16bpp17DecompressorL8_L4D1Ev), UNUSED)

<P><STRONG><a name="[46f]"></a>touchgfx::LCD16bpp::blitCopyL8_RGB565(const unsigned char*, const unsigned char*, const touchgfx::Rect&, const touchgfx::Rect&, unsigned char)</STRONG> (Thumb, 372 bytes, Stack size 72 bytes, lcd16bpp.o(i._ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h))
<BR><BR>[Stack]<UL><LI>Max Depth = 120 + Unknown Stack Size
<LI>Call Chain = touchgfx::LCD16bpp::blitCopyL8_RGB565(const unsigned char*, const unsigned char*, const touchgfx::Rect&, const touchgfx::Rect&, unsigned char) &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[475]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD::div255(unsigned short)
<LI><a href="#[419]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::DisplayTransformation::transformDisplayToFrameBuffer(touchgfx::Rect&, const touchgfx::Rect&)
<LI><a href="#[3e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::DisplayTransformation::transformDisplayToFrameBuffer(touchgfx::Rect&)
<LI><a href="#[476]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::getNativeColorFromRGB(unsigned char, unsigned char, unsigned char)
<LI><a href="#[2ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;abort
</UL>
<BR>[Called By]<UL><LI><a href="#[46e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::blitCopyL8(const unsigned char*, const unsigned char*, const touchgfx::Rect&, const touchgfx::Rect&, unsigned char)
</UL>

<P><STRONG><a name="[471]"></a>touchgfx::LCD16bpp::blitCopyL8_RGB888(const unsigned char*, const unsigned char*, const touchgfx::Rect&, const touchgfx::Rect&, unsigned char)</STRONG> (Thumb, 474 bytes, Stack size 96 bytes, lcd16bpp.o(i._ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h))
<BR><BR>[Stack]<UL><LI>Max Depth = 144 + Unknown Stack Size
<LI>Call Chain = touchgfx::LCD16bpp::blitCopyL8_RGB888(const unsigned char*, const unsigned char*, const touchgfx::Rect&, const touchgfx::Rect&, unsigned char) &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[475]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD::div255(unsigned short)
<LI><a href="#[473]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Color::getGreenFromRGB565(unsigned short)
<LI><a href="#[474]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Color::getBlueFromRGB565(unsigned short)
<LI><a href="#[472]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Color::getRedFromRGB565(unsigned short)
<LI><a href="#[419]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::DisplayTransformation::transformDisplayToFrameBuffer(touchgfx::Rect&, const touchgfx::Rect&)
<LI><a href="#[3e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::DisplayTransformation::transformDisplayToFrameBuffer(touchgfx::Rect&)
<LI><a href="#[476]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::getNativeColorFromRGB(unsigned char, unsigned char, unsigned char)
<LI><a href="#[2ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;abort
</UL>
<BR>[Called By]<UL><LI><a href="#[46e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::blitCopyL8(const unsigned char*, const unsigned char*, const touchgfx::Rect&, const touchgfx::Rect&, unsigned char)
</UL>

<P><STRONG><a name="[27c]"></a>touchgfx::LCD16bpp::drawPartialBitmap(const touchgfx::Bitmap&, short, short, const touchgfx::Rect&, unsigned char, bool)</STRONG> (Thumb, 744 bytes, Stack size 72 bytes, lcd16bpp.o(i._ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb))
<BR><BR>[Stack]<UL><LI>Max Depth = 248 + Unknown Stack Size
<LI>Call Chain = touchgfx::LCD16bpp::drawPartialBitmap(const touchgfx::Bitmap&, short, short, const touchgfx::Rect&, unsigned char, bool) &rArr; touchgfx::LCD16bpp::blitCopyL8(const unsigned char*, const unsigned char*, const touchgfx::Rect&, const touchgfx::Rect&, unsigned char) &rArr; touchgfx::LCD16bpp::blitCopyL8_ARGB8888(const unsigned char*, const unsigned char*, const touchgfx::Rect&, const touchgfx::Rect&, unsigned char) &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[479]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::blitCopyARGB8888(const unsigned*, const touchgfx::Rect&, const touchgfx::Rect&, unsigned char)
<LI><a href="#[478]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::blitCopyRGB888(const unsigned char*, const touchgfx::Rect&, const touchgfx::Rect&, unsigned char)
<LI><a href="#[46e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::blitCopyL8(const unsigned char*, const unsigned char*, const touchgfx::Rect&, const touchgfx::Rect&, unsigned char)
<LI><a href="#[3d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Rect::Rect(short, short, short, short)
<LI><a href="#[436]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Bitmap::getHeight() const
<LI><a href="#[47f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Bitmap::getFormat() const
<LI><a href="#[435]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Bitmap::getWidth() const
<LI><a href="#[47d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Bitmap::getData() const
<LI><a href="#[480]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Bitmap::hasTransparentPixels() const
<LI><a href="#[481]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Bitmap::getSolidRect() const
<LI><a href="#[47e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Bitmap::getExtraData() const
<LI><a href="#[482]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::blitCopyARGB8888Solid(const unsigned*, const touchgfx::Rect&, const touchgfx::Rect&) const
<LI><a href="#[44a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Rect::operator &(const touchgfx::Rect&) const
<LI><a href="#[3d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Rect::isEmpty() const
<LI><a href="#[3dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Rect::bottom() const
<LI><a href="#[3db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Rect::right() const
<LI><a href="#[483]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::blitCopyAlphaPerPixel(const unsigned short*, const unsigned char*, const touchgfx::Rect&, const touchgfx::Rect&, unsigned char)
<LI><a href="#[2ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;abort
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lcd16bpp.o(.constdata__ZTVN8touchgfx8LCD16bppE)
</UL>
<P><STRONG><a name="[276]"></a>touchgfx::LCD16bpp::DecompressorL8_RLE::blitCopyRGB565(const unsigned char*, const unsigned char*, const touchgfx::Rect&, const touchgfx::Rect&, unsigned char)</STRONG> (Thumb, 560 bytes, Stack size 104 bytes, lcd16bpp.o(i._ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h))
<BR><BR>[Stack]<UL><LI>Max Depth = 152 + Unknown Stack Size
<LI>Call Chain = touchgfx::LCD16bpp::DecompressorL8_RLE::blitCopyRGB565(const unsigned char*, const unsigned char*, const touchgfx::Rect&, const touchgfx::Rect&, unsigned char) &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[475]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD::div255(unsigned short)
<LI><a href="#[419]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::DisplayTransformation::transformDisplayToFrameBuffer(touchgfx::Rect&, const touchgfx::Rect&)
<LI><a href="#[3e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::DisplayTransformation::transformDisplayToFrameBuffer(touchgfx::Rect&)
<LI><a href="#[476]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::getNativeColorFromRGB(unsigned char, unsigned char, unsigned char)
<LI><a href="#[2ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;abort
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lcd16bpp.o(.constdata__ZTVN8touchgfx8LCD16bpp18DecompressorL8_RLEE)
</UL>
<P><STRONG><a name="[278]"></a>touchgfx::LCD16bpp::DecompressorL8_RLE::blitCopyRGB888(const unsigned char*, const unsigned char*, const touchgfx::Rect&, const touchgfx::Rect&, unsigned char)</STRONG> (Thumb, 588 bytes, Stack size 104 bytes, lcd16bpp.o(i._ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h))
<BR><BR>[Stack]<UL><LI>Max Depth = 152 + Unknown Stack Size
<LI>Call Chain = touchgfx::LCD16bpp::DecompressorL8_RLE::blitCopyRGB888(const unsigned char*, const unsigned char*, const touchgfx::Rect&, const touchgfx::Rect&, unsigned char) &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[475]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD::div255(unsigned short)
<LI><a href="#[473]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Color::getGreenFromRGB565(unsigned short)
<LI><a href="#[474]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Color::getBlueFromRGB565(unsigned short)
<LI><a href="#[472]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Color::getRedFromRGB565(unsigned short)
<LI><a href="#[419]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::DisplayTransformation::transformDisplayToFrameBuffer(touchgfx::Rect&, const touchgfx::Rect&)
<LI><a href="#[3e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::DisplayTransformation::transformDisplayToFrameBuffer(touchgfx::Rect&)
<LI><a href="#[476]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::getNativeColorFromRGB(unsigned char, unsigned char, unsigned char)
<LI><a href="#[2ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;abort
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lcd16bpp.o(.constdata__ZTVN8touchgfx8LCD16bpp18DecompressorL8_RLEE)
</UL>
<P><STRONG><a name="[277]"></a>touchgfx::LCD16bpp::DecompressorL8_RLE::blitCopyARGB8888(const unsigned char*, const unsigned char*, const touchgfx::Rect&, const touchgfx::Rect&, unsigned char)</STRONG> (Thumb, 594 bytes, Stack size 104 bytes, lcd16bpp.o(i._ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h))
<BR><BR>[Stack]<UL><LI>Max Depth = 152 + Unknown Stack Size
<LI>Call Chain = touchgfx::LCD16bpp::DecompressorL8_RLE::blitCopyARGB8888(const unsigned char*, const unsigned char*, const touchgfx::Rect&, const touchgfx::Rect&, unsigned char) &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[475]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD::div255(unsigned short)
<LI><a href="#[477]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::getNativeColor(touchgfx::colortype)
<LI><a href="#[473]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Color::getGreenFromRGB565(unsigned short)
<LI><a href="#[474]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Color::getBlueFromRGB565(unsigned short)
<LI><a href="#[472]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Color::getRedFromRGB565(unsigned short)
<LI><a href="#[419]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::DisplayTransformation::transformDisplayToFrameBuffer(touchgfx::Rect&, const touchgfx::Rect&)
<LI><a href="#[3e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::DisplayTransformation::transformDisplayToFrameBuffer(touchgfx::Rect&)
<LI><a href="#[476]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::getNativeColorFromRGB(unsigned char, unsigned char, unsigned char)
<LI><a href="#[2ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;abort
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lcd16bpp.o(.constdata__ZTVN8touchgfx8LCD16bpp18DecompressorL8_RLEE)
</UL>
<P><STRONG><a name="[b5]"></a>touchgfx::LCD16bpp::DecompressorL8_RLE::~DecompressorL8_RLE()</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, lcd16bpp.o(i._ZN8touchgfx8LCD16bpp18DecompressorL8_RLED1Ev))
<BR>[Address Reference Count : 2]<UL><LI> lcd16bpp.o(i._ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv)
<LI> lcd16bpp.o(.constdata__ZTVN8touchgfx8LCD16bpp18DecompressorL8_RLEE)
</UL>
<P><STRONG><a name="[5c5]"></a>touchgfx::LCD16bpp::DecompressorL8_RLE::~DecompressorL8_RLE__sub_object()</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, lcd16bpp.o(i._ZN8touchgfx8LCD16bpp18DecompressorL8_RLED1Ev), UNUSED)

<P><STRONG><a name="[279]"></a>touchgfx::LCD16bpp::DecompressorL8_LZW9::blitCopyRGB565(const unsigned char*, const unsigned char*, const touchgfx::Rect&, const touchgfx::Rect&, unsigned char)</STRONG> (Thumb, 916 bytes, Stack size 152 bytes, lcd16bpp.o(i._ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h))
<BR><BR>[Stack]<UL><LI>Max Depth = 200 + Unknown Stack Size
<LI>Call Chain = touchgfx::LCD16bpp::DecompressorL8_LZW9::blitCopyRGB565(const unsigned char*, const unsigned char*, const touchgfx::Rect&, const touchgfx::Rect&, unsigned char) &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[475]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD::div255(unsigned short)
<LI><a href="#[419]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::DisplayTransformation::transformDisplayToFrameBuffer(touchgfx::Rect&, const touchgfx::Rect&)
<LI><a href="#[3e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::DisplayTransformation::transformDisplayToFrameBuffer(touchgfx::Rect&)
<LI><a href="#[476]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::getNativeColorFromRGB(unsigned char, unsigned char, unsigned char)
<LI><a href="#[2ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;abort
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lcd16bpp.o(.constdata__ZTVN8touchgfx8LCD16bpp19DecompressorL8_LZW9E)
</UL>
<P><STRONG><a name="[27b]"></a>touchgfx::LCD16bpp::DecompressorL8_LZW9::blitCopyRGB888(const unsigned char*, const unsigned char*, const touchgfx::Rect&, const touchgfx::Rect&, unsigned char)</STRONG> (Thumb, 924 bytes, Stack size 152 bytes, lcd16bpp.o(i._ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h))
<BR><BR>[Stack]<UL><LI>Max Depth = 200 + Unknown Stack Size
<LI>Call Chain = touchgfx::LCD16bpp::DecompressorL8_LZW9::blitCopyRGB888(const unsigned char*, const unsigned char*, const touchgfx::Rect&, const touchgfx::Rect&, unsigned char) &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[475]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD::div255(unsigned short)
<LI><a href="#[473]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Color::getGreenFromRGB565(unsigned short)
<LI><a href="#[474]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Color::getBlueFromRGB565(unsigned short)
<LI><a href="#[472]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Color::getRedFromRGB565(unsigned short)
<LI><a href="#[419]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::DisplayTransformation::transformDisplayToFrameBuffer(touchgfx::Rect&, const touchgfx::Rect&)
<LI><a href="#[3e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::DisplayTransformation::transformDisplayToFrameBuffer(touchgfx::Rect&)
<LI><a href="#[476]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::getNativeColorFromRGB(unsigned char, unsigned char, unsigned char)
<LI><a href="#[2ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;abort
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lcd16bpp.o(.constdata__ZTVN8touchgfx8LCD16bpp19DecompressorL8_LZW9E)
</UL>
<P><STRONG><a name="[27a]"></a>touchgfx::LCD16bpp::DecompressorL8_LZW9::blitCopyARGB8888(const unsigned char*, const unsigned char*, const touchgfx::Rect&, const touchgfx::Rect&, unsigned char)</STRONG> (Thumb, 910 bytes, Stack size 168 bytes, lcd16bpp.o(i._ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h))
<BR><BR>[Stack]<UL><LI>Max Depth = 216 + Unknown Stack Size
<LI>Call Chain = touchgfx::LCD16bpp::DecompressorL8_LZW9::blitCopyARGB8888(const unsigned char*, const unsigned char*, const touchgfx::Rect&, const touchgfx::Rect&, unsigned char) &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[475]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD::div255(unsigned short)
<LI><a href="#[477]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::getNativeColor(touchgfx::colortype)
<LI><a href="#[473]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Color::getGreenFromRGB565(unsigned short)
<LI><a href="#[474]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Color::getBlueFromRGB565(unsigned short)
<LI><a href="#[472]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Color::getRedFromRGB565(unsigned short)
<LI><a href="#[419]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::DisplayTransformation::transformDisplayToFrameBuffer(touchgfx::Rect&, const touchgfx::Rect&)
<LI><a href="#[3e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::DisplayTransformation::transformDisplayToFrameBuffer(touchgfx::Rect&)
<LI><a href="#[476]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::getNativeColorFromRGB(unsigned char, unsigned char, unsigned char)
<LI><a href="#[2ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;abort
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lcd16bpp.o(.constdata__ZTVN8touchgfx8LCD16bpp19DecompressorL8_LZW9E)
</UL>
<P><STRONG><a name="[b6]"></a>touchgfx::LCD16bpp::DecompressorL8_LZW9::~DecompressorL8_LZW9()</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, lcd16bpp.o(i._ZN8touchgfx8LCD16bpp19DecompressorL8_LZW9D1Ev))
<BR>[Address Reference Count : 2]<UL><LI> lcd16bpp.o(i._ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev)
<LI> lcd16bpp.o(.constdata__ZTVN8touchgfx8LCD16bpp19DecompressorL8_LZW9E)
</UL>
<P><STRONG><a name="[5c6]"></a>touchgfx::LCD16bpp::DecompressorL8_LZW9::~DecompressorL8_LZW9__sub_object()</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, lcd16bpp.o(i._ZN8touchgfx8LCD16bpp19DecompressorL8_LZW9D1Ev), UNUSED)

<P><STRONG><a name="[470]"></a>touchgfx::LCD16bpp::blitCopyL8_ARGB8888(const unsigned char*, const unsigned char*, const touchgfx::Rect&, const touchgfx::Rect&, unsigned char)</STRONG> (Thumb, 440 bytes, Stack size 96 bytes, lcd16bpp.o(i._ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h))
<BR><BR>[Stack]<UL><LI>Max Depth = 144 + Unknown Stack Size
<LI>Call Chain = touchgfx::LCD16bpp::blitCopyL8_ARGB8888(const unsigned char*, const unsigned char*, const touchgfx::Rect&, const touchgfx::Rect&, unsigned char) &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[475]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD::div255(unsigned short)
<LI><a href="#[477]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::getNativeColor(touchgfx::colortype)
<LI><a href="#[473]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Color::getGreenFromRGB565(unsigned short)
<LI><a href="#[474]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Color::getBlueFromRGB565(unsigned short)
<LI><a href="#[472]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Color::getRedFromRGB565(unsigned short)
<LI><a href="#[419]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::DisplayTransformation::transformDisplayToFrameBuffer(touchgfx::Rect&, const touchgfx::Rect&)
<LI><a href="#[3e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::DisplayTransformation::transformDisplayToFrameBuffer(touchgfx::Rect&)
<LI><a href="#[476]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::getNativeColorFromRGB(unsigned char, unsigned char, unsigned char)
<LI><a href="#[2ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;abort
</UL>
<BR>[Called By]<UL><LI><a href="#[46e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::blitCopyL8(const unsigned char*, const unsigned char*, const touchgfx::Rect&, const touchgfx::Rect&, unsigned char)
</UL>

<P><STRONG><a name="[484]"></a>touchgfx::LCD16bpp::getFramebufferStride()</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, lcd16bpp.o(i._ZN8touchgfx8LCD16bpp20getFramebufferStrideEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 56 + Unknown Stack Size
<LI>Call Chain = touchgfx::LCD16bpp::getFramebufferStride() &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[2ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;abort
</UL>
<BR>[Called By]<UL><LI><a href="#[281]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::framebufferStride() const
<LI><a href="#[49e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::nextPixel(bool, touchgfx::TextRotation)
<LI><a href="#[49c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::nextLine(bool, touchgfx::TextRotation)
</UL>

<P><STRONG><a name="[483]"></a>touchgfx::LCD16bpp::blitCopyAlphaPerPixel(const unsigned short*, const unsigned char*, const touchgfx::Rect&, const touchgfx::Rect&, unsigned char)</STRONG> (Thumb, 498 bytes, Stack size 72 bytes, lcd16bpp.o(i._ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = touchgfx::LCD16bpp::blitCopyAlphaPerPixel(const unsigned short*, const unsigned char*, const touchgfx::Rect&, const touchgfx::Rect&, unsigned char) &rArr; touchgfx::DisplayTransformation::transformDisplayToFrameBuffer(touchgfx::Rect&, const touchgfx::Rect&) &rArr; touchgfx::DisplayTransformation::transformDisplayToFrameBuffer(short&, short&, const touchgfx::Rect&)
</UL>
<BR>[Calls]<UL><LI><a href="#[475]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD::div255(unsigned short)
<LI><a href="#[419]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::DisplayTransformation::transformDisplayToFrameBuffer(touchgfx::Rect&, const touchgfx::Rect&)
<LI><a href="#[3e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::DisplayTransformation::transformDisplayToFrameBuffer(touchgfx::Rect&)
<LI><a href="#[476]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::getNativeColorFromRGB(unsigned char, unsigned char, unsigned char)
</UL>
<BR>[Called By]<UL><LI><a href="#[27c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::drawPartialBitmap(const touchgfx::Bitmap&, short, short, const touchgfx::Rect&, unsigned char, bool)
</UL>

<P><STRONG><a name="[485]"></a>touchgfx::LCD16bpp::enableTextureMapperA4()</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, lcd16bpp.o(i._ZN8touchgfx8LCD16bpp21enableTextureMapperA4Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = touchgfx::LCD16bpp::enableTextureMapperA4() &rArr; touchgfx::LCD16bpp::enableTextureMapperA4_BilinearInterpolation() &rArr; __aeabi_atexit &rArr; malloc &rArr; __Heap_Full &rArr; __Heap_ProvideMemory &rArr; free
</UL>
<BR>[Calls]<UL><LI><a href="#[486]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::enableTextureMapperA4_BilinearInterpolation()
<LI><a href="#[487]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::enableTextureMapperA4_NearestNeighbor()
</UL>
<BR>[Called By]<UL><LI><a href="#[3bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::enableTextureMapperAll()
</UL>

<P><STRONG><a name="[476]"></a>touchgfx::LCD16bpp::getNativeColorFromRGB(unsigned char, unsigned char, unsigned char)</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, lcd16bpp.o(i._ZN8touchgfx8LCD16bpp21getNativeColorFromRGBEhhh))
<BR><BR>[Called By]<UL><LI><a href="#[275]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::DecompressorL8_L4::blitCopyRGB888(const unsigned char*, const unsigned char*, const touchgfx::Rect&, const touchgfx::Rect&, unsigned char)
<LI><a href="#[479]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::blitCopyARGB8888(const unsigned*, const touchgfx::Rect&, const touchgfx::Rect&, unsigned char)
<LI><a href="#[478]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::blitCopyRGB888(const unsigned char*, const touchgfx::Rect&, const touchgfx::Rect&, unsigned char)
<LI><a href="#[27f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::fillBuffer(unsigned char*, unsigned short, const touchgfx::Rect&, touchgfx::colortype, unsigned char)
<LI><a href="#[47c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::DecompressorL8_L4::blendPixelARGB8888(unsigned, unsigned short, int, unsigned char) const
<LI><a href="#[47b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::DecompressorL8_L4::blendPixelRGB888(const unsigned char*, unsigned short, unsigned char, unsigned char) const
<LI><a href="#[47a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::DecompressorL8_L4::blendPixelRGB565(unsigned short, unsigned short, int, int) const
<LI><a href="#[282]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::drawGlyph(unsigned short*, touchgfx::Rect, short, short, unsigned short, unsigned short, const touchgfx::Rect&, const touchgfx::GlyphNode*, const unsigned char*, unsigned char, touchgfx::colortype, unsigned char, unsigned char, touchgfx::TextRotation)
<LI><a href="#[27d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::blitCopy(const unsigned short*, const touchgfx::Rect&, const touchgfx::Rect&, unsigned char, bool)
<LI><a href="#[483]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::blitCopyAlphaPerPixel(const unsigned short*, const unsigned char*, const touchgfx::Rect&, const touchgfx::Rect&, unsigned char)
<LI><a href="#[470]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::blitCopyL8_ARGB8888(const unsigned char*, const unsigned char*, const touchgfx::Rect&, const touchgfx::Rect&, unsigned char)
<LI><a href="#[27a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::DecompressorL8_LZW9::blitCopyARGB8888(const unsigned char*, const unsigned char*, const touchgfx::Rect&, const touchgfx::Rect&, unsigned char)
<LI><a href="#[27b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::DecompressorL8_LZW9::blitCopyRGB888(const unsigned char*, const unsigned char*, const touchgfx::Rect&, const touchgfx::Rect&, unsigned char)
<LI><a href="#[279]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::DecompressorL8_LZW9::blitCopyRGB565(const unsigned char*, const unsigned char*, const touchgfx::Rect&, const touchgfx::Rect&, unsigned char)
<LI><a href="#[277]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::DecompressorL8_RLE::blitCopyARGB8888(const unsigned char*, const unsigned char*, const touchgfx::Rect&, const touchgfx::Rect&, unsigned char)
<LI><a href="#[278]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::DecompressorL8_RLE::blitCopyRGB888(const unsigned char*, const unsigned char*, const touchgfx::Rect&, const touchgfx::Rect&, unsigned char)
<LI><a href="#[276]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::DecompressorL8_RLE::blitCopyRGB565(const unsigned char*, const unsigned char*, const touchgfx::Rect&, const touchgfx::Rect&, unsigned char)
<LI><a href="#[471]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::blitCopyL8_RGB888(const unsigned char*, const unsigned char*, const touchgfx::Rect&, const touchgfx::Rect&, unsigned char)
<LI><a href="#[46f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::blitCopyL8_RGB565(const unsigned char*, const unsigned char*, const touchgfx::Rect&, const touchgfx::Rect&, unsigned char)
</UL>

<P><STRONG><a name="[3bc]"></a>touchgfx::LCD16bpp::enableTextureMapperAll()</STRONG> (Thumb, 42 bytes, Stack size 8 bytes, lcd16bpp.o(i._ZN8touchgfx8LCD16bpp22enableTextureMapperAllEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = touchgfx::LCD16bpp::enableTextureMapperAll() &rArr; touchgfx::LCD16bpp::enableTextureMapperL8_ARGB8888() &rArr; touchgfx::LCD16bpp::enableTextureMapperL8_ARGB8888_BilinearInterpolation() &rArr; __aeabi_atexit &rArr; malloc &rArr; __Heap_Full &rArr; __Heap_ProvideMemory &rArr; free
</UL>
<BR>[Calls]<UL><LI><a href="#[489]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::enableTextureMapperL8_ARGB8888()
<LI><a href="#[48b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::enableTextureMapperL8_RGB888()
<LI><a href="#[48a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::enableTextureMapperL8_RGB565()
<LI><a href="#[488]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::enableTextureMapperARGB8888()
<LI><a href="#[48c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::enableTextureMapperRGB565()
<LI><a href="#[485]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::enableTextureMapperA4()
</UL>
<BR>[Called By]<UL><LI><a href="#[3a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FrontendApplicationBase::FrontendApplicationBase(Model&, FrontendHeap&)
</UL>

<P><STRONG><a name="[48d]"></a>touchgfx::LCD16bpp::enableDecompressorL8_L4()</STRONG> (Thumb, 56 bytes, Stack size 8 bytes, lcd16bpp.o(i._ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = touchgfx::LCD16bpp::enableDecompressorL8_L4() &rArr; __aeabi_atexit &rArr; malloc &rArr; __Heap_Full &rArr; __Heap_ProvideMemory &rArr; free
</UL>
<BR>[Calls]<UL><LI><a href="#[322]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxa_guard_acquire
<LI><a href="#[2af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_atexit
</UL>
<BR>[Called By]<UL><LI><a href="#[3bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::enableDecompressorL8_All()
</UL>

<P><STRONG><a name="[3bd]"></a>touchgfx::LCD16bpp::enableDecompressorL8_All()</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, lcd16bpp.o(i._ZN8touchgfx8LCD16bpp24enableDecompressorL8_AllEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = touchgfx::LCD16bpp::enableDecompressorL8_All() &rArr; touchgfx::LCD16bpp::enableDecompressorL8_LZW9() &rArr; __aeabi_atexit &rArr; malloc &rArr; __Heap_Full &rArr; __Heap_ProvideMemory &rArr; free
</UL>
<BR>[Calls]<UL><LI><a href="#[48f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::enableDecompressorL8_LZW9()
<LI><a href="#[48e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::enableDecompressorL8_RLE()
<LI><a href="#[48d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::enableDecompressorL8_L4()
</UL>
<BR>[Called By]<UL><LI><a href="#[3a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FrontendApplicationBase::FrontendApplicationBase(Model&, FrontendHeap&)
</UL>

<P><STRONG><a name="[48e]"></a>touchgfx::LCD16bpp::enableDecompressorL8_RLE()</STRONG> (Thumb, 58 bytes, Stack size 8 bytes, lcd16bpp.o(i._ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = touchgfx::LCD16bpp::enableDecompressorL8_RLE() &rArr; __aeabi_atexit &rArr; malloc &rArr; __Heap_Full &rArr; __Heap_ProvideMemory &rArr; free
</UL>
<BR>[Calls]<UL><LI><a href="#[322]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxa_guard_acquire
<LI><a href="#[2af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_atexit
</UL>
<BR>[Called By]<UL><LI><a href="#[3bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::enableDecompressorL8_All()
</UL>

<P><STRONG><a name="[48f]"></a>touchgfx::LCD16bpp::enableDecompressorL8_LZW9()</STRONG> (Thumb, 54 bytes, Stack size 8 bytes, lcd16bpp.o(i._ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = touchgfx::LCD16bpp::enableDecompressorL8_LZW9() &rArr; __aeabi_atexit &rArr; malloc &rArr; __Heap_Full &rArr; __Heap_ProvideMemory &rArr; free
</UL>
<BR>[Calls]<UL><LI><a href="#[322]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxa_guard_acquire
<LI><a href="#[2af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_atexit
</UL>
<BR>[Called By]<UL><LI><a href="#[3bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::enableDecompressorL8_All()
</UL>

<P><STRONG><a name="[48c]"></a>touchgfx::LCD16bpp::enableTextureMapperRGB565()</STRONG> (Thumb, 30 bytes, Stack size 8 bytes, lcd16bpp.o(i._ZN8touchgfx8LCD16bpp25enableTextureMapperRGB565Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = touchgfx::LCD16bpp::enableTextureMapperRGB565() &rArr; touchgfx::LCD16bpp::enableTextureMapperRGB565_NonOpaque_BilinearInterpolation() &rArr; __aeabi_atexit &rArr; malloc &rArr; __Heap_Full &rArr; __Heap_ProvideMemory &rArr; free
</UL>
<BR>[Calls]<UL><LI><a href="#[492]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::enableTextureMapperRGB565_NonOpaque_BilinearInterpolation()
<LI><a href="#[490]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::enableTextureMapperRGB565_Opaque_BilinearInterpolation()
<LI><a href="#[493]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::enableTextureMapperRGB565_NonOpaque_NearestNeighbor()
<LI><a href="#[491]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::enableTextureMapperRGB565_Opaque_NearestNeighbor()
</UL>
<BR>[Called By]<UL><LI><a href="#[3bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::enableTextureMapperAll()
</UL>

<P><STRONG><a name="[488]"></a>touchgfx::LCD16bpp::enableTextureMapperARGB8888()</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, lcd16bpp.o(i._ZN8touchgfx8LCD16bpp27enableTextureMapperARGB8888Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = touchgfx::LCD16bpp::enableTextureMapperARGB8888() &rArr; touchgfx::LCD16bpp::enableTextureMapperARGB8888_BilinearInterpolation() &rArr; __aeabi_atexit &rArr; malloc &rArr; __Heap_Full &rArr; __Heap_ProvideMemory &rArr; free
</UL>
<BR>[Calls]<UL><LI><a href="#[494]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::enableTextureMapperARGB8888_BilinearInterpolation()
<LI><a href="#[495]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::enableTextureMapperARGB8888_NearestNeighbor()
</UL>
<BR>[Called By]<UL><LI><a href="#[3bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::enableTextureMapperAll()
</UL>

<P><STRONG><a name="[48a]"></a>touchgfx::LCD16bpp::enableTextureMapperL8_RGB565()</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, lcd16bpp.o(i._ZN8touchgfx8LCD16bpp28enableTextureMapperL8_RGB565Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = touchgfx::LCD16bpp::enableTextureMapperL8_RGB565() &rArr; touchgfx::LCD16bpp::enableTextureMapperL8_RGB565_BilinearInterpolation() &rArr; __aeabi_atexit &rArr; malloc &rArr; __Heap_Full &rArr; __Heap_ProvideMemory &rArr; free
</UL>
<BR>[Calls]<UL><LI><a href="#[496]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::enableTextureMapperL8_RGB565_BilinearInterpolation()
<LI><a href="#[497]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::enableTextureMapperL8_RGB565_NearestNeighbor()
</UL>
<BR>[Called By]<UL><LI><a href="#[3bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::enableTextureMapperAll()
</UL>

<P><STRONG><a name="[48b]"></a>touchgfx::LCD16bpp::enableTextureMapperL8_RGB888()</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, lcd16bpp.o(i._ZN8touchgfx8LCD16bpp28enableTextureMapperL8_RGB888Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = touchgfx::LCD16bpp::enableTextureMapperL8_RGB888() &rArr; touchgfx::LCD16bpp::enableTextureMapperL8_RGB888_BilinearInterpolation() &rArr; __aeabi_atexit &rArr; malloc &rArr; __Heap_Full &rArr; __Heap_ProvideMemory &rArr; free
</UL>
<BR>[Calls]<UL><LI><a href="#[498]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::enableTextureMapperL8_RGB888_BilinearInterpolation()
<LI><a href="#[499]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::enableTextureMapperL8_RGB888_NearestNeighbor()
</UL>
<BR>[Called By]<UL><LI><a href="#[3bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::enableTextureMapperAll()
</UL>

<P><STRONG><a name="[489]"></a>touchgfx::LCD16bpp::enableTextureMapperL8_ARGB8888()</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, lcd16bpp.o(i._ZN8touchgfx8LCD16bpp30enableTextureMapperL8_ARGB8888Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = touchgfx::LCD16bpp::enableTextureMapperL8_ARGB8888() &rArr; touchgfx::LCD16bpp::enableTextureMapperL8_ARGB8888_BilinearInterpolation() &rArr; __aeabi_atexit &rArr; malloc &rArr; __Heap_Full &rArr; __Heap_ProvideMemory &rArr; free
</UL>
<BR>[Calls]<UL><LI><a href="#[49a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::enableTextureMapperL8_ARGB8888_BilinearInterpolation()
<LI><a href="#[49b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::enableTextureMapperL8_ARGB8888_NearestNeighbor()
</UL>
<BR>[Called By]<UL><LI><a href="#[3bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::enableTextureMapperAll()
</UL>

<P><STRONG><a name="[b7]"></a>touchgfx::LCD16bpp::TextureMapper_A4_NearestNeighbor_GA::~TextureMapper_A4_NearestNeighbor_GA()</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, lcd16bpp.o(i._ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GAD1Ev))
<BR>[Address Reference Count : 2]<UL><LI> lcd16bpp.o(i._ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv)
<LI> lcd16bpp.o(.constdata__ZTVN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GAE)
</UL>
<P><STRONG><a name="[5c7]"></a>touchgfx::LCD16bpp::TextureMapper_A4_NearestNeighbor_GA::~TextureMapper_A4_NearestNeighbor_GA__sub_object()</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, lcd16bpp.o(i._ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GAD1Ev), UNUSED)

<P><STRONG><a name="[b8]"></a>touchgfx::LCD16bpp::TextureMapper_A4_NearestNeighbor_NoGA::~TextureMapper_A4_NearestNeighbor_NoGA()</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, lcd16bpp.o(i._ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGAD1Ev))
<BR>[Address Reference Count : 2]<UL><LI> lcd16bpp.o(i._ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv)
<LI> lcd16bpp.o(.constdata__ZTVN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGAE)
</UL>
<P><STRONG><a name="[5c8]"></a>touchgfx::LCD16bpp::TextureMapper_A4_NearestNeighbor_NoGA::~TextureMapper_A4_NearestNeighbor_NoGA__sub_object()</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, lcd16bpp.o(i._ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGAD1Ev), UNUSED)

<P><STRONG><a name="[487]"></a>touchgfx::LCD16bpp::enableTextureMapperA4_NearestNeighbor()</STRONG> (Thumb, 102 bytes, Stack size 16 bytes, lcd16bpp.o(i._ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = touchgfx::LCD16bpp::enableTextureMapperA4_NearestNeighbor() &rArr; __aeabi_atexit &rArr; malloc &rArr; __Heap_Full &rArr; __Heap_ProvideMemory &rArr; free
</UL>
<BR>[Calls]<UL><LI><a href="#[322]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxa_guard_acquire
<LI><a href="#[2af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_atexit
</UL>
<BR>[Called By]<UL><LI><a href="#[485]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::enableTextureMapperA4()
</UL>

<P><STRONG><a name="[b9]"></a>touchgfx::LCD16bpp::TextureMapper_A4_BilinearInterpolation_GA::~TextureMapper_A4_BilinearInterpolation_GA()</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, lcd16bpp.o(i._ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GAD1Ev))
<BR>[Address Reference Count : 2]<UL><LI> lcd16bpp.o(i._ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv)
<LI> lcd16bpp.o(.constdata__ZTVN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GAE)
</UL>
<P><STRONG><a name="[5c9]"></a>touchgfx::LCD16bpp::TextureMapper_A4_BilinearInterpolation_GA::~TextureMapper_A4_BilinearInterpolation_GA__sub_object()</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, lcd16bpp.o(i._ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GAD1Ev), UNUSED)

<P><STRONG><a name="[ba]"></a>touchgfx::LCD16bpp::TextureMapper_A4_BilinearInterpolation_NoGA::~TextureMapper_A4_BilinearInterpolation_NoGA()</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, lcd16bpp.o(i._ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGAD1Ev))
<BR>[Address Reference Count : 2]<UL><LI> lcd16bpp.o(i._ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv)
<LI> lcd16bpp.o(.constdata__ZTVN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGAE)
</UL>
<P><STRONG><a name="[5ca]"></a>touchgfx::LCD16bpp::TextureMapper_A4_BilinearInterpolation_NoGA::~TextureMapper_A4_BilinearInterpolation_NoGA__sub_object()</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, lcd16bpp.o(i._ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGAD1Ev), UNUSED)

<P><STRONG><a name="[486]"></a>touchgfx::LCD16bpp::enableTextureMapperA4_BilinearInterpolation()</STRONG> (Thumb, 102 bytes, Stack size 16 bytes, lcd16bpp.o(i._ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = touchgfx::LCD16bpp::enableTextureMapperA4_BilinearInterpolation() &rArr; __aeabi_atexit &rArr; malloc &rArr; __Heap_Full &rArr; __Heap_ProvideMemory &rArr; free
</UL>
<BR>[Calls]<UL><LI><a href="#[322]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxa_guard_acquire
<LI><a href="#[2af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_atexit
</UL>
<BR>[Called By]<UL><LI><a href="#[485]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::enableTextureMapperA4()
</UL>

<P><STRONG><a name="[495]"></a>touchgfx::LCD16bpp::enableTextureMapperARGB8888_NearestNeighbor()</STRONG> (Thumb, 102 bytes, Stack size 16 bytes, lcd16bpp.o(i._ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = touchgfx::LCD16bpp::enableTextureMapperARGB8888_NearestNeighbor() &rArr; __aeabi_atexit &rArr; malloc &rArr; __Heap_Full &rArr; __Heap_ProvideMemory &rArr; free
</UL>
<BR>[Calls]<UL><LI><a href="#[322]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxa_guard_acquire
<LI><a href="#[2af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_atexit
</UL>
<BR>[Called By]<UL><LI><a href="#[488]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::enableTextureMapperARGB8888()
</UL>

<P><STRONG><a name="[497]"></a>touchgfx::LCD16bpp::enableTextureMapperL8_RGB565_NearestNeighbor()</STRONG> (Thumb, 98 bytes, Stack size 16 bytes, lcd16bpp.o(i._ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = touchgfx::LCD16bpp::enableTextureMapperL8_RGB565_NearestNeighbor() &rArr; __aeabi_atexit &rArr; malloc &rArr; __Heap_Full &rArr; __Heap_ProvideMemory &rArr; free
</UL>
<BR>[Calls]<UL><LI><a href="#[322]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxa_guard_acquire
<LI><a href="#[2af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_atexit
</UL>
<BR>[Called By]<UL><LI><a href="#[48a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::enableTextureMapperL8_RGB565()
</UL>

<P><STRONG><a name="[499]"></a>touchgfx::LCD16bpp::enableTextureMapperL8_RGB888_NearestNeighbor()</STRONG> (Thumb, 102 bytes, Stack size 16 bytes, lcd16bpp.o(i._ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = touchgfx::LCD16bpp::enableTextureMapperL8_RGB888_NearestNeighbor() &rArr; __aeabi_atexit &rArr; malloc &rArr; __Heap_Full &rArr; __Heap_ProvideMemory &rArr; free
</UL>
<BR>[Calls]<UL><LI><a href="#[322]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxa_guard_acquire
<LI><a href="#[2af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_atexit
</UL>
<BR>[Called By]<UL><LI><a href="#[48b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::enableTextureMapperL8_RGB888()
</UL>

<P><STRONG><a name="[c3]"></a>touchgfx::LCD16bpp::TextureMapper_RGB565_Opaque_NearestNeighbor_GA::~TextureMapper_RGB565_Opaque_NearestNeighbor_GA()</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, lcd16bpp.o(i._ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GAD1Ev))
<BR>[Address Reference Count : 2]<UL><LI> lcd16bpp.o(i._ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv)
<LI> lcd16bpp.o(.constdata__ZTVN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GAE)
</UL>
<P><STRONG><a name="[5cb]"></a>touchgfx::LCD16bpp::TextureMapper_RGB565_Opaque_NearestNeighbor_GA::~TextureMapper_RGB565_Opaque_NearestNeighbor_GA__sub_object()</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, lcd16bpp.o(i._ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GAD1Ev), UNUSED)

<P><STRONG><a name="[49b]"></a>touchgfx::LCD16bpp::enableTextureMapperL8_ARGB8888_NearestNeighbor()</STRONG> (Thumb, 102 bytes, Stack size 16 bytes, lcd16bpp.o(i._ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = touchgfx::LCD16bpp::enableTextureMapperL8_ARGB8888_NearestNeighbor() &rArr; __aeabi_atexit &rArr; malloc &rArr; __Heap_Full &rArr; __Heap_ProvideMemory &rArr; free
</UL>
<BR>[Calls]<UL><LI><a href="#[322]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxa_guard_acquire
<LI><a href="#[2af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_atexit
</UL>
<BR>[Called By]<UL><LI><a href="#[489]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::enableTextureMapperL8_ARGB8888()
</UL>

<P><STRONG><a name="[c4]"></a>touchgfx::LCD16bpp::TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA::~TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA()</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, lcd16bpp.o(i._ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGAD1Ev))
<BR>[Address Reference Count : 2]<UL><LI> lcd16bpp.o(i._ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv)
<LI> lcd16bpp.o(.constdata__ZTVN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGAE)
</UL>
<P><STRONG><a name="[5cc]"></a>touchgfx::LCD16bpp::TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA::~TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA__sub_object()</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, lcd16bpp.o(i._ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGAD1Ev), UNUSED)

<P><STRONG><a name="[491]"></a>touchgfx::LCD16bpp::enableTextureMapperRGB565_Opaque_NearestNeighbor()</STRONG> (Thumb, 90 bytes, Stack size 16 bytes, lcd16bpp.o(i._ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = touchgfx::LCD16bpp::enableTextureMapperRGB565_Opaque_NearestNeighbor() &rArr; __aeabi_atexit &rArr; malloc &rArr; __Heap_Full &rArr; __Heap_ProvideMemory &rArr; free
</UL>
<BR>[Calls]<UL><LI><a href="#[322]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxa_guard_acquire
<LI><a href="#[2af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_atexit
</UL>
<BR>[Called By]<UL><LI><a href="#[48c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::enableTextureMapperRGB565()
</UL>

<P><STRONG><a name="[bd]"></a>touchgfx::LCD16bpp::TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA::~TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA()</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, lcd16bpp.o(i._ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GAD1Ev))
<BR>[Address Reference Count : 2]<UL><LI> lcd16bpp.o(i._ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv)
<LI> lcd16bpp.o(.constdata__ZTVN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GAE)
</UL>
<P><STRONG><a name="[5cd]"></a>touchgfx::LCD16bpp::TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA::~TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA__sub_object()</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, lcd16bpp.o(i._ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GAD1Ev), UNUSED)

<P><STRONG><a name="[bf]"></a>touchgfx::LCD16bpp::TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA::~TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA()</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, lcd16bpp.o(i._ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GAD1Ev))
<BR>[Address Reference Count : 2]<UL><LI> lcd16bpp.o(i._ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv)
<LI> lcd16bpp.o(.constdata__ZTVN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GAE)
</UL>
<P><STRONG><a name="[5ce]"></a>touchgfx::LCD16bpp::TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA::~TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA__sub_object()</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, lcd16bpp.o(i._ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GAD1Ev), UNUSED)

<P><STRONG><a name="[cb]"></a>touchgfx::LCD16bpp::TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA::~TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA()</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, lcd16bpp.o(i._ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GAD1Ev))
<BR>[Address Reference Count : 2]<UL><LI> lcd16bpp.o(i._ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv)
<LI> lcd16bpp.o(.constdata__ZTVN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GAE)
</UL>
<P><STRONG><a name="[5cf]"></a>touchgfx::LCD16bpp::TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA::~TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA__sub_object()</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, lcd16bpp.o(i._ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GAD1Ev), UNUSED)

<P><STRONG><a name="[494]"></a>touchgfx::LCD16bpp::enableTextureMapperARGB8888_BilinearInterpolation()</STRONG> (Thumb, 102 bytes, Stack size 16 bytes, lcd16bpp.o(i._ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = touchgfx::LCD16bpp::enableTextureMapperARGB8888_BilinearInterpolation() &rArr; __aeabi_atexit &rArr; malloc &rArr; __Heap_Full &rArr; __Heap_ProvideMemory &rArr; free
</UL>
<BR>[Calls]<UL><LI><a href="#[322]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxa_guard_acquire
<LI><a href="#[2af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_atexit
</UL>
<BR>[Called By]<UL><LI><a href="#[488]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::enableTextureMapperARGB8888()
</UL>

<P><STRONG><a name="[496]"></a>touchgfx::LCD16bpp::enableTextureMapperL8_RGB565_BilinearInterpolation()</STRONG> (Thumb, 90 bytes, Stack size 16 bytes, lcd16bpp.o(i._ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = touchgfx::LCD16bpp::enableTextureMapperL8_RGB565_BilinearInterpolation() &rArr; __aeabi_atexit &rArr; malloc &rArr; __Heap_Full &rArr; __Heap_ProvideMemory &rArr; free
</UL>
<BR>[Calls]<UL><LI><a href="#[322]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxa_guard_acquire
<LI><a href="#[2af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_atexit
</UL>
<BR>[Called By]<UL><LI><a href="#[48a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::enableTextureMapperL8_RGB565()
</UL>

<P><STRONG><a name="[498]"></a>touchgfx::LCD16bpp::enableTextureMapperL8_RGB888_BilinearInterpolation()</STRONG> (Thumb, 102 bytes, Stack size 16 bytes, lcd16bpp.o(i._ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = touchgfx::LCD16bpp::enableTextureMapperL8_RGB888_BilinearInterpolation() &rArr; __aeabi_atexit &rArr; malloc &rArr; __Heap_Full &rArr; __Heap_ProvideMemory &rArr; free
</UL>
<BR>[Calls]<UL><LI><a href="#[322]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxa_guard_acquire
<LI><a href="#[2af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_atexit
</UL>
<BR>[Called By]<UL><LI><a href="#[48b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::enableTextureMapperL8_RGB888()
</UL>

<P><STRONG><a name="[bb]"></a>touchgfx::LCD16bpp::TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA::~TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA()</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, lcd16bpp.o(i._ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GAD1Ev))
<BR>[Address Reference Count : 2]<UL><LI> lcd16bpp.o(i._ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv)
<LI> lcd16bpp.o(.constdata__ZTVN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GAE)
</UL>
<P><STRONG><a name="[5d0]"></a>touchgfx::LCD16bpp::TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA::~TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA__sub_object()</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, lcd16bpp.o(i._ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GAD1Ev), UNUSED)

<P><STRONG><a name="[be]"></a>touchgfx::LCD16bpp::TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA::~TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA()</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, lcd16bpp.o(i._ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGAD1Ev))
<BR>[Address Reference Count : 2]<UL><LI> lcd16bpp.o(i._ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv)
<LI> lcd16bpp.o(.constdata__ZTVN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGAE)
</UL>
<P><STRONG><a name="[5d1]"></a>touchgfx::LCD16bpp::TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA::~TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA__sub_object()</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, lcd16bpp.o(i._ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGAD1Ev), UNUSED)

<P><STRONG><a name="[c0]"></a>touchgfx::LCD16bpp::TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA::~TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA()</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, lcd16bpp.o(i._ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGAD1Ev))
<BR>[Address Reference Count : 2]<UL><LI> lcd16bpp.o(i._ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv)
<LI> lcd16bpp.o(.constdata__ZTVN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGAE)
</UL>
<P><STRONG><a name="[5d2]"></a>touchgfx::LCD16bpp::TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA::~TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA__sub_object()</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, lcd16bpp.o(i._ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGAD1Ev), UNUSED)

<P><STRONG><a name="[cc]"></a>touchgfx::LCD16bpp::TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA::~TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA()</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, lcd16bpp.o(i._ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGAD1Ev))
<BR>[Address Reference Count : 2]<UL><LI> lcd16bpp.o(i._ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv)
<LI> lcd16bpp.o(.constdata__ZTVN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGAE)
</UL>
<P><STRONG><a name="[5d3]"></a>touchgfx::LCD16bpp::TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA::~TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA__sub_object()</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, lcd16bpp.o(i._ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGAD1Ev), UNUSED)

<P><STRONG><a name="[493]"></a>touchgfx::LCD16bpp::enableTextureMapperRGB565_NonOpaque_NearestNeighbor()</STRONG> (Thumb, 98 bytes, Stack size 16 bytes, lcd16bpp.o(i._ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = touchgfx::LCD16bpp::enableTextureMapperRGB565_NonOpaque_NearestNeighbor() &rArr; __aeabi_atexit &rArr; malloc &rArr; __Heap_Full &rArr; __Heap_ProvideMemory &rArr; free
</UL>
<BR>[Calls]<UL><LI><a href="#[322]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxa_guard_acquire
<LI><a href="#[2af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_atexit
</UL>
<BR>[Called By]<UL><LI><a href="#[48c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::enableTextureMapperRGB565()
</UL>

<P><STRONG><a name="[cf]"></a>touchgfx::LCD16bpp::TextureMapper_RGB565_Opaque_BilinearInterpolation_GA::~TextureMapper_RGB565_Opaque_BilinearInterpolation_GA()</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, lcd16bpp.o(i._ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GAD1Ev))
<BR>[Address Reference Count : 2]<UL><LI> lcd16bpp.o(i._ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv)
<LI> lcd16bpp.o(.constdata__ZTVN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GAE)
</UL>
<P><STRONG><a name="[5d4]"></a>touchgfx::LCD16bpp::TextureMapper_RGB565_Opaque_BilinearInterpolation_GA::~TextureMapper_RGB565_Opaque_BilinearInterpolation_GA__sub_object()</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, lcd16bpp.o(i._ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GAD1Ev), UNUSED)

<P><STRONG><a name="[49a]"></a>touchgfx::LCD16bpp::enableTextureMapperL8_ARGB8888_BilinearInterpolation()</STRONG> (Thumb, 102 bytes, Stack size 16 bytes, lcd16bpp.o(i._ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = touchgfx::LCD16bpp::enableTextureMapperL8_ARGB8888_BilinearInterpolation() &rArr; __aeabi_atexit &rArr; malloc &rArr; __Heap_Full &rArr; __Heap_ProvideMemory &rArr; free
</UL>
<BR>[Calls]<UL><LI><a href="#[322]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxa_guard_acquire
<LI><a href="#[2af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_atexit
</UL>
<BR>[Called By]<UL><LI><a href="#[489]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::enableTextureMapperL8_ARGB8888()
</UL>

<P><STRONG><a name="[bc]"></a>touchgfx::LCD16bpp::TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA::~TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA()</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, lcd16bpp.o(i._ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGAD1Ev))
<BR>[Address Reference Count : 2]<UL><LI> lcd16bpp.o(i._ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv)
<LI> lcd16bpp.o(.constdata__ZTVN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGAE)
</UL>
<P><STRONG><a name="[5d5]"></a>touchgfx::LCD16bpp::TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA::~TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA__sub_object()</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, lcd16bpp.o(i._ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGAD1Ev), UNUSED)

<P><STRONG><a name="[c1]"></a>touchgfx::LCD16bpp::TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA::~TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA()</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, lcd16bpp.o(i._ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GAD1Ev))
<BR>[Address Reference Count : 2]<UL><LI> lcd16bpp.o(i._ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv)
<LI> lcd16bpp.o(.constdata__ZTVN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GAE)
</UL>
<P><STRONG><a name="[5d6]"></a>touchgfx::LCD16bpp::TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA::~TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA__sub_object()</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, lcd16bpp.o(i._ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GAD1Ev), UNUSED)

<P><STRONG><a name="[d0]"></a>touchgfx::LCD16bpp::TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA::~TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA()</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, lcd16bpp.o(i._ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGAD1Ev))
<BR>[Address Reference Count : 2]<UL><LI> lcd16bpp.o(i._ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv)
<LI> lcd16bpp.o(.constdata__ZTVN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGAE)
</UL>
<P><STRONG><a name="[5d7]"></a>touchgfx::LCD16bpp::TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA::~TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA__sub_object()</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, lcd16bpp.o(i._ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGAD1Ev), UNUSED)

<P><STRONG><a name="[490]"></a>touchgfx::LCD16bpp::enableTextureMapperRGB565_Opaque_BilinearInterpolation()</STRONG> (Thumb, 102 bytes, Stack size 16 bytes, lcd16bpp.o(i._ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = touchgfx::LCD16bpp::enableTextureMapperRGB565_Opaque_BilinearInterpolation() &rArr; __aeabi_atexit &rArr; malloc &rArr; __Heap_Full &rArr; __Heap_ProvideMemory &rArr; free
</UL>
<BR>[Calls]<UL><LI><a href="#[322]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxa_guard_acquire
<LI><a href="#[2af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_atexit
</UL>
<BR>[Called By]<UL><LI><a href="#[48c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::enableTextureMapperRGB565()
</UL>

<P><STRONG><a name="[c7]"></a>touchgfx::LCD16bpp::TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA::~TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA()</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, lcd16bpp.o(i._ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GAD1Ev))
<BR>[Address Reference Count : 2]<UL><LI> lcd16bpp.o(i._ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv)
<LI> lcd16bpp.o(.constdata__ZTVN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GAE)
</UL>
<P><STRONG><a name="[5d8]"></a>touchgfx::LCD16bpp::TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA::~TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA__sub_object()</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, lcd16bpp.o(i._ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GAD1Ev), UNUSED)

<P><STRONG><a name="[c9]"></a>touchgfx::LCD16bpp::TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA::~TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA()</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, lcd16bpp.o(i._ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GAD1Ev))
<BR>[Address Reference Count : 2]<UL><LI> lcd16bpp.o(i._ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv)
<LI> lcd16bpp.o(.constdata__ZTVN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GAE)
</UL>
<P><STRONG><a name="[5d9]"></a>touchgfx::LCD16bpp::TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA::~TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA__sub_object()</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, lcd16bpp.o(i._ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GAD1Ev), UNUSED)

<P><STRONG><a name="[d1]"></a>touchgfx::LCD16bpp::TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA::~TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA()</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, lcd16bpp.o(i._ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GAD1Ev))
<BR>[Address Reference Count : 2]<UL><LI> lcd16bpp.o(i._ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv)
<LI> lcd16bpp.o(.constdata__ZTVN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GAE)
</UL>
<P><STRONG><a name="[5da]"></a>touchgfx::LCD16bpp::TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA::~TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA__sub_object()</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, lcd16bpp.o(i._ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GAD1Ev), UNUSED)

<P><STRONG><a name="[c2]"></a>touchgfx::LCD16bpp::TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA::~TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA()</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, lcd16bpp.o(i._ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGAD1Ev))
<BR>[Address Reference Count : 2]<UL><LI> lcd16bpp.o(i._ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv)
<LI> lcd16bpp.o(.constdata__ZTVN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGAE)
</UL>
<P><STRONG><a name="[5db]"></a>touchgfx::LCD16bpp::TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA::~TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA__sub_object()</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, lcd16bpp.o(i._ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGAD1Ev), UNUSED)

<P><STRONG><a name="[c5]"></a>touchgfx::LCD16bpp::TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA::~TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA()</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, lcd16bpp.o(i._ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GAD1Ev))
<BR>[Address Reference Count : 2]<UL><LI> lcd16bpp.o(i._ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv)
<LI> lcd16bpp.o(.constdata__ZTVN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GAE)
</UL>
<P><STRONG><a name="[5dc]"></a>touchgfx::LCD16bpp::TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA::~TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA__sub_object()</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, lcd16bpp.o(i._ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GAD1Ev), UNUSED)

<P><STRONG><a name="[c8]"></a>touchgfx::LCD16bpp::TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA::~TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA()</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, lcd16bpp.o(i._ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGAD1Ev))
<BR>[Address Reference Count : 2]<UL><LI> lcd16bpp.o(i._ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv)
<LI> lcd16bpp.o(.constdata__ZTVN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGAE)
</UL>
<P><STRONG><a name="[5dd]"></a>touchgfx::LCD16bpp::TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA::~TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA__sub_object()</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, lcd16bpp.o(i._ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGAD1Ev), UNUSED)

<P><STRONG><a name="[ca]"></a>touchgfx::LCD16bpp::TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA::~TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA()</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, lcd16bpp.o(i._ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGAD1Ev))
<BR>[Address Reference Count : 2]<UL><LI> lcd16bpp.o(i._ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv)
<LI> lcd16bpp.o(.constdata__ZTVN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGAE)
</UL>
<P><STRONG><a name="[5de]"></a>touchgfx::LCD16bpp::TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA::~TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA__sub_object()</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, lcd16bpp.o(i._ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGAD1Ev), UNUSED)

<P><STRONG><a name="[d2]"></a>touchgfx::LCD16bpp::TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA::~TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA()</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, lcd16bpp.o(i._ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGAD1Ev))
<BR>[Address Reference Count : 2]<UL><LI> lcd16bpp.o(i._ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv)
<LI> lcd16bpp.o(.constdata__ZTVN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGAE)
</UL>
<P><STRONG><a name="[5df]"></a>touchgfx::LCD16bpp::TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA::~TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA__sub_object()</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, lcd16bpp.o(i._ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGAD1Ev), UNUSED)

<P><STRONG><a name="[492]"></a>touchgfx::LCD16bpp::enableTextureMapperRGB565_NonOpaque_BilinearInterpolation()</STRONG> (Thumb, 102 bytes, Stack size 16 bytes, lcd16bpp.o(i._ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = touchgfx::LCD16bpp::enableTextureMapperRGB565_NonOpaque_BilinearInterpolation() &rArr; __aeabi_atexit &rArr; malloc &rArr; __Heap_Full &rArr; __Heap_ProvideMemory &rArr; free
</UL>
<BR>[Calls]<UL><LI><a href="#[322]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxa_guard_acquire
<LI><a href="#[2af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_atexit
</UL>
<BR>[Called By]<UL><LI><a href="#[48c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::enableTextureMapperRGB565()
</UL>

<P><STRONG><a name="[c6]"></a>touchgfx::LCD16bpp::TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA::~TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA()</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, lcd16bpp.o(i._ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGAD1Ev))
<BR>[Address Reference Count : 2]<UL><LI> lcd16bpp.o(i._ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv)
<LI> lcd16bpp.o(.constdata__ZTVN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGAE)
</UL>
<P><STRONG><a name="[5e0]"></a>touchgfx::LCD16bpp::TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA::~TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA__sub_object()</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, lcd16bpp.o(i._ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGAD1Ev), UNUSED)

<P><STRONG><a name="[cd]"></a>touchgfx::LCD16bpp::TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA::~TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA()</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, lcd16bpp.o(i._ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GAD1Ev))
<BR>[Address Reference Count : 2]<UL><LI> lcd16bpp.o(i._ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv)
<LI> lcd16bpp.o(.constdata__ZTVN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GAE)
</UL>
<P><STRONG><a name="[5e1]"></a>touchgfx::LCD16bpp::TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA::~TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA__sub_object()</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, lcd16bpp.o(i._ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GAD1Ev), UNUSED)

<P><STRONG><a name="[ce]"></a>touchgfx::LCD16bpp::TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA::~TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA()</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, lcd16bpp.o(i._ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGAD1Ev))
<BR>[Address Reference Count : 2]<UL><LI> lcd16bpp.o(i._ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv)
<LI> lcd16bpp.o(.constdata__ZTVN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGAE)
</UL>
<P><STRONG><a name="[5e2]"></a>touchgfx::LCD16bpp::TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA::~TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA__sub_object()</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, lcd16bpp.o(i._ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGAD1Ev), UNUSED)

<P><STRONG><a name="[27d]"></a>touchgfx::LCD16bpp::blitCopy(const unsigned short*, const touchgfx::Rect&, const touchgfx::Rect&, unsigned char, bool)</STRONG> (Thumb, 432 bytes, Stack size 80 bytes, lcd16bpp.o(i._ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = touchgfx::LCD16bpp::blitCopy(const unsigned short*, const touchgfx::Rect&, const touchgfx::Rect&, unsigned char, bool) &rArr; touchgfx::DisplayTransformation::transformDisplayToFrameBuffer(touchgfx::Rect&, const touchgfx::Rect&) &rArr; touchgfx::DisplayTransformation::transformDisplayToFrameBuffer(short&, short&, const touchgfx::Rect&)
</UL>
<BR>[Calls]<UL><LI><a href="#[475]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD::div255(unsigned short)
<LI><a href="#[419]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::DisplayTransformation::transformDisplayToFrameBuffer(touchgfx::Rect&, const touchgfx::Rect&)
<LI><a href="#[3e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::DisplayTransformation::transformDisplayToFrameBuffer(touchgfx::Rect&)
<LI><a href="#[476]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::getNativeColorFromRGB(unsigned char, unsigned char, unsigned char)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lcd16bpp.o(.constdata__ZTVN8touchgfx8LCD16bppE)
</UL>
<P><STRONG><a name="[27e]"></a>touchgfx::LCD16bpp::fillRect(const touchgfx::Rect&, touchgfx::colortype, unsigned char)</STRONG> (Thumb, 138 bytes, Stack size 48 bytes, lcd16bpp.o(i._ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = touchgfx::LCD16bpp::fillRect(const touchgfx::Rect&, touchgfx::colortype, unsigned char)
</UL>
<BR>[Calls]<UL><LI><a href="#[3e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::DisplayTransformation::transformDisplayToFrameBuffer(touchgfx::Rect&)
<LI><a href="#[3d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Rect::isEmpty() const
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lcd16bpp.o(.constdata__ZTVN8touchgfx8LCD16bppE)
</UL>
<P><STRONG><a name="[49c]"></a>touchgfx::LCD16bpp::nextLine(bool, touchgfx::TextRotation)</STRONG> (Thumb, 68 bytes, Stack size 8 bytes, lcd16bpp.o(i._ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE))
<BR><BR>[Stack]<UL><LI>Max Depth = 64 + Unknown Stack Size
<LI>Call Chain = touchgfx::LCD16bpp::nextLine(bool, touchgfx::TextRotation) &rArr; touchgfx::LCD16bpp::getFramebufferStride() &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[484]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::getFramebufferStride()
<LI><a href="#[2ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;abort
</UL>
<BR>[Called By]<UL><LI><a href="#[282]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::drawGlyph(unsigned short*, touchgfx::Rect, short, short, unsigned short, unsigned short, const touchgfx::Rect&, const touchgfx::GlyphNode*, const unsigned char*, unsigned char, touchgfx::colortype, unsigned char, unsigned char, touchgfx::TextRotation)
</UL>

<P><STRONG><a name="[282]"></a>touchgfx::LCD16bpp::drawGlyph(unsigned short*, touchgfx::Rect, short, short, unsigned short, unsigned short, const touchgfx::Rect&, const touchgfx::GlyphNode*, const unsigned char*, unsigned char, touchgfx::colortype, unsigned char, unsigned char, touchgfx::TextRotation)</STRONG> (Thumb, 808 bytes, Stack size 120 bytes, lcd16bpp.o(i._ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE))
<BR><BR>[Stack]<UL><LI>Max Depth = 184 + Unknown Stack Size
<LI>Call Chain = touchgfx::LCD16bpp::drawGlyph(unsigned short*, touchgfx::Rect, short, short, unsigned short, unsigned short, const touchgfx::Rect&, const touchgfx::GlyphNode*, const unsigned char*, unsigned char, touchgfx::colortype, unsigned char, unsigned char, touchgfx::TextRotation) &rArr; touchgfx::LCD::realY(const touchgfx::Rect&, short, short, touchgfx::TextRotation) &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[475]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD::div255(unsigned short)
<LI><a href="#[477]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::getNativeColor(touchgfx::colortype)
<LI><a href="#[473]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Color::getGreenFromRGB565(unsigned short)
<LI><a href="#[474]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Color::getBlueFromRGB565(unsigned short)
<LI><a href="#[472]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Color::getRedFromRGB565(unsigned short)
<LI><a href="#[434]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD::realY(const touchgfx::Rect&, short, short, touchgfx::TextRotation)
<LI><a href="#[433]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD::realX(const touchgfx::Rect&, short, short, touchgfx::TextRotation)
<LI><a href="#[49d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::DisplayTransformation::transformDisplayToFrameBuffer(short&, short&)
<LI><a href="#[3dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Rect::bottom() const
<LI><a href="#[3db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Rect::right() const
<LI><a href="#[49e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::nextPixel(bool, touchgfx::TextRotation)
<LI><a href="#[49c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::nextLine(bool, touchgfx::TextRotation)
<LI><a href="#[476]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::getNativeColorFromRGB(unsigned char, unsigned char, unsigned char)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lcd16bpp.o(.constdata__ZTVN8touchgfx8LCD16bppE)
</UL>
<P><STRONG><a name="[49e]"></a>touchgfx::LCD16bpp::nextPixel(bool, touchgfx::TextRotation)</STRONG> (Thumb, 68 bytes, Stack size 8 bytes, lcd16bpp.o(i._ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE))
<BR><BR>[Stack]<UL><LI>Max Depth = 64 + Unknown Stack Size
<LI>Call Chain = touchgfx::LCD16bpp::nextPixel(bool, touchgfx::TextRotation) &rArr; touchgfx::LCD16bpp::getFramebufferStride() &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[484]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::getFramebufferStride()
<LI><a href="#[2ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;abort
</UL>
<BR>[Called By]<UL><LI><a href="#[282]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::drawGlyph(unsigned short*, touchgfx::Rect, short, short, unsigned short, unsigned short, const touchgfx::Rect&, const touchgfx::GlyphNode*, const unsigned char*, unsigned char, touchgfx::colortype, unsigned char, unsigned char, touchgfx::TextRotation)
</UL>

<P><STRONG><a name="[4bb]"></a>touchgfx::LCD16bpp::LCD16bpp()</STRONG> (Thumb, 78 bytes, Stack size 0 bytes, lcd16bpp.o(i._ZN8touchgfx8LCD16bppC1Ev))
<BR><BR>[Called By]<UL><LI><a href="#[291]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__sti___25_TouchGFXConfiguration_cpp_f5abfd34
</UL>

<P><STRONG><a name="[5e3]"></a>touchgfx::LCD16bpp::LCD16bpp__sub_object()</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, lcd16bpp.o(i._ZN8touchgfx8LCD16bppC1Ev), UNUSED)

<P><STRONG><a name="[d5]"></a>touchgfx::LCD16bpp::~LCD16bpp()</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, touchgfxconfiguration.o(i._ZN8touchgfx8LCD16bppD1Ev))
<BR>[Address Reference Count : 2]<UL><LI> touchgfxconfiguration.o(i.__sti___25_TouchGFXConfiguration_cpp_f5abfd34)
<LI> lcd16bpp.o(.constdata__ZTVN8touchgfx8LCD16bppE)
</UL>
<P><STRONG><a name="[5e4]"></a>touchgfx::LCD16bpp::~LCD16bpp__sub_object()</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, touchgfxconfiguration.o(i._ZN8touchgfx8LCD16bppD1Ev), UNUSED)

<P><STRONG><a name="[4a2]"></a>touchgfx::TextArea::BoundingArea::BoundingArea()</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, cookingviewbase.o(i._ZN8touchgfx8TextArea12BoundingAreaC1Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = touchgfx::TextArea::BoundingArea::BoundingArea()
</UL>
<BR>[Called By]<UL><LI><a href="#[1ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextAreaWithWildcardBase::calculateBoundingArea() const
<LI><a href="#[371]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextArea::TextArea()
</UL>

<P><STRONG><a name="[5e5]"></a>touchgfx::TextArea::BoundingArea::BoundingArea__sub_object()</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, cookingviewbase.o(i._ZN8touchgfx8TextArea12BoundingAreaC1Ev), UNUSED)

<P><STRONG><a name="[347]"></a>touchgfx::TextArea::setTypedText(const touchgfx::TypedText&)</STRONG> (Thumb, 46 bytes, Stack size 24 bytes, textarea.o(i._ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = touchgfx::TextArea::setTypedText(const touchgfx::TypedText&) &rArr; touchgfx::TextArea::resizeToCurrentText() &rArr; touchgfx::Drawable::setWidthHeight(short, short)
</UL>
<BR>[Calls]<UL><LI><a href="#[49f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextArea::resizeToCurrentText()
</UL>
<BR>[Called By]<UL><LI><a href="#[349]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CookingViewBase::CookingViewBase()
<LI><a href="#[339]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CookingView::setUpInfoAboutCookingFood()
<LI><a href="#[3a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SelectingMenuViewBase::SelectingMenuViewBase()
<LI><a href="#[39e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SelectingMenuView::changeSelectedItem()
<LI><a href="#[362]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SettingsViewBase::SettingsViewBase()
</UL>

<P><STRONG><a name="[379]"></a>touchgfx::TextArea::setLinespacing(short)</STRONG> (Thumb, 32 bytes, Stack size 24 bytes, cookingviewbase.o(i._ZN8touchgfx8TextArea14setLinespacingEs))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = touchgfx::TextArea::setLinespacing(short)
</UL>
<BR>[Called By]<UL><LI><a href="#[349]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CookingViewBase::CookingViewBase()
<LI><a href="#[3a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SelectingMenuViewBase::SelectingMenuViewBase()
<LI><a href="#[362]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SettingsViewBase::SettingsViewBase()
</UL>

<P><STRONG><a name="[49f]"></a>touchgfx::TextArea::resizeToCurrentText()</STRONG> (Thumb, 66 bytes, Stack size 16 bytes, textarea.o(i._ZN8touchgfx8TextArea19resizeToCurrentTextEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = touchgfx::TextArea::resizeToCurrentText() &rArr; touchgfx::Drawable::setWidthHeight(short, short)
</UL>
<BR>[Calls]<UL><LI><a href="#[4a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TypedText::hasValidId() const
<LI><a href="#[4a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Drawable::setWidthHeight(short, short)
</UL>
<BR>[Called By]<UL><LI><a href="#[347]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextArea::setTypedText(const touchgfx::TypedText&)
</UL>

<P><STRONG><a name="[1e8]"></a>touchgfx::TextArea::setAlpha(unsigned char)</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, cookingview.o(i._ZN8touchgfx8TextArea8setAlphaEh))
<BR><BR>[Called By]<UL><LI><a href="#[349]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CookingViewBase::CookingViewBase()
<LI><a href="#[3a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SelectingMenuViewBase::SelectingMenuViewBase()
<LI><a href="#[362]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SettingsViewBase::SettingsViewBase()
<LI><a href="#[514]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::FadeAnimator&lang;touchgfx::TextArea&rang;::nextFadeAnimationStep()
<LI><a href="#[511]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::FadeAnimator&lang;touchgfx::TextAreaWithTwoWildcards&rang;::nextFadeAnimationStep()
</UL>
<BR>[Address Reference Count : 6]<UL><LI> cookingviewbase.o(.constdata__ZTVN8touchgfx24TextAreaWithTwoWildcardsE)
<LI> cookingviewbase.o(.constdata__ZTVN8touchgfx12FadeAnimatorINS_24TextAreaWithTwoWildcardsEEE)
<LI> cookingviewbase.o(.constdata__ZTVN8touchgfx12FadeAnimatorINS_8TextAreaEEE)
<LI> settingsviewbase.o(.constdata__ZTVN8touchgfx23TextAreaWithOneWildcardE)
<LI> textareawithwildcard.o(.constdata__ZTVN8touchgfx24TextAreaWithWildcardBaseE)
<LI> textarea.o(.constdata__ZTVN8touchgfx8TextAreaE)
</UL>
<P><STRONG><a name="[359]"></a>touchgfx::TextArea::setColor(touchgfx::colortype)</STRONG> (Thumb, 8 bytes, Stack size 12 bytes, settingsview.o(i._ZN8touchgfx8TextArea8setColorENS_9colortypeE))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = touchgfx::TextArea::setColor(touchgfx::colortype)
</UL>
<BR>[Called By]<UL><LI><a href="#[349]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CookingViewBase::CookingViewBase()
<LI><a href="#[3a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SelectingMenuViewBase::SelectingMenuViewBase()
<LI><a href="#[362]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SettingsViewBase::SettingsViewBase()
<LI><a href="#[130]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SettingsView::pressCenterKeyFunction()
<LI><a href="#[139]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SettingsView::returnButtonIsClicked()
<LI><a href="#[135]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SettingsView::languageButtonClicked()
<LI><a href="#[131]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SettingsView::pressDownKeyFunction()
<LI><a href="#[134]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SettingsView::pressUpKeyFunction()
<LI><a href="#[136]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SettingsView::clockButtonClicked()
</UL>

<P><STRONG><a name="[1e5]"></a>touchgfx::TextArea::setWidth(short)</STRONG> (Thumb, 38 bytes, Stack size 24 bytes, cookingviewbase.o(i._ZN8touchgfx8TextArea8setWidthEs))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = touchgfx::TextArea::setWidth(short)
</UL>
<BR>[Calls]<UL><LI><a href="#[1d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Drawable::setWidth(short)
</UL>
<BR>[Address Reference Count : 6]<UL><LI> cookingviewbase.o(.constdata__ZTVN8touchgfx24TextAreaWithTwoWildcardsE)
<LI> cookingviewbase.o(.constdata__ZTVN8touchgfx12FadeAnimatorINS_24TextAreaWithTwoWildcardsEEE)
<LI> cookingviewbase.o(.constdata__ZTVN8touchgfx12FadeAnimatorINS_8TextAreaEEE)
<LI> settingsviewbase.o(.constdata__ZTVN8touchgfx23TextAreaWithOneWildcardE)
<LI> textareawithwildcard.o(.constdata__ZTVN8touchgfx24TextAreaWithWildcardBaseE)
<LI> textarea.o(.constdata__ZTVN8touchgfx8TextAreaE)
</UL>
<P><STRONG><a name="[1e6]"></a>touchgfx::TextArea::setHeight(short)</STRONG> (Thumb, 38 bytes, Stack size 24 bytes, cookingviewbase.o(i._ZN8touchgfx8TextArea9setHeightEs))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = touchgfx::TextArea::setHeight(short)
</UL>
<BR>[Calls]<UL><LI><a href="#[1d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Drawable::setHeight(short)
</UL>
<BR>[Address Reference Count : 6]<UL><LI> cookingviewbase.o(.constdata__ZTVN8touchgfx24TextAreaWithTwoWildcardsE)
<LI> cookingviewbase.o(.constdata__ZTVN8touchgfx12FadeAnimatorINS_24TextAreaWithTwoWildcardsEEE)
<LI> cookingviewbase.o(.constdata__ZTVN8touchgfx12FadeAnimatorINS_8TextAreaEEE)
<LI> settingsviewbase.o(.constdata__ZTVN8touchgfx23TextAreaWithOneWildcardE)
<LI> textareawithwildcard.o(.constdata__ZTVN8touchgfx24TextAreaWithWildcardBaseE)
<LI> textarea.o(.constdata__ZTVN8touchgfx8TextAreaE)
</UL>
<P><STRONG><a name="[371]"></a>touchgfx::TextArea::TextArea()</STRONG> (Thumb, 90 bytes, Stack size 8 bytes, cookingviewbase.o(i._ZN8touchgfx8TextAreaC1Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = touchgfx::TextArea::TextArea() &rArr; touchgfx::Widget::Widget__sub_object() &rArr; touchgfx::Drawable::Drawable__sub_object()
</UL>
<BR>[Calls]<UL><LI><a href="#[346]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TypedText::TypedText(unsigned short)
<LI><a href="#[369]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::colortype::colortype(unsigned)
<LI><a href="#[4a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextArea::BoundingArea::BoundingArea()
<LI><a href="#[368]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Widget::Widget__sub_object()
<LI><a href="#[2d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[349]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CookingViewBase::CookingViewBase()
<LI><a href="#[362]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SettingsViewBase::SettingsViewBase()
<LI><a href="#[370]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::FadeAnimator&lang;touchgfx::TextAreaWithTwoWildcards&rang;::FadeAnimator()
<LI><a href="#[388]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::FadeAnimator&lang;touchgfx::TextArea&rang;::FadeAnimator()
<LI><a href="#[38a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextAreaWithOneWildcard::TextAreaWithOneWildcard()
</UL>

<P><STRONG><a name="[5e6]"></a>touchgfx::TextArea::TextArea__sub_object()</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, cookingviewbase.o(i._ZN8touchgfx8TextAreaC1Ev), UNUSED)

<P><STRONG><a name="[283]"></a>touchgfx::TextArea::~TextArea()</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, cookingviewbase.o(i._ZN8touchgfx8TextAreaD1Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = touchgfx::TextArea::~TextArea()
</UL>
<BR>[Calls]<UL><LI><a href="#[256]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Widget::~Widget__sub_object()
</UL>
<BR>[Called By]<UL><LI><a href="#[150]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SettingsViewBase::~SettingsViewBase()
<LI><a href="#[23a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextAreaWithTwoWildcards::~TextAreaWithTwoWildcards()
<LI><a href="#[1ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::FadeAnimator&lang;touchgfx::TextArea&rang;::~FadeAnimator()
<LI><a href="#[235]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextAreaWithOneWildcard::~TextAreaWithOneWildcard()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> textarea.o(.constdata__ZTVN8touchgfx8TextAreaE)
</UL>
<P><STRONG><a name="[5e7]"></a>touchgfx::TextArea::~TextArea__sub_object()</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, cookingviewbase.o(i._ZN8touchgfx8TextAreaD1Ev), UNUSED)

<P><STRONG><a name="[40b]"></a>touchgfx::ConstFont::ConstFont__sub_object(const touchgfx::GlyphNode*, unsigned short, unsigned short, unsigned short, unsigned char, unsigned char, unsigned char, unsigned char, unsigned char, unsigned char, unsigned short, unsigned short)</STRONG> (Thumb, 84 bytes, Stack size 36 bytes, constfont.o(i._ZN8touchgfx9ConstFontC2EPKNS_9GlyphNodeEttthhhhhhtt))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = touchgfx::ConstFont::ConstFont__sub_object(const touchgfx::GlyphNode*, unsigned short, unsigned short, unsigned short, unsigned char, unsigned char, unsigned char, unsigned char, unsigned char, unsigned char, unsigned short, unsigned short)
</UL>
<BR>[Called By]<UL><LI><a href="#[323]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::GeneratedFont::GeneratedFont(const touchgfx::GlyphNode*, unsigned short, unsigned short, unsigned short, unsigned char, unsigned char, unsigned char, unsigned char, unsigned char, unsigned char, const unsigned char*const *, const touchgfx::KerningNode*, unsigned short, unsigned short, const unsigned short*, const touchgfx::FontContextualFormsTable*)
</UL>

<P><STRONG><a name="[209]"></a>touchgfx::Container::getLastChild(short, short, touchgfx::Drawable**)</STRONG> (Thumb, 74 bytes, Stack size 24 bytes, container.o(i._ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = touchgfx::Container::getLastChild(short, short, touchgfx::Drawable**) &rArr; touchgfx::Rect::intersect(short, short) const
</UL>
<BR>[Calls]<UL><LI><a href="#[448]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Rect::intersect(short, short) const
</UL>
<BR>[Called By]<UL><LI><a href="#[20d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Container::getLastChildNear(short, short, touchgfx::Drawable**, short*, short*)
</UL>
<BR>[Address Reference Count : 5]<UL><LI> informationdemoviewbase.o(.constdata__ZTVN8touchgfx23AbstractButtonContainerE)
<LI> informationdemoviewbase.o(.constdata__ZTVN8touchgfx18ClickButtonTriggerE)
<LI> informationdemoviewbase.o(.constdata__ZTVN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEE)
<LI> container.o(.constdata__ZTVN8touchgfx9ContainerE)
<LI> selectingmenuviewbase.o(.constdata__ZTVN8touchgfx12MoveAnimatorINS_9ContainerEEE)
</UL>
<P><STRONG><a name="[20b]"></a>touchgfx::Container::setupDrawChain(const touchgfx::Rect&, touchgfx::Drawable**)</STRONG> (Thumb, 88 bytes, Stack size 24 bytes, container.o(i._ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = touchgfx::Container::setupDrawChain(const touchgfx::Rect&, touchgfx::Drawable**) &rArr; touchgfx::Rect::operator &(const touchgfx::Rect&) const &rArr; touchgfx::Rect::operator &=(const touchgfx::Rect&) &rArr; touchgfx::Rect::intersect(const touchgfx::Rect&) const
</UL>
<BR>[Calls]<UL><LI><a href="#[44a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Rect::operator &(const touchgfx::Rect&) const
<LI><a href="#[3d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Rect::isEmpty() const
</UL>
<BR>[Called By]<UL><LI><a href="#[44b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Screen::startSMOC(const touchgfx::Rect&)
</UL>
<BR>[Address Reference Count : 5]<UL><LI> informationdemoviewbase.o(.constdata__ZTVN8touchgfx23AbstractButtonContainerE)
<LI> informationdemoviewbase.o(.constdata__ZTVN8touchgfx18ClickButtonTriggerE)
<LI> informationdemoviewbase.o(.constdata__ZTVN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEE)
<LI> container.o(.constdata__ZTVN8touchgfx9ContainerE)
<LI> selectingmenuviewbase.o(.constdata__ZTVN8touchgfx12MoveAnimatorINS_9ContainerEEE)
</UL>
<P><STRONG><a name="[20d]"></a>touchgfx::Container::getLastChildNear(short, short, touchgfx::Drawable**, short*, short*)</STRONG> (Thumb, 386 bytes, Stack size 152 bytes, container.o(i._ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_))
<BR><BR>[Stack]<UL><LI>Max Depth = 192<LI>Call Chain = touchgfx::Container::getLastChildNear(short, short, touchgfx::Drawable**, short*, short*) &rArr; touchgfx::Container::getLastChild(short, short, touchgfx::Drawable**) &rArr; touchgfx::Rect::intersect(short, short) const
</UL>
<BR>[Calls]<UL><LI><a href="#[209]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Container::getLastChild(short, short, touchgfx::Drawable**)
<LI><a href="#[448]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Rect::intersect(short, short) const
<LI><a href="#[447]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Drawable::getAbsoluteRect() const
<LI><a href="#[2b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
</UL>
<BR>[Called By]<UL><LI><a href="#[f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Screen::handleClickEvent(const touchgfx::ClickEvent&)
</UL>
<BR>[Address Reference Count : 5]<UL><LI> informationdemoviewbase.o(.constdata__ZTVN8touchgfx23AbstractButtonContainerE)
<LI> informationdemoviewbase.o(.constdata__ZTVN8touchgfx18ClickButtonTriggerE)
<LI> informationdemoviewbase.o(.constdata__ZTVN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEE)
<LI> container.o(.constdata__ZTVN8touchgfx9ContainerE)
<LI> selectingmenuviewbase.o(.constdata__ZTVN8touchgfx12MoveAnimatorINS_9ContainerEEE)
</UL>
<P><STRONG><a name="[20c]"></a>touchgfx::Container::add(touchgfx::Drawable&)</STRONG> (Thumb, 48 bytes, Stack size 8 bytes, container.o(i._ZN8touchgfx9Container3addERNS_8DrawableE))
<BR><BR>[Stack]<UL><LI>Max Depth = 56 + Unknown Stack Size
<LI>Call Chain = touchgfx::Container::add(touchgfx::Drawable&) &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[2ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;abort
</UL>
<BR>[Called By]<UL><LI><a href="#[349]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CookingViewBase::CookingViewBase()
<LI><a href="#[3a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SelectingMenuViewBase::SelectingMenuViewBase()
<LI><a href="#[362]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SettingsViewBase::SettingsViewBase()
<LI><a href="#[374]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Screen::add(touchgfx::Drawable&)
<LI><a href="#[389]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::BoxWithBorderButtonStyle&lang;touchgfx::ClickButtonTrigger&rang;::BoxWithBorderButtonStyle()
</UL>
<BR>[Address Reference Count : 5]<UL><LI> informationdemoviewbase.o(.constdata__ZTVN8touchgfx23AbstractButtonContainerE)
<LI> informationdemoviewbase.o(.constdata__ZTVN8touchgfx18ClickButtonTriggerE)
<LI> informationdemoviewbase.o(.constdata__ZTVN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEE)
<LI> container.o(.constdata__ZTVN8touchgfx9ContainerE)
<LI> selectingmenuviewbase.o(.constdata__ZTVN8touchgfx12MoveAnimatorINS_9ContainerEEE)
</UL>
<P><STRONG><a name="[387]"></a>touchgfx::Container::Container()</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, selectingmenuviewbase.o(i._ZN8touchgfx9ContainerC1Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = touchgfx::Container::Container() &rArr; touchgfx::Drawable::Drawable__sub_object()
</UL>
<BR>[Calls]<UL><LI><a href="#[36b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Drawable::Drawable__sub_object()
</UL>
<BR>[Called By]<UL><LI><a href="#[3a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SelectingMenuViewBase::SelectingMenuViewBase()
<LI><a href="#[362]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SettingsViewBase::SettingsViewBase()
</UL>

<P><STRONG><a name="[5e8]"></a>touchgfx::Container::Container__sub_object()</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, selectingmenuviewbase.o(i._ZN8touchgfx9ContainerC1Ev), UNUSED)

<P><STRONG><a name="[284]"></a>touchgfx::Container::~Container()</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, cookingviewbase.o(i._ZN8touchgfx9ContainerD1Ev))
<BR><BR>[Called By]<UL><LI><a href="#[13a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CookingViewBase::~CookingViewBase()
<LI><a href="#[150]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SettingsViewBase::~SettingsViewBase()
<LI><a href="#[248]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::View&lang;CookingPresenter&rang;::~View()
<LI><a href="#[24b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::View&lang;InformationPresenter&rang;::~View()
<LI><a href="#[24e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::View&lang;InformationDemoPresenter&rang;::~View()
<LI><a href="#[234]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::AbstractButtonContainer::~AbstractButtonContainer()
<LI><a href="#[24d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::View&lang;SelectingMenuPresenter&rang;::~View()
<LI><a href="#[206]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::MoveAnimator&lang;touchgfx::Container&rang;::~MoveAnimator()
<LI><a href="#[24a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::View&lang;SettingsPresenter&rang;::~View()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> container.o(.constdata__ZTVN8touchgfx9ContainerE)
</UL>
<P><STRONG><a name="[5e9]"></a>touchgfx::Container::~Container__sub_object()</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, cookingviewbase.o(i._ZN8touchgfx9ContainerD1Ev), UNUSED)

<P><STRONG><a name="[3fd]"></a>touchgfx::GlyphNode::setTop(short)</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, textprovider.o(i._ZN8touchgfx9GlyphNode6setTopEs))
<BR><BR>[Called By]<UL><LI><a href="#[3ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextProvider::adjustArabicGlyph(const touchgfx::Font*, const touchgfx::GlyphNode*, unsigned short)
<LI><a href="#[3f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextProvider::adjustThaiGlyph(const touchgfx::Font*, const touchgfx::GlyphNode*)
</UL>

<P><STRONG><a name="[285]"></a>touchgfx::Partition&lang;touchgfx::meta::TypeList&lang;CookingView, touchgfx::meta::TypeList&lang;touchgfx::meta::Nil, touchgfx::meta::Nil&rang;&rang;, (unsigned short)1&rang;::~Partition()</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, touchgfxconfiguration.o(i._ZN8touchgfx9PartitionINS_4meta8TypeListI11CookingViewNS2_INS1_3NilES4_EEEELt1EED1Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = touchgfx::Partition&lang;touchgfx::meta::TypeList&lang;CookingView, touchgfx::meta::TypeList&lang;touchgfx::meta::Nil, touchgfx::meta::Nil&rang;&rang;, (unsigned short)1&rang;::~Partition()
</UL>
<BR>[Calls]<UL><LI><a href="#[228]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::AbstractPartition::~AbstractPartition__sub_object()
</UL>
<BR>[Called By]<UL><LI><a href="#[d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FrontendHeap::~FrontendHeap()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> touchgfxconfiguration.o(.constdata__ZTVN8touchgfx9PartitionINS_4meta8TypeListI11CookingViewNS2_INS1_3NilES4_EEEELt1EEE)
</UL>
<P><STRONG><a name="[5ea]"></a>touchgfx::Partition&lang;touchgfx::meta::TypeList&lang;CookingView, touchgfx::meta::TypeList&lang;touchgfx::meta::Nil, touchgfx::meta::Nil&rang;&rang;, (unsigned short)1&rang;::~Partition__sub_object()</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, touchgfxconfiguration.o(i._ZN8touchgfx9PartitionINS_4meta8TypeListI11CookingViewNS2_INS1_3NilES4_EEEELt1EED1Ev), UNUSED)

<P><STRONG><a name="[288]"></a>touchgfx::Partition&lang;touchgfx::meta::TypeList&lang;InformationPresenter, touchgfx::meta::TypeList&lang;touchgfx::meta::Nil, touchgfx::meta::Nil&rang;&rang;, (unsigned short)1&rang;::~Partition()</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, touchgfxconfiguration.o(i._ZN8touchgfx9PartitionINS_4meta8TypeListI20InformationPresenterNS2_INS1_3NilES4_EEEELt1EED1Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = touchgfx::Partition&lang;touchgfx::meta::TypeList&lang;InformationPresenter, touchgfx::meta::TypeList&lang;touchgfx::meta::Nil, touchgfx::meta::Nil&rang;&rang;, (unsigned short)1&rang;::~Partition()
</UL>
<BR>[Calls]<UL><LI><a href="#[228]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::AbstractPartition::~AbstractPartition__sub_object()
</UL>
<BR>[Called By]<UL><LI><a href="#[d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FrontendHeap::~FrontendHeap()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> touchgfxconfiguration.o(.constdata__ZTVN8touchgfx9PartitionINS_4meta8TypeListI20InformationPresenterNS2_INS1_3NilES4_EEEELt1EEE)
</UL>
<P><STRONG><a name="[5eb]"></a>touchgfx::Partition&lang;touchgfx::meta::TypeList&lang;InformationPresenter, touchgfx::meta::TypeList&lang;touchgfx::meta::Nil, touchgfx::meta::Nil&rang;&rang;, (unsigned short)1&rang;::~Partition__sub_object()</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, touchgfxconfiguration.o(i._ZN8touchgfx9PartitionINS_4meta8TypeListI20InformationPresenterNS2_INS1_3NilES4_EEEELt1EED1Ev), UNUSED)

<P><STRONG><a name="[28b]"></a>touchgfx::Partition&lang;touchgfx::meta::TypeList&lang;touchgfx::NoTransition, touchgfx::meta::TypeList&lang;touchgfx::meta::Nil, touchgfx::meta::Nil&rang;&rang;, (unsigned short)1&rang;::~Partition()</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, touchgfxconfiguration.o(i._ZN8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EED1Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = touchgfx::Partition&lang;touchgfx::meta::TypeList&lang;touchgfx::NoTransition, touchgfx::meta::TypeList&lang;touchgfx::meta::Nil, touchgfx::meta::Nil&rang;&rang;, (unsigned short)1&rang;::~Partition()
</UL>
<BR>[Calls]<UL><LI><a href="#[228]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::AbstractPartition::~AbstractPartition__sub_object()
</UL>
<BR>[Called By]<UL><LI><a href="#[d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FrontendHeap::~FrontendHeap()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> touchgfxconfiguration.o(.constdata__ZTVN8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EEE)
</UL>
<P><STRONG><a name="[5ec]"></a>touchgfx::Partition&lang;touchgfx::meta::TypeList&lang;touchgfx::NoTransition, touchgfx::meta::TypeList&lang;touchgfx::meta::Nil, touchgfx::meta::Nil&rang;&rang;, (unsigned short)1&rang;::~Partition__sub_object()</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, touchgfxconfiguration.o(i._ZN8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EED1Ev), UNUSED)

<P><STRONG><a name="[28f]"></a>touchgfx::Presenter::deactivate()</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, cookingpresenter.o(i._ZN8touchgfx9Presenter10deactivateEv))
<BR>[Address Reference Count : 1]<UL><LI> cookingpresenter.o(.constdata__ZTVN8touchgfx9PresenterE)
</UL>
<P><STRONG><a name="[28e]"></a>touchgfx::Presenter::activate()</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, cookingpresenter.o(i._ZN8touchgfx9Presenter8activateEv))
<BR>[Address Reference Count : 1]<UL><LI> cookingpresenter.o(.constdata__ZTVN8touchgfx9PresenterE)
</UL>
<P><STRONG><a name="[290]"></a>touchgfx::Presenter::~Presenter()</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, cookingpresenter.o(i._ZN8touchgfx9PresenterD1Ev))
<BR>[Address Reference Count : 1]<UL><LI> cookingpresenter.o(.constdata__ZTVN8touchgfx9PresenterE)
</UL>
<P><STRONG><a name="[5ed]"></a>touchgfx::Presenter::~Presenter__sub_object()</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, cookingpresenter.o(i._ZN8touchgfx9PresenterD1Ev), UNUSED)

<P><STRONG><a name="[346]"></a>touchgfx::TypedText::TypedText(unsigned short)</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, cookingview.o(i._ZN8touchgfx9TypedTextC1Et))
<BR><BR>[Called By]<UL><LI><a href="#[349]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CookingViewBase::CookingViewBase()
<LI><a href="#[339]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CookingView::setUpInfoAboutCookingFood()
<LI><a href="#[3a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SelectingMenuViewBase::SelectingMenuViewBase()
<LI><a href="#[39e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SelectingMenuView::changeSelectedItem()
<LI><a href="#[362]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SettingsViewBase::SettingsViewBase()
<LI><a href="#[371]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextArea::TextArea()
</UL>

<P><STRONG><a name="[5ee]"></a>touchgfx::TypedText::TypedText__sub_object(unsigned short)</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, cookingview.o(i._ZN8touchgfx9TypedTextC1Et), UNUSED)

<P><STRONG><a name="[369]"></a>touchgfx::colortype::colortype(unsigned)</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, touchgfxgeneratedhal.o(i._ZN8touchgfx9colortypeC1Ej))
<BR><BR>[Called By]<UL><LI><a href="#[349]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CookingViewBase::CookingViewBase()
<LI><a href="#[394]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SplashScreenViewBase::SplashScreenViewBase()
<LI><a href="#[371]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextArea::TextArea()
<LI><a href="#[389]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::BoxWithBorderButtonStyle&lang;touchgfx::ClickButtonTrigger&rang;::BoxWithBorderButtonStyle()
<LI><a href="#[386]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Box::Box()
</UL>

<P><STRONG><a name="[5ef]"></a>touchgfx::colortype::colortype__sub_object(unsigned)</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, touchgfxgeneratedhal.o(i._ZN8touchgfx9colortypeC1Ej), UNUSED)

<P><STRONG><a name="[520]"></a>touchgfx::colortype::colortype()</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, informationdemoviewbase.o(i._ZN8touchgfx9colortypeC1Ev))
<BR><BR>[Called By]<UL><LI><a href="#[389]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::BoxWithBorderButtonStyle&lang;touchgfx::ClickButtonTrigger&rang;::BoxWithBorderButtonStyle()
</UL>

<P><STRONG><a name="[5f0]"></a>touchgfx::colortype::colortype__sub_object()</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, informationdemoviewbase.o(i._ZN8touchgfx9colortypeC1Ev), UNUSED)

<P><STRONG><a name="[109]"></a>TouchGFXHAL::getTFTFrameBuffer() const</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, touchgfxhal.o(i._ZNK11TouchGFXHAL17getTFTFrameBufferEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = TouchGFXHAL::getTFTFrameBuffer() const
</UL>
<BR>[Calls]<UL><LI><a href="#[193]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TouchGFXGeneratedHAL::getTFTFrameBuffer() const
</UL>
<BR>[Address Reference Count : 1]<UL><LI> touchgfxhal.o(.constdata__ZTV11TouchGFXHAL)
</UL>
<P><STRONG><a name="[193]"></a>TouchGFXGeneratedHAL::getTFTFrameBuffer() const</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, touchgfxgeneratedhal.o(i._ZNK20TouchGFXGeneratedHAL17getTFTFrameBufferEv))
<BR><BR>[Called By]<UL><LI><a href="#[109]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TouchGFXHAL::getTFTFrameBuffer() const
</UL>
<BR>[Address Reference Count : 1]<UL><LI> touchgfxgeneratedhal.o(.constdata__ZTV20TouchGFXGeneratedHAL)
</UL>
<P><STRONG><a name="[3d2]"></a>touchgfx::Rasterizer::calculateAlpha(int) const</STRONG> (Thumb, 38 bytes, Stack size 0 bytes, canvas.o(i._ZNK8touchgfx10Rasterizer14calculateAlphaEi))
<BR><BR>[Called By]<UL><LI><a href="#[3d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Rasterizer::render(const touchgfx::AbstractPainter*, unsigned char*, short, unsigned char, unsigned char)
</UL>

<P><STRONG><a name="[1cd]"></a>touchgfx::CanvasWidget::invalidate() const</STRONG> (Thumb, 58 bytes, Stack size 32 bytes, canvaswidget.o(i._ZNK8touchgfx12CanvasWidget10invalidateEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = touchgfx::CanvasWidget::invalidate() const &rArr; touchgfx::Rect::operator &=(const touchgfx::Rect&) &rArr; touchgfx::Rect::intersect(const touchgfx::Rect&) const
</UL>
<BR>[Calls]<UL><LI><a href="#[3d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Rect::Rect(short, short, short, short)
<LI><a href="#[3e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Rect::operator &=(const touchgfx::Rect&)
</UL>
<BR>[Called By]<UL><LI><a href="#[337]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CookingView::EXITSCREEN_STATEMACHINE()
</UL>
<BR>[Address Reference Count : 2]<UL><LI> canvaswidget.o(.constdata__ZTVN8touchgfx12CanvasWidgetE)
<LI> circle.o(.constdata__ZTVN8touchgfx6CircleE)
</UL>
<P><STRONG><a name="[1cb]"></a>touchgfx::CanvasWidget::getSolidRect() const</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, canvaswidget.o(i._ZNK8touchgfx12CanvasWidget12getSolidRectEv))
<BR><BR>[Calls]<UL><LI><a href="#[dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Rect::Rect()
</UL>
<BR>[Address Reference Count : 2]<UL><LI> canvaswidget.o(.constdata__ZTVN8touchgfx12CanvasWidgetE)
<LI> circle.o(.constdata__ZTVN8touchgfx6CircleE)
</UL>
<P><STRONG><a name="[1de]"></a>touchgfx::CanvasWidget::getMinimalRect() const</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, canvaswidget.o(i._ZNK8touchgfx12CanvasWidget14getMinimalRectEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = touchgfx::CanvasWidget::getMinimalRect() const
</UL>
<BR>[Address Reference Count : 1]<UL><LI> canvaswidget.o(.constdata__ZTVN8touchgfx12CanvasWidgetE)
</UL>
<P><STRONG><a name="[1ca]"></a>touchgfx::CanvasWidget::draw(const touchgfx::Rect&) const</STRONG> (Thumb, 264 bytes, Stack size 48 bytes, canvaswidget.o(i._ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = touchgfx::CanvasWidget::draw(const touchgfx::Rect&) const &rArr; touchgfx::Rect::operator &=(const touchgfx::Rect&) &rArr; touchgfx::Rect::intersect(const touchgfx::Rect&) const
</UL>
<BR>[Calls]<UL><LI><a href="#[3e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Rect::operator &=(const touchgfx::Rect&)
<LI><a href="#[3dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Rect::bottom() const
<LI><a href="#[3db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Rect::right() const
</UL>
<BR>[Address Reference Count : 2]<UL><LI> canvaswidget.o(.constdata__ZTVN8touchgfx12CanvasWidgetE)
<LI> circle.o(.constdata__ZTVN8touchgfx6CircleE)
</UL>
<P><STRONG><a name="[1dd]"></a>touchgfx::CanvasWidget::getAlpha() const</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, canvaswidget.o(i._ZNK8touchgfx12CanvasWidget8getAlphaEv))
<BR>[Address Reference Count : 2]<UL><LI> canvaswidget.o(.constdata__ZTVN8touchgfx12CanvasWidgetE)
<LI> circle.o(.constdata__ZTVN8touchgfx6CircleE)
</UL>
<P><STRONG><a name="[3fe]"></a>touchgfx::TextProvider::thaiLookupGlyph(const touchgfx::GlyphNode*, const touchgfx::Font*, unsigned short) const</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, textprovider.o(i._ZNK8touchgfx12TextProvider15thaiLookupGlyphEPKNS_9GlyphNodeEPKNS_4FontEt))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = touchgfx::TextProvider::thaiLookupGlyph(const touchgfx::GlyphNode*, const touchgfx::Font*, unsigned short) const
</UL>
<BR>[Called By]<UL><LI><a href="#[3f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextProvider::adjustThaiGlyph(const touchgfx::Font*, const touchgfx::GlyphNode*)
</UL>

<P><STRONG><a name="[407]"></a>touchgfx::TextProvider::gsubTableBinarySearch(unsigned short, const unsigned short*, unsigned short) const</STRONG> (Thumb, 64 bytes, Stack size 12 bytes, textprovider.o(i._ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = touchgfx::TextProvider::gsubTableBinarySearch(unsigned short, const unsigned short*, unsigned short) const
</UL>
<BR>[Called By]<UL><LI><a href="#[403]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextProvider::substituteGlyphs()
</UL>

<P><STRONG><a name="[210]"></a>touchgfx::BoxWithBorder::draw(const touchgfx::Rect&) const</STRONG> (Thumb, 280 bytes, Stack size 80 bytes, boxwithborder.o(i._ZNK8touchgfx13BoxWithBorder4drawERKNS_4RectE))
<BR><BR>[Stack]<UL><LI>Max Depth = 136<LI>Call Chain = touchgfx::BoxWithBorder::draw(const touchgfx::Rect&) const &rArr; touchgfx::Rect::operator &(const touchgfx::Rect&) const &rArr; touchgfx::Rect::operator &=(const touchgfx::Rect&) &rArr; touchgfx::Rect::intersect(const touchgfx::Rect&) const
</UL>
<BR>[Calls]<UL><LI><a href="#[3bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::HAL::lcd()
<LI><a href="#[23c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Box::draw(const touchgfx::Rect&) const
<LI><a href="#[3d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Rect::Rect(short, short, short, short)
<LI><a href="#[44a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Rect::operator &(const touchgfx::Rect&) const
<LI><a href="#[3d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Rect::isEmpty() const
</UL>
<BR>[Address Reference Count : 1]<UL><LI> boxwithborder.o(.constdata__ZTVN8touchgfx13BoxWithBorderE)
</UL>
<P><STRONG><a name="[21d]"></a>touchgfx::GeneratedFont::getKerning(unsigned short, const touchgfx::GlyphNode*) const</STRONG> (Thumb, 72 bytes, Stack size 24 bytes, generatedfont.o(i._ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = touchgfx::GeneratedFont::getKerning(unsigned short, const touchgfx::GlyphNode*) const
</UL>
<BR>[Calls]<UL><LI><a href="#[4a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::GlyphNode::kerningTablePos() const
</UL>
<BR>[Address Reference Count : 1]<UL><LI> generatedfont.o(.constdata__ZTVN8touchgfx13GeneratedFontE)
</UL>
<P><STRONG><a name="[21e]"></a>touchgfx::GeneratedFont::getGSUBTable() const</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, generatedfont.o(i._ZNK8touchgfx13GeneratedFont12getGSUBTableEv))
<BR>[Address Reference Count : 1]<UL><LI> generatedfont.o(.constdata__ZTVN8touchgfx13GeneratedFontE)
</UL>
<P><STRONG><a name="[221]"></a>touchgfx::GeneratedFont::getPixelData(const touchgfx::GlyphNode*) const</STRONG> (Thumb, 26 bytes, Stack size 12 bytes, generatedfont.o(i._ZNK8touchgfx13GeneratedFont12getPixelDataEPKNS_9GlyphNodeE))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = touchgfx::GeneratedFont::getPixelData(const touchgfx::GlyphNode*) const
</UL>
<BR>[Address Reference Count : 1]<UL><LI> generatedfont.o(.constdata__ZTVN8touchgfx13GeneratedFontE)
</UL>
<P><STRONG><a name="[21f]"></a>touchgfx::GeneratedFont::getContextualFormsTable() const</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, generatedfont.o(i._ZNK8touchgfx13GeneratedFont23getContextualFormsTableEv))
<BR>[Address Reference Count : 1]<UL><LI> generatedfont.o(.constdata__ZTVN8touchgfx13GeneratedFontE)
</UL>
<P><STRONG><a name="[222]"></a>touchgfx::PainterRGB565::getRenderingMethod() const</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, painterrgb565.o(i._ZNK8touchgfx13PainterRGB56518getRenderingMethodEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = touchgfx::PainterRGB565::getRenderingMethod() const
</UL>
<BR>[Address Reference Count : 1]<UL><LI> painterrgb565.o(.constdata__ZTVN8touchgfx13PainterRGB565E)
</UL>
<P><STRONG><a name="[225]"></a>touchgfx::PainterRGB565::paint(unsigned char*, short, short, short, short, unsigned char) const</STRONG> (Thumb, 26 bytes, Stack size 16 bytes, painterrgb565.o(i._ZNK8touchgfx13PainterRGB5655paintEPhssssh))
<BR><BR>[Stack]<UL><LI>Max Depth = 92<LI>Call Chain = touchgfx::PainterRGB565::paint(unsigned char*, short, short, short, short, unsigned char) const &rArr; touchgfx::paint::rgb565::lineFromColor(unsigned short*, unsigned, unsigned, unsigned char, unsigned) &rArr; touchgfx::paint::rgb565::alphaBlend(unsigned short, unsigned short, unsigned char) &rArr; touchgfx::paint::rgb565::alphaBlend(unsigned short, unsigned short, unsigned short, unsigned short, unsigned char)
</UL>
<BR>[Calls]<UL><LI><a href="#[43b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::paint::rgb565::lineFromColor(unsigned short*, unsigned, unsigned, unsigned char, unsigned)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> painterrgb565.o(.constdata__ZTVN8touchgfx13PainterRGB565E)
</UL>
<P><STRONG><a name="[224]"></a>touchgfx::PainterRGB565::tearDown() const</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, painterrgb565.o(i._ZNK8touchgfx13PainterRGB5658tearDownEv))
<BR><BR>[Calls]<UL><LI><a href="#[4a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::paint::tearDown()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> painterrgb565.o(.constdata__ZTVN8touchgfx13PainterRGB565E)
</UL>
<P><STRONG><a name="[226]"></a>touchgfx::AbstractPainter::getRenderingMethod() const</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, cookingviewbase.o(i._ZNK8touchgfx15AbstractPainter18getRenderingMethodEv))
<BR>[Address Reference Count : 2]<UL><LI> cookingviewbase.o(.constdata__ZTVN8touchgfx15AbstractPainterE)
<LI> cookingviewbase.o(.constdata__ZTVN8touchgfx21AbstractPainterRGB565E)
</UL>
<P><STRONG><a name="[223]"></a>touchgfx::AbstractPainter::setup(const touchgfx::Rect&) const</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, cookingviewbase.o(i._ZNK8touchgfx15AbstractPainter5setupERKNS_4RectE))
<BR>[Address Reference Count : 3]<UL><LI> cookingviewbase.o(.constdata__ZTVN8touchgfx15AbstractPainterE)
<LI> cookingviewbase.o(.constdata__ZTVN8touchgfx21AbstractPainterRGB565E)
<LI> painterrgb565.o(.constdata__ZTVN8touchgfx13PainterRGB565E)
</UL>
<P><STRONG><a name="[227]"></a>touchgfx::AbstractPainter::tearDown() const</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, cookingviewbase.o(i._ZNK8touchgfx15AbstractPainter8tearDownEv))
<BR>[Address Reference Count : 2]<UL><LI> cookingviewbase.o(.constdata__ZTVN8touchgfx15AbstractPainterE)
<LI> cookingviewbase.o(.constdata__ZTVN8touchgfx21AbstractPainterRGB565E)
</UL>
<P><STRONG><a name="[236]"></a>touchgfx::TextAreaWithOneWildcard::getWildcard1() const</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, settingsviewbase.o(i._ZNK8touchgfx23TextAreaWithOneWildcard12getWildcard1Ev))
<BR>[Address Reference Count : 1]<UL><LI> settingsviewbase.o(.constdata__ZTVN8touchgfx23TextAreaWithOneWildcardE)
</UL>
<P><STRONG><a name="[1ed]"></a>touchgfx::TextAreaWithTwoWildcards::getWildcard1() const</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, cookingviewbase.o(i._ZNK8touchgfx24TextAreaWithTwoWildcards12getWildcard1Ev))
<BR>[Address Reference Count : 2]<UL><LI> cookingviewbase.o(.constdata__ZTVN8touchgfx24TextAreaWithTwoWildcardsE)
<LI> cookingviewbase.o(.constdata__ZTVN8touchgfx12FadeAnimatorINS_24TextAreaWithTwoWildcardsEEE)
</UL>
<P><STRONG><a name="[1ee]"></a>touchgfx::TextAreaWithTwoWildcards::getWildcard2() const</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, cookingviewbase.o(i._ZNK8touchgfx24TextAreaWithTwoWildcards12getWildcard2Ev))
<BR>[Address Reference Count : 2]<UL><LI> cookingviewbase.o(.constdata__ZTVN8touchgfx24TextAreaWithTwoWildcardsE)
<LI> cookingviewbase.o(.constdata__ZTVN8touchgfx12FadeAnimatorINS_24TextAreaWithTwoWildcardsEEE)
</UL>
<P><STRONG><a name="[1e4]"></a>touchgfx::TextAreaWithWildcardBase::invalidateContent() const</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, textareawithwildcard.o(i._ZNK8touchgfx24TextAreaWithWildcardBase17invalidateContentEv))
<BR><BR>[Called By]<UL><LI><a href="#[511]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::FadeAnimator&lang;touchgfx::TextAreaWithTwoWildcards&rang;::nextFadeAnimationStep()
</UL>
<BR>[Address Reference Count : 4]<UL><LI> cookingviewbase.o(.constdata__ZTVN8touchgfx24TextAreaWithTwoWildcardsE)
<LI> cookingviewbase.o(.constdata__ZTVN8touchgfx12FadeAnimatorINS_24TextAreaWithTwoWildcardsEEE)
<LI> settingsviewbase.o(.constdata__ZTVN8touchgfx23TextAreaWithOneWildcardE)
<LI> textareawithwildcard.o(.constdata__ZTVN8touchgfx24TextAreaWithWildcardBaseE)
</UL>
<P><STRONG><a name="[1ef]"></a>touchgfx::TextAreaWithWildcardBase::calculateBoundingArea() const</STRONG> (Thumb, 14 bytes, Stack size 16 bytes, cookingviewbase.o(i._ZNK8touchgfx24TextAreaWithWildcardBase21calculateBoundingAreaEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = touchgfx::TextAreaWithWildcardBase::calculateBoundingArea() const &rArr; touchgfx::TextArea::BoundingArea::BoundingArea()
</UL>
<BR>[Calls]<UL><LI><a href="#[4a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextArea::BoundingArea::BoundingArea()
</UL>
<BR>[Address Reference Count : 4]<UL><LI> cookingviewbase.o(.constdata__ZTVN8touchgfx24TextAreaWithTwoWildcardsE)
<LI> cookingviewbase.o(.constdata__ZTVN8touchgfx12FadeAnimatorINS_24TextAreaWithTwoWildcardsEEE)
<LI> settingsviewbase.o(.constdata__ZTVN8touchgfx23TextAreaWithOneWildcardE)
<LI> textareawithwildcard.o(.constdata__ZTVN8touchgfx24TextAreaWithWildcardBaseE)
</UL>
<P><STRONG><a name="[1e1]"></a>touchgfx::TextAreaWithWildcardBase::draw(const touchgfx::Rect&) const</STRONG> (Thumb, 254 bytes, Stack size 88 bytes, textareawithwildcard.o(i._ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE))
<BR><BR>[Stack]<UL><LI>Max Depth = 952 + Unknown Stack Size
<LI>Call Chain = touchgfx::TextAreaWithWildcardBase::draw(const touchgfx::Rect&) const &rArr; touchgfx::LCD::drawString(touchgfx::Rect, const touchgfx::Rect&, const touchgfx::LCD::StringVisuals&, const unsigned short*, ...) &rArr; touchgfx::LCD::drawStringLTR(const touchgfx::Rect&, const touchgfx::Rect&, const touchgfx::LCD::StringVisuals&, const unsigned short*, std::__va_list) &rArr; touchgfx::LCD::drawStringInternal(unsigned short*, const touchgfx::Rect*, short, short, const touchgfx::Rect&, const touchgfx::LCD::StringVisuals*, unsigned char, touchgfx::TextProvider&, int, bool) &rArr; touchgfx::TextProvider::getNextLigature(unsigned char, const touchgfx::Font*, const touchgfx::GlyphNode*&, const unsigned char*&, unsigned char&) &rArr; touchgfx::TextProvider::getNextLigature(unsigned char) &rArr; touchgfx::TextProvider::substituteGlyphs() &rArr; touchgfx::TextProvider::applyGsubRules(const unsigned short*, unsigned short) &rArr; touchgfx::TextProvider::replaceInputCharacters(unsigned short, unsigned short, const unsigned short*) &rArr; touchgfx::TextProvider::fillInputBuffer() &rArr; touchgfx::TextProvider::circularBuffer&lang;(unsigned)10&rang;::pushBack(unsigned short) &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[4a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TypedText::getFont() const
<LI><a href="#[4a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Texts::getText(unsigned short) const
<LI><a href="#[4a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TypedText::hasValidId() const
<LI><a href="#[428]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD::drawString(touchgfx::Rect, const touchgfx::Rect&, const touchgfx::LCD::StringVisuals&, const unsigned short*, ...)
<LI><a href="#[447]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Drawable::getAbsoluteRect() const
<LI><a href="#[2ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;abort
</UL>
<BR>[Address Reference Count : 4]<UL><LI> cookingviewbase.o(.constdata__ZTVN8touchgfx24TextAreaWithTwoWildcardsE)
<LI> cookingviewbase.o(.constdata__ZTVN8touchgfx12FadeAnimatorINS_24TextAreaWithTwoWildcardsEEE)
<LI> settingsviewbase.o(.constdata__ZTVN8touchgfx23TextAreaWithOneWildcardE)
<LI> textareawithwildcard.o(.constdata__ZTVN8touchgfx24TextAreaWithWildcardBaseE)
</UL>
<P><STRONG><a name="[211]"></a>touchgfx::Box::getSolidRect() const</STRONG> (Thumb, 50 bytes, Stack size 12 bytes, box.o(i._ZNK8touchgfx3Box12getSolidRectEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = touchgfx::Box::getSolidRect() const
</UL>
<BR>[Address Reference Count : 2]<UL><LI> box.o(.constdata__ZTVN8touchgfx3BoxE)
<LI> boxwithborder.o(.constdata__ZTVN8touchgfx13BoxWithBorderE)
</UL>
<P><STRONG><a name="[212]"></a>touchgfx::Box::invalidateContent() const</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, box.o(i._ZNK8touchgfx3Box17invalidateContentEv))
<BR>[Address Reference Count : 2]<UL><LI> box.o(.constdata__ZTVN8touchgfx3BoxE)
<LI> boxwithborder.o(.constdata__ZTVN8touchgfx13BoxWithBorderE)
</UL>
<P><STRONG><a name="[23c]"></a>touchgfx::Box::draw(const touchgfx::Rect&) const</STRONG> (Thumb, 54 bytes, Stack size 24 bytes, box.o(i._ZNK8touchgfx3Box4drawERKNS_4RectE))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = touchgfx::Box::draw(const touchgfx::Rect&) const
</UL>
<BR>[Called By]<UL><LI><a href="#[210]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::BoxWithBorder::draw(const touchgfx::Rect&) const
</UL>
<BR>[Address Reference Count : 1]<UL><LI> box.o(.constdata__ZTVN8touchgfx3BoxE)
</UL>
<P><STRONG><a name="[4a7]"></a>touchgfx::HAL::getBitDepth(touchgfx::Bitmap::BitmapFormat) const</STRONG> (Thumb, 46 bytes, Stack size 8 bytes, hal.o(i._ZNK8touchgfx3HAL11getBitDepthENS_6Bitmap12BitmapFormatE))
<BR><BR>[Stack]<UL><LI>Max Depth = 56 + Unknown Stack Size
<LI>Call Chain = touchgfx::HAL::getBitDepth(touchgfx::Bitmap::BitmapFormat) const &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[2ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;abort
</UL>
<BR>[Called By]<UL><LI><a href="#[427]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::HAL::getDstAddress(unsigned short, unsigned short, unsigned short*, unsigned short, touchgfx::Bitmap::BitmapFormat) const
</UL>

<P><STRONG><a name="[41e]"></a>touchgfx::HAL::getDstAddress(unsigned short, unsigned short, unsigned short*) const</STRONG> (Thumb, 46 bytes, Stack size 32 bytes, hal.o(i._ZNK8touchgfx3HAL13getDstAddressEttPt))
<BR><BR>[Stack]<UL><LI>Max Depth = 112 + Unknown Stack Size
<LI>Call Chain = touchgfx::HAL::getDstAddress(unsigned short, unsigned short, unsigned short*) const &rArr; touchgfx::HAL::getDstAddress(unsigned short, unsigned short, unsigned short*, unsigned short, touchgfx::Bitmap::BitmapFormat) const &rArr; touchgfx::HAL::getBitDepth(touchgfx::Bitmap::BitmapFormat) const &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[3bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::HAL::lcd()
<LI><a href="#[427]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::HAL::getDstAddress(unsigned short, unsigned short, unsigned short*, unsigned short, touchgfx::Bitmap::BitmapFormat) const
</UL>
<BR>[Called By]<UL><LI><a href="#[110]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::HAL::blitCopyGlyph(const unsigned char*, unsigned short, unsigned short, unsigned short, unsigned short, unsigned short, touchgfx::colortype, unsigned char, touchgfx::BlitOperations, bool)
</UL>

<P><STRONG><a name="[427]"></a>touchgfx::HAL::getDstAddress(unsigned short, unsigned short, unsigned short*, unsigned short, touchgfx::Bitmap::BitmapFormat) const</STRONG> (Thumb, 32 bytes, Stack size 24 bytes, hal.o(i._ZNK8touchgfx3HAL13getDstAddressEttPttNS_6Bitmap12BitmapFormatE))
<BR><BR>[Stack]<UL><LI>Max Depth = 80 + Unknown Stack Size
<LI>Call Chain = touchgfx::HAL::getDstAddress(unsigned short, unsigned short, unsigned short*, unsigned short, touchgfx::Bitmap::BitmapFormat) const &rArr; touchgfx::HAL::getBitDepth(touchgfx::Bitmap::BitmapFormat) const &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[4a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::HAL::getBitDepth(touchgfx::Bitmap::BitmapFormat) const
</UL>
<BR>[Called By]<UL><LI><a href="#[111]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::HAL::blitFill(touchgfx::colortype, unsigned short, unsigned short, unsigned short, unsigned short, unsigned char, unsigned short, touchgfx::Bitmap::BitmapFormat, bool)
<LI><a href="#[10c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::HAL::blitCopy(const unsigned short*, const unsigned char*, unsigned short, unsigned short, unsigned short, unsigned short, unsigned short, unsigned char, bool, unsigned short, touchgfx::Bitmap::BitmapFormat, touchgfx::Bitmap::BitmapFormat, bool)
<LI><a href="#[41e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::HAL::getDstAddress(unsigned short, unsigned short, unsigned short*) const
</UL>

<P><STRONG><a name="[245]"></a>touchgfx::Font::getKerning(unsigned short, const touchgfx::GlyphNode*) const</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, texts.o(i._ZNK8touchgfx4Font10getKerningEtPKNS_9GlyphNodeE))
<BR>[Address Reference Count : 1]<UL><LI> texts.o(.constdata__ZTVN8touchgfx4FontE)
</UL>
<P><STRONG><a name="[219]"></a>touchgfx::Font::getBaseline() const</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, cachedfont.o(i._ZNK8touchgfx4Font11getBaselineEv))
<BR>[Address Reference Count : 3]<UL><LI> generatedfont.o(.constdata__ZTVN8touchgfx13GeneratedFontE)
<LI> texts.o(.constdata__ZTVN8touchgfx4FontE)
<LI> constfont.o(.constdata__ZTVN8touchgfx9ConstFontE)
</UL>
<P><STRONG><a name="[246]"></a>touchgfx::Font::getGSUBTable() const</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, texts.o(i._ZNK8touchgfx4Font12getGSUBTableEv))
<BR>[Address Reference Count : 2]<UL><LI> texts.o(.constdata__ZTVN8touchgfx4FontE)
<LI> constfont.o(.constdata__ZTVN8touchgfx9ConstFontE)
</UL>
<P><STRONG><a name="[218]"></a>touchgfx::Font::getStringWidth(unsigned char, const unsigned short*, ...) const</STRONG> (Thumb, 38 bytes, Stack size 40 bytes, texts.o(i._ZNK8touchgfx4Font14getStringWidthEhPKtz))
<BR><BR>[Stack]<UL><LI>Max Depth = 440 + Unknown Stack Size
<LI>Call Chain = touchgfx::Font::getStringWidth(unsigned char, const unsigned short*, ...) const &rArr; touchgfx::Font::getStringWidthLTR(unsigned char, const unsigned short*, std::__va_list) const &rArr; touchgfx::TextProvider::getNextLigature(unsigned char, const touchgfx::Font*, const touchgfx::GlyphNode*&) &rArr; touchgfx::TextProvider::getNextLigature(unsigned char) &rArr; touchgfx::TextProvider::substituteGlyphs() &rArr; touchgfx::TextProvider::applyGsubRules(const unsigned short*, unsigned short) &rArr; touchgfx::TextProvider::replaceInputCharacters(unsigned short, unsigned short, const unsigned short*) &rArr; touchgfx::TextProvider::fillInputBuffer() &rArr; touchgfx::TextProvider::circularBuffer&lang;(unsigned)10&rang;::pushBack(unsigned short) &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[4a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Font::getStringWidthLTR(unsigned char, const unsigned short*, std::__va_list) const
</UL>
<BR>[Address Reference Count : 3]<UL><LI> generatedfont.o(.constdata__ZTVN8touchgfx13GeneratedFontE)
<LI> texts.o(.constdata__ZTVN8touchgfx4FontE)
<LI> constfont.o(.constdata__ZTVN8touchgfx9ConstFontE)
</UL>
<P><STRONG><a name="[21b]"></a>touchgfx::Font::getBitsPerPixel() const</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, cachedfont.o(i._ZNK8touchgfx4Font15getBitsPerPixelEv))
<BR>[Address Reference Count : 3]<UL><LI> generatedfont.o(.constdata__ZTVN8touchgfx13GeneratedFontE)
<LI> texts.o(.constdata__ZTVN8touchgfx4FontE)
<LI> constfont.o(.constdata__ZTVN8touchgfx9ConstFontE)
</UL>
<P><STRONG><a name="[21c]"></a>touchgfx::Font::getByteAlignRow() const</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, cachedfont.o(i._ZNK8touchgfx4Font15getByteAlignRowEv))
<BR>[Address Reference Count : 3]<UL><LI> generatedfont.o(.constdata__ZTVN8touchgfx13GeneratedFontE)
<LI> texts.o(.constdata__ZTVN8touchgfx4FontE)
<LI> constfont.o(.constdata__ZTVN8touchgfx9ConstFontE)
</UL>
<P><STRONG><a name="[217]"></a>touchgfx::Font::getEllipsisChar() const</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, cachedfont.o(i._ZNK8touchgfx4Font15getEllipsisCharEv))
<BR>[Address Reference Count : 3]<UL><LI> generatedfont.o(.constdata__ZTVN8touchgfx13GeneratedFontE)
<LI> texts.o(.constdata__ZTVN8touchgfx4FontE)
<LI> constfont.o(.constdata__ZTVN8touchgfx9ConstFontE)
</UL>
<P><STRONG><a name="[216]"></a>touchgfx::Font::getFallbackChar() const</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, cachedfont.o(i._ZNK8touchgfx4Font15getFallbackCharEv))
<BR>[Address Reference Count : 3]<UL><LI> generatedfont.o(.constdata__ZTVN8touchgfx13GeneratedFontE)
<LI> texts.o(.constdata__ZTVN8touchgfx4FontE)
<LI> constfont.o(.constdata__ZTVN8touchgfx9ConstFontE)
</UL>
<P><STRONG><a name="[4a8]"></a>touchgfx::Font::getStringWidthLTR(unsigned char, const unsigned short*, std::__va_list) const</STRONG> (Thumb, 168 bytes, Stack size 160 bytes, font.o(i._ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list))
<BR><BR>[Stack]<UL><LI>Max Depth = 400 + Unknown Stack Size
<LI>Call Chain = touchgfx::Font::getStringWidthLTR(unsigned char, const unsigned short*, std::__va_list) const &rArr; touchgfx::TextProvider::getNextLigature(unsigned char, const touchgfx::Font*, const touchgfx::GlyphNode*&) &rArr; touchgfx::TextProvider::getNextLigature(unsigned char) &rArr; touchgfx::TextProvider::substituteGlyphs() &rArr; touchgfx::TextProvider::applyGsubRules(const unsigned short*, unsigned short) &rArr; touchgfx::TextProvider::replaceInputCharacters(unsigned short, unsigned short, const unsigned short*) &rArr; touchgfx::TextProvider::fillInputBuffer() &rArr; touchgfx::TextProvider::circularBuffer&lang;(unsigned)10&rang;::pushBack(unsigned short) &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[409]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextProvider::TextProvider()
<LI><a href="#[3ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextProvider::initialize(const unsigned short*, std::__va_list, const unsigned short*, const touchgfx::FontContextualFormsTable*)
<LI><a href="#[404]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextProvider::getNextLigature(unsigned char, const touchgfx::Font*, const touchgfx::GlyphNode*&)
</UL>
<BR>[Called By]<UL><LI><a href="#[218]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Font::getStringWidth(unsigned char, const unsigned short*, ...) const
</UL>

<P><STRONG><a name="[220]"></a>touchgfx::Font::isVectorBasedFont() const</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, cachedfont.o(i._ZNK8touchgfx4Font17isVectorBasedFontEv))
<BR>[Address Reference Count : 3]<UL><LI> generatedfont.o(.constdata__ZTVN8touchgfx13GeneratedFontE)
<LI> texts.o(.constdata__ZTVN8touchgfx4FontE)
<LI> constfont.o(.constdata__ZTVN8touchgfx9ConstFontE)
</UL>
<P><STRONG><a name="[247]"></a>touchgfx::Font::getContextualFormsTable() const</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, texts.o(i._ZNK8touchgfx4Font23getContextualFormsTableEv))
<BR>[Address Reference Count : 2]<UL><LI> texts.o(.constdata__ZTVN8touchgfx4FontE)
<LI> constfont.o(.constdata__ZTVN8touchgfx9ConstFontE)
</UL>
<P><STRONG><a name="[215]"></a>touchgfx::Font::getGlyph(unsigned short) const</STRONG> (Thumb, 42 bytes, Stack size 32 bytes, cachedfont.o(i._ZNK8touchgfx4Font8getGlyphEt))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = touchgfx::Font::getGlyph(unsigned short) const
</UL>
<BR>[Address Reference Count : 3]<UL><LI> generatedfont.o(.constdata__ZTVN8touchgfx13GeneratedFontE)
<LI> texts.o(.constdata__ZTVN8touchgfx4FontE)
<LI> constfont.o(.constdata__ZTVN8touchgfx9ConstFontE)
</UL>
<P><STRONG><a name="[21a]"></a>touchgfx::Font::getHeight() const</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, cachedfont.o(i._ZNK8touchgfx4Font9getHeightEv))
<BR>[Address Reference Count : 3]<UL><LI> generatedfont.o(.constdata__ZTVN8touchgfx13GeneratedFontE)
<LI> texts.o(.constdata__ZTVN8touchgfx4FontE)
<LI> constfont.o(.constdata__ZTVN8touchgfx9ConstFontE)
</UL>
<P><STRONG><a name="[3db]"></a>touchgfx::Rect::right() const</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, lcd16bpp.o(i._ZNK8touchgfx4Rect5rightEv))
<BR><BR>[Called By]<UL><LI><a href="#[17c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Application::drawCachedAreas()
<LI><a href="#[17e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Application::invalidateArea(touchgfx::Rect)
<LI><a href="#[205]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextArea::calculateBoundingArea() const
<LI><a href="#[1ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::CanvasWidget::draw(const touchgfx::Rect&) const
<LI><a href="#[448]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Rect::intersect(short, short) const
<LI><a href="#[3da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Rect::intersect(const touchgfx::Rect&) const
<LI><a href="#[3d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Rect::includes(const touchgfx::Rect&) const
<LI><a href="#[3e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Rect::operator &=(const touchgfx::Rect&)
<LI><a href="#[3de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Rect::expandToFit(const touchgfx::Rect&)
<LI><a href="#[433]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD::realX(const touchgfx::Rect&, short, short, touchgfx::TextRotation)
<LI><a href="#[282]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::drawGlyph(unsigned short*, touchgfx::Rect, short, short, unsigned short, unsigned short, const touchgfx::Rect&, const touchgfx::GlyphNode*, const unsigned char*, unsigned char, touchgfx::colortype, unsigned char, unsigned char, touchgfx::TextRotation)
<LI><a href="#[27c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::drawPartialBitmap(const touchgfx::Bitmap&, short, short, const touchgfx::Rect&, unsigned char, bool)
<LI><a href="#[430]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD::drawStringInternal(unsigned short*, const touchgfx::Rect*, short, short, const touchgfx::Rect&, const touchgfx::LCD::StringVisuals*, unsigned char, touchgfx::TextProvider&, int, bool)
<LI><a href="#[42a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD::rotateRect(touchgfx::Rect&, const touchgfx::Rect&, touchgfx::TextRotation)
<LI><a href="#[44c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Screen::JSMOC(const touchgfx::Rect&, touchgfx::Drawable*)
</UL>

<P><STRONG><a name="[3dc]"></a>touchgfx::Rect::bottom() const</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, lcd16bpp.o(i._ZNK8touchgfx4Rect6bottomEv))
<BR><BR>[Called By]<UL><LI><a href="#[17c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Application::drawCachedAreas()
<LI><a href="#[17e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Application::invalidateArea(touchgfx::Rect)
<LI><a href="#[205]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextArea::calculateBoundingArea() const
<LI><a href="#[429]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD::drawStringLTR(const touchgfx::Rect&, const touchgfx::Rect&, const touchgfx::LCD::StringVisuals&, const unsigned short*, std::__va_list)
<LI><a href="#[1ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::CanvasWidget::draw(const touchgfx::Rect&) const
<LI><a href="#[448]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Rect::intersect(short, short) const
<LI><a href="#[3da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Rect::intersect(const touchgfx::Rect&) const
<LI><a href="#[3d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Rect::includes(const touchgfx::Rect&) const
<LI><a href="#[3e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Rect::operator &=(const touchgfx::Rect&)
<LI><a href="#[3de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Rect::expandToFit(const touchgfx::Rect&)
<LI><a href="#[434]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD::realY(const touchgfx::Rect&, short, short, touchgfx::TextRotation)
<LI><a href="#[282]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::drawGlyph(unsigned short*, touchgfx::Rect, short, short, unsigned short, unsigned short, const touchgfx::Rect&, const touchgfx::GlyphNode*, const unsigned char*, unsigned char, touchgfx::colortype, unsigned char, unsigned char, touchgfx::TextRotation)
<LI><a href="#[27c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::drawPartialBitmap(const touchgfx::Bitmap&, short, short, const touchgfx::Rect&, unsigned char, bool)
<LI><a href="#[42a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD::rotateRect(touchgfx::Rect&, const touchgfx::Rect&, touchgfx::TextRotation)
<LI><a href="#[44c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Screen::JSMOC(const touchgfx::Rect&, touchgfx::Drawable*)
</UL>

<P><STRONG><a name="[3d7]"></a>touchgfx::Rect::isEmpty() const</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, lcd16bpp.o(i._ZNK8touchgfx4Rect7isEmptyEv))
<BR><BR>[Called By]<UL><LI><a href="#[201]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextArea::invalidateContent() const
<LI><a href="#[17c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Application::drawCachedAreas()
<LI><a href="#[17e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Application::invalidateArea(touchgfx::Rect)
<LI><a href="#[200]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextArea::draw(const touchgfx::Rect&) const
<LI><a href="#[1cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Drawable::invalidateRect(touchgfx::Rect&) const
<LI><a href="#[1d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Drawable::getVisibleRect(touchgfx::Rect&) const
<LI><a href="#[207]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Container::draw(const touchgfx::Rect&) const
<LI><a href="#[20b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Container::setupDrawChain(const touchgfx::Rect&, touchgfx::Drawable**)
<LI><a href="#[210]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::BoxWithBorder::draw(const touchgfx::Rect&) const
<LI><a href="#[27f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::fillBuffer(unsigned char*, unsigned short, const touchgfx::Rect&, touchgfx::colortype, unsigned char)
<LI><a href="#[3d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Rect::includes(const touchgfx::Rect&) const
<LI><a href="#[3de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Rect::expandToFit(const touchgfx::Rect&)
<LI><a href="#[27e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::fillRect(const touchgfx::Rect&, touchgfx::colortype, unsigned char)
<LI><a href="#[27c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::drawPartialBitmap(const touchgfx::Bitmap&, short, short, const touchgfx::Rect&, unsigned char, bool)
<LI><a href="#[44c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Screen::JSMOC(const touchgfx::Rect&, touchgfx::Drawable*)
</UL>

<P><STRONG><a name="[3d8]"></a>touchgfx::Rect::includes(const touchgfx::Rect&) const</STRONG> (Thumb, 82 bytes, Stack size 16 bytes, application.o(i._ZNK8touchgfx4Rect8includesERKS0_))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = touchgfx::Rect::includes(const touchgfx::Rect&) const
</UL>
<BR>[Calls]<UL><LI><a href="#[3d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Rect::isEmpty() const
<LI><a href="#[3dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Rect::bottom() const
<LI><a href="#[3db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Rect::right() const
</UL>
<BR>[Called By]<UL><LI><a href="#[17e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Application::invalidateArea(touchgfx::Rect)
</UL>

<P><STRONG><a name="[3da]"></a>touchgfx::Rect::intersect(const touchgfx::Rect&) const</STRONG> (Thumb, 70 bytes, Stack size 16 bytes, application.o(i._ZNK8touchgfx4Rect9intersectERKS0_))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = touchgfx::Rect::intersect(const touchgfx::Rect&) const
</UL>
<BR>[Calls]<UL><LI><a href="#[3dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Rect::bottom() const
<LI><a href="#[3db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Rect::right() const
</UL>
<BR>[Called By]<UL><LI><a href="#[17e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Application::invalidateArea(touchgfx::Rect)
<LI><a href="#[3e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Rect::operator &=(const touchgfx::Rect&)
<LI><a href="#[44c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Screen::JSMOC(const touchgfx::Rect&, touchgfx::Drawable*)
</UL>

<P><STRONG><a name="[448]"></a>touchgfx::Rect::intersect(short, short) const</STRONG> (Thumb, 52 bytes, Stack size 16 bytes, container.o(i._ZNK8touchgfx4Rect9intersectEss))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = touchgfx::Rect::intersect(short, short) const
</UL>
<BR>[Calls]<UL><LI><a href="#[3dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Rect::bottom() const
<LI><a href="#[3db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Rect::right() const
</UL>
<BR>[Called By]<UL><LI><a href="#[f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Screen::handleDragEvent(const touchgfx::DragEvent&)
<LI><a href="#[20d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Container::getLastChildNear(short, short, touchgfx::Drawable**, short*, short*)
<LI><a href="#[209]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Container::getLastChild(short, short, touchgfx::Drawable**)
</UL>

<P><STRONG><a name="[44a]"></a>touchgfx::Rect::operator &(const touchgfx::Rect&) const</STRONG> (Thumb, 30 bytes, Stack size 16 bytes, lcd16bpp.o(i._ZNK8touchgfx4RectanERKS0_))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = touchgfx::Rect::operator &(const touchgfx::Rect&) const &rArr; touchgfx::Rect::operator &=(const touchgfx::Rect&) &rArr; touchgfx::Rect::intersect(const touchgfx::Rect&) const
</UL>
<BR>[Calls]<UL><LI><a href="#[3e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Rect::operator &=(const touchgfx::Rect&)
</UL>
<BR>[Called By]<UL><LI><a href="#[ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Screen::draw(touchgfx::Rect&)
<LI><a href="#[207]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Container::draw(const touchgfx::Rect&) const
<LI><a href="#[20b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Container::setupDrawChain(const touchgfx::Rect&, touchgfx::Drawable**)
<LI><a href="#[210]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::BoxWithBorder::draw(const touchgfx::Rect&) const
<LI><a href="#[27c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::drawPartialBitmap(const touchgfx::Bitmap&, short, short, const touchgfx::Rect&, unsigned char, bool)
<LI><a href="#[44c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Screen::JSMOC(const touchgfx::Rect&, touchgfx::Drawable*)
</UL>

<P><STRONG><a name="[1f2]"></a>touchgfx::Image::getSolidRect() const</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, image.o(i._ZNK8touchgfx5Image12getSolidRectEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 64 + Unknown Stack Size
<LI>Call Chain = touchgfx::Image::getSolidRect() const &rArr; touchgfx::Bitmap::getSolidRect() const &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Rect::Rect()
<LI><a href="#[481]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Bitmap::getSolidRect() const
</UL>
<BR>[Address Reference Count : 2]<UL><LI> cookingviewbase.o(.constdata__ZTVN8touchgfx12FadeAnimatorINS_5ImageEEE)
<LI> image.o(.constdata__ZTVN8touchgfx5ImageE)
</UL>
<P><STRONG><a name="[1f3]"></a>touchgfx::Image::invalidateContent() const</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, image.o(i._ZNK8touchgfx5Image17invalidateContentEv))
<BR><BR>[Called By]<UL><LI><a href="#[512]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::FadeAnimator&lang;touchgfx::Image&rang;::nextFadeAnimationStep()
</UL>
<BR>[Address Reference Count : 2]<UL><LI> cookingviewbase.o(.constdata__ZTVN8touchgfx12FadeAnimatorINS_5ImageEEE)
<LI> image.o(.constdata__ZTVN8touchgfx5ImageE)
</UL>
<P><STRONG><a name="[1f1]"></a>touchgfx::Image::draw(const touchgfx::Rect&) const</STRONG> (Thumb, 154 bytes, Stack size 64 bytes, image.o(i._ZNK8touchgfx5Image4drawERKNS_4RectE))
<BR><BR>[Stack]<UL><LI>Max Depth = 120 + Unknown Stack Size
<LI>Call Chain = touchgfx::Image::draw(const touchgfx::Rect&) const &rArr; touchgfx::Bitmap::getHeight() const &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Rect::Rect()
<LI><a href="#[3e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Rect::operator &=(const touchgfx::Rect&)
<LI><a href="#[436]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Bitmap::getHeight() const
<LI><a href="#[435]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Bitmap::getWidth() const
</UL>
<BR>[Address Reference Count : 2]<UL><LI> cookingviewbase.o(.constdata__ZTVN8touchgfx12FadeAnimatorINS_5ImageEEE)
<LI> image.o(.constdata__ZTVN8touchgfx5ImageE)
</UL>
<P><STRONG><a name="[4a6]"></a>touchgfx::Texts::getText(unsigned short) const</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, texts.o(i._ZNK8touchgfx5Texts7getTextEt))
<BR><BR>[Called By]<UL><LI><a href="#[1e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextAreaWithWildcardBase::draw(const touchgfx::Rect&) const
<LI><a href="#[37a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TypedText::getText() const
</UL>

<P><STRONG><a name="[4a9]"></a>touchgfx::Bitmap::BitmapData::getFormat() const</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, bitmap.o(i._ZNK8touchgfx6Bitmap10BitmapData9getFormatEv))
<BR><BR>[Called By]<UL><LI><a href="#[47f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Bitmap::getFormat() const
<LI><a href="#[47e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Bitmap::getExtraData() const
</UL>

<P><STRONG><a name="[47e]"></a>touchgfx::Bitmap::getExtraData() const</STRONG> (Thumb, 168 bytes, Stack size 16 bytes, bitmap.o(i._ZNK8touchgfx6Bitmap12getExtraDataEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 64 + Unknown Stack Size
<LI>Call Chain = touchgfx::Bitmap::getExtraData() const &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[4a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Bitmap::BitmapData::getFormat() const
<LI><a href="#[2ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;abort
</UL>
<BR>[Called By]<UL><LI><a href="#[27c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::drawPartialBitmap(const touchgfx::Bitmap&, short, short, const touchgfx::Rect&, unsigned char, bool)
</UL>

<P><STRONG><a name="[481]"></a>touchgfx::Bitmap::getSolidRect() const</STRONG> (Thumb, 122 bytes, Stack size 16 bytes, bitmap.o(i._ZNK8touchgfx6Bitmap12getSolidRectEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 64 + Unknown Stack Size
<LI>Call Chain = touchgfx::Bitmap::getSolidRect() const &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Rect::Rect()
<LI><a href="#[3d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Rect::Rect(short, short, short, short)
<LI><a href="#[2ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;abort
</UL>
<BR>[Called By]<UL><LI><a href="#[1f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Button::getSolidRect() const
<LI><a href="#[1f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Image::getSolidRect() const
<LI><a href="#[27c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::drawPartialBitmap(const touchgfx::Bitmap&, short, short, const touchgfx::Rect&, unsigned char, bool)
</UL>

<P><STRONG><a name="[480]"></a>touchgfx::Bitmap::hasTransparentPixels() const</STRONG> (Thumb, 102 bytes, Stack size 8 bytes, bitmap.o(i._ZNK8touchgfx6Bitmap20hasTransparentPixelsEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 56 + Unknown Stack Size
<LI>Call Chain = touchgfx::Bitmap::hasTransparentPixels() const &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[2ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;abort
</UL>
<BR>[Called By]<UL><LI><a href="#[27c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::drawPartialBitmap(const touchgfx::Bitmap&, short, short, const touchgfx::Rect&, unsigned char, bool)
</UL>

<P><STRONG><a name="[47d]"></a>touchgfx::Bitmap::getData() const</STRONG> (Thumb, 78 bytes, Stack size 8 bytes, bitmap.o(i._ZNK8touchgfx6Bitmap7getDataEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 56 + Unknown Stack Size
<LI>Call Chain = touchgfx::Bitmap::getData() const &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[2ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;abort
</UL>
<BR>[Called By]<UL><LI><a href="#[27c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::drawPartialBitmap(const touchgfx::Bitmap&, short, short, const touchgfx::Rect&, unsigned char, bool)
</UL>

<P><STRONG><a name="[435]"></a>touchgfx::Bitmap::getWidth() const</STRONG> (Thumb, 86 bytes, Stack size 8 bytes, bitmap.o(i._ZNK8touchgfx6Bitmap8getWidthEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 56 + Unknown Stack Size
<LI>Call Chain = touchgfx::Bitmap::getWidth() const &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[2ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;abort
</UL>
<BR>[Called By]<UL><LI><a href="#[1fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Button::setBitmaps(const touchgfx::Bitmap&, const touchgfx::Bitmap&)
<LI><a href="#[1f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Image::setBitmap(const touchgfx::Bitmap&)
<LI><a href="#[1f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Button::draw(const touchgfx::Rect&) const
<LI><a href="#[1f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Image::draw(const touchgfx::Rect&) const
<LI><a href="#[27c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::drawPartialBitmap(const touchgfx::Bitmap&, short, short, const touchgfx::Rect&, unsigned char, bool)
</UL>

<P><STRONG><a name="[47f]"></a>touchgfx::Bitmap::getFormat() const</STRONG> (Thumb, 90 bytes, Stack size 8 bytes, bitmap.o(i._ZNK8touchgfx6Bitmap9getFormatEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 56 + Unknown Stack Size
<LI>Call Chain = touchgfx::Bitmap::getFormat() const &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[3bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::HAL::lcd()
<LI><a href="#[4a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Bitmap::BitmapData::getFormat() const
<LI><a href="#[2ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;abort
</UL>
<BR>[Called By]<UL><LI><a href="#[27c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::drawPartialBitmap(const touchgfx::Bitmap&, short, short, const touchgfx::Rect&, unsigned char, bool)
</UL>

<P><STRONG><a name="[436]"></a>touchgfx::Bitmap::getHeight() const</STRONG> (Thumb, 86 bytes, Stack size 8 bytes, bitmap.o(i._ZNK8touchgfx6Bitmap9getHeightEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 56 + Unknown Stack Size
<LI>Call Chain = touchgfx::Bitmap::getHeight() const &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[2ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;abort
</UL>
<BR>[Called By]<UL><LI><a href="#[1fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Button::setBitmaps(const touchgfx::Bitmap&, const touchgfx::Bitmap&)
<LI><a href="#[1f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Image::setBitmap(const touchgfx::Bitmap&)
<LI><a href="#[1f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Button::draw(const touchgfx::Rect&) const
<LI><a href="#[1f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Image::draw(const touchgfx::Rect&) const
<LI><a href="#[27c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::drawPartialBitmap(const touchgfx::Bitmap&, short, short, const touchgfx::Rect&, unsigned char, bool)
</UL>

<P><STRONG><a name="[1f9]"></a>touchgfx::Button::getSolidRect() const</STRONG> (Thumb, 64 bytes, Stack size 24 bytes, button.o(i._ZNK8touchgfx6Button12getSolidRectEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 88 + Unknown Stack Size
<LI>Call Chain = touchgfx::Button::getSolidRect() const &rArr; touchgfx::Bitmap::getSolidRect() const &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Rect::Rect()
<LI><a href="#[481]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Bitmap::getSolidRect() const
</UL>
<BR>[Address Reference Count : 2]<UL><LI> cookingviewbase.o(.constdata__ZTVN8touchgfx12FadeAnimatorINS_6ButtonEEE)
<LI> button.o(.constdata__ZTVN8touchgfx6ButtonE)
</UL>
<P><STRONG><a name="[1fa]"></a>touchgfx::Button::invalidateContent() const</STRONG> (Thumb, 34 bytes, Stack size 16 bytes, settingsview.o(i._ZNK8touchgfx6Button17invalidateContentEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = touchgfx::Button::invalidateContent() const
</UL>
<BR>[Called By]<UL><LI><a href="#[513]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::FadeAnimator&lang;touchgfx::Button&rang;::nextFadeAnimationStep()
</UL>
<BR>[Address Reference Count : 2]<UL><LI> cookingviewbase.o(.constdata__ZTVN8touchgfx12FadeAnimatorINS_6ButtonEEE)
<LI> button.o(.constdata__ZTVN8touchgfx6ButtonE)
</UL>
<P><STRONG><a name="[1f8]"></a>touchgfx::Button::draw(const touchgfx::Rect&) const</STRONG> (Thumb, 176 bytes, Stack size 56 bytes, button.o(i._ZNK8touchgfx6Button4drawERKNS_4RectE))
<BR><BR>[Stack]<UL><LI>Max Depth = 112 + Unknown Stack Size
<LI>Call Chain = touchgfx::Button::draw(const touchgfx::Rect&) const &rArr; touchgfx::Bitmap::getHeight() const &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Rect::Rect()
<LI><a href="#[3e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Rect::operator &=(const touchgfx::Rect&)
<LI><a href="#[436]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Bitmap::getHeight() const
<LI><a href="#[435]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Bitmap::getWidth() const
<LI><a href="#[2ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;abort
</UL>
<BR>[Address Reference Count : 2]<UL><LI> cookingviewbase.o(.constdata__ZTVN8touchgfx12FadeAnimatorINS_6ButtonEEE)
<LI> button.o(.constdata__ZTVN8touchgfx6ButtonE)
</UL>
<P><STRONG><a name="[440]"></a>touchgfx::Canvas::transformFrameBufferToDisplay(touchgfx::CWRUtil::Q5&, touchgfx::CWRUtil::Q5&) const</STRONG> (Thumb, 36 bytes, Stack size 24 bytes, canvas.o(i._ZNK8touchgfx6Canvas29transformFrameBufferToDisplayERNS_7CWRUtil2Q5ES3_))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = touchgfx::Canvas::transformFrameBufferToDisplay(touchgfx::CWRUtil::Q5&, touchgfx::CWRUtil::Q5&) const &rArr; touchgfx::CWRUtil::Q5 touchgfx::CWRUtil::toQ5&lang;int&rang;(T1)
</UL>
<BR>[Calls]<UL><LI><a href="#[33b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::CWRUtil::Q5 touchgfx::CWRUtil::toQ5&lang;int&rang;(T1)
</UL>
<BR>[Called By]<UL><LI><a href="#[442]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Canvas::moveTo(touchgfx::CWRUtil::Q5, touchgfx::CWRUtil::Q5)
<LI><a href="#[252]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Canvas::lineTo(touchgfx::CWRUtil::Q5, touchgfx::CWRUtil::Q5)
</UL>

<P><STRONG><a name="[441]"></a>touchgfx::Canvas::isOutside(const touchgfx::CWRUtil::Q5&, const touchgfx::CWRUtil::Q5&, const touchgfx::CWRUtil::Q5&, const touchgfx::CWRUtil::Q5&) const</STRONG> (Thumb, 52 bytes, Stack size 8 bytes, canvas.o(i._ZNK8touchgfx6Canvas9isOutsideERKNS_7CWRUtil2Q5ES4_S4_S4_))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = touchgfx::Canvas::isOutside(const touchgfx::CWRUtil::Q5&, const touchgfx::CWRUtil::Q5&, const touchgfx::CWRUtil::Q5&, const touchgfx::CWRUtil::Q5&) const
</UL>
<BR>[Called By]<UL><LI><a href="#[442]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Canvas::moveTo(touchgfx::CWRUtil::Q5, touchgfx::CWRUtil::Q5)
<LI><a href="#[252]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Canvas::lineTo(touchgfx::CWRUtil::Q5, touchgfx::CWRUtil::Q5)
</UL>

<P><STRONG><a name="[4b6]"></a>touchgfx::Circle::updateMinMaxX(const touchgfx::CWRUtil::Q5&, touchgfx::CWRUtil::Q5&, touchgfx::CWRUtil::Q5&) const</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, circle.o(i._ZNK8touchgfx6Circle13updateMinMaxXERKNS_7CWRUtil2Q5ERS2_S5_))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = touchgfx::Circle::updateMinMaxX(const touchgfx::CWRUtil::Q5&, touchgfx::CWRUtil::Q5&, touchgfx::CWRUtil::Q5&) const
</UL>
<BR>[Called By]<UL><LI><a href="#[4b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Circle::updateMinMaxAngleSolid(const touchgfx::CWRUtil::Q5&, touchgfx::CWRUtil::Q5&, touchgfx::CWRUtil::Q5&, touchgfx::CWRUtil::Q5&, touchgfx::CWRUtil::Q5&) const
<LI><a href="#[4b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Circle::updateMinMaxAngleLine(const touchgfx::CWRUtil::Q5&, const touchgfx::CWRUtil::Q5&, touchgfx::CWRUtil::Q5&, touchgfx::CWRUtil::Q5&, touchgfx::CWRUtil::Q5&, touchgfx::CWRUtil::Q5&) const
<LI><a href="#[4ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Circle::calculateMinimalRect(touchgfx::CWRUtil::Q5, touchgfx::CWRUtil::Q5, touchgfx::CWRUtil::Q5&, touchgfx::CWRUtil::Q5&, touchgfx::CWRUtil::Q5&, touchgfx::CWRUtil::Q5&) const
</UL>

<P><STRONG><a name="[4b7]"></a>touchgfx::Circle::updateMinMaxY(const touchgfx::CWRUtil::Q5&, touchgfx::CWRUtil::Q5&, touchgfx::CWRUtil::Q5&) const</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, circle.o(i._ZNK8touchgfx6Circle13updateMinMaxYERKNS_7CWRUtil2Q5ERS2_S5_))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = touchgfx::Circle::updateMinMaxY(const touchgfx::CWRUtil::Q5&, touchgfx::CWRUtil::Q5&, touchgfx::CWRUtil::Q5&) const
</UL>
<BR>[Called By]<UL><LI><a href="#[4b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Circle::updateMinMaxAngleSolid(const touchgfx::CWRUtil::Q5&, touchgfx::CWRUtil::Q5&, touchgfx::CWRUtil::Q5&, touchgfx::CWRUtil::Q5&, touchgfx::CWRUtil::Q5&) const
<LI><a href="#[4b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Circle::updateMinMaxAngleLine(const touchgfx::CWRUtil::Q5&, const touchgfx::CWRUtil::Q5&, touchgfx::CWRUtil::Q5&, touchgfx::CWRUtil::Q5&, touchgfx::CWRUtil::Q5&, touchgfx::CWRUtil::Q5&) const
<LI><a href="#[4ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Circle::calculateMinimalRect(touchgfx::CWRUtil::Q5, touchgfx::CWRUtil::Q5, touchgfx::CWRUtil::Q5&, touchgfx::CWRUtil::Q5&, touchgfx::CWRUtil::Q5&, touchgfx::CWRUtil::Q5&) const
</UL>

<P><STRONG><a name="[4aa]"></a>touchgfx::Circle::getMinimalRect(touchgfx::CWRUtil::Q5, touchgfx::CWRUtil::Q5) const</STRONG> (Thumb, 142 bytes, Stack size 56 bytes, circle.o(i._ZNK8touchgfx6Circle14getMinimalRectENS_7CWRUtil2Q5ES2_))
<BR><BR>[Stack]<UL><LI>Max Depth = 336<LI>Call Chain = touchgfx::Circle::getMinimalRect(touchgfx::CWRUtil::Q5, touchgfx::CWRUtil::Q5) const &rArr; touchgfx::Circle::calculateMinimalRect(touchgfx::CWRUtil::Q5, touchgfx::CWRUtil::Q5, touchgfx::CWRUtil::Q5&, touchgfx::CWRUtil::Q5&, touchgfx::CWRUtil::Q5&, touchgfx::CWRUtil::Q5&) const &rArr; touchgfx::Circle::updateMinMaxAngleLine(const touchgfx::CWRUtil::Q5&, const touchgfx::CWRUtil::Q5&, touchgfx::CWRUtil::Q5&, touchgfx::CWRUtil::Q5&, touchgfx::CWRUtil::Q5&, touchgfx::CWRUtil::Q5&) const &rArr; touchgfx::CWRUtil::cosine(touchgfx::CWRUtil::Q5) &rArr; touchgfx::CWRUtil::sine(touchgfx::CWRUtil::Q5) &rArr; touchgfx::muldiv(int, int, int, int&) &rArr; touchgfx::muldivu(unsigned, unsigned, unsigned, unsigned&) &rArr;  touchgfx::muldivu(unsigned, unsigned, unsigned, unsigned&) (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[33b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::CWRUtil::Q5 touchgfx::CWRUtil::toQ5&lang;int&rang;(T1)
<LI><a href="#[453]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;T1 touchgfx::CWRUtil::Q5::to&lang;int&rang;() const
<LI><a href="#[4ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Circle::calculateMinimalRect(touchgfx::CWRUtil::Q5, touchgfx::CWRUtil::Q5, touchgfx::CWRUtil::Q5&, touchgfx::CWRUtil::Q5&, touchgfx::CWRUtil::Q5&, touchgfx::CWRUtil::Q5&) const
</UL>
<BR>[Called By]<UL><LI><a href="#[340]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Circle::getMinimalRectForUpdatedEndAngle(const touchgfx::CWRUtil::Q5&) const
<LI><a href="#[253]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Circle::getMinimalRect() const
</UL>

<P><STRONG><a name="[253]"></a>touchgfx::Circle::getMinimalRect() const</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, circle.o(i._ZNK8touchgfx6Circle14getMinimalRectEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 336<LI>Call Chain = touchgfx::Circle::getMinimalRect() const &rArr; touchgfx::Circle::getMinimalRect(touchgfx::CWRUtil::Q5, touchgfx::CWRUtil::Q5) const &rArr; touchgfx::Circle::calculateMinimalRect(touchgfx::CWRUtil::Q5, touchgfx::CWRUtil::Q5, touchgfx::CWRUtil::Q5&, touchgfx::CWRUtil::Q5&, touchgfx::CWRUtil::Q5&, touchgfx::CWRUtil::Q5&) const &rArr; touchgfx::Circle::updateMinMaxAngleLine(const touchgfx::CWRUtil::Q5&, const touchgfx::CWRUtil::Q5&, touchgfx::CWRUtil::Q5&, touchgfx::CWRUtil::Q5&, touchgfx::CWRUtil::Q5&, touchgfx::CWRUtil::Q5&) const &rArr; touchgfx::CWRUtil::cosine(touchgfx::CWRUtil::Q5) &rArr; touchgfx::CWRUtil::sine(touchgfx::CWRUtil::Q5) &rArr; touchgfx::muldiv(int, int, int, int&) &rArr; touchgfx::muldivu(unsigned, unsigned, unsigned, unsigned&) &rArr;  touchgfx::muldivu(unsigned, unsigned, unsigned, unsigned&) (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[4aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Circle::getMinimalRect(touchgfx::CWRUtil::Q5, touchgfx::CWRUtil::Q5) const
</UL>
<BR>[Address Reference Count : 1]<UL><LI> circle.o(.constdata__ZTVN8touchgfx6CircleE)
</UL>
<P><STRONG><a name="[254]"></a>touchgfx::Circle::drawCanvasWidget(const touchgfx::Rect&) const</STRONG> (Thumb, 1214 bytes, Stack size 256 bytes, circle.o(i._ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE))
<BR><BR>[Stack]<UL><LI>Max Depth = 736 + Unknown Stack Size
<LI>Call Chain = touchgfx::Circle::drawCanvasWidget(const touchgfx::Rect&) const &rArr; touchgfx::Canvas::render(unsigned char) &rArr; touchgfx::Rasterizer::render(const touchgfx::AbstractPainter*, unsigned char*, short, unsigned char, unsigned char) &rArr; touchgfx::Outline::closeOutlineAndSortCells() &rArr; touchgfx::Outline::qsortCells(touchgfx::Cell*, unsigned) &rArr; touchgfx::Outline::swapCells(touchgfx::Cell*, touchgfx::Cell*)
</UL>
<BR>[Calls]<UL><LI><a href="#[33b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::CWRUtil::Q5 touchgfx::CWRUtil::toQ5&lang;int&rang;(T1)
<LI><a href="#[447]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Drawable::getAbsoluteRect() const
<LI><a href="#[444]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Canvas::Canvas(const touchgfx::AbstractPainter*, const touchgfx::Rect&, const touchgfx::Rect&, unsigned char)
<LI><a href="#[443]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Canvas::render(unsigned char)
<LI><a href="#[442]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Canvas::moveTo(touchgfx::CWRUtil::Q5, touchgfx::CWRUtil::Q5)
<LI><a href="#[252]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Canvas::lineTo(touchgfx::CWRUtil::Q5, touchgfx::CWRUtil::Q5)
<LI><a href="#[4ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;T1 touchgfx::CWRUtil::Q5::to&lang;short&rang;() const
<LI><a href="#[453]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;T1 touchgfx::CWRUtil::Q5::to&lang;int&rang;() const
<LI><a href="#[4ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;T1 touchgfx::abs&lang;int&rang;(T1)
<LI><a href="#[4b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::CWRUtil::Q5::operator +(const touchgfx::CWRUtil::Q5&) const
<LI><a href="#[4b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::CWRUtil::Q5::operator *(int) const
<LI><a href="#[4af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::CWRUtil::Q5::operator *(const touchgfx::CWRUtil::Q15&) const
<LI><a href="#[456]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::CWRUtil::Q5::operator -(const touchgfx::CWRUtil::Q5&) const
<LI><a href="#[4ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::CWRUtil::Q5::operator /(int) const
<LI><a href="#[4b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Circle::lineToXYAngleRadius2(touchgfx::Canvas&, const touchgfx::CWRUtil::Q5&, const touchgfx::CWRUtil::Q5&, const touchgfx::CWRUtil::Q5&, const touchgfx::CWRUtil::Q5&) const
<LI><a href="#[4b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Circle::lineToAngleRadius2(touchgfx::Canvas&, const touchgfx::CWRUtil::Q5&, const touchgfx::CWRUtil::Q5&) const
<LI><a href="#[455]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::CWRUtil::cosine(touchgfx::CWRUtil::Q5)
<LI><a href="#[454]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::CWRUtil::sine(int)
<LI><a href="#[452]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::CWRUtil::sine(touchgfx::CWRUtil::Q5)
<LI><a href="#[251]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Canvas::~Canvas()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> circle.o(.constdata__ZTVN8touchgfx6CircleE)
</UL>
<P><STRONG><a name="[4b2]"></a>touchgfx::Circle::lineToAngleRadius2(touchgfx::Canvas&, const touchgfx::CWRUtil::Q5&, const touchgfx::CWRUtil::Q5&) const</STRONG> (Thumb, 18 bytes, Stack size 16 bytes, circle.o(i._ZNK8touchgfx6Circle18lineToAngleRadius2ERNS_6CanvasERKNS_7CWRUtil2Q5ES6_))
<BR><BR>[Stack]<UL><LI>Max Depth = 168<LI>Call Chain = touchgfx::Circle::lineToAngleRadius2(touchgfx::Canvas&, const touchgfx::CWRUtil::Q5&, const touchgfx::CWRUtil::Q5&) const &rArr; touchgfx::Circle::lineToXYAngleRadius2(touchgfx::Canvas&, const touchgfx::CWRUtil::Q5&, const touchgfx::CWRUtil::Q5&, const touchgfx::CWRUtil::Q5&, const touchgfx::CWRUtil::Q5&) const &rArr; touchgfx::CWRUtil::cosine(touchgfx::CWRUtil::Q5) &rArr; touchgfx::CWRUtil::sine(touchgfx::CWRUtil::Q5) &rArr; touchgfx::muldiv(int, int, int, int&) &rArr; touchgfx::muldivu(unsigned, unsigned, unsigned, unsigned&) &rArr;  touchgfx::muldivu(unsigned, unsigned, unsigned, unsigned&) (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[4b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Circle::lineToXYAngleRadius2(touchgfx::Canvas&, const touchgfx::CWRUtil::Q5&, const touchgfx::CWRUtil::Q5&, const touchgfx::CWRUtil::Q5&, const touchgfx::CWRUtil::Q5&) const
</UL>
<BR>[Called By]<UL><LI><a href="#[254]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Circle::drawCanvasWidget(const touchgfx::Rect&) const
</UL>

<P><STRONG><a name="[4ab]"></a>touchgfx::Circle::calculateMinimalRect(touchgfx::CWRUtil::Q5, touchgfx::CWRUtil::Q5, touchgfx::CWRUtil::Q5&, touchgfx::CWRUtil::Q5&, touchgfx::CWRUtil::Q5&, touchgfx::CWRUtil::Q5&) const</STRONG> (Thumb, 496 bytes, Stack size 96 bytes, circle.o(i._ZNK8touchgfx6Circle20calculateMinimalRectENS_7CWRUtil2Q5ES2_RS2_S3_S3_S3_))
<BR><BR>[Stack]<UL><LI>Max Depth = 280<LI>Call Chain = touchgfx::Circle::calculateMinimalRect(touchgfx::CWRUtil::Q5, touchgfx::CWRUtil::Q5, touchgfx::CWRUtil::Q5&, touchgfx::CWRUtil::Q5&, touchgfx::CWRUtil::Q5&, touchgfx::CWRUtil::Q5&) const &rArr; touchgfx::Circle::updateMinMaxAngleLine(const touchgfx::CWRUtil::Q5&, const touchgfx::CWRUtil::Q5&, touchgfx::CWRUtil::Q5&, touchgfx::CWRUtil::Q5&, touchgfx::CWRUtil::Q5&, touchgfx::CWRUtil::Q5&) const &rArr; touchgfx::CWRUtil::cosine(touchgfx::CWRUtil::Q5) &rArr; touchgfx::CWRUtil::sine(touchgfx::CWRUtil::Q5) &rArr; touchgfx::muldiv(int, int, int, int&) &rArr; touchgfx::muldivu(unsigned, unsigned, unsigned, unsigned&) &rArr;  touchgfx::muldivu(unsigned, unsigned, unsigned, unsigned&) (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[33b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::CWRUtil::Q5 touchgfx::CWRUtil::toQ5&lang;int&rang;(T1)
<LI><a href="#[4ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;T1 touchgfx::abs&lang;int&rang;(T1)
<LI><a href="#[4b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::CWRUtil::Q5::operator +(const touchgfx::CWRUtil::Q5&) const
<LI><a href="#[456]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::CWRUtil::Q5::operator -(const touchgfx::CWRUtil::Q5&) const
<LI><a href="#[4ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::CWRUtil::Q5::operator /(int) const
<LI><a href="#[4b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Circle::updateMinMaxAngleSolid(const touchgfx::CWRUtil::Q5&, touchgfx::CWRUtil::Q5&, touchgfx::CWRUtil::Q5&, touchgfx::CWRUtil::Q5&, touchgfx::CWRUtil::Q5&) const
<LI><a href="#[4b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Circle::updateMinMaxAngleLine(const touchgfx::CWRUtil::Q5&, const touchgfx::CWRUtil::Q5&, touchgfx::CWRUtil::Q5&, touchgfx::CWRUtil::Q5&, touchgfx::CWRUtil::Q5&, touchgfx::CWRUtil::Q5&) const
<LI><a href="#[4b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Circle::updateMinMaxY(const touchgfx::CWRUtil::Q5&, touchgfx::CWRUtil::Q5&, touchgfx::CWRUtil::Q5&) const
<LI><a href="#[4b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Circle::updateMinMaxX(const touchgfx::CWRUtil::Q5&, touchgfx::CWRUtil::Q5&, touchgfx::CWRUtil::Q5&) const
</UL>
<BR>[Called By]<UL><LI><a href="#[4aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Circle::getMinimalRect(touchgfx::CWRUtil::Q5, touchgfx::CWRUtil::Q5) const
</UL>

<P><STRONG><a name="[4b3]"></a>touchgfx::Circle::lineToXYAngleRadius2(touchgfx::Canvas&, const touchgfx::CWRUtil::Q5&, const touchgfx::CWRUtil::Q5&, const touchgfx::CWRUtil::Q5&, const touchgfx::CWRUtil::Q5&) const</STRONG> (Thumb, 108 bytes, Stack size 48 bytes, circle.o(i._ZNK8touchgfx6Circle20lineToXYAngleRadius2ERNS_6CanvasERKNS_7CWRUtil2Q5ES6_S6_S6_))
<BR><BR>[Stack]<UL><LI>Max Depth = 152<LI>Call Chain = touchgfx::Circle::lineToXYAngleRadius2(touchgfx::Canvas&, const touchgfx::CWRUtil::Q5&, const touchgfx::CWRUtil::Q5&, const touchgfx::CWRUtil::Q5&, const touchgfx::CWRUtil::Q5&) const &rArr; touchgfx::CWRUtil::cosine(touchgfx::CWRUtil::Q5) &rArr; touchgfx::CWRUtil::sine(touchgfx::CWRUtil::Q5) &rArr; touchgfx::muldiv(int, int, int, int&) &rArr; touchgfx::muldivu(unsigned, unsigned, unsigned, unsigned&) &rArr;  touchgfx::muldivu(unsigned, unsigned, unsigned, unsigned&) (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[4b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::CWRUtil::Q5::operator +(const touchgfx::CWRUtil::Q5&) const
<LI><a href="#[4af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::CWRUtil::Q5::operator *(const touchgfx::CWRUtil::Q15&) const
<LI><a href="#[456]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::CWRUtil::Q5::operator -(const touchgfx::CWRUtil::Q5&) const
<LI><a href="#[4ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::CWRUtil::Q5::operator /(int) const
<LI><a href="#[455]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::CWRUtil::cosine(touchgfx::CWRUtil::Q5)
<LI><a href="#[452]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::CWRUtil::sine(touchgfx::CWRUtil::Q5)
</UL>
<BR>[Called By]<UL><LI><a href="#[4b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Circle::lineToAngleRadius2(touchgfx::Canvas&, const touchgfx::CWRUtil::Q5&, const touchgfx::CWRUtil::Q5&) const
<LI><a href="#[254]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Circle::drawCanvasWidget(const touchgfx::Rect&) const
</UL>

<P><STRONG><a name="[4b4]"></a>touchgfx::Circle::updateMinMaxAngleLine(const touchgfx::CWRUtil::Q5&, const touchgfx::CWRUtil::Q5&, touchgfx::CWRUtil::Q5&, touchgfx::CWRUtil::Q5&, touchgfx::CWRUtil::Q5&, touchgfx::CWRUtil::Q5&) const</STRONG> (Thumb, 180 bytes, Stack size 80 bytes, circle.o(i._ZNK8touchgfx6Circle21updateMinMaxAngleLineERKNS_7CWRUtil2Q5ES4_RS2_S5_S5_S5_))
<BR><BR>[Stack]<UL><LI>Max Depth = 184<LI>Call Chain = touchgfx::Circle::updateMinMaxAngleLine(const touchgfx::CWRUtil::Q5&, const touchgfx::CWRUtil::Q5&, touchgfx::CWRUtil::Q5&, touchgfx::CWRUtil::Q5&, touchgfx::CWRUtil::Q5&, touchgfx::CWRUtil::Q5&) const &rArr; touchgfx::CWRUtil::cosine(touchgfx::CWRUtil::Q5) &rArr; touchgfx::CWRUtil::sine(touchgfx::CWRUtil::Q5) &rArr; touchgfx::muldiv(int, int, int, int&) &rArr; touchgfx::muldivu(unsigned, unsigned, unsigned, unsigned&) &rArr;  touchgfx::muldivu(unsigned, unsigned, unsigned, unsigned&) (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[4b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::CWRUtil::Q5::operator +(const touchgfx::CWRUtil::Q5&) const
<LI><a href="#[4af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::CWRUtil::Q5::operator *(const touchgfx::CWRUtil::Q15&) const
<LI><a href="#[456]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::CWRUtil::Q5::operator -(const touchgfx::CWRUtil::Q5&) const
<LI><a href="#[4b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Circle::updateMinMaxY(const touchgfx::CWRUtil::Q5&, touchgfx::CWRUtil::Q5&, touchgfx::CWRUtil::Q5&) const
<LI><a href="#[4b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Circle::updateMinMaxX(const touchgfx::CWRUtil::Q5&, touchgfx::CWRUtil::Q5&, touchgfx::CWRUtil::Q5&) const
<LI><a href="#[455]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::CWRUtil::cosine(touchgfx::CWRUtil::Q5)
<LI><a href="#[452]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::CWRUtil::sine(touchgfx::CWRUtil::Q5)
</UL>
<BR>[Called By]<UL><LI><a href="#[4ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Circle::calculateMinimalRect(touchgfx::CWRUtil::Q5, touchgfx::CWRUtil::Q5, touchgfx::CWRUtil::Q5&, touchgfx::CWRUtil::Q5&, touchgfx::CWRUtil::Q5&, touchgfx::CWRUtil::Q5&) const
</UL>

<P><STRONG><a name="[4b5]"></a>touchgfx::Circle::updateMinMaxAngleSolid(const touchgfx::CWRUtil::Q5&, touchgfx::CWRUtil::Q5&, touchgfx::CWRUtil::Q5&, touchgfx::CWRUtil::Q5&, touchgfx::CWRUtil::Q5&) const</STRONG> (Thumb, 112 bytes, Stack size 56 bytes, circle.o(i._ZNK8touchgfx6Circle22updateMinMaxAngleSolidERKNS_7CWRUtil2Q5ERS2_S5_S5_S5_))
<BR><BR>[Stack]<UL><LI>Max Depth = 160<LI>Call Chain = touchgfx::Circle::updateMinMaxAngleSolid(const touchgfx::CWRUtil::Q5&, touchgfx::CWRUtil::Q5&, touchgfx::CWRUtil::Q5&, touchgfx::CWRUtil::Q5&, touchgfx::CWRUtil::Q5&) const &rArr; touchgfx::CWRUtil::cosine(touchgfx::CWRUtil::Q5) &rArr; touchgfx::CWRUtil::sine(touchgfx::CWRUtil::Q5) &rArr; touchgfx::muldiv(int, int, int, int&) &rArr; touchgfx::muldivu(unsigned, unsigned, unsigned, unsigned&) &rArr;  touchgfx::muldivu(unsigned, unsigned, unsigned, unsigned&) (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[4b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::CWRUtil::Q5::operator +(const touchgfx::CWRUtil::Q5&) const
<LI><a href="#[4af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::CWRUtil::Q5::operator *(const touchgfx::CWRUtil::Q15&) const
<LI><a href="#[456]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::CWRUtil::Q5::operator -(const touchgfx::CWRUtil::Q5&) const
<LI><a href="#[4b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Circle::updateMinMaxY(const touchgfx::CWRUtil::Q5&, touchgfx::CWRUtil::Q5&, touchgfx::CWRUtil::Q5&) const
<LI><a href="#[4b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Circle::updateMinMaxX(const touchgfx::CWRUtil::Q5&, touchgfx::CWRUtil::Q5&, touchgfx::CWRUtil::Q5&) const
<LI><a href="#[455]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::CWRUtil::cosine(touchgfx::CWRUtil::Q5)
<LI><a href="#[452]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::CWRUtil::sine(touchgfx::CWRUtil::Q5)
</UL>
<BR>[Called By]<UL><LI><a href="#[4ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Circle::calculateMinimalRect(touchgfx::CWRUtil::Q5, touchgfx::CWRUtil::Q5, touchgfx::CWRUtil::Q5&, touchgfx::CWRUtil::Q5&, touchgfx::CWRUtil::Q5&, touchgfx::CWRUtil::Q5&) const
</UL>

<P><STRONG><a name="[340]"></a>touchgfx::Circle::getMinimalRectForUpdatedEndAngle(const touchgfx::CWRUtil::Q5&) const</STRONG> (Thumb, 340 bytes, Stack size 40 bytes, circle.o(i._ZNK8touchgfx6Circle32getMinimalRectForUpdatedEndAngleERKNS_7CWRUtil2Q5E))
<BR><BR>[Stack]<UL><LI>Max Depth = 376<LI>Call Chain = touchgfx::Circle::getMinimalRectForUpdatedEndAngle(const touchgfx::CWRUtil::Q5&) const &rArr; touchgfx::Circle::getMinimalRect(touchgfx::CWRUtil::Q5, touchgfx::CWRUtil::Q5) const &rArr; touchgfx::Circle::calculateMinimalRect(touchgfx::CWRUtil::Q5, touchgfx::CWRUtil::Q5, touchgfx::CWRUtil::Q5&, touchgfx::CWRUtil::Q5&, touchgfx::CWRUtil::Q5&, touchgfx::CWRUtil::Q5&) const &rArr; touchgfx::Circle::updateMinMaxAngleLine(const touchgfx::CWRUtil::Q5&, const touchgfx::CWRUtil::Q5&, touchgfx::CWRUtil::Q5&, touchgfx::CWRUtil::Q5&, touchgfx::CWRUtil::Q5&, touchgfx::CWRUtil::Q5&) const &rArr; touchgfx::CWRUtil::cosine(touchgfx::CWRUtil::Q5) &rArr; touchgfx::CWRUtil::sine(touchgfx::CWRUtil::Q5) &rArr; touchgfx::muldiv(int, int, int, int&) &rArr; touchgfx::muldivu(unsigned, unsigned, unsigned, unsigned&) &rArr;  touchgfx::muldivu(unsigned, unsigned, unsigned, unsigned&) (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[33b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::CWRUtil::Q5 touchgfx::CWRUtil::toQ5&lang;int&rang;(T1)
<LI><a href="#[4ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;T1 touchgfx::abs&lang;int&rang;(T1)
<LI><a href="#[4aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Circle::getMinimalRect(touchgfx::CWRUtil::Q5, touchgfx::CWRUtil::Q5) const
</UL>
<BR>[Called By]<UL><LI><a href="#[33a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;void touchgfx::Circle::updateArcEnd&lang;float&rang;(T1)
<LI><a href="#[337]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CookingView::EXITSCREEN_STATEMACHINE()
</UL>

<P><STRONG><a name="[33f]"></a>touchgfx::CWRUtil::Q5::operator int() const</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, cookingview.o(i._ZNK8touchgfx7CWRUtil2Q5cviEv))
<BR><BR>[Called By]<UL><LI><a href="#[349]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CookingViewBase::CookingViewBase()
<LI><a href="#[33a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;void touchgfx::Circle::updateArcEnd&lang;float&rang;(T1)
<LI><a href="#[337]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CookingView::EXITSCREEN_STATEMACHINE()
</UL>

<P><STRONG><a name="[4ae]"></a>touchgfx::CWRUtil::Q5::operator /(int) const</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, circle.o(i._ZNK8touchgfx7CWRUtil2Q5dvEi))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = touchgfx::CWRUtil::Q5::operator /(int) const
</UL>
<BR>[Called By]<UL><LI><a href="#[4b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Circle::lineToXYAngleRadius2(touchgfx::Canvas&, const touchgfx::CWRUtil::Q5&, const touchgfx::CWRUtil::Q5&, const touchgfx::CWRUtil::Q5&, const touchgfx::CWRUtil::Q5&) const
<LI><a href="#[4ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Circle::calculateMinimalRect(touchgfx::CWRUtil::Q5, touchgfx::CWRUtil::Q5, touchgfx::CWRUtil::Q5&, touchgfx::CWRUtil::Q5&, touchgfx::CWRUtil::Q5&, touchgfx::CWRUtil::Q5&) const
<LI><a href="#[254]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Circle::drawCanvasWidget(const touchgfx::Rect&) const
</UL>

<P><STRONG><a name="[456]"></a>touchgfx::CWRUtil::Q5::operator -(const touchgfx::CWRUtil::Q5&) const</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, circle.o(i._ZNK8touchgfx7CWRUtil2Q5miERKS1_))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = touchgfx::CWRUtil::Q5::operator -(const touchgfx::CWRUtil::Q5&) const
</UL>
<BR>[Called By]<UL><LI><a href="#[4b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Circle::updateMinMaxAngleSolid(const touchgfx::CWRUtil::Q5&, touchgfx::CWRUtil::Q5&, touchgfx::CWRUtil::Q5&, touchgfx::CWRUtil::Q5&, touchgfx::CWRUtil::Q5&) const
<LI><a href="#[4b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Circle::updateMinMaxAngleLine(const touchgfx::CWRUtil::Q5&, const touchgfx::CWRUtil::Q5&, touchgfx::CWRUtil::Q5&, touchgfx::CWRUtil::Q5&, touchgfx::CWRUtil::Q5&, touchgfx::CWRUtil::Q5&) const
<LI><a href="#[4b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Circle::lineToXYAngleRadius2(touchgfx::Canvas&, const touchgfx::CWRUtil::Q5&, const touchgfx::CWRUtil::Q5&, const touchgfx::CWRUtil::Q5&, const touchgfx::CWRUtil::Q5&) const
<LI><a href="#[4ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Circle::calculateMinimalRect(touchgfx::CWRUtil::Q5, touchgfx::CWRUtil::Q5, touchgfx::CWRUtil::Q5&, touchgfx::CWRUtil::Q5&, touchgfx::CWRUtil::Q5&, touchgfx::CWRUtil::Q5&) const
<LI><a href="#[254]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Circle::drawCanvasWidget(const touchgfx::Rect&) const
<LI><a href="#[455]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::CWRUtil::cosine(touchgfx::CWRUtil::Q5)
</UL>

<P><STRONG><a name="[4af]"></a>touchgfx::CWRUtil::Q5::operator *(const touchgfx::CWRUtil::Q15&) const</STRONG> (Thumb, 20 bytes, Stack size 16 bytes, circle.o(i._ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = touchgfx::CWRUtil::Q5::operator *(const touchgfx::CWRUtil::Q15&) const &rArr; touchgfx::muldiv(int, int, int, int&) &rArr; touchgfx::muldivu(unsigned, unsigned, unsigned, unsigned&) &rArr;  touchgfx::muldivu(unsigned, unsigned, unsigned, unsigned&) (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[450]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::muldiv(int, int, int, int&)
</UL>
<BR>[Called By]<UL><LI><a href="#[4b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Circle::updateMinMaxAngleSolid(const touchgfx::CWRUtil::Q5&, touchgfx::CWRUtil::Q5&, touchgfx::CWRUtil::Q5&, touchgfx::CWRUtil::Q5&, touchgfx::CWRUtil::Q5&) const
<LI><a href="#[4b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Circle::updateMinMaxAngleLine(const touchgfx::CWRUtil::Q5&, const touchgfx::CWRUtil::Q5&, touchgfx::CWRUtil::Q5&, touchgfx::CWRUtil::Q5&, touchgfx::CWRUtil::Q5&, touchgfx::CWRUtil::Q5&) const
<LI><a href="#[4b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Circle::lineToXYAngleRadius2(touchgfx::Canvas&, const touchgfx::CWRUtil::Q5&, const touchgfx::CWRUtil::Q5&, const touchgfx::CWRUtil::Q5&, const touchgfx::CWRUtil::Q5&) const
<LI><a href="#[254]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Circle::drawCanvasWidget(const touchgfx::Rect&) const
</UL>

<P><STRONG><a name="[4b1]"></a>touchgfx::CWRUtil::Q5::operator *(int) const</STRONG> (Thumb, 10 bytes, Stack size 8 bytes, circle.o(i._ZNK8touchgfx7CWRUtil2Q5mlEi))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = touchgfx::CWRUtil::Q5::operator *(int) const
</UL>
<BR>[Called By]<UL><LI><a href="#[254]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Circle::drawCanvasWidget(const touchgfx::Rect&) const
</UL>

<P><STRONG><a name="[4b0]"></a>touchgfx::CWRUtil::Q5::operator +(const touchgfx::CWRUtil::Q5&) const</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, circle.o(i._ZNK8touchgfx7CWRUtil2Q5plERKS1_))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = touchgfx::CWRUtil::Q5::operator +(const touchgfx::CWRUtil::Q5&) const
</UL>
<BR>[Called By]<UL><LI><a href="#[4b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Circle::updateMinMaxAngleSolid(const touchgfx::CWRUtil::Q5&, touchgfx::CWRUtil::Q5&, touchgfx::CWRUtil::Q5&, touchgfx::CWRUtil::Q5&, touchgfx::CWRUtil::Q5&) const
<LI><a href="#[4b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Circle::updateMinMaxAngleLine(const touchgfx::CWRUtil::Q5&, const touchgfx::CWRUtil::Q5&, touchgfx::CWRUtil::Q5&, touchgfx::CWRUtil::Q5&, touchgfx::CWRUtil::Q5&, touchgfx::CWRUtil::Q5&) const
<LI><a href="#[4b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Circle::lineToXYAngleRadius2(touchgfx::Canvas&, const touchgfx::CWRUtil::Q5&, const touchgfx::CWRUtil::Q5&, const touchgfx::CWRUtil::Q5&, const touchgfx::CWRUtil::Q5&) const
<LI><a href="#[4ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Circle::calculateMinimalRect(touchgfx::CWRUtil::Q5, touchgfx::CWRUtil::Q5, touchgfx::CWRUtil::Q5&, touchgfx::CWRUtil::Q5&, touchgfx::CWRUtil::Q5&, touchgfx::CWRUtil::Q5&) const
<LI><a href="#[254]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Circle::drawCanvasWidget(const touchgfx::Rect&) const
</UL>

<P><STRONG><a name="[1e3]"></a>touchgfx::Drawable::invalidate() const</STRONG> (Thumb, 34 bytes, Stack size 16 bytes, drawable.o(i._ZNK8touchgfx8Drawable10invalidateEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = touchgfx::Drawable::invalidate() const
</UL>
<BR>[Called By]<UL><LI><a href="#[33c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CookingView::changeColorUnselectedMenuBackground()
<LI><a href="#[33d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CookingView::changeColorOverviewedMenuBackground()
<LI><a href="#[331]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CookingView::customSetupScreen()
<LI><a href="#[334]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CookingView::clockAnimation()
<LI><a href="#[332]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CookingView::updateTimer()
<LI><a href="#[3a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SelectingMenuView::changeColorUnselectedMenuBackground()
<LI><a href="#[39f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SelectingMenuView::changeColorOverviewedMenuBackground()
<LI><a href="#[39c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SelectingMenuView::ANIMATION_CHANGE_STATEMACHINE()
<LI><a href="#[39d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SelectingMenuView::EXITSCREEN_STATEMACHINE()
<LI><a href="#[39e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SelectingMenuView::changeSelectedItem()
<LI><a href="#[396]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SelectingMenuView::setUpEnterScreen()
<LI><a href="#[399]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SelectingMenuView::clockAnimation()
<LI><a href="#[356]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SettingsView::ENTERSCREEN_STATEMACHINE()
<LI><a href="#[357]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SettingsView::EXITSCREEN_STATEMACHINE()
<LI><a href="#[130]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SettingsView::pressCenterKeyFunction()
<LI><a href="#[35a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SettingsView::languageSettingsOption()
<LI><a href="#[139]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SettingsView::returnButtonIsClicked()
<LI><a href="#[135]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SettingsView::languageButtonClicked()
<LI><a href="#[35b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SettingsView::increaseClockSettings()
<LI><a href="#[35c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SettingsView::decreaseClockSettings()
<LI><a href="#[131]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SettingsView::pressDownKeyFunction()
<LI><a href="#[134]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SettingsView::pressUpKeyFunction()
<LI><a href="#[136]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SettingsView::clockButtonClicked()
<LI><a href="#[138]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SettingsView::minuteIsClicked()
<LI><a href="#[353]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SettingsView::clockAnimation()
<LI><a href="#[137]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SettingsView::hourIsClicked()
</UL>
<BR>[Address Reference Count : 20]<UL><LI> informationdemoviewbase.o(.constdata__ZTVN8touchgfx23AbstractButtonContainerE)
<LI> informationdemoviewbase.o(.constdata__ZTVN8touchgfx18ClickButtonTriggerE)
<LI> informationdemoviewbase.o(.constdata__ZTVN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEE)
<LI> cookingviewbase.o(.constdata__ZTVN8touchgfx6WidgetE)
<LI> cookingviewbase.o(.constdata__ZTVN8touchgfx24TextAreaWithTwoWildcardsE)
<LI> cookingviewbase.o(.constdata__ZTVN8touchgfx12FadeAnimatorINS_6ButtonEEE)
<LI> cookingviewbase.o(.constdata__ZTVN8touchgfx12FadeAnimatorINS_5ImageEEE)
<LI> cookingviewbase.o(.constdata__ZTVN8touchgfx12FadeAnimatorINS_24TextAreaWithTwoWildcardsEEE)
<LI> cookingviewbase.o(.constdata__ZTVN8touchgfx12FadeAnimatorINS_8TextAreaEEE)
<LI> abstractbutton.o(.constdata__ZTVN8touchgfx14AbstractButtonE)
<LI> box.o(.constdata__ZTVN8touchgfx3BoxE)
<LI> boxwithborder.o(.constdata__ZTVN8touchgfx13BoxWithBorderE)
<LI> button.o(.constdata__ZTVN8touchgfx6ButtonE)
<LI> container.o(.constdata__ZTVN8touchgfx9ContainerE)
<LI> settingsviewbase.o(.constdata__ZTVN8touchgfx23TextAreaWithOneWildcardE)
<LI> selectingmenuviewbase.o(.constdata__ZTVN8touchgfx12MoveAnimatorINS_9ContainerEEE)
<LI> drawable.o(.constdata__ZTVN8touchgfx8DrawableE)
<LI> image.o(.constdata__ZTVN8touchgfx5ImageE)
<LI> textareawithwildcard.o(.constdata__ZTVN8touchgfx24TextAreaWithWildcardBaseE)
<LI> textarea.o(.constdata__ZTVN8touchgfx8TextAreaE)
</UL>
<P><STRONG><a name="[1d0]"></a>touchgfx::Drawable::getVisibleRect(touchgfx::Rect&) const</STRONG> (Thumb, 60 bytes, Stack size 16 bytes, drawable.o(i._ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = touchgfx::Drawable::getVisibleRect(touchgfx::Rect&) const &rArr; touchgfx::Rect::operator &=(const touchgfx::Rect&) &rArr; touchgfx::Rect::intersect(const touchgfx::Rect&) const
</UL>
<BR>[Calls]<UL><LI><a href="#[3e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Rect::operator &=(const touchgfx::Rect&)
<LI><a href="#[3d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Rect::isEmpty() const
</UL>
<BR>[Address Reference Count : 22]<UL><LI> informationdemoviewbase.o(.constdata__ZTVN8touchgfx23AbstractButtonContainerE)
<LI> informationdemoviewbase.o(.constdata__ZTVN8touchgfx18ClickButtonTriggerE)
<LI> informationdemoviewbase.o(.constdata__ZTVN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEE)
<LI> cookingviewbase.o(.constdata__ZTVN8touchgfx6WidgetE)
<LI> cookingviewbase.o(.constdata__ZTVN8touchgfx24TextAreaWithTwoWildcardsE)
<LI> cookingviewbase.o(.constdata__ZTVN8touchgfx12FadeAnimatorINS_6ButtonEEE)
<LI> cookingviewbase.o(.constdata__ZTVN8touchgfx12FadeAnimatorINS_5ImageEEE)
<LI> cookingviewbase.o(.constdata__ZTVN8touchgfx12FadeAnimatorINS_24TextAreaWithTwoWildcardsEEE)
<LI> cookingviewbase.o(.constdata__ZTVN8touchgfx12FadeAnimatorINS_8TextAreaEEE)
<LI> abstractbutton.o(.constdata__ZTVN8touchgfx14AbstractButtonE)
<LI> box.o(.constdata__ZTVN8touchgfx3BoxE)
<LI> boxwithborder.o(.constdata__ZTVN8touchgfx13BoxWithBorderE)
<LI> button.o(.constdata__ZTVN8touchgfx6ButtonE)
<LI> canvaswidget.o(.constdata__ZTVN8touchgfx12CanvasWidgetE)
<LI> circle.o(.constdata__ZTVN8touchgfx6CircleE)
<LI> container.o(.constdata__ZTVN8touchgfx9ContainerE)
<LI> settingsviewbase.o(.constdata__ZTVN8touchgfx23TextAreaWithOneWildcardE)
<LI> selectingmenuviewbase.o(.constdata__ZTVN8touchgfx12MoveAnimatorINS_9ContainerEEE)
<LI> drawable.o(.constdata__ZTVN8touchgfx8DrawableE)
<LI> image.o(.constdata__ZTVN8touchgfx5ImageE)
<LI> textareawithwildcard.o(.constdata__ZTVN8touchgfx24TextAreaWithWildcardBaseE)
<LI> textarea.o(.constdata__ZTVN8touchgfx8TextAreaE)
</UL>
<P><STRONG><a name="[1cc]"></a>touchgfx::Drawable::invalidateRect(touchgfx::Rect&) const</STRONG> (Thumb, 86 bytes, Stack size 16 bytes, drawable.o(i._ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = touchgfx::Drawable::invalidateRect(touchgfx::Rect&) const &rArr; touchgfx::Rect::operator &=(const touchgfx::Rect&) &rArr; touchgfx::Rect::intersect(const touchgfx::Rect&) const
</UL>
<BR>[Calls]<UL><LI><a href="#[363]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Application::getInstance()
<LI><a href="#[3e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Rect::operator &=(const touchgfx::Rect&)
<LI><a href="#[3d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Rect::isEmpty() const
</UL>
<BR>[Address Reference Count : 22]<UL><LI> informationdemoviewbase.o(.constdata__ZTVN8touchgfx23AbstractButtonContainerE)
<LI> informationdemoviewbase.o(.constdata__ZTVN8touchgfx18ClickButtonTriggerE)
<LI> informationdemoviewbase.o(.constdata__ZTVN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEE)
<LI> cookingviewbase.o(.constdata__ZTVN8touchgfx6WidgetE)
<LI> cookingviewbase.o(.constdata__ZTVN8touchgfx24TextAreaWithTwoWildcardsE)
<LI> cookingviewbase.o(.constdata__ZTVN8touchgfx12FadeAnimatorINS_6ButtonEEE)
<LI> cookingviewbase.o(.constdata__ZTVN8touchgfx12FadeAnimatorINS_5ImageEEE)
<LI> cookingviewbase.o(.constdata__ZTVN8touchgfx12FadeAnimatorINS_24TextAreaWithTwoWildcardsEEE)
<LI> cookingviewbase.o(.constdata__ZTVN8touchgfx12FadeAnimatorINS_8TextAreaEEE)
<LI> abstractbutton.o(.constdata__ZTVN8touchgfx14AbstractButtonE)
<LI> box.o(.constdata__ZTVN8touchgfx3BoxE)
<LI> boxwithborder.o(.constdata__ZTVN8touchgfx13BoxWithBorderE)
<LI> button.o(.constdata__ZTVN8touchgfx6ButtonE)
<LI> canvaswidget.o(.constdata__ZTVN8touchgfx12CanvasWidgetE)
<LI> circle.o(.constdata__ZTVN8touchgfx6CircleE)
<LI> container.o(.constdata__ZTVN8touchgfx9ContainerE)
<LI> settingsviewbase.o(.constdata__ZTVN8touchgfx23TextAreaWithOneWildcardE)
<LI> selectingmenuviewbase.o(.constdata__ZTVN8touchgfx12MoveAnimatorINS_9ContainerEEE)
<LI> drawable.o(.constdata__ZTVN8touchgfx8DrawableE)
<LI> image.o(.constdata__ZTVN8touchgfx5ImageE)
<LI> textareawithwildcard.o(.constdata__ZTVN8touchgfx24TextAreaWithWildcardBaseE)
<LI> textarea.o(.constdata__ZTVN8touchgfx8TextAreaE)
</UL>
<P><STRONG><a name="[447]"></a>touchgfx::Drawable::getAbsoluteRect() const</STRONG> (Thumb, 48 bytes, Stack size 24 bytes, drawable.o(i._ZNK8touchgfx8Drawable15getAbsoluteRectEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = touchgfx::Drawable::getAbsoluteRect() const
</UL>
<BR>[Called By]<UL><LI><a href="#[ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Screen::draw(touchgfx::Rect&)
<LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Screen::handleGestureEvent(const touchgfx::GestureEvent&)
<LI><a href="#[f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Screen::handleClickEvent(const touchgfx::ClickEvent&)
<LI><a href="#[f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Screen::handleDragEvent(const touchgfx::DragEvent&)
<LI><a href="#[200]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextArea::draw(const touchgfx::Rect&) const
<LI><a href="#[1e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextAreaWithWildcardBase::draw(const touchgfx::Rect&) const
<LI><a href="#[20d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Container::getLastChildNear(short, short, touchgfx::Drawable**, short*, short*)
<LI><a href="#[254]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Circle::drawCanvasWidget(const touchgfx::Rect&) const
<LI><a href="#[44e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Drawable::getCachedAbsY()
<LI><a href="#[44f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Drawable::getCachedAbsX()
<LI><a href="#[44b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Screen::startSMOC(const touchgfx::Rect&)
</UL>

<P><STRONG><a name="[1ce]"></a>touchgfx::Drawable::invalidateContent() const</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, cookingview.o(i._ZNK8touchgfx8Drawable17invalidateContentEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = touchgfx::Drawable::invalidateContent() const
</UL>
<BR>[Address Reference Count : 10]<UL><LI> informationdemoviewbase.o(.constdata__ZTVN8touchgfx23AbstractButtonContainerE)
<LI> informationdemoviewbase.o(.constdata__ZTVN8touchgfx18ClickButtonTriggerE)
<LI> informationdemoviewbase.o(.constdata__ZTVN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEE)
<LI> cookingviewbase.o(.constdata__ZTVN8touchgfx6WidgetE)
<LI> abstractbutton.o(.constdata__ZTVN8touchgfx14AbstractButtonE)
<LI> canvaswidget.o(.constdata__ZTVN8touchgfx12CanvasWidgetE)
<LI> circle.o(.constdata__ZTVN8touchgfx6CircleE)
<LI> container.o(.constdata__ZTVN8touchgfx9ContainerE)
<LI> selectingmenuviewbase.o(.constdata__ZTVN8touchgfx12MoveAnimatorINS_9ContainerEEE)
<LI> drawable.o(.constdata__ZTVN8touchgfx8DrawableE)
</UL>
<P><STRONG><a name="[1d1]"></a>touchgfx::Drawable::translateRectToAbsolute(touchgfx::Rect&) const</STRONG> (Thumb, 30 bytes, Stack size 0 bytes, drawable.o(i._ZNK8touchgfx8Drawable23translateRectToAbsoluteERNS_4RectE))
<BR>[Address Reference Count : 22]<UL><LI> informationdemoviewbase.o(.constdata__ZTVN8touchgfx23AbstractButtonContainerE)
<LI> informationdemoviewbase.o(.constdata__ZTVN8touchgfx18ClickButtonTriggerE)
<LI> informationdemoviewbase.o(.constdata__ZTVN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEE)
<LI> cookingviewbase.o(.constdata__ZTVN8touchgfx6WidgetE)
<LI> cookingviewbase.o(.constdata__ZTVN8touchgfx24TextAreaWithTwoWildcardsE)
<LI> cookingviewbase.o(.constdata__ZTVN8touchgfx12FadeAnimatorINS_6ButtonEEE)
<LI> cookingviewbase.o(.constdata__ZTVN8touchgfx12FadeAnimatorINS_5ImageEEE)
<LI> cookingviewbase.o(.constdata__ZTVN8touchgfx12FadeAnimatorINS_24TextAreaWithTwoWildcardsEEE)
<LI> cookingviewbase.o(.constdata__ZTVN8touchgfx12FadeAnimatorINS_8TextAreaEEE)
<LI> abstractbutton.o(.constdata__ZTVN8touchgfx14AbstractButtonE)
<LI> box.o(.constdata__ZTVN8touchgfx3BoxE)
<LI> boxwithborder.o(.constdata__ZTVN8touchgfx13BoxWithBorderE)
<LI> button.o(.constdata__ZTVN8touchgfx6ButtonE)
<LI> canvaswidget.o(.constdata__ZTVN8touchgfx12CanvasWidgetE)
<LI> circle.o(.constdata__ZTVN8touchgfx6CircleE)
<LI> container.o(.constdata__ZTVN8touchgfx9ContainerE)
<LI> settingsviewbase.o(.constdata__ZTVN8touchgfx23TextAreaWithOneWildcardE)
<LI> selectingmenuviewbase.o(.constdata__ZTVN8touchgfx12MoveAnimatorINS_9ContainerEEE)
<LI> drawable.o(.constdata__ZTVN8touchgfx8DrawableE)
<LI> image.o(.constdata__ZTVN8touchgfx5ImageE)
<LI> textareawithwildcard.o(.constdata__ZTVN8touchgfx24TextAreaWithWildcardBaseE)
<LI> textarea.o(.constdata__ZTVN8touchgfx8TextAreaE)
</UL>
<P><STRONG><a name="[3a4]"></a>touchgfx::Drawable::getX() const</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, selectingmenuview.o(i._ZNK8touchgfx8Drawable4getXEv))
<BR><BR>[Called By]<UL><LI><a href="#[3a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::MoveAnimator&lang;touchgfx::Container&rang;::startMoveAnimation(short, short, unsigned short, short(*)(unsigned short, short, short, unsigned short), short(*)(unsigned short, short, short, unsigned short))
<LI><a href="#[39c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SelectingMenuView::ANIMATION_CHANGE_STATEMACHINE()
</UL>

<P><STRONG><a name="[47a]"></a>touchgfx::LCD16bpp::DecompressorL8_L4::blendPixelRGB565(unsigned short, unsigned short, int, int) const</STRONG> (Thumb, 90 bytes, Stack size 32 bytes, lcd16bpp.o(i._ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB565Ettii))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = touchgfx::LCD16bpp::DecompressorL8_L4::blendPixelRGB565(unsigned short, unsigned short, int, int) const
</UL>
<BR>[Calls]<UL><LI><a href="#[475]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD::div255(unsigned short)
<LI><a href="#[476]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::getNativeColorFromRGB(unsigned char, unsigned char, unsigned char)
</UL>
<BR>[Called By]<UL><LI><a href="#[273]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::DecompressorL8_L4::blitCopyRGB565(const unsigned char*, const unsigned char*, const touchgfx::Rect&, const touchgfx::Rect&, unsigned char)
</UL>

<P><STRONG><a name="[47b]"></a>touchgfx::LCD16bpp::DecompressorL8_L4::blendPixelRGB888(const unsigned char*, unsigned short, unsigned char, unsigned char) const</STRONG> (Thumb, 98 bytes, Stack size 40 bytes, lcd16bpp.o(i._ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB888EPKhthh))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = touchgfx::LCD16bpp::DecompressorL8_L4::blendPixelRGB888(const unsigned char*, unsigned short, unsigned char, unsigned char) const
</UL>
<BR>[Calls]<UL><LI><a href="#[475]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD::div255(unsigned short)
<LI><a href="#[473]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Color::getGreenFromRGB565(unsigned short)
<LI><a href="#[474]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Color::getBlueFromRGB565(unsigned short)
<LI><a href="#[472]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Color::getRedFromRGB565(unsigned short)
<LI><a href="#[476]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::getNativeColorFromRGB(unsigned char, unsigned char, unsigned char)
</UL>
<BR>[Called By]<UL><LI><a href="#[275]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::DecompressorL8_L4::blitCopyRGB888(const unsigned char*, const unsigned char*, const touchgfx::Rect&, const touchgfx::Rect&, unsigned char)
</UL>

<P><STRONG><a name="[47c]"></a>touchgfx::LCD16bpp::DecompressorL8_L4::blendPixelARGB8888(unsigned, unsigned short, int, unsigned char) const</STRONG> (Thumb, 136 bytes, Stack size 40 bytes, lcd16bpp.o(i._ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Ejtih))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = touchgfx::LCD16bpp::DecompressorL8_L4::blendPixelARGB8888(unsigned, unsigned short, int, unsigned char) const
</UL>
<BR>[Calls]<UL><LI><a href="#[475]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD::div255(unsigned short)
<LI><a href="#[477]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::getNativeColor(touchgfx::colortype)
<LI><a href="#[473]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Color::getGreenFromRGB565(unsigned short)
<LI><a href="#[474]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Color::getBlueFromRGB565(unsigned short)
<LI><a href="#[472]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Color::getRedFromRGB565(unsigned short)
<LI><a href="#[476]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::getNativeColorFromRGB(unsigned char, unsigned char, unsigned char)
</UL>
<BR>[Called By]<UL><LI><a href="#[274]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::DecompressorL8_L4::blitCopyARGB8888(const unsigned char*, const unsigned char*, const touchgfx::Rect&, const touchgfx::Rect&, unsigned char)
</UL>

<P><STRONG><a name="[280]"></a>touchgfx::LCD16bpp::framebufferFormat() const</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, lcd16bpp.o(i._ZNK8touchgfx8LCD16bpp17framebufferFormatEv))
<BR>[Address Reference Count : 1]<UL><LI> lcd16bpp.o(.constdata__ZTVN8touchgfx8LCD16bppE)
</UL>
<P><STRONG><a name="[281]"></a>touchgfx::LCD16bpp::framebufferStride() const</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, lcd16bpp.o(i._ZNK8touchgfx8LCD16bpp17framebufferStrideEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 56 + Unknown Stack Size
<LI>Call Chain = touchgfx::LCD16bpp::framebufferStride() const &rArr; touchgfx::LCD16bpp::getFramebufferStride() &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[484]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::getFramebufferStride()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lcd16bpp.o(.constdata__ZTVN8touchgfx8LCD16bppE)
</UL>
<P><STRONG><a name="[482]"></a>touchgfx::LCD16bpp::blitCopyARGB8888Solid(const unsigned*, const touchgfx::Rect&, const touchgfx::Rect&) const</STRONG> (Thumb, 196 bytes, Stack size 56 bytes, lcd16bpp.o(i._ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKjRKNS_4RectES5_))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = touchgfx::LCD16bpp::blitCopyARGB8888Solid(const unsigned*, const touchgfx::Rect&, const touchgfx::Rect&) const &rArr; touchgfx::DisplayTransformation::transformDisplayToFrameBuffer(touchgfx::Rect&, const touchgfx::Rect&) &rArr; touchgfx::DisplayTransformation::transformDisplayToFrameBuffer(short&, short&, const touchgfx::Rect&)
</UL>
<BR>[Calls]<UL><LI><a href="#[477]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::getNativeColor(touchgfx::colortype)
<LI><a href="#[419]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::DisplayTransformation::transformDisplayToFrameBuffer(touchgfx::Rect&, const touchgfx::Rect&)
<LI><a href="#[3e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::DisplayTransformation::transformDisplayToFrameBuffer(touchgfx::Rect&)
</UL>
<BR>[Called By]<UL><LI><a href="#[27c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::drawPartialBitmap(const touchgfx::Bitmap&, short, short, const touchgfx::Rect&, unsigned char, bool)
</UL>

<P><STRONG><a name="[4b9]"></a>touchgfx::TextArea::BoundingArea::isValid(const unsigned short*) const</STRONG> (Thumb, 30 bytes, Stack size 0 bytes, textarea.o(i._ZNK8touchgfx8TextArea12BoundingArea7isValidEPKt))
<BR><BR>[Called By]<UL><LI><a href="#[201]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextArea::invalidateContent() const
<LI><a href="#[200]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextArea::draw(const touchgfx::Rect&) const
</UL>

<P><STRONG><a name="[1e9]"></a>touchgfx::TextArea::getAlignment() const</STRONG> (Thumb, 48 bytes, Stack size 16 bytes, textarea.o(i._ZNK8touchgfx8TextArea12getAlignmentEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 64 + Unknown Stack Size
<LI>Call Chain = touchgfx::TextArea::getAlignment() const &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[4a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TypedText::hasValidId() const
<LI><a href="#[2ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;abort
</UL>
<BR>[Address Reference Count : 6]<UL><LI> cookingviewbase.o(.constdata__ZTVN8touchgfx24TextAreaWithTwoWildcardsE)
<LI> cookingviewbase.o(.constdata__ZTVN8touchgfx12FadeAnimatorINS_24TextAreaWithTwoWildcardsEEE)
<LI> cookingviewbase.o(.constdata__ZTVN8touchgfx12FadeAnimatorINS_8TextAreaEEE)
<LI> settingsviewbase.o(.constdata__ZTVN8touchgfx23TextAreaWithOneWildcardE)
<LI> textareawithwildcard.o(.constdata__ZTVN8touchgfx24TextAreaWithWildcardBaseE)
<LI> textarea.o(.constdata__ZTVN8touchgfx8TextAreaE)
</UL>
<P><STRONG><a name="[1e2]"></a>touchgfx::TextArea::getSolidRect() const</STRONG> (Thumb, 14 bytes, Stack size 16 bytes, cookingviewbase.o(i._ZNK8touchgfx8TextArea12getSolidRectEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = touchgfx::TextArea::getSolidRect() const
</UL>
<BR>[Calls]<UL><LI><a href="#[dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Rect::Rect()
</UL>
<BR>[Address Reference Count : 6]<UL><LI> cookingviewbase.o(.constdata__ZTVN8touchgfx24TextAreaWithTwoWildcardsE)
<LI> cookingviewbase.o(.constdata__ZTVN8touchgfx12FadeAnimatorINS_24TextAreaWithTwoWildcardsEEE)
<LI> cookingviewbase.o(.constdata__ZTVN8touchgfx12FadeAnimatorINS_8TextAreaEEE)
<LI> settingsviewbase.o(.constdata__ZTVN8touchgfx23TextAreaWithOneWildcardE)
<LI> textareawithwildcard.o(.constdata__ZTVN8touchgfx24TextAreaWithWildcardBaseE)
<LI> textarea.o(.constdata__ZTVN8touchgfx8TextAreaE)
</UL>
<P><STRONG><a name="[1eb]"></a>touchgfx::TextArea::getTextWidth() const</STRONG> (Thumb, 82 bytes, Stack size 32 bytes, textarea.o(i._ZNK8touchgfx8TextArea12getTextWidthEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 104 + Unknown Stack Size
<LI>Call Chain = touchgfx::TextArea::getTextWidth() const &rArr; touchgfx::TypedText::getFont() const &rArr; __aeabi_assert &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[4a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TypedText::getFont() const
<LI><a href="#[37a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TypedText::getText() const
<LI><a href="#[4a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TypedText::hasValidId() const
<LI><a href="#[4b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TypedText::getTextDirection() const
</UL>
<BR>[Address Reference Count : 6]<UL><LI> cookingviewbase.o(.constdata__ZTVN8touchgfx24TextAreaWithTwoWildcardsE)
<LI> cookingviewbase.o(.constdata__ZTVN8touchgfx12FadeAnimatorINS_24TextAreaWithTwoWildcardsEEE)
<LI> cookingviewbase.o(.constdata__ZTVN8touchgfx12FadeAnimatorINS_8TextAreaEEE)
<LI> settingsviewbase.o(.constdata__ZTVN8touchgfx23TextAreaWithOneWildcardE)
<LI> textareawithwildcard.o(.constdata__ZTVN8touchgfx24TextAreaWithWildcardBaseE)
<LI> textarea.o(.constdata__ZTVN8touchgfx8TextAreaE)
</UL>
<P><STRONG><a name="[203]"></a>touchgfx::TextArea::getWildcard1() const</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, cookingviewbase.o(i._ZNK8touchgfx8TextArea12getWildcard1Ev))
<BR>[Address Reference Count : 3]<UL><LI> cookingviewbase.o(.constdata__ZTVN8touchgfx12FadeAnimatorINS_8TextAreaEEE)
<LI> textareawithwildcard.o(.constdata__ZTVN8touchgfx24TextAreaWithWildcardBaseE)
<LI> textarea.o(.constdata__ZTVN8touchgfx8TextAreaE)
</UL>
<P><STRONG><a name="[204]"></a>touchgfx::TextArea::getWildcard2() const</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, cookingviewbase.o(i._ZNK8touchgfx8TextArea12getWildcard2Ev))
<BR>[Address Reference Count : 4]<UL><LI> cookingviewbase.o(.constdata__ZTVN8touchgfx12FadeAnimatorINS_8TextAreaEEE)
<LI> settingsviewbase.o(.constdata__ZTVN8touchgfx23TextAreaWithOneWildcardE)
<LI> textareawithwildcard.o(.constdata__ZTVN8touchgfx24TextAreaWithWildcardBaseE)
<LI> textarea.o(.constdata__ZTVN8touchgfx8TextAreaE)
</UL>
<P><STRONG><a name="[1ea]"></a>touchgfx::TextArea::getTextHeight() const</STRONG> (Thumb, 70 bytes, Stack size 24 bytes, textarea.o(i._ZNK8touchgfx8TextArea13getTextHeightEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 96 + Unknown Stack Size
<LI>Call Chain = touchgfx::TextArea::getTextHeight() const &rArr; touchgfx::TypedText::getText() const &rArr; __aeabi_assert &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[37a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TypedText::getText() const
<LI><a href="#[4a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TypedText::hasValidId() const
</UL>
<BR>[Address Reference Count : 6]<UL><LI> cookingviewbase.o(.constdata__ZTVN8touchgfx24TextAreaWithTwoWildcardsE)
<LI> cookingviewbase.o(.constdata__ZTVN8touchgfx12FadeAnimatorINS_24TextAreaWithTwoWildcardsEEE)
<LI> cookingviewbase.o(.constdata__ZTVN8touchgfx12FadeAnimatorINS_8TextAreaEEE)
<LI> settingsviewbase.o(.constdata__ZTVN8touchgfx23TextAreaWithOneWildcardE)
<LI> textareawithwildcard.o(.constdata__ZTVN8touchgfx24TextAreaWithWildcardBaseE)
<LI> textarea.o(.constdata__ZTVN8touchgfx8TextAreaE)
</UL>
<P><STRONG><a name="[201]"></a>touchgfx::TextArea::invalidateContent() const</STRONG> (Thumb, 88 bytes, Stack size 24 bytes, textarea.o(i._ZNK8touchgfx8TextArea17invalidateContentEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 96 + Unknown Stack Size
<LI>Call Chain = touchgfx::TextArea::invalidateContent() const &rArr; touchgfx::TypedText::getText() const &rArr; __aeabi_assert &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[37a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TypedText::getText() const
<LI><a href="#[4a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TypedText::hasValidId() const
<LI><a href="#[3d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Rect::isEmpty() const
<LI><a href="#[4b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextArea::BoundingArea::isValid(const unsigned short*) const
</UL>
<BR>[Called By]<UL><LI><a href="#[514]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::FadeAnimator&lang;touchgfx::TextArea&rang;::nextFadeAnimationStep()
</UL>
<BR>[Address Reference Count : 2]<UL><LI> cookingviewbase.o(.constdata__ZTVN8touchgfx12FadeAnimatorINS_8TextAreaEEE)
<LI> textarea.o(.constdata__ZTVN8touchgfx8TextAreaE)
</UL>
<P><STRONG><a name="[1ec]"></a>touchgfx::TextArea::calculateTextHeight(const unsigned short*, ...) const</STRONG> (Thumb, 164 bytes, Stack size 152 bytes, textarea.o(i._ZNK8touchgfx8TextArea19calculateTextHeightEPKtz))
<BR><BR>[Stack]<UL><LI>Max Depth = 528 + Unknown Stack Size
<LI>Call Chain = touchgfx::TextArea::calculateTextHeight(const unsigned short*, ...) const &rArr; touchgfx::LCD::getNumLines(touchgfx::TextProvider&, touchgfx::WideTextAction, unsigned char, const touchgfx::Font*, short) &rArr; touchgfx::LCD::WideTextInternalStruct::scanStringLengthForLine() &rArr; touchgfx::TextProvider::getNextLigature(unsigned char, const touchgfx::Font*, const touchgfx::GlyphNode*&) &rArr; touchgfx::TextProvider::getNextLigature(unsigned char) &rArr; touchgfx::TextProvider::substituteGlyphs() &rArr; touchgfx::TextProvider::applyGsubRules(const unsigned short*, unsigned short) &rArr; touchgfx::TextProvider::replaceInputCharacters(unsigned short, unsigned short, const unsigned short*) &rArr; touchgfx::TextProvider::fillInputBuffer() &rArr; touchgfx::TextProvider::circularBuffer&lang;(unsigned)10&rang;::pushBack(unsigned short) &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[409]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextProvider::TextProvider()
<LI><a href="#[3ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextProvider::initialize(const unsigned short*, std::__va_list, const unsigned short*, const touchgfx::FontContextualFormsTable*)
<LI><a href="#[4a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TypedText::getFont() const
<LI><a href="#[4a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TypedText::hasValidId() const
<LI><a href="#[42b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD::getNumLines(touchgfx::TextProvider&, touchgfx::WideTextAction, unsigned char, const touchgfx::Font*, short)
<LI><a href="#[4b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TypedText::getTextDirection() const
</UL>
<BR>[Address Reference Count : 6]<UL><LI> cookingviewbase.o(.constdata__ZTVN8touchgfx24TextAreaWithTwoWildcardsE)
<LI> cookingviewbase.o(.constdata__ZTVN8touchgfx12FadeAnimatorINS_24TextAreaWithTwoWildcardsEEE)
<LI> cookingviewbase.o(.constdata__ZTVN8touchgfx12FadeAnimatorINS_8TextAreaEEE)
<LI> settingsviewbase.o(.constdata__ZTVN8touchgfx23TextAreaWithOneWildcardE)
<LI> textareawithwildcard.o(.constdata__ZTVN8touchgfx24TextAreaWithWildcardBaseE)
<LI> textarea.o(.constdata__ZTVN8touchgfx8TextAreaE)
</UL>
<P><STRONG><a name="[205]"></a>touchgfx::TextArea::calculateBoundingArea() const</STRONG> (Thumb, 754 bytes, Stack size 208 bytes, textarea.o(i._ZNK8touchgfx8TextArea21calculateBoundingAreaEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 504 + Unknown Stack Size
<LI>Call Chain = touchgfx::TextArea::calculateBoundingArea() const &rArr; touchgfx::LCD::WideTextInternalStruct::scanStringLengthForLine() &rArr; touchgfx::TextProvider::getNextLigature(unsigned char, const touchgfx::Font*, const touchgfx::GlyphNode*&) &rArr; touchgfx::TextProvider::getNextLigature(unsigned char) &rArr; touchgfx::TextProvider::substituteGlyphs() &rArr; touchgfx::TextProvider::applyGsubRules(const unsigned short*, unsigned short) &rArr; touchgfx::TextProvider::replaceInputCharacters(unsigned short, unsigned short, const unsigned short*) &rArr; touchgfx::TextProvider::fillInputBuffer() &rArr; touchgfx::TextProvider::circularBuffer&lang;(unsigned)10&rang;::pushBack(unsigned short) &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[409]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextProvider::TextProvider()
<LI><a href="#[4a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TypedText::getFont() const
<LI><a href="#[37a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TypedText::getText() const
<LI><a href="#[4a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TypedText::hasValidId() const
<LI><a href="#[3d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Rect::Rect(short, short, short, short)
<LI><a href="#[3dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Rect::bottom() const
<LI><a href="#[3db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Rect::right() const
<LI><a href="#[42c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD::WideTextInternalStruct::WideTextInternalStruct(touchgfx::TextProvider&, unsigned short, unsigned short, unsigned char, const touchgfx::Font*, short, touchgfx::WideTextAction)
<LI><a href="#[42d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD::WideTextInternalStruct::scanStringLengthForLine()
<LI><a href="#[42e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD::stringWidth(touchgfx::TextProvider&, const touchgfx::Font&, int, unsigned char)
<LI><a href="#[3f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextProvider::endOfString()
<LI><a href="#[3eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextProvider::initialize(const unsigned short*, const unsigned short*, const touchgfx::FontContextualFormsTable*, ...)
<LI><a href="#[4b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TypedText::getTextDirection() const
</UL>
<BR>[Address Reference Count : 2]<UL><LI> cookingviewbase.o(.constdata__ZTVN8touchgfx12FadeAnimatorINS_8TextAreaEEE)
<LI> textarea.o(.constdata__ZTVN8touchgfx8TextAreaE)
</UL>
<P><STRONG><a name="[200]"></a>touchgfx::TextArea::draw(const touchgfx::Rect&) const</STRONG> (Thumb, 252 bytes, Stack size 88 bytes, textarea.o(i._ZNK8touchgfx8TextArea4drawERKNS_4RectE))
<BR><BR>[Stack]<UL><LI>Max Depth = 952 + Unknown Stack Size
<LI>Call Chain = touchgfx::TextArea::draw(const touchgfx::Rect&) const &rArr; touchgfx::LCD::drawString(touchgfx::Rect, const touchgfx::Rect&, const touchgfx::LCD::StringVisuals&, const unsigned short*, ...) &rArr; touchgfx::LCD::drawStringLTR(const touchgfx::Rect&, const touchgfx::Rect&, const touchgfx::LCD::StringVisuals&, const unsigned short*, std::__va_list) &rArr; touchgfx::LCD::drawStringInternal(unsigned short*, const touchgfx::Rect*, short, short, const touchgfx::Rect&, const touchgfx::LCD::StringVisuals*, unsigned char, touchgfx::TextProvider&, int, bool) &rArr; touchgfx::TextProvider::getNextLigature(unsigned char, const touchgfx::Font*, const touchgfx::GlyphNode*&, const unsigned char*&, unsigned char&) &rArr; touchgfx::TextProvider::getNextLigature(unsigned char) &rArr; touchgfx::TextProvider::substituteGlyphs() &rArr; touchgfx::TextProvider::applyGsubRules(const unsigned short*, unsigned short) &rArr; touchgfx::TextProvider::replaceInputCharacters(unsigned short, unsigned short, const unsigned short*) &rArr; touchgfx::TextProvider::fillInputBuffer() &rArr; touchgfx::TextProvider::circularBuffer&lang;(unsigned)10&rang;::pushBack(unsigned short) &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[4a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TypedText::getFont() const
<LI><a href="#[37a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TypedText::getText() const
<LI><a href="#[4a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TypedText::hasValidId() const
<LI><a href="#[428]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD::drawString(touchgfx::Rect, const touchgfx::Rect&, const touchgfx::LCD::StringVisuals&, const unsigned short*, ...)
<LI><a href="#[447]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Drawable::getAbsoluteRect() const
<LI><a href="#[3e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Rect::operator &=(const touchgfx::Rect&)
<LI><a href="#[3d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Rect::isEmpty() const
<LI><a href="#[4b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TypedText::getTextDirection() const
<LI><a href="#[4b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextArea::BoundingArea::isValid(const unsigned short*) const
</UL>
<BR>[Address Reference Count : 2]<UL><LI> cookingviewbase.o(.constdata__ZTVN8touchgfx12FadeAnimatorINS_8TextAreaEEE)
<LI> textarea.o(.constdata__ZTVN8touchgfx8TextAreaE)
</UL>
<P><STRONG><a name="[3a5]"></a>touchgfx::TextArea::getAlpha() const</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, cookingview.o(i._ZNK8touchgfx8TextArea8getAlphaEv))
<BR><BR>[Called By]<UL><LI><a href="#[341]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::FadeAnimator&lang;touchgfx::TextAreaWithTwoWildcards&rang;::startFadeAnimation(unsigned char, unsigned short, short(*)(unsigned short, short, short, unsigned short))
<LI><a href="#[39c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SelectingMenuView::ANIMATION_CHANGE_STATEMACHINE()
</UL>

<P><STRONG><a name="[4ba]"></a>touchgfx::ConstFont::find(unsigned short) const</STRONG> (Thumb, 160 bytes, Stack size 16 bytes, constfont.o(i._ZNK8touchgfx9ConstFont4findEt))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = touchgfx::ConstFont::find(unsigned short) const
</UL>
<BR>[Called By]<UL><LI><a href="#[214]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::ConstFont::getGlyph(unsigned short, const unsigned char*&, unsigned char&) const
</UL>

<P><STRONG><a name="[214]"></a>touchgfx::ConstFont::getGlyph(unsigned short, const unsigned char*&, unsigned char&) const</STRONG> (Thumb, 94 bytes, Stack size 24 bytes, constfont.o(i._ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = touchgfx::ConstFont::getGlyph(unsigned short, const unsigned char*&, unsigned char&) const &rArr; touchgfx::ConstFont::find(unsigned short) const
</UL>
<BR>[Calls]<UL><LI><a href="#[4ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::ConstFont::find(unsigned short) const
</UL>
<BR>[Address Reference Count : 2]<UL><LI> generatedfont.o(.constdata__ZTVN8touchgfx13GeneratedFontE)
<LI> constfont.o(.constdata__ZTVN8touchgfx9ConstFontE)
</UL>
<P><STRONG><a name="[208]"></a>touchgfx::Container::getSolidRect() const</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, container.o(i._ZNK8touchgfx9Container12getSolidRectEv))
<BR><BR>[Calls]<UL><LI><a href="#[dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Rect::Rect()
</UL>
<BR>[Address Reference Count : 5]<UL><LI> informationdemoviewbase.o(.constdata__ZTVN8touchgfx23AbstractButtonContainerE)
<LI> informationdemoviewbase.o(.constdata__ZTVN8touchgfx18ClickButtonTriggerE)
<LI> informationdemoviewbase.o(.constdata__ZTVN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEE)
<LI> container.o(.constdata__ZTVN8touchgfx9ContainerE)
<LI> selectingmenuviewbase.o(.constdata__ZTVN8touchgfx12MoveAnimatorINS_9ContainerEEE)
</UL>
<P><STRONG><a name="[207]"></a>touchgfx::Container::draw(const touchgfx::Rect&) const</STRONG> (Thumb, 94 bytes, Stack size 24 bytes, container.o(i._ZNK8touchgfx9Container4drawERKNS_4RectE))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = touchgfx::Container::draw(const touchgfx::Rect&) const &rArr; touchgfx::Rect::operator &(const touchgfx::Rect&) const &rArr; touchgfx::Rect::operator &=(const touchgfx::Rect&) &rArr; touchgfx::Rect::intersect(const touchgfx::Rect&) const
</UL>
<BR>[Calls]<UL><LI><a href="#[44a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Rect::operator &(const touchgfx::Rect&) const
<LI><a href="#[3d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Rect::isEmpty() const
</UL>
<BR>[Called By]<UL><LI><a href="#[ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Screen::draw(touchgfx::Rect&)
</UL>
<BR>[Address Reference Count : 5]<UL><LI> informationdemoviewbase.o(.constdata__ZTVN8touchgfx23AbstractButtonContainerE)
<LI> informationdemoviewbase.o(.constdata__ZTVN8touchgfx18ClickButtonTriggerE)
<LI> informationdemoviewbase.o(.constdata__ZTVN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEE)
<LI> container.o(.constdata__ZTVN8touchgfx9ContainerE)
<LI> selectingmenuviewbase.o(.constdata__ZTVN8touchgfx12MoveAnimatorINS_9ContainerEEE)
</UL>
<P><STRONG><a name="[4a3]"></a>touchgfx::GlyphNode::kerningTablePos() const</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, generatedfont.o(i._ZNK8touchgfx9GlyphNode15kerningTablePosEv))
<BR><BR>[Called By]<UL><LI><a href="#[21d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::GeneratedFont::getKerning(unsigned short, const touchgfx::GlyphNode*) const
</UL>

<P><STRONG><a name="[3fb]"></a>touchgfx::GlyphNode::top() const</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, font.o(i._ZNK8touchgfx9GlyphNode3topEv))
<BR><BR>[Called By]<UL><LI><a href="#[3ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextProvider::adjustArabicGlyph(const touchgfx::Font*, const touchgfx::GlyphNode*, unsigned short)
<LI><a href="#[3f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextProvider::adjustThaiGlyph(const touchgfx::Font*, const touchgfx::GlyphNode*)
</UL>

<P><STRONG><a name="[406]"></a>touchgfx::GlyphNode::width() const</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, fontcache.o(i._ZNK8touchgfx9GlyphNode5widthEv))
<BR><BR>[Called By]<UL><LI><a href="#[3ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextProvider::adjustArabicGlyph(const touchgfx::Font*, const touchgfx::GlyphNode*, unsigned short)
<LI><a href="#[3f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextProvider::adjustHindiGlyph(const touchgfx::GlyphNode*)
</UL>

<P><STRONG><a name="[3f2]"></a>touchgfx::GlyphNode::advance() const</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, lcd.o(i._ZNK8touchgfx9GlyphNode7advanceEv))
<BR><BR>[Called By]<UL><LI><a href="#[42c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD::WideTextInternalStruct::WideTextInternalStruct(touchgfx::TextProvider&, unsigned short, unsigned short, unsigned char, const touchgfx::Font*, short, touchgfx::WideTextAction)
<LI><a href="#[42d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD::WideTextInternalStruct::scanStringLengthForLine()
<LI><a href="#[430]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD::drawStringInternal(unsigned short*, const touchgfx::Rect*, short, short, const touchgfx::Rect&, const touchgfx::LCD::StringVisuals*, unsigned char, touchgfx::TextProvider&, int, bool)
<LI><a href="#[42e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD::stringWidth(touchgfx::TextProvider&, const touchgfx::Font&, int, unsigned char)
<LI><a href="#[3f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextProvider::adjustThaiGlyph(const touchgfx::Font*, const touchgfx::GlyphNode*)
<LI><a href="#[3ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextProvider::adjustGlyph(unsigned short, unsigned short, const touchgfx::GlyphNode*&, const touchgfx::Font*)
</UL>

<P><STRONG><a name="[4a0]"></a>touchgfx::TypedText::hasValidId() const</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, cookingviewbase.o(i._ZNK8touchgfx9TypedText10hasValidIdEv))
<BR><BR>[Called By]<UL><LI><a href="#[201]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextArea::invalidateContent() const
<LI><a href="#[4a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TypedText::getFont() const
<LI><a href="#[200]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextArea::draw(const touchgfx::Rect&) const
<LI><a href="#[205]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextArea::calculateBoundingArea() const
<LI><a href="#[1ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextArea::calculateTextHeight(const unsigned short*, ...) const
<LI><a href="#[1ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextArea::getTextHeight() const
<LI><a href="#[1eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextArea::getTextWidth() const
<LI><a href="#[1e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextArea::getAlignment() const
<LI><a href="#[1e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextAreaWithWildcardBase::draw(const touchgfx::Rect&) const
<LI><a href="#[37a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TypedText::getText() const
<LI><a href="#[4b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TypedText::getTextDirection() const
<LI><a href="#[49f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextArea::resizeToCurrentText()
</UL>

<P><STRONG><a name="[4b8]"></a>touchgfx::TypedText::getTextDirection() const</STRONG> (Thumb, 38 bytes, Stack size 16 bytes, textarea.o(i._ZNK8touchgfx9TypedText16getTextDirectionEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 64 + Unknown Stack Size
<LI>Call Chain = touchgfx::TypedText::getTextDirection() const &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[4a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TypedText::hasValidId() const
<LI><a href="#[2ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;abort
</UL>
<BR>[Called By]<UL><LI><a href="#[200]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextArea::draw(const touchgfx::Rect&) const
<LI><a href="#[205]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextArea::calculateBoundingArea() const
<LI><a href="#[1ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextArea::calculateTextHeight(const unsigned short*, ...) const
<LI><a href="#[1eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextArea::getTextWidth() const
</UL>

<P><STRONG><a name="[4a5]"></a>touchgfx::TypedText::getFont() const</STRONG> (Thumb, 66 bytes, Stack size 8 bytes, fontcache.o(i._ZNK8touchgfx9TypedText7getFontEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 72 + Unknown Stack Size
<LI>Call Chain = touchgfx::TypedText::getFont() const &rArr; __aeabi_assert &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[4a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TypedText::hasValidId() const
<LI><a href="#[2b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_assert
</UL>
<BR>[Called By]<UL><LI><a href="#[200]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextArea::draw(const touchgfx::Rect&) const
<LI><a href="#[205]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextArea::calculateBoundingArea() const
<LI><a href="#[1ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextArea::calculateTextHeight(const unsigned short*, ...) const
<LI><a href="#[1eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextArea::getTextWidth() const
<LI><a href="#[1e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextAreaWithWildcardBase::draw(const touchgfx::Rect&) const
</UL>

<P><STRONG><a name="[37a]"></a>touchgfx::TypedText::getText() const</STRONG> (Thumb, 58 bytes, Stack size 8 bytes, cookingviewbase.o(i._ZNK8touchgfx9TypedText7getTextEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 72 + Unknown Stack Size
<LI>Call Chain = touchgfx::TypedText::getText() const &rArr; __aeabi_assert &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[4a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Texts::getText(unsigned short) const
<LI><a href="#[4a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TypedText::hasValidId() const
<LI><a href="#[2b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_assert
</UL>
<BR>[Called By]<UL><LI><a href="#[201]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextArea::invalidateContent() const
<LI><a href="#[349]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CookingViewBase::CookingViewBase()
<LI><a href="#[3a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SelectingMenuViewBase::SelectingMenuViewBase()
<LI><a href="#[362]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SettingsViewBase::SettingsViewBase()
<LI><a href="#[200]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextArea::draw(const touchgfx::Rect&) const
<LI><a href="#[205]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextArea::calculateBoundingArea() const
<LI><a href="#[1ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextArea::getTextHeight() const
<LI><a href="#[1eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextArea::getTextWidth() const
</UL>

<P><STRONG><a name="[521]"></a>__aeabi_vec_ctor_nocookie_nodtor</STRONG> (Thumb, 36 bytes, Stack size 24 bytes, aeabi_vec_ctor_nocookie_nodtor.o(i.__aeabi_vec_ctor_nocookie_nodtor))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = __aeabi_vec_ctor_nocookie_nodtor
</UL>
<BR>[Called By]<UL><LI><a href="#[3df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Vector&lang;touchgfx::Rect, (unsigned short)8&rang;::Vector()
</UL>

<P><STRONG><a name="[322]"></a>__cxa_guard_acquire</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, cxa_guard_acquire.o(i.__cxa_guard_acquire))
<BR><BR>[Called By]<UL><LI><a href="#[31b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx_init
<LI><a href="#[32f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getFont_Nanum_Gothic_Bold_700_28_4bpp()
<LI><a href="#[32e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getFont_Nanum_Gothic_Bold_700_25_4bpp()
<LI><a href="#[32d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getFont_Nanum_Gothic_Bold_700_14_4bpp()
<LI><a href="#[32c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getFont_GommeSansW04Bold_30_4bpp()
<LI><a href="#[32b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getFont_GommeSansW04Bold_28_4bpp()
<LI><a href="#[32a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getFont_GommeSansW04Bold_25_4bpp()
<LI><a href="#[329]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getFont_GommeSansW04Bold_24_4bpp()
<LI><a href="#[328]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getFont_GommeSansW04Bold_20_4bpp()
<LI><a href="#[327]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getFont_GommeSansW04Bold_14_4bpp()
<LI><a href="#[321]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getFont_GILB_____TTF_24_4bpp()
<LI><a href="#[326]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getFont_chinese_msyh_28_4bpp()
<LI><a href="#[325]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getFont_chinese_msyh_25_4bpp()
<LI><a href="#[324]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getFont_chinese_msyh_14_4bpp()
<LI><a href="#[492]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::enableTextureMapperRGB565_NonOpaque_BilinearInterpolation()
<LI><a href="#[490]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::enableTextureMapperRGB565_Opaque_BilinearInterpolation()
<LI><a href="#[49a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::enableTextureMapperL8_ARGB8888_BilinearInterpolation()
<LI><a href="#[493]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::enableTextureMapperRGB565_NonOpaque_NearestNeighbor()
<LI><a href="#[498]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::enableTextureMapperL8_RGB888_BilinearInterpolation()
<LI><a href="#[496]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::enableTextureMapperL8_RGB565_BilinearInterpolation()
<LI><a href="#[494]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::enableTextureMapperARGB8888_BilinearInterpolation()
<LI><a href="#[491]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::enableTextureMapperRGB565_Opaque_NearestNeighbor()
<LI><a href="#[49b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::enableTextureMapperL8_ARGB8888_NearestNeighbor()
<LI><a href="#[499]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::enableTextureMapperL8_RGB888_NearestNeighbor()
<LI><a href="#[497]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::enableTextureMapperL8_RGB565_NearestNeighbor()
<LI><a href="#[495]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::enableTextureMapperARGB8888_NearestNeighbor()
<LI><a href="#[486]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::enableTextureMapperA4_BilinearInterpolation()
<LI><a href="#[487]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::enableTextureMapperA4_NearestNeighbor()
<LI><a href="#[48f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::enableDecompressorL8_LZW9()
<LI><a href="#[48e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::enableDecompressorL8_RLE()
<LI><a href="#[48d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::enableDecompressorL8_L4()
</UL>

<P><STRONG><a name="[1df]"></a>__cxa_pure_virtual</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, pure_virt.o(i.__cxa_pure_virtual))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = __cxa_pure_virtual &rArr; __rt_SIGPVFN &rArr; __rt_SIGPVFN_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[2bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_SIGPVFN
</UL>
<BR>[Address Reference Count : 17]<UL><LI> touchgfxconfiguration.o(.constdata__ZTVN8touchgfx12FontProviderE)
<LI> touchgfxconfiguration.o(.constdata__ZTVN8touchgfx15TouchControllerE)
<LI> frontendapplicationbase.o(.constdata__ZTVN8touchgfx15GenericCallbackIvvvEE)
<LI> informationdemoviewbase.o(.constdata__ZTVN8touchgfx15GenericCallbackIRKNS_23AbstractButtonContainerEvvEE)
<LI> splashscreenviewbase.o(.constdata__ZTVN8touchgfx15GenericCallbackIRKNS_12FadeAnimatorINS_5ImageEEEvvEE)
<LI> texts.o(.constdata__ZTVN8touchgfx4FontE)
<LI> cookingviewbase.o(.constdata__ZTVN8touchgfx6WidgetE)
<LI> cookingviewbase.o(.constdata__ZTVN8touchgfx15GenericCallbackIRKNS_14AbstractButtonEvvEE)
<LI> cookingviewbase.o(.constdata__ZTVN8touchgfx15AbstractPainterE)
<LI> cookingviewbase.o(.constdata__ZTVN8touchgfx21AbstractPainterRGB565E)
<LI> abstractbutton.o(.constdata__ZTVN8touchgfx14AbstractButtonE)
<LI> abstractpartition.o(.constdata__ZTVN8touchgfx17AbstractPartitionE)
<LI> canvaswidget.o(.constdata__ZTVN8touchgfx12CanvasWidgetE)
<LI> constfont.o(.constdata__ZTVN8touchgfx9ConstFontE)
<LI> dma.o(.constdata__ZTVN8touchgfx13DMA_InterfaceE)
<LI> drawable.o(.constdata__ZTVN8touchgfx8DrawableE)
<LI> hal.o(.constdata__ZTVN8touchgfx3HALE)
</UL>
<P><STRONG><a name="[2a6]"></a>main</STRONG> (Thumb, 352 bytes, Stack size 0 bytes, main_1.o(i.main))
<BR><BR>[Stack]<UL><LI>Max Depth = 360 + Unknown Stack Size
<LI>Call Chain = main &rArr; MX_LTDC_Init &rArr; HAL_LTDC_Init &rArr; HAL_LTDC_MspInit &rArr; HAL_NVIC_SetPriority &rArr; __NVIC_SetPriority
</UL>
<BR>[Calls]<UL><LI><a href="#[4bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osKernelStart
<LI><a href="#[4be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osKernelInitialize
<LI><a href="#[4bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_TouchGFX_PreOSInit
<LI><a href="#[319]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_TouchGFX_Init
<LI><a href="#[318]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_LTDC_Init
<LI><a href="#[316]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_GPIO_Init
<LI><a href="#[314]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_FREERTOS_Init
<LI><a href="#[312]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_FMC_Init
<LI><a href="#[310]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_DMA2D_Init
<LI><a href="#[30f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_CRC_Init
<LI><a href="#[2dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_Init
<LI><a href="#[317]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_WritePin
<LI><a href="#[31f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemClock_Config
</UL>
<BR>[Called By]<UL><LI><a href="#[2a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry_main
</UL>

<P><STRONG><a name="[31c]"></a>osDelay</STRONG> (Thumb, 30 bytes, Stack size 16 bytes, cmsis_os2.o(i.osDelay))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = osDelay &rArr; vTaskDelay &rArr; xTaskResumeAll &rArr; xTaskIncrementTick
</UL>
<BR>[Calls]<UL><LI><a href="#[4c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__get_IPSR
<LI><a href="#[4c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskDelay
</UL>
<BR>[Called By]<UL><LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;StartDefaultTask
<LI><a href="#[b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::OSWrappers::taskDelay(unsigned short)
</UL>

<P><STRONG><a name="[4be]"></a>osKernelInitialize</STRONG> (Thumb, 38 bytes, Stack size 8 bytes, cmsis_os2.o(i.osKernelInitialize))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = osKernelInitialize
</UL>
<BR>[Calls]<UL><LI><a href="#[4c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__get_IPSR
</UL>
<BR>[Called By]<UL><LI><a href="#[2a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[4bf]"></a>osKernelStart</STRONG> (Thumb, 82 bytes, Stack size 16 bytes, cmsis_os2.o(i.osKernelStart))
<BR><BR>[Stack]<UL><LI>Max Depth = 176 + Unknown Stack Size
<LI>Call Chain = osKernelStart &rArr; vTaskStartScheduler &rArr; xTimerCreateTimerTask &rArr; prvCheckForValidListAndQueue &rArr; xQueueGenericCreateStatic &rArr; prvInitialiseNewQueue &rArr; xQueueGenericReset &rArr; xTaskRemoveFromEventList
</UL>
<BR>[Calls]<UL><LI><a href="#[4c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__get_IPSR
<LI><a href="#[4c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskStartScheduler
</UL>
<BR>[Called By]<UL><LI><a href="#[2a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[3c5]"></a>osMessageQueueGet</STRONG> (Thumb, 124 bytes, Stack size 32 bytes, cmsis_os2.o(i.osMessageQueueGet))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = osMessageQueueGet &rArr; xQueueReceive &rArr; vTaskPlaceOnEventList &rArr; prvAddCurrentTaskToDelayedList &rArr; vListInsert
</UL>
<BR>[Calls]<UL><LI><a href="#[4c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueReceiveFromISR
<LI><a href="#[4c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueReceive
<LI><a href="#[4c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__get_IPSR
</UL>
<BR>[Called By]<UL><LI><a href="#[3c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::OSWrappers::waitForVSync()
</UL>

<P><STRONG><a name="[3c2]"></a>osMessageQueueNew</STRONG> (Thumb, 154 bytes, Stack size 32 bytes, cmsis_os2.o(i.osMessageQueueNew))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = osMessageQueueNew &rArr; xQueueGenericCreate &rArr; pvPortMalloc &rArr; xTaskResumeAll &rArr; xTaskIncrementTick
</UL>
<BR>[Calls]<UL><LI><a href="#[4c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericCreateStatic
<LI><a href="#[4c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericCreate
<LI><a href="#[4c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vQueueAddToRegistry
<LI><a href="#[4c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__get_IPSR
</UL>
<BR>[Called By]<UL><LI><a href="#[3c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::OSWrappers::initialize()
</UL>

<P><STRONG><a name="[3c3]"></a>osMessageQueuePut</STRONG> (Thumb, 128 bytes, Stack size 32 bytes, cmsis_os2.o(i.osMessageQueuePut))
<BR><BR>[Stack]<UL><LI>Max Depth = 136<LI>Call Chain = osMessageQueuePut &rArr; xQueueGenericSend &rArr; vTaskPlaceOnEventList &rArr; prvAddCurrentTaskToDelayedList &rArr; vListInsert
</UL>
<BR>[Calls]<UL><LI><a href="#[4c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericSendFromISR
<LI><a href="#[4c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericSend
<LI><a href="#[4c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__get_IPSR
</UL>
<BR>[Called By]<UL><LI><a href="#[2ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::OSWrappers::signalVSync()
</UL>

<P><STRONG><a name="[3c9]"></a>osSemaphoreAcquire</STRONG> (Thumb, 104 bytes, Stack size 24 bytes, cmsis_os2.o(i.osSemaphoreAcquire))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = osSemaphoreAcquire &rArr; xQueueSemaphoreTake &rArr; vTaskPlaceOnEventList &rArr; prvAddCurrentTaskToDelayedList &rArr; vListInsert
</UL>
<BR>[Calls]<UL><LI><a href="#[4ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueSemaphoreTake
<LI><a href="#[4c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueReceiveFromISR
<LI><a href="#[4c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__get_IPSR
</UL>
<BR>[Called By]<UL><LI><a href="#[3ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::OSWrappers::tryTakeFrameBufferSemaphore()
<LI><a href="#[3c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::OSWrappers::takeFrameBufferSemaphore()
</UL>

<P><STRONG><a name="[3c1]"></a>osSemaphoreNew</STRONG> (Thumb, 204 bytes, Stack size 32 bytes, cmsis_os2.o(i.osSemaphoreNew))
<BR><BR>[Stack]<UL><LI>Max Depth = 144<LI>Call Chain = osSemaphoreNew &rArr; xQueueCreateCountingSemaphoreStatic &rArr; xQueueGenericCreateStatic &rArr; prvInitialiseNewQueue &rArr; xQueueGenericReset &rArr; xTaskRemoveFromEventList
</UL>
<BR>[Calls]<UL><LI><a href="#[4c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericSend
<LI><a href="#[4c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericCreateStatic
<LI><a href="#[4c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericCreate
<LI><a href="#[4cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueCreateCountingSemaphoreStatic
<LI><a href="#[4cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueCreateCountingSemaphore
<LI><a href="#[4cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vQueueDelete
<LI><a href="#[4c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vQueueAddToRegistry
<LI><a href="#[4c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__get_IPSR
</UL>
<BR>[Called By]<UL><LI><a href="#[3c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::OSWrappers::initialize()
</UL>

<P><STRONG><a name="[3c7]"></a>osSemaphoreRelease</STRONG> (Thumb, 88 bytes, Stack size 24 bytes, cmsis_os2.o(i.osSemaphoreRelease))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = osSemaphoreRelease &rArr; xQueueGenericSend &rArr; vTaskPlaceOnEventList &rArr; prvAddCurrentTaskToDelayedList &rArr; vListInsert
</UL>
<BR>[Calls]<UL><LI><a href="#[4ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGiveFromISR
<LI><a href="#[4c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericSend
<LI><a href="#[4c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__get_IPSR
</UL>
<BR>[Called By]<UL><LI><a href="#[3c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::OSWrappers::giveFrameBufferSemaphore()
</UL>

<P><STRONG><a name="[315]"></a>osThreadNew</STRONG> (Thumb, 184 bytes, Stack size 48 bytes, cmsis_os2.o(i.osThreadNew))
<BR><BR>[Stack]<UL><LI>Max Depth = 184 + Unknown Stack Size
<LI>Call Chain = osThreadNew &rArr; xTaskCreate &rArr; pvPortMalloc &rArr; xTaskResumeAll &rArr; xTaskIncrementTick
</UL>
<BR>[Calls]<UL><LI><a href="#[4c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__get_IPSR
<LI><a href="#[4cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskCreateStatic
<LI><a href="#[4d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskCreate
</UL>
<BR>[Called By]<UL><LI><a href="#[314]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_FREERTOS_Init
</UL>

<P><STRONG><a name="[4f7]"></a>pvPortMalloc</STRONG> (Thumb, 306 bytes, Stack size 24 bytes, heap_4.o(i.pvPortMalloc))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = pvPortMalloc &rArr; xTaskResumeAll &rArr; xTaskIncrementTick
</UL>
<BR>[Calls]<UL><LI><a href="#[4ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskResumeAll
<LI><a href="#[4ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskSuspendAll
<LI><a href="#[4f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvInsertBlockIntoFreeList
<LI><a href="#[4f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvHeapInit
</UL>
<BR>[Called By]<UL><LI><a href="#[4c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericCreate
<LI><a href="#[4d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskCreate
</UL>

<P><STRONG><a name="[50c]"></a>pvTaskIncrementMutexHeldCount</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, tasks.o(i.pvTaskIncrementMutexHeldCount))
<BR><BR>[Called By]<UL><LI><a href="#[4ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueSemaphoreTake
</UL>

<P><STRONG><a name="[4e5]"></a>pxPortInitialiseStack</STRONG> (Thumb, 38 bytes, Stack size 0 bytes, port.o(i.pxPortInitialiseStack))
<BR><BR>[Called By]<UL><LI><a href="#[4e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvInitialiseNewTask
</UL>

<P><STRONG><a name="[31a]"></a>touchgfx_components_init</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, touchgfxconfiguration.o(i.touchgfx_components_init))
<BR><BR>[Called By]<UL><LI><a href="#[319]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_TouchGFX_Init
</UL>

<P><STRONG><a name="[31b]"></a>touchgfx_init</STRONG> (Thumb, 102 bytes, Stack size 24 bytes, touchgfxconfiguration.o(i.touchgfx_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 208 + Unknown Stack Size
<LI>Call Chain = touchgfx_init &rArr; TouchGFXHAL::initialize() &rArr; TouchGFXGeneratedHAL::initialize() &rArr; touchgfx::HAL::initialize() &rArr; touchgfx::OSWrappers::initialize() &rArr; osSemaphoreNew &rArr; xQueueCreateCountingSemaphoreStatic &rArr; xQueueGenericCreateStatic &rArr; prvInitialiseNewQueue &rArr; xQueueGenericReset &rArr; xTaskRemoveFromEventList
</UL>
<BR>[Calls]<UL><LI><a href="#[102]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TouchGFXHAL::initialize()
<LI><a href="#[43c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Bitmap::registerBitmapDatabase(const touchgfx::Bitmap::BitmapData*, unsigned short, unsigned short*, unsigned, unsigned)
<LI><a href="#[35d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Texts::setLanguage(unsigned short)
<LI><a href="#[4fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::FontManager::setFontProvider(touchgfx::FontProvider*)
<LI><a href="#[4fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BitmapDatabase::getInstanceSize()
<LI><a href="#[4fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BitmapDatabase::getInstance()
<LI><a href="#[34a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FrontendHeap::FrontendHeap()
<LI><a href="#[322]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxa_guard_acquire
<LI><a href="#[2af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_atexit
</UL>
<BR>[Called By]<UL><LI><a href="#[319]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_TouchGFX_Init
</UL>

<P><STRONG><a name="[320]"></a>touchgfx_taskEntry</STRONG> (Thumb, 10 bytes, Stack size 8 bytes, touchgfxconfiguration.o(i.touchgfx_taskEntry))
<BR><BR>[Stack]<UL><LI>Max Depth = 144<LI>Call Chain = touchgfx_taskEntry &rArr; touchgfx::HAL::taskEntry() &rArr; touchgfx::OSWrappers::waitForVSync() &rArr; osMessageQueueGet &rArr; xQueueReceive &rArr; vTaskPlaceOnEventList &rArr; prvAddCurrentTaskToDelayedList &rArr; vListInsert
</UL>
<BR>[Calls]<UL><LI><a href="#[103]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::HAL::taskEntry()
</UL>
<BR>[Called By]<UL><LI><a href="#[af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TouchGFX_Task
</UL>

<P><STRONG><a name="[4d2]"></a>uxListRemove</STRONG> (Thumb, 40 bytes, Stack size 0 bytes, list.o(i.uxListRemove))
<BR><BR>[Called By]<UL><LI><a href="#[4f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskRemoveFromEventList
<LI><a href="#[50d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskPriorityInherit
<LI><a href="#[4df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskPriorityDisinherit
<LI><a href="#[502]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskPriorityDisinheritAfterTimeout
<LI><a href="#[4ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskResumeAll
<LI><a href="#[4f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvSwitchTimerLists
<LI><a href="#[4eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvProcessReceivedCommands
<LI><a href="#[4e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvProcessExpiredTimer
<LI><a href="#[509]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskIncrementTick
<LI><a href="#[4db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvCheckTasksWaitingTermination
<LI><a href="#[4d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvAddCurrentTaskToDelayedList
</UL>

<P><STRONG><a name="[503]"></a>vApplicationGetIdleTaskMemory</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, cmsis_os2.o(i.vApplicationGetIdleTaskMemory))
<BR><BR>[Called By]<UL><LI><a href="#[4c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskStartScheduler
</UL>

<P><STRONG><a name="[510]"></a>vApplicationGetTimerTaskMemory</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, cmsis_os2.o(i.vApplicationGetTimerTaskMemory))
<BR><BR>[Called By]<UL><LI><a href="#[504]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTimerCreateTimerTask
</UL>

<P><STRONG><a name="[4da]"></a>vListInitialise</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, list.o(i.vListInitialise))
<BR><BR>[Called By]<UL><LI><a href="#[4e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericReset
<LI><a href="#[4d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvCheckForValidListAndQueue
<LI><a href="#[4d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvInitialiseTaskLists
</UL>

<P><STRONG><a name="[4e4]"></a>vListInitialiseItem</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, list.o(i.vListInitialiseItem))
<BR><BR>[Called By]<UL><LI><a href="#[4e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvInitialiseNewTask
</UL>

<P><STRONG><a name="[4d4]"></a>vListInsert</STRONG> (Thumb, 52 bytes, Stack size 8 bytes, list.o(i.vListInsert))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = vListInsert
</UL>
<BR>[Called By]<UL><LI><a href="#[501]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskPlaceOnEventList
<LI><a href="#[4f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvSwitchTimerLists
<LI><a href="#[4e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvInsertTimerInActiveList
<LI><a href="#[4d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvAddCurrentTaskToDelayedList
</UL>

<P><STRONG><a name="[4d3]"></a>vListInsertEnd</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, list.o(i.vListInsertEnd))
<BR><BR>[Called By]<UL><LI><a href="#[4f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskRemoveFromEventList
<LI><a href="#[50d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskPriorityInherit
<LI><a href="#[4df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskPriorityDisinherit
<LI><a href="#[502]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskPriorityDisinheritAfterTimeout
<LI><a href="#[500]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskPlaceOnEventListRestricted
<LI><a href="#[4ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskResumeAll
<LI><a href="#[509]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskIncrementTick
<LI><a href="#[4d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvAddNewTaskToReadyList
<LI><a href="#[4d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvAddCurrentTaskToDelayedList
</UL>

<P><STRONG><a name="[4d6]"></a>vPortEnterCritical</STRONG> (Thumb, 76 bytes, Stack size 0 bytes, port.o(i.vPortEnterCritical))
<BR><BR>[Called By]<UL><LI><a href="#[50b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskCheckForTimeOut
<LI><a href="#[4ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueSemaphoreTake
<LI><a href="#[4c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueReceive
<LI><a href="#[4c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericSend
<LI><a href="#[4e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericReset
<LI><a href="#[4f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vQueueWaitForMessageRestricted
<LI><a href="#[4f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvUnlockQueue
<LI><a href="#[4e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvIsQueueFull
<LI><a href="#[4e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvIsQueueEmpty
<LI><a href="#[4ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskResumeAll
<LI><a href="#[4d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvCheckForValidListAndQueue
<LI><a href="#[4db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvCheckTasksWaitingTermination
<LI><a href="#[4d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvAddNewTaskToReadyList
</UL>

<P><STRONG><a name="[4d8]"></a>vPortExitCritical</STRONG> (Thumb, 56 bytes, Stack size 0 bytes, port.o(i.vPortExitCritical))
<BR><BR>[Called By]<UL><LI><a href="#[50b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskCheckForTimeOut
<LI><a href="#[4ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueSemaphoreTake
<LI><a href="#[4c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueReceive
<LI><a href="#[4c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericSend
<LI><a href="#[4e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericReset
<LI><a href="#[4f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vQueueWaitForMessageRestricted
<LI><a href="#[4f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvUnlockQueue
<LI><a href="#[4e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvIsQueueFull
<LI><a href="#[4e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvIsQueueEmpty
<LI><a href="#[4ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskResumeAll
<LI><a href="#[4d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvCheckForValidListAndQueue
<LI><a href="#[4db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvCheckTasksWaitingTermination
<LI><a href="#[4d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvAddNewTaskToReadyList
</UL>

<P><STRONG><a name="[4e0]"></a>vPortFree</STRONG> (Thumb, 150 bytes, Stack size 16 bytes, heap_4.o(i.vPortFree))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = vPortFree &rArr; xTaskResumeAll &rArr; xTaskIncrementTick
</UL>
<BR>[Calls]<UL><LI><a href="#[4ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskResumeAll
<LI><a href="#[4ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskSuspendAll
<LI><a href="#[4f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvInsertBlockIntoFreeList
</UL>
<BR>[Called By]<UL><LI><a href="#[4cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vQueueDelete
<LI><a href="#[4eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvProcessReceivedCommands
<LI><a href="#[4d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskCreate
<LI><a href="#[4dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvDeleteTCB
</UL>

<P><STRONG><a name="[506]"></a>vPortSetupTimerInterrupt</STRONG> (Thumb, 36 bytes, Stack size 0 bytes, port.o(i.vPortSetupTimerInterrupt))
<BR><BR>[Called By]<UL><LI><a href="#[505]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xPortStartScheduler
</UL>

<P><STRONG><a name="[4fd]"></a>vPortValidateInterruptPriority</STRONG> (Thumb, 106 bytes, Stack size 16 bytes, port.o(i.vPortValidateInterruptPriority))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = vPortValidateInterruptPriority
</UL>
<BR>[Calls]<UL><LI><a href="#[4fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortGetIPSR
</UL>
<BR>[Called By]<UL><LI><a href="#[4c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueReceiveFromISR
<LI><a href="#[4ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGiveFromISR
<LI><a href="#[4c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericSendFromISR
</UL>

<P><STRONG><a name="[4c7]"></a>vQueueAddToRegistry</STRONG> (Thumb, 38 bytes, Stack size 0 bytes, queue.o(i.vQueueAddToRegistry))
<BR><BR>[Called By]<UL><LI><a href="#[4d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvCheckForValidListAndQueue
<LI><a href="#[3c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osSemaphoreNew
<LI><a href="#[3c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osMessageQueueNew
</UL>

<P><STRONG><a name="[4cb]"></a>vQueueDelete</STRONG> (Thumb, 50 bytes, Stack size 16 bytes, queue.o(i.vQueueDelete))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = vQueueDelete &rArr; vPortFree &rArr; xTaskResumeAll &rArr; xTaskIncrementTick
</UL>
<BR>[Calls]<UL><LI><a href="#[4ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vQueueUnregisterQueue
<LI><a href="#[4e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortFree
</UL>
<BR>[Called By]<UL><LI><a href="#[3c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osSemaphoreNew
</UL>

<P><STRONG><a name="[4ff]"></a>vQueueUnregisterQueue</STRONG> (Thumb, 44 bytes, Stack size 0 bytes, queue.o(i.vQueueUnregisterQueue))
<BR><BR>[Called By]<UL><LI><a href="#[4cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vQueueDelete
</UL>

<P><STRONG><a name="[4f0]"></a>vQueueWaitForMessageRestricted</STRONG> (Thumb, 74 bytes, Stack size 24 bytes, queue.o(i.vQueueWaitForMessageRestricted))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = vQueueWaitForMessageRestricted &rArr; vTaskPlaceOnEventListRestricted &rArr; prvAddCurrentTaskToDelayedList &rArr; vListInsert
</UL>
<BR>[Calls]<UL><LI><a href="#[500]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskPlaceOnEventListRestricted
<LI><a href="#[4f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvUnlockQueue
<LI><a href="#[4d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortExitCritical
<LI><a href="#[4d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortEnterCritical
</UL>
<BR>[Called By]<UL><LI><a href="#[4ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvProcessTimerOrBlockTask
</UL>

<P><STRONG><a name="[4c1]"></a>vTaskDelay</STRONG> (Thumb, 82 bytes, Stack size 16 bytes, tasks.o(i.vTaskDelay))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = vTaskDelay &rArr; xTaskResumeAll &rArr; xTaskIncrementTick
</UL>
<BR>[Calls]<UL><LI><a href="#[4ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskResumeAll
<LI><a href="#[4ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskSuspendAll
<LI><a href="#[4d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvAddCurrentTaskToDelayedList
</UL>
<BR>[Called By]<UL><LI><a href="#[31c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osDelay
</UL>

<P><STRONG><a name="[50a]"></a>vTaskInternalSetTimeOutState</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, tasks.o(i.vTaskInternalSetTimeOutState))
<BR><BR>[Called By]<UL><LI><a href="#[50b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskCheckForTimeOut
<LI><a href="#[4ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueSemaphoreTake
<LI><a href="#[4c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueReceive
<LI><a href="#[4c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericSend
</UL>

<P><STRONG><a name="[4f6]"></a>vTaskMissedYield</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, tasks.o(i.vTaskMissedYield))
<BR><BR>[Called By]<UL><LI><a href="#[4f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvUnlockQueue
</UL>

<P><STRONG><a name="[501]"></a>vTaskPlaceOnEventList</STRONG> (Thumb, 52 bytes, Stack size 16 bytes, tasks.o(i.vTaskPlaceOnEventList))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = vTaskPlaceOnEventList &rArr; prvAddCurrentTaskToDelayedList &rArr; vListInsert
</UL>
<BR>[Calls]<UL><LI><a href="#[4d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vListInsert
<LI><a href="#[4d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvAddCurrentTaskToDelayedList
</UL>
<BR>[Called By]<UL><LI><a href="#[4ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueSemaphoreTake
<LI><a href="#[4c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueReceive
<LI><a href="#[4c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericSend
</UL>

<P><STRONG><a name="[500]"></a>vTaskPlaceOnEventListRestricted</STRONG> (Thumb, 60 bytes, Stack size 16 bytes, tasks.o(i.vTaskPlaceOnEventListRestricted))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = vTaskPlaceOnEventListRestricted &rArr; prvAddCurrentTaskToDelayedList &rArr; vListInsert
</UL>
<BR>[Calls]<UL><LI><a href="#[4d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vListInsertEnd
<LI><a href="#[4d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvAddCurrentTaskToDelayedList
</UL>
<BR>[Called By]<UL><LI><a href="#[4f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vQueueWaitForMessageRestricted
</UL>

<P><STRONG><a name="[502]"></a>vTaskPriorityDisinheritAfterTimeout</STRONG> (Thumb, 194 bytes, Stack size 32 bytes, tasks.o(i.vTaskPriorityDisinheritAfterTimeout))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = vTaskPriorityDisinheritAfterTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[4d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vListInsertEnd
<LI><a href="#[4d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uxListRemove
</UL>
<BR>[Called By]<UL><LI><a href="#[4ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueSemaphoreTake
</UL>

<P><STRONG><a name="[4c2]"></a>vTaskStartScheduler</STRONG> (Thumb, 156 bytes, Stack size 32 bytes, tasks.o(i.vTaskStartScheduler))
<BR><BR>[Stack]<UL><LI>Max Depth = 160 + Unknown Stack Size
<LI>Call Chain = vTaskStartScheduler &rArr; xTimerCreateTimerTask &rArr; prvCheckForValidListAndQueue &rArr; xQueueGenericCreateStatic &rArr; prvInitialiseNewQueue &rArr; xQueueGenericReset &rArr; xTaskRemoveFromEventList
</UL>
<BR>[Calls]<UL><LI><a href="#[504]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTimerCreateTimerTask
<LI><a href="#[505]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xPortStartScheduler
<LI><a href="#[503]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vApplicationGetIdleTaskMemory
<LI><a href="#[4cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskCreateStatic
</UL>
<BR>[Called By]<UL><LI><a href="#[4bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osKernelStart
</UL>

<P><STRONG><a name="[4ee]"></a>vTaskSuspendAll</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, tasks.o(i.vTaskSuspendAll))
<BR><BR>[Called By]<UL><LI><a href="#[4ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueSemaphoreTake
<LI><a href="#[4c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueReceive
<LI><a href="#[4c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericSend
<LI><a href="#[4e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortFree
<LI><a href="#[4f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pvPortMalloc
<LI><a href="#[4ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvProcessTimerOrBlockTask
<LI><a href="#[4c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskDelay
</UL>

<P><STRONG><a name="[2ac]"></a>vTaskSwitchContext</STRONG> (Thumb, 122 bytes, Stack size 0 bytes, tasks.o(i.vTaskSwitchContext))
<BR><BR>[Called By]<UL><LI><a href="#[18]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PendSV_Handler
</UL>

<P><STRONG><a name="[505]"></a>xPortStartScheduler</STRONG> (Thumb, 330 bytes, Stack size 16 bytes, port.o(i.xPortStartScheduler))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = xPortStartScheduler
</UL>
<BR>[Calls]<UL><LI><a href="#[506]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortSetupTimerInterrupt
<LI><a href="#[507]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__asm___6_port_c_39a90d8d__prvEnableVFP
<LI><a href="#[508]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__asm___6_port_c_39a90d8d__prvStartFirstTask
</UL>
<BR>[Called By]<UL><LI><a href="#[4c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskStartScheduler
</UL>

<P><STRONG><a name="[31e]"></a>xPortSysTickHandler</STRONG> (Thumb, 46 bytes, Stack size 8 bytes, port.o(i.xPortSysTickHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = xPortSysTickHandler &rArr; xTaskIncrementTick
</UL>
<BR>[Calls]<UL><LI><a href="#[509]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskIncrementTick
</UL>
<BR>[Called By]<UL><LI><a href="#[19]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysTick_Handler
</UL>

<P><STRONG><a name="[4cd]"></a>xQueueCreateCountingSemaphore</STRONG> (Thumb, 92 bytes, Stack size 16 bytes, queue.o(i.xQueueCreateCountingSemaphore))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = xQueueCreateCountingSemaphore &rArr; xQueueGenericCreate &rArr; pvPortMalloc &rArr; xTaskResumeAll &rArr; xTaskIncrementTick
</UL>
<BR>[Calls]<UL><LI><a href="#[4c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericCreate
</UL>
<BR>[Called By]<UL><LI><a href="#[3c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osSemaphoreNew
</UL>

<P><STRONG><a name="[4cc]"></a>xQueueCreateCountingSemaphoreStatic</STRONG> (Thumb, 100 bytes, Stack size 24 bytes, queue.o(i.xQueueCreateCountingSemaphoreStatic))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = xQueueCreateCountingSemaphoreStatic &rArr; xQueueGenericCreateStatic &rArr; prvInitialiseNewQueue &rArr; xQueueGenericReset &rArr; xTaskRemoveFromEventList
</UL>
<BR>[Calls]<UL><LI><a href="#[4c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericCreateStatic
</UL>
<BR>[Called By]<UL><LI><a href="#[3c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osSemaphoreNew
</UL>

<P><STRONG><a name="[4c6]"></a>xQueueGenericCreate</STRONG> (Thumb, 90 bytes, Stack size 32 bytes, queue.o(i.xQueueGenericCreate))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = xQueueGenericCreate &rArr; pvPortMalloc &rArr; xTaskResumeAll &rArr; xTaskIncrementTick
</UL>
<BR>[Calls]<UL><LI><a href="#[4e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvInitialiseNewQueue
<LI><a href="#[4f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pvPortMalloc
</UL>
<BR>[Called By]<UL><LI><a href="#[4cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueCreateCountingSemaphore
<LI><a href="#[3c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osSemaphoreNew
<LI><a href="#[3c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osMessageQueueNew
</UL>

<P><STRONG><a name="[4c5]"></a>xQueueGenericCreateStatic</STRONG> (Thumb, 224 bytes, Stack size 32 bytes, queue.o(i.xQueueGenericCreateStatic))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = xQueueGenericCreateStatic &rArr; prvInitialiseNewQueue &rArr; xQueueGenericReset &rArr; xTaskRemoveFromEventList
</UL>
<BR>[Calls]<UL><LI><a href="#[4e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvInitialiseNewQueue
</UL>
<BR>[Called By]<UL><LI><a href="#[4cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueCreateCountingSemaphoreStatic
<LI><a href="#[4d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvCheckForValidListAndQueue
<LI><a href="#[3c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osSemaphoreNew
<LI><a href="#[3c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osMessageQueueNew
</UL>

<P><STRONG><a name="[4e2]"></a>xQueueGenericReset</STRONG> (Thumb, 146 bytes, Stack size 16 bytes, queue.o(i.xQueueGenericReset))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = xQueueGenericReset &rArr; xTaskRemoveFromEventList
</UL>
<BR>[Calls]<UL><LI><a href="#[4f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskRemoveFromEventList
<LI><a href="#[4d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortExitCritical
<LI><a href="#[4d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortEnterCritical
<LI><a href="#[4da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vListInitialise
</UL>
<BR>[Called By]<UL><LI><a href="#[4e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvInitialiseNewQueue
</UL>

<P><STRONG><a name="[4c9]"></a>xQueueGenericSend</STRONG> (Thumb, 420 bytes, Stack size 56 bytes, queue.o(i.xQueueGenericSend))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = xQueueGenericSend &rArr; vTaskPlaceOnEventList &rArr; prvAddCurrentTaskToDelayedList &rArr; vListInsert
</UL>
<BR>[Calls]<UL><LI><a href="#[4f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskRemoveFromEventList
<LI><a href="#[50b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskCheckForTimeOut
<LI><a href="#[501]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskPlaceOnEventList
<LI><a href="#[50a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskInternalSetTimeOutState
<LI><a href="#[4f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvUnlockQueue
<LI><a href="#[4e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvIsQueueFull
<LI><a href="#[4de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvCopyDataToQueue
<LI><a href="#[4ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskResumeAll
<LI><a href="#[31d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskGetSchedulerState
<LI><a href="#[4ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskSuspendAll
<LI><a href="#[4d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortExitCritical
<LI><a href="#[4d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortEnterCritical
</UL>
<BR>[Called By]<UL><LI><a href="#[4ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTimerGenericCommand
<LI><a href="#[3c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osSemaphoreRelease
<LI><a href="#[3c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osSemaphoreNew
<LI><a href="#[3c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osMessageQueuePut
</UL>

<P><STRONG><a name="[4c8]"></a>xQueueGenericSendFromISR</STRONG> (Thumb, 252 bytes, Stack size 40 bytes, queue.o(i.xQueueGenericSendFromISR))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = xQueueGenericSendFromISR &rArr; prvCopyDataToQueue &rArr; xTaskPriorityDisinherit
</UL>
<BR>[Calls]<UL><LI><a href="#[4f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskRemoveFromEventList
<LI><a href="#[4fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortValidateInterruptPriority
<LI><a href="#[4de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvCopyDataToQueue
</UL>
<BR>[Called By]<UL><LI><a href="#[4ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTimerGenericCommand
<LI><a href="#[3c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osMessageQueuePut
</UL>

<P><STRONG><a name="[4ce]"></a>xQueueGiveFromISR</STRONG> (Thumb, 224 bytes, Stack size 32 bytes, queue.o(i.xQueueGiveFromISR))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = xQueueGiveFromISR &rArr; xTaskRemoveFromEventList
</UL>
<BR>[Calls]<UL><LI><a href="#[4f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskRemoveFromEventList
<LI><a href="#[4fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortValidateInterruptPriority
</UL>
<BR>[Called By]<UL><LI><a href="#[3c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osSemaphoreRelease
</UL>

<P><STRONG><a name="[4c4]"></a>xQueueReceive</STRONG> (Thumb, 356 bytes, Stack size 48 bytes, queue.o(i.xQueueReceive))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = xQueueReceive &rArr; vTaskPlaceOnEventList &rArr; prvAddCurrentTaskToDelayedList &rArr; vListInsert
</UL>
<BR>[Calls]<UL><LI><a href="#[4f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskRemoveFromEventList
<LI><a href="#[50b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskCheckForTimeOut
<LI><a href="#[501]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskPlaceOnEventList
<LI><a href="#[50a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskInternalSetTimeOutState
<LI><a href="#[4f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvUnlockQueue
<LI><a href="#[4e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvIsQueueEmpty
<LI><a href="#[4dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvCopyDataFromQueue
<LI><a href="#[4ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskResumeAll
<LI><a href="#[31d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskGetSchedulerState
<LI><a href="#[4ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskSuspendAll
<LI><a href="#[4d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortExitCritical
<LI><a href="#[4d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortEnterCritical
</UL>
<BR>[Called By]<UL><LI><a href="#[4eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvProcessReceivedCommands
<LI><a href="#[3c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osMessageQueueGet
</UL>

<P><STRONG><a name="[4c3]"></a>xQueueReceiveFromISR</STRONG> (Thumb, 202 bytes, Stack size 40 bytes, queue.o(i.xQueueReceiveFromISR))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = xQueueReceiveFromISR &rArr; xTaskRemoveFromEventList
</UL>
<BR>[Calls]<UL><LI><a href="#[4f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskRemoveFromEventList
<LI><a href="#[4fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortValidateInterruptPriority
<LI><a href="#[4dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvCopyDataFromQueue
</UL>
<BR>[Called By]<UL><LI><a href="#[3c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osSemaphoreAcquire
<LI><a href="#[3c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osMessageQueueGet
</UL>

<P><STRONG><a name="[4ca]"></a>xQueueSemaphoreTake</STRONG> (Thumb, 434 bytes, Stack size 40 bytes, queue.o(i.xQueueSemaphoreTake))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = xQueueSemaphoreTake &rArr; vTaskPlaceOnEventList &rArr; prvAddCurrentTaskToDelayedList &rArr; vListInsert
</UL>
<BR>[Calls]<UL><LI><a href="#[4f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskRemoveFromEventList
<LI><a href="#[50d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskPriorityInherit
<LI><a href="#[50b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskCheckForTimeOut
<LI><a href="#[502]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskPriorityDisinheritAfterTimeout
<LI><a href="#[501]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskPlaceOnEventList
<LI><a href="#[50a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskInternalSetTimeOutState
<LI><a href="#[50c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pvTaskIncrementMutexHeldCount
<LI><a href="#[4f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvUnlockQueue
<LI><a href="#[4e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvIsQueueEmpty
<LI><a href="#[50e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvGetDisinheritPriorityAfterTimeout
<LI><a href="#[4ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskResumeAll
<LI><a href="#[31d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskGetSchedulerState
<LI><a href="#[4ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskSuspendAll
<LI><a href="#[4d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortExitCritical
<LI><a href="#[4d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortEnterCritical
</UL>
<BR>[Called By]<UL><LI><a href="#[3c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osSemaphoreAcquire
</UL>

<P><STRONG><a name="[50b]"></a>xTaskCheckForTimeOut</STRONG> (Thumb, 132 bytes, Stack size 16 bytes, tasks.o(i.xTaskCheckForTimeOut))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = xTaskCheckForTimeOut
</UL>
<BR>[Calls]<UL><LI><a href="#[50a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskInternalSetTimeOutState
<LI><a href="#[4d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortExitCritical
<LI><a href="#[4d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortEnterCritical
</UL>
<BR>[Called By]<UL><LI><a href="#[4ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueSemaphoreTake
<LI><a href="#[4c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueReceive
<LI><a href="#[4c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericSend
</UL>

<P><STRONG><a name="[4d0]"></a>xTaskCreate</STRONG> (Thumb, 100 bytes, Stack size 72 bytes, tasks.o(i.xTaskCreate))
<BR><BR>[Stack]<UL><LI>Max Depth = 136 + Unknown Stack Size
<LI>Call Chain = xTaskCreate &rArr; pvPortMalloc &rArr; xTaskResumeAll &rArr; xTaskIncrementTick
</UL>
<BR>[Calls]<UL><LI><a href="#[4e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortFree
<LI><a href="#[4f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pvPortMalloc
<LI><a href="#[4e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvInitialiseNewTask
<LI><a href="#[4d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvAddNewTaskToReadyList
</UL>
<BR>[Called By]<UL><LI><a href="#[315]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osThreadNew
</UL>

<P><STRONG><a name="[4cf]"></a>xTaskCreateStatic</STRONG> (Thumb, 186 bytes, Stack size 56 bytes, tasks.o(i.xTaskCreateStatic))
<BR><BR>[Stack]<UL><LI>Max Depth = 96 + Unknown Stack Size
<LI>Call Chain = xTaskCreateStatic &rArr; prvInitialiseNewTask
</UL>
<BR>[Calls]<UL><LI><a href="#[4e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvInitialiseNewTask
<LI><a href="#[4d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvAddNewTaskToReadyList
</UL>
<BR>[Called By]<UL><LI><a href="#[315]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osThreadNew
<LI><a href="#[504]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTimerCreateTimerTask
<LI><a href="#[4c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskStartScheduler
</UL>

<P><STRONG><a name="[31d]"></a>xTaskGetSchedulerState</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, tasks.o(i.xTaskGetSchedulerState))
<BR><BR>[Called By]<UL><LI><a href="#[4ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueSemaphoreTake
<LI><a href="#[4c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueReceive
<LI><a href="#[4c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericSend
<LI><a href="#[4ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTimerGenericCommand
<LI><a href="#[19]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysTick_Handler
</UL>

<P><STRONG><a name="[4f1]"></a>xTaskGetTickCount</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, tasks.o(i.xTaskGetTickCount))
<BR><BR>[Called By]<UL><LI><a href="#[4ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvSampleTimeNow
</UL>

<P><STRONG><a name="[509]"></a>xTaskIncrementTick</STRONG> (Thumb, 280 bytes, Stack size 24 bytes, tasks.o(i.xTaskIncrementTick))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = xTaskIncrementTick
</UL>
<BR>[Calls]<UL><LI><a href="#[4d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vListInsertEnd
<LI><a href="#[4d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uxListRemove
<LI><a href="#[50f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvResetNextTaskUnblockTime
</UL>
<BR>[Called By]<UL><LI><a href="#[4ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskResumeAll
<LI><a href="#[31e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xPortSysTickHandler
</UL>

<P><STRONG><a name="[4df]"></a>xTaskPriorityDisinherit</STRONG> (Thumb, 152 bytes, Stack size 16 bytes, tasks.o(i.xTaskPriorityDisinherit))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = xTaskPriorityDisinherit
</UL>
<BR>[Calls]<UL><LI><a href="#[4d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vListInsertEnd
<LI><a href="#[4d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uxListRemove
</UL>
<BR>[Called By]<UL><LI><a href="#[4de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvCopyDataToQueue
</UL>

<P><STRONG><a name="[50d]"></a>xTaskPriorityInherit</STRONG> (Thumb, 150 bytes, Stack size 16 bytes, tasks.o(i.xTaskPriorityInherit))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = xTaskPriorityInherit
</UL>
<BR>[Calls]<UL><LI><a href="#[4d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vListInsertEnd
<LI><a href="#[4d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uxListRemove
</UL>
<BR>[Called By]<UL><LI><a href="#[4ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueSemaphoreTake
</UL>

<P><STRONG><a name="[4f5]"></a>xTaskRemoveFromEventList</STRONG> (Thumb, 126 bytes, Stack size 16 bytes, tasks.o(i.xTaskRemoveFromEventList))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = xTaskRemoveFromEventList
</UL>
<BR>[Calls]<UL><LI><a href="#[4d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vListInsertEnd
<LI><a href="#[4d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uxListRemove
</UL>
<BR>[Called By]<UL><LI><a href="#[4ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueSemaphoreTake
<LI><a href="#[4c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueReceiveFromISR
<LI><a href="#[4c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueReceive
<LI><a href="#[4ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGiveFromISR
<LI><a href="#[4c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericSendFromISR
<LI><a href="#[4c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericSend
<LI><a href="#[4e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericReset
<LI><a href="#[4f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvUnlockQueue
</UL>

<P><STRONG><a name="[4ef]"></a>xTaskResumeAll</STRONG> (Thumb, 222 bytes, Stack size 16 bytes, tasks.o(i.xTaskResumeAll))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = xTaskResumeAll &rArr; xTaskIncrementTick
</UL>
<BR>[Calls]<UL><LI><a href="#[4d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vListInsertEnd
<LI><a href="#[4d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uxListRemove
<LI><a href="#[4d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortExitCritical
<LI><a href="#[4d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortEnterCritical
<LI><a href="#[509]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskIncrementTick
<LI><a href="#[50f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvResetNextTaskUnblockTime
</UL>
<BR>[Called By]<UL><LI><a href="#[4ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueSemaphoreTake
<LI><a href="#[4c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueReceive
<LI><a href="#[4c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericSend
<LI><a href="#[4e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortFree
<LI><a href="#[4f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pvPortMalloc
<LI><a href="#[4ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvProcessTimerOrBlockTask
<LI><a href="#[4c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskDelay
</UL>

<P><STRONG><a name="[504]"></a>xTimerCreateTimerTask</STRONG> (Thumb, 100 bytes, Stack size 32 bytes, timers.o(i.xTimerCreateTimerTask))
<BR><BR>[Stack]<UL><LI>Max Depth = 128 + Unknown Stack Size
<LI>Call Chain = xTimerCreateTimerTask &rArr; prvCheckForValidListAndQueue &rArr; xQueueGenericCreateStatic &rArr; prvInitialiseNewQueue &rArr; xQueueGenericReset &rArr; xTaskRemoveFromEventList
</UL>
<BR>[Calls]<UL><LI><a href="#[510]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vApplicationGetTimerTaskMemory
<LI><a href="#[4d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvCheckForValidListAndQueue
<LI><a href="#[4cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskCreateStatic
</UL>
<BR>[Called By]<UL><LI><a href="#[4c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskStartScheduler
</UL>

<P><STRONG><a name="[4ea]"></a>xTimerGenericCommand</STRONG> (Thumb, 128 bytes, Stack size 48 bytes, timers.o(i.xTimerGenericCommand))
<BR><BR>[Stack]<UL><LI>Max Depth = 152<LI>Call Chain = xTimerGenericCommand &rArr; xQueueGenericSend &rArr; vTaskPlaceOnEventList &rArr; prvAddCurrentTaskToDelayedList &rArr; vListInsert
</UL>
<BR>[Calls]<UL><LI><a href="#[4c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericSendFromISR
<LI><a href="#[4c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericSend
<LI><a href="#[31d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskGetSchedulerState
</UL>
<BR>[Called By]<UL><LI><a href="#[4f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvSwitchTimerLists
<LI><a href="#[4eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvProcessReceivedCommands
<LI><a href="#[4e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvProcessExpiredTimer
</UL>

<P><STRONG><a name="[1e7]"></a>touchgfx::FadeAnimator&lang;touchgfx::TextAreaWithTwoWildcards&rang;::handleTickEvent()</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, cookingviewbase.o(t._ZN8touchgfx12FadeAnimatorINS_24TextAreaWithTwoWildcardsEE15handleTickEventEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = touchgfx::FadeAnimator&lang;touchgfx::TextAreaWithTwoWildcards&rang;::handleTickEvent() &rArr; touchgfx::FadeAnimator&lang;touchgfx::TextAreaWithTwoWildcards&rang;::nextFadeAnimationStep() &rArr; touchgfx::Application::unregisterTimerWidget(const touchgfx::Drawable*) &rArr; touchgfx::Application::TimerWidgets::remove(const touchgfx::Drawable*)
</UL>
<BR>[Calls]<UL><LI><a href="#[511]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::FadeAnimator&lang;touchgfx::TextAreaWithTwoWildcards&rang;::nextFadeAnimationStep()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> cookingviewbase.o(.constdata__ZTVN8touchgfx12FadeAnimatorINS_24TextAreaWithTwoWildcardsEEE)
</UL>
<P><STRONG><a name="[341]"></a>touchgfx::FadeAnimator&lang;touchgfx::TextAreaWithTwoWildcards&rang;::startFadeAnimation(unsigned char, unsigned short, short(*)(unsigned short, short, short, unsigned short))</STRONG> (Thumb, 78 bytes, Stack size 24 bytes, cookingview.o(t._ZN8touchgfx12FadeAnimatorINS_24TextAreaWithTwoWildcardsEE18startFadeAnimationEhtPFstsstE))
<BR><BR>[Stack]<UL><LI>Max Depth = 128 + Unknown Stack Size
<LI>Call Chain = touchgfx::FadeAnimator&lang;touchgfx::TextAreaWithTwoWildcards&rang;::startFadeAnimation(unsigned char, unsigned short, short(*)(unsigned short, short, short, unsigned short)) &rArr; touchgfx::Application::registerTimerWidget(touchgfx::Drawable*) &rArr; touchgfx::Application::TimerWidgets::add(touchgfx::Drawable*) &rArr; touchgfx::Application::TimerWidgets::compact() &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[3a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextArea::getAlpha() const
<LI><a href="#[3e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Application::registerTimerWidget(touchgfx::Drawable*)
<LI><a href="#[363]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Application::getInstance()
<LI><a href="#[511]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::FadeAnimator&lang;touchgfx::TextAreaWithTwoWildcards&rang;::nextFadeAnimationStep()
</UL>
<BR>[Called By]<UL><LI><a href="#[336]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CookingView::ENTERSCREEN_STATEMACHINE()
<LI><a href="#[337]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CookingView::EXITSCREEN_STATEMACHINE()
<LI><a href="#[170]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SelectingMenuView::hideRemainingElements()
<LI><a href="#[397]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SelectingMenuView::screenEnterAnimation()
</UL>

<P><STRONG><a name="[511]"></a>touchgfx::FadeAnimator&lang;touchgfx::TextAreaWithTwoWildcards&rang;::nextFadeAnimationStep()</STRONG> (Thumb, 180 bytes, Stack size 24 bytes, cookingviewbase.o(t._ZN8touchgfx12FadeAnimatorINS_24TextAreaWithTwoWildcardsEE21nextFadeAnimationStepEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = touchgfx::FadeAnimator&lang;touchgfx::TextAreaWithTwoWildcards&rang;::nextFadeAnimationStep() &rArr; touchgfx::Application::unregisterTimerWidget(const touchgfx::Drawable*) &rArr; touchgfx::Application::TimerWidgets::remove(const touchgfx::Drawable*)
</UL>
<BR>[Calls]<UL><LI><a href="#[1e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextArea::setAlpha(unsigned char)
<LI><a href="#[3e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Application::unregisterTimerWidget(const touchgfx::Drawable*)
<LI><a href="#[363]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Application::getInstance()
<LI><a href="#[1e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextAreaWithWildcardBase::invalidateContent() const
</UL>
<BR>[Called By]<UL><LI><a href="#[341]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::FadeAnimator&lang;touchgfx::TextAreaWithTwoWildcards&rang;::startFadeAnimation(unsigned char, unsigned short, short(*)(unsigned short, short, short, unsigned short))
<LI><a href="#[1e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::FadeAnimator&lang;touchgfx::TextAreaWithTwoWildcards&rang;::handleTickEvent()
</UL>

<P><STRONG><a name="[370]"></a>touchgfx::FadeAnimator&lang;touchgfx::TextAreaWithTwoWildcards&rang;::FadeAnimator()</STRONG> (Thumb, 62 bytes, Stack size 16 bytes, cookingviewbase.o(t._ZN8touchgfx12FadeAnimatorINS_24TextAreaWithTwoWildcardsEEC1Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = touchgfx::FadeAnimator&lang;touchgfx::TextAreaWithTwoWildcards&rang;::FadeAnimator() &rArr; touchgfx::TextArea::TextArea() &rArr; touchgfx::Widget::Widget__sub_object() &rArr; touchgfx::Drawable::Drawable__sub_object()
</UL>
<BR>[Calls]<UL><LI><a href="#[371]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextArea::TextArea()
</UL>
<BR>[Called By]<UL><LI><a href="#[349]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CookingViewBase::CookingViewBase()
<LI><a href="#[3a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SelectingMenuViewBase::SelectingMenuViewBase()
</UL>

<P><STRONG><a name="[5f1]"></a>touchgfx::FadeAnimator&lang;touchgfx::TextAreaWithTwoWildcards&rang;::FadeAnimator__sub_object()</STRONG> (Thumb, 0 bytes, Stack size 16 bytes, cookingviewbase.o(t._ZN8touchgfx12FadeAnimatorINS_24TextAreaWithTwoWildcardsEEC1Ev), UNUSED)

<P><STRONG><a name="[1f4]"></a>touchgfx::FadeAnimator&lang;touchgfx::Image&rang;::handleTickEvent()</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, cookingviewbase.o(t._ZN8touchgfx12FadeAnimatorINS_5ImageEE15handleTickEventEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = touchgfx::FadeAnimator&lang;touchgfx::Image&rang;::handleTickEvent() &rArr; touchgfx::FadeAnimator&lang;touchgfx::Image&rang;::nextFadeAnimationStep() &rArr; touchgfx::Application::unregisterTimerWidget(const touchgfx::Drawable*) &rArr; touchgfx::Application::TimerWidgets::remove(const touchgfx::Drawable*)
</UL>
<BR>[Calls]<UL><LI><a href="#[512]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::FadeAnimator&lang;touchgfx::Image&rang;::nextFadeAnimationStep()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> cookingviewbase.o(.constdata__ZTVN8touchgfx12FadeAnimatorINS_5ImageEEE)
</UL>
<P><STRONG><a name="[343]"></a>touchgfx::FadeAnimator&lang;touchgfx::Image&rang;::startFadeAnimation(unsigned char, unsigned short, short(*)(unsigned short, short, short, unsigned short))</STRONG> (Thumb, 72 bytes, Stack size 24 bytes, cookingview.o(t._ZN8touchgfx12FadeAnimatorINS_5ImageEE18startFadeAnimationEhtPFstsstE))
<BR><BR>[Stack]<UL><LI>Max Depth = 128 + Unknown Stack Size
<LI>Call Chain = touchgfx::FadeAnimator&lang;touchgfx::Image&rang;::startFadeAnimation(unsigned char, unsigned short, short(*)(unsigned short, short, short, unsigned short)) &rArr; touchgfx::Application::registerTimerWidget(touchgfx::Drawable*) &rArr; touchgfx::Application::TimerWidgets::add(touchgfx::Drawable*) &rArr; touchgfx::Application::TimerWidgets::compact() &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[512]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::FadeAnimator&lang;touchgfx::Image&rang;::nextFadeAnimationStep()
<LI><a href="#[3e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Application::registerTimerWidget(touchgfx::Drawable*)
<LI><a href="#[363]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Application::getInstance()
</UL>
<BR>[Called By]<UL><LI><a href="#[336]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CookingView::ENTERSCREEN_STATEMACHINE()
<LI><a href="#[337]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CookingView::EXITSCREEN_STATEMACHINE()
<LI><a href="#[39c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SelectingMenuView::ANIMATION_CHANGE_STATEMACHINE()
<LI><a href="#[39b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SelectingMenuView::ENTERSCREEN_STATEMACHINE()
<LI><a href="#[3a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SelectingMenuView::fadeInRemainingElements()
<LI><a href="#[39d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SelectingMenuView::EXITSCREEN_STATEMACHINE()
<LI><a href="#[170]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SelectingMenuView::hideRemainingElements()
<LI><a href="#[15c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SplashScreenViewBase::afterTransition()
</UL>

<P><STRONG><a name="[512]"></a>touchgfx::FadeAnimator&lang;touchgfx::Image&rang;::nextFadeAnimationStep()</STRONG> (Thumb, 166 bytes, Stack size 24 bytes, cookingview.o(t._ZN8touchgfx12FadeAnimatorINS_5ImageEE21nextFadeAnimationStepEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = touchgfx::FadeAnimator&lang;touchgfx::Image&rang;::nextFadeAnimationStep() &rArr; touchgfx::Application::unregisterTimerWidget(const touchgfx::Drawable*) &rArr; touchgfx::Application::TimerWidgets::remove(const touchgfx::Drawable*)
</UL>
<BR>[Calls]<UL><LI><a href="#[35f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Image::setAlpha(unsigned char)
<LI><a href="#[3e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Application::unregisterTimerWidget(const touchgfx::Drawable*)
<LI><a href="#[363]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Application::getInstance()
<LI><a href="#[1f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Image::invalidateContent() const
</UL>
<BR>[Called By]<UL><LI><a href="#[343]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::FadeAnimator&lang;touchgfx::Image&rang;::startFadeAnimation(unsigned char, unsigned short, short(*)(unsigned short, short, short, unsigned short))
<LI><a href="#[1f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::FadeAnimator&lang;touchgfx::Image&rang;::handleTickEvent()
</UL>

<P><STRONG><a name="[1f6]"></a>touchgfx::FadeAnimator&lang;touchgfx::Image&rang;::setFadeAnimationDelay(unsigned short)</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, cookingviewbase.o(t._ZN8touchgfx12FadeAnimatorINS_5ImageEE21setFadeAnimationDelayEt))
<BR><BR>[Called By]<UL><LI><a href="#[15c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SplashScreenViewBase::afterTransition()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> cookingviewbase.o(.constdata__ZTVN8touchgfx12FadeAnimatorINS_5ImageEEE)
</UL>
<P><STRONG><a name="[36d]"></a>touchgfx::FadeAnimator&lang;touchgfx::Image&rang;::FadeAnimator()</STRONG> (Thumb, 46 bytes, Stack size 16 bytes, cookingviewbase.o(t._ZN8touchgfx12FadeAnimatorINS_5ImageEEC1Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 104 + Unknown Stack Size
<LI>Call Chain = touchgfx::FadeAnimator&lang;touchgfx::Image&rang;::FadeAnimator() &rArr; touchgfx::Image::Image(const touchgfx::Bitmap&) &rArr; touchgfx::Image::setBitmap(const touchgfx::Bitmap&) &rArr; touchgfx::Bitmap::getHeight() const &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[345]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Bitmap::Bitmap(unsigned short)
<LI><a href="#[36a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Image::Image(const touchgfx::Bitmap&)
</UL>
<BR>[Called By]<UL><LI><a href="#[349]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CookingViewBase::CookingViewBase()
<LI><a href="#[3a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SelectingMenuViewBase::SelectingMenuViewBase()
<LI><a href="#[394]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SplashScreenViewBase::SplashScreenViewBase()
<LI><a href="#[362]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SettingsViewBase::SettingsViewBase()
</UL>

<P><STRONG><a name="[5f2]"></a>touchgfx::FadeAnimator&lang;touchgfx::Image&rang;::FadeAnimator__sub_object()</STRONG> (Thumb, 0 bytes, Stack size 16 bytes, cookingviewbase.o(t._ZN8touchgfx12FadeAnimatorINS_5ImageEEC1Ev), UNUSED)

<P><STRONG><a name="[1fc]"></a>touchgfx::FadeAnimator&lang;touchgfx::Button&rang;::handleTickEvent()</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, cookingviewbase.o(t._ZN8touchgfx12FadeAnimatorINS_6ButtonEE15handleTickEventEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = touchgfx::FadeAnimator&lang;touchgfx::Button&rang;::handleTickEvent() &rArr; touchgfx::FadeAnimator&lang;touchgfx::Button&rang;::nextFadeAnimationStep() &rArr; touchgfx::Application::unregisterTimerWidget(const touchgfx::Drawable*) &rArr; touchgfx::Application::TimerWidgets::remove(const touchgfx::Drawable*)
</UL>
<BR>[Calls]<UL><LI><a href="#[513]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::FadeAnimator&lang;touchgfx::Button&rang;::nextFadeAnimationStep()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> cookingviewbase.o(.constdata__ZTVN8touchgfx12FadeAnimatorINS_6ButtonEEE)
</UL>
<P><STRONG><a name="[344]"></a>touchgfx::FadeAnimator&lang;touchgfx::Button&rang;::startFadeAnimation(unsigned char, unsigned short, short(*)(unsigned short, short, short, unsigned short))</STRONG> (Thumb, 72 bytes, Stack size 24 bytes, cookingview.o(t._ZN8touchgfx12FadeAnimatorINS_6ButtonEE18startFadeAnimationEhtPFstsstE))
<BR><BR>[Stack]<UL><LI>Max Depth = 128 + Unknown Stack Size
<LI>Call Chain = touchgfx::FadeAnimator&lang;touchgfx::Button&rang;::startFadeAnimation(unsigned char, unsigned short, short(*)(unsigned short, short, short, unsigned short)) &rArr; touchgfx::Application::registerTimerWidget(touchgfx::Drawable*) &rArr; touchgfx::Application::TimerWidgets::add(touchgfx::Drawable*) &rArr; touchgfx::Application::TimerWidgets::compact() &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[513]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::FadeAnimator&lang;touchgfx::Button&rang;::nextFadeAnimationStep()
<LI><a href="#[3e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Application::registerTimerWidget(touchgfx::Drawable*)
<LI><a href="#[363]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Application::getInstance()
</UL>
<BR>[Called By]<UL><LI><a href="#[336]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CookingView::ENTERSCREEN_STATEMACHINE()
<LI><a href="#[337]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CookingView::EXITSCREEN_STATEMACHINE()
<LI><a href="#[170]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SelectingMenuView::hideRemainingElements()
<LI><a href="#[357]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SettingsView::EXITSCREEN_STATEMACHINE()
</UL>

<P><STRONG><a name="[513]"></a>touchgfx::FadeAnimator&lang;touchgfx::Button&rang;::nextFadeAnimationStep()</STRONG> (Thumb, 166 bytes, Stack size 24 bytes, cookingview.o(t._ZN8touchgfx12FadeAnimatorINS_6ButtonEE21nextFadeAnimationStepEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = touchgfx::FadeAnimator&lang;touchgfx::Button&rang;::nextFadeAnimationStep() &rArr; touchgfx::Application::unregisterTimerWidget(const touchgfx::Drawable*) &rArr; touchgfx::Application::TimerWidgets::remove(const touchgfx::Drawable*)
</UL>
<BR>[Calls]<UL><LI><a href="#[376]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Button::setAlpha(unsigned char)
<LI><a href="#[3e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Application::unregisterTimerWidget(const touchgfx::Drawable*)
<LI><a href="#[363]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Application::getInstance()
<LI><a href="#[1fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Button::invalidateContent() const
</UL>
<BR>[Called By]<UL><LI><a href="#[344]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::FadeAnimator&lang;touchgfx::Button&rang;::startFadeAnimation(unsigned char, unsigned short, short(*)(unsigned short, short, short, unsigned short))
<LI><a href="#[1fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::FadeAnimator&lang;touchgfx::Button&rang;::handleTickEvent()
</UL>

<P><STRONG><a name="[36c]"></a>touchgfx::FadeAnimator&lang;touchgfx::Button&rang;::FadeAnimator()</STRONG> (Thumb, 32 bytes, Stack size 8 bytes, cookingviewbase.o(t._ZN8touchgfx12FadeAnimatorINS_6ButtonEEC1Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = touchgfx::FadeAnimator&lang;touchgfx::Button&rang;::FadeAnimator() &rArr; touchgfx::Button::Button() &rArr; touchgfx::Widget::Widget__sub_object() &rArr; touchgfx::Drawable::Drawable__sub_object()
</UL>
<BR>[Calls]<UL><LI><a href="#[38b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Button::Button()
</UL>
<BR>[Called By]<UL><LI><a href="#[349]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CookingViewBase::CookingViewBase()
<LI><a href="#[3a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SelectingMenuViewBase::SelectingMenuViewBase()
</UL>

<P><STRONG><a name="[5f3]"></a>touchgfx::FadeAnimator&lang;touchgfx::Button&rang;::FadeAnimator__sub_object()</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, cookingviewbase.o(t._ZN8touchgfx12FadeAnimatorINS_6ButtonEEC1Ev), UNUSED)

<P><STRONG><a name="[202]"></a>touchgfx::FadeAnimator&lang;touchgfx::TextArea&rang;::handleTickEvent()</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, cookingviewbase.o(t._ZN8touchgfx12FadeAnimatorINS_8TextAreaEE15handleTickEventEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 128 + Unknown Stack Size
<LI>Call Chain = touchgfx::FadeAnimator&lang;touchgfx::TextArea&rang;::handleTickEvent() &rArr; touchgfx::FadeAnimator&lang;touchgfx::TextArea&rang;::nextFadeAnimationStep() &rArr; touchgfx::TextArea::invalidateContent() const &rArr; touchgfx::TypedText::getText() const &rArr; __aeabi_assert &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[514]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::FadeAnimator&lang;touchgfx::TextArea&rang;::nextFadeAnimationStep()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> cookingviewbase.o(.constdata__ZTVN8touchgfx12FadeAnimatorINS_8TextAreaEEE)
</UL>
<P><STRONG><a name="[342]"></a>touchgfx::FadeAnimator&lang;touchgfx::TextArea&rang;::startFadeAnimation(unsigned char, unsigned short, short(*)(unsigned short, short, short, unsigned short))</STRONG> (Thumb, 76 bytes, Stack size 24 bytes, settingsview.o(t._ZN8touchgfx12FadeAnimatorINS_8TextAreaEE18startFadeAnimationEhtPFstsstE))
<BR><BR>[Stack]<UL><LI>Max Depth = 144 + Unknown Stack Size
<LI>Call Chain = touchgfx::FadeAnimator&lang;touchgfx::TextArea&rang;::startFadeAnimation(unsigned char, unsigned short, short(*)(unsigned short, short, short, unsigned short)) &rArr; touchgfx::FadeAnimator&lang;touchgfx::TextArea&rang;::nextFadeAnimationStep() &rArr; touchgfx::TextArea::invalidateContent() const &rArr; touchgfx::TypedText::getText() const &rArr; __aeabi_assert &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[3e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Application::registerTimerWidget(touchgfx::Drawable*)
<LI><a href="#[363]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Application::getInstance()
<LI><a href="#[514]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::FadeAnimator&lang;touchgfx::TextArea&rang;::nextFadeAnimationStep()
</UL>
<BR>[Called By]<UL><LI><a href="#[336]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CookingView::ENTERSCREEN_STATEMACHINE()
<LI><a href="#[337]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CookingView::EXITSCREEN_STATEMACHINE()
<LI><a href="#[39c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SelectingMenuView::ANIMATION_CHANGE_STATEMACHINE()
<LI><a href="#[39d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SelectingMenuView::EXITSCREEN_STATEMACHINE()
<LI><a href="#[395]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SelectingMenuView::fadeInTexts()
<LI><a href="#[356]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SettingsView::ENTERSCREEN_STATEMACHINE()
<LI><a href="#[357]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SettingsView::EXITSCREEN_STATEMACHINE()
</UL>

<P><STRONG><a name="[514]"></a>touchgfx::FadeAnimator&lang;touchgfx::TextArea&rang;::nextFadeAnimationStep()</STRONG> (Thumb, 180 bytes, Stack size 24 bytes, settingsview.o(t._ZN8touchgfx12FadeAnimatorINS_8TextAreaEE21nextFadeAnimationStepEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 120 + Unknown Stack Size
<LI>Call Chain = touchgfx::FadeAnimator&lang;touchgfx::TextArea&rang;::nextFadeAnimationStep() &rArr; touchgfx::TextArea::invalidateContent() const &rArr; touchgfx::TypedText::getText() const &rArr; __aeabi_assert &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[201]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextArea::invalidateContent() const
<LI><a href="#[1e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextArea::setAlpha(unsigned char)
<LI><a href="#[3e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Application::unregisterTimerWidget(const touchgfx::Drawable*)
<LI><a href="#[363]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Application::getInstance()
</UL>
<BR>[Called By]<UL><LI><a href="#[342]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::FadeAnimator&lang;touchgfx::TextArea&rang;::startFadeAnimation(unsigned char, unsigned short, short(*)(unsigned short, short, short, unsigned short))
<LI><a href="#[202]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::FadeAnimator&lang;touchgfx::TextArea&rang;::handleTickEvent()
</UL>

<P><STRONG><a name="[388]"></a>touchgfx::FadeAnimator&lang;touchgfx::TextArea&rang;::FadeAnimator()</STRONG> (Thumb, 36 bytes, Stack size 8 bytes, selectingmenuviewbase.o(t._ZN8touchgfx12FadeAnimatorINS_8TextAreaEEC1Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = touchgfx::FadeAnimator&lang;touchgfx::TextArea&rang;::FadeAnimator() &rArr; touchgfx::TextArea::TextArea() &rArr; touchgfx::Widget::Widget__sub_object() &rArr; touchgfx::Drawable::Drawable__sub_object()
</UL>
<BR>[Calls]<UL><LI><a href="#[371]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextArea::TextArea()
</UL>
<BR>[Called By]<UL><LI><a href="#[3a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SelectingMenuViewBase::SelectingMenuViewBase()
<LI><a href="#[362]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SettingsViewBase::SettingsViewBase()
</UL>

<P><STRONG><a name="[5f4]"></a>touchgfx::FadeAnimator&lang;touchgfx::TextArea&rang;::FadeAnimator__sub_object()</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, selectingmenuviewbase.o(t._ZN8touchgfx12FadeAnimatorINS_8TextAreaEEC1Ev), UNUSED)

<P><STRONG><a name="[20a]"></a>touchgfx::MoveAnimator&lang;touchgfx::Container&rang;::handleTickEvent()</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, selectingmenuviewbase.o(t._ZN8touchgfx12MoveAnimatorINS_9ContainerEE15handleTickEventEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = touchgfx::MoveAnimator&lang;touchgfx::Container&rang;::handleTickEvent() &rArr; touchgfx::MoveAnimator&lang;touchgfx::Container&rang;::nextMoveAnimationStep() &rArr; touchgfx::Application::unregisterTimerWidget(const touchgfx::Drawable*) &rArr; touchgfx::Application::TimerWidgets::remove(const touchgfx::Drawable*)
</UL>
<BR>[Calls]<UL><LI><a href="#[515]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::MoveAnimator&lang;touchgfx::Container&rang;::nextMoveAnimationStep()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> selectingmenuviewbase.o(.constdata__ZTVN8touchgfx12MoveAnimatorINS_9ContainerEEE)
</UL>
<P><STRONG><a name="[3a2]"></a>touchgfx::MoveAnimator&lang;touchgfx::Container&rang;::startMoveAnimation(short, short, unsigned short, short(*)(unsigned short, short, short, unsigned short), short(*)(unsigned short, short, short, unsigned short))</STRONG> (Thumb, 92 bytes, Stack size 32 bytes, selectingmenuview.o(t._ZN8touchgfx12MoveAnimatorINS_9ContainerEE18startMoveAnimationEsstPFstsstES4_))
<BR><BR>[Stack]<UL><LI>Max Depth = 136 + Unknown Stack Size
<LI>Call Chain = touchgfx::MoveAnimator&lang;touchgfx::Container&rang;::startMoveAnimation(short, short, unsigned short, short(*)(unsigned short, short, short, unsigned short), short(*)(unsigned short, short, short, unsigned short)) &rArr; touchgfx::Application::registerTimerWidget(touchgfx::Drawable*) &rArr; touchgfx::Application::TimerWidgets::add(touchgfx::Drawable*) &rArr; touchgfx::Application::TimerWidgets::compact() &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[3e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Application::registerTimerWidget(touchgfx::Drawable*)
<LI><a href="#[363]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Application::getInstance()
<LI><a href="#[3a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Drawable::getX() const
<LI><a href="#[515]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::MoveAnimator&lang;touchgfx::Container&rang;::nextMoveAnimationStep()
</UL>
<BR>[Called By]<UL><LI><a href="#[39b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SelectingMenuView::ENTERSCREEN_STATEMACHINE()
<LI><a href="#[39d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SelectingMenuView::EXITSCREEN_STATEMACHINE()
</UL>

<P><STRONG><a name="[515]"></a>touchgfx::MoveAnimator&lang;touchgfx::Container&rang;::nextMoveAnimationStep()</STRONG> (Thumb, 166 bytes, Stack size 24 bytes, selectingmenuviewbase.o(t._ZN8touchgfx12MoveAnimatorINS_9ContainerEE21nextMoveAnimationStepEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = touchgfx::MoveAnimator&lang;touchgfx::Container&rang;::nextMoveAnimationStep() &rArr; touchgfx::Application::unregisterTimerWidget(const touchgfx::Drawable*) &rArr; touchgfx::Application::TimerWidgets::remove(const touchgfx::Drawable*)
</UL>
<BR>[Calls]<UL><LI><a href="#[3e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Application::unregisterTimerWidget(const touchgfx::Drawable*)
<LI><a href="#[363]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Application::getInstance()
<LI><a href="#[1db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Drawable::moveTo(short, short)
</UL>
<BR>[Called By]<UL><LI><a href="#[3a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::MoveAnimator&lang;touchgfx::Container&rang;::startMoveAnimation(short, short, unsigned short, short(*)(unsigned short, short, short, unsigned short), short(*)(unsigned short, short, short, unsigned short))
<LI><a href="#[20a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::MoveAnimator&lang;touchgfx::Container&rang;::handleTickEvent()
</UL>

<P><STRONG><a name="[3f8]"></a>touchgfx::TextProvider::circularBuffer&lang;(unsigned)10&rang;::peekChar(unsigned short)</STRONG> (Thumb, 30 bytes, Stack size 8 bytes, textprovider.o(t._ZN8touchgfx12TextProvider14circularBufferILj10EE8peekCharEt))
<BR><BR>[Stack]<UL><LI>Max Depth = 56 + Unknown Stack Size
<LI>Call Chain = touchgfx::TextProvider::circularBuffer&lang;(unsigned)10&rang;::peekChar(unsigned short) &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[2ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;abort
</UL>
<BR>[Called By]<UL><LI><a href="#[3fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextProvider::replaceInputCharacters(unsigned short, unsigned short, const unsigned short*)
<LI><a href="#[3f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextProvider::gsubRuleMatch(const unsigned short*, unsigned short, unsigned short, unsigned short)
</UL>

<P><STRONG><a name="[3f4]"></a>touchgfx::TextProvider::circularBuffer&lang;(unsigned)10&rang;::peekChar()</STRONG> (Thumb, 30 bytes, Stack size 8 bytes, texts.o(t._ZN8touchgfx12TextProvider14circularBufferILj10EE8peekCharEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 72 + Unknown Stack Size
<LI>Call Chain = touchgfx::TextProvider::circularBuffer&lang;(unsigned)10&rang;::peekChar() &rArr; __aeabi_assert &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[2b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_assert
</UL>
<BR>[Called By]<UL><LI><a href="#[402]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextProvider::getNextLigature(unsigned char)
<LI><a href="#[403]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextProvider::substituteGlyphs()
<LI><a href="#[405]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextProvider::getNextLigature(unsigned char, const touchgfx::Font*, const touchgfx::GlyphNode*&, const unsigned char*&, unsigned char&)
<LI><a href="#[404]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextProvider::getNextLigature(unsigned char, const touchgfx::Font*, const touchgfx::GlyphNode*&)
<LI><a href="#[3f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextProvider::endOfString()
<LI><a href="#[3f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextProvider::adjustThaiGlyph(const touchgfx::Font*, const touchgfx::GlyphNode*)
</UL>

<P><STRONG><a name="[3ff]"></a>touchgfx::TextProvider::circularBuffer&lang;(unsigned)10&rang;::pushBack(unsigned short)</STRONG> (Thumb, 44 bytes, Stack size 8 bytes, textprovider.o(t._ZN8touchgfx12TextProvider14circularBufferILj10EE8pushBackEt))
<BR><BR>[Stack]<UL><LI>Max Depth = 56 + Unknown Stack Size
<LI>Call Chain = touchgfx::TextProvider::circularBuffer&lang;(unsigned)10&rang;::pushBack(unsigned short) &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[2ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;abort
</UL>
<BR>[Called By]<UL><LI><a href="#[3f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextProvider::fillInputBuffer()
</UL>

<P><STRONG><a name="[408]"></a>touchgfx::TextProvider::circularBuffer&lang;(unsigned)10&rang;::dropFront(unsigned short)</STRONG> (Thumb, 34 bytes, Stack size 8 bytes, textprovider.o(t._ZN8touchgfx12TextProvider14circularBufferILj10EE9dropFrontEt))
<BR><BR>[Stack]<UL><LI>Max Depth = 56 + Unknown Stack Size
<LI>Call Chain = touchgfx::TextProvider::circularBuffer&lang;(unsigned)10&rang;::dropFront(unsigned short) &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[2ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;abort
</UL>
<BR>[Called By]<UL><LI><a href="#[3fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextProvider::replaceInputCharacters(unsigned short, unsigned short, const unsigned short*)
</UL>

<P><STRONG><a name="[3b3]"></a>T2* touchgfx::makeTransition&lang;CookingView, CookingPresenter, touchgfx::NoTransition, Model&rang;(touchgfx::Screen**, touchgfx::Presenter**, touchgfx::MVPHeap&, touchgfx::Transition**, T4*)</STRONG> (Thumb, 286 bytes, Stack size 64 bytes, frontendapplicationbase.o(t._ZN8touchgfx14makeTransitionI11CookingView16CookingPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_))
<BR><BR>[Stack]<UL><LI>Max Depth = 424 + Unknown Stack Size
<LI>Call Chain = T2* touchgfx::makeTransition&lang;CookingView, CookingPresenter, touchgfx::NoTransition, Model&rang;(touchgfx::Screen**, touchgfx::Presenter**, touchgfx::MVPHeap&, touchgfx::Transition**, T4*) &rArr; CookingView::CookingView() &rArr; CookingViewBase::CookingViewBase() &rArr; touchgfx::Unicode::snprintf(unsigned short*, unsigned short, const char*, ...) &rArr; touchgfx::Unicode::vsnprintf(unsigned short*, unsigned short, const char*, std::__va_list) &rArr; touchgfx::Unicode::vsnprintf(unsigned short*, unsigned short, const unsigned short*, const char*, std::__va_list) &rArr; touchgfx::Unicode::itoa(int, unsigned short*, unsigned short, int) &rArr; touchgfx::Unicode::strncpy(unsigned short*, const char*, unsigned short)
</UL>
<BR>[Calls]<UL><LI><a href="#[518]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CookingPresenter::CookingPresenter(CookingView&)
<LI><a href="#[348]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CookingView::CookingView()
<LI><a href="#[414]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::finalizeTransition(touchgfx::Screen*, touchgfx::Presenter*, touchgfx::Transition*)
<LI><a href="#[412]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::prepareTransition(touchgfx::Screen**, touchgfx::Presenter**, touchgfx::Transition**)
<LI><a href="#[516]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;T1& touchgfx::AbstractPartition::at&lang;touchgfx::NoTransition&rang;(unsigned short)
<LI><a href="#[517]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::NoTransition::NoTransition()
<LI><a href="#[519]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Model::bind(ModelListener*)
<LI><a href="#[51a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ModelListener::bind(Model*)
<LI><a href="#[2b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_assert
</UL>
<BR>[Called By]<UL><LI><a href="#[e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FrontendApplicationBase::gotoCookingScreenNoTransitionImpl()
</UL>

<P><STRONG><a name="[3b4]"></a>T2* touchgfx::makeTransition&lang;SettingsView, SettingsPresenter, touchgfx::NoTransition, Model&rang;(touchgfx::Screen**, touchgfx::Presenter**, touchgfx::MVPHeap&, touchgfx::Transition**, T4*)</STRONG> (Thumb, 284 bytes, Stack size 64 bytes, frontendapplicationbase.o(t._ZN8touchgfx14makeTransitionI12SettingsView17SettingsPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_))
<BR><BR>[Stack]<UL><LI>Max Depth = 424 + Unknown Stack Size
<LI>Call Chain = T2* touchgfx::makeTransition&lang;SettingsView, SettingsPresenter, touchgfx::NoTransition, Model&rang;(touchgfx::Screen**, touchgfx::Presenter**, touchgfx::MVPHeap&, touchgfx::Transition**, T4*) &rArr; SettingsView::SettingsView() &rArr; SettingsViewBase::SettingsViewBase() &rArr; touchgfx::Unicode::snprintf(unsigned short*, unsigned short, const char*, ...) &rArr; touchgfx::Unicode::vsnprintf(unsigned short*, unsigned short, const char*, std::__va_list) &rArr; touchgfx::Unicode::vsnprintf(unsigned short*, unsigned short, const unsigned short*, const char*, std::__va_list) &rArr; touchgfx::Unicode::itoa(int, unsigned short*, unsigned short, int) &rArr; touchgfx::Unicode::strncpy(unsigned short*, const char*, unsigned short)
</UL>
<BR>[Calls]<UL><LI><a href="#[414]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::finalizeTransition(touchgfx::Screen*, touchgfx::Presenter*, touchgfx::Transition*)
<LI><a href="#[412]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::prepareTransition(touchgfx::Screen**, touchgfx::Presenter**, touchgfx::Transition**)
<LI><a href="#[51b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SettingsPresenter::SettingsPresenter(SettingsView&)
<LI><a href="#[361]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SettingsView::SettingsView()
<LI><a href="#[516]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;T1& touchgfx::AbstractPartition::at&lang;touchgfx::NoTransition&rang;(unsigned short)
<LI><a href="#[517]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::NoTransition::NoTransition()
<LI><a href="#[519]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Model::bind(ModelListener*)
<LI><a href="#[51a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ModelListener::bind(Model*)
<LI><a href="#[2b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_assert
</UL>
<BR>[Called By]<UL><LI><a href="#[e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FrontendApplicationBase::gotoSettingsScreenNoTransitionImpl()
</UL>

<P><STRONG><a name="[3b5]"></a>T2* touchgfx::makeTransition&lang;InformationView, InformationPresenter, touchgfx::NoTransition, Model&rang;(touchgfx::Screen**, touchgfx::Presenter**, touchgfx::MVPHeap&, touchgfx::Transition**, T4*)</STRONG> (Thumb, 284 bytes, Stack size 64 bytes, frontendapplicationbase.o(t._ZN8touchgfx14makeTransitionI15InformationView20InformationPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_))
<BR><BR>[Stack]<UL><LI>Max Depth = 192 + Unknown Stack Size
<LI>Call Chain = T2* touchgfx::makeTransition&lang;InformationView, InformationPresenter, touchgfx::NoTransition, Model&rang;(touchgfx::Screen**, touchgfx::Presenter**, touchgfx::MVPHeap&, touchgfx::Transition**, T4*) &rArr; InformationView::InformationView() &rArr; InformationViewBase::InformationViewBase() &rArr; touchgfx::Image::setBitmap(const touchgfx::Bitmap&) &rArr; touchgfx::Bitmap::getHeight() const &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[382]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InformationView::InformationView()
<LI><a href="#[51c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InformationPresenter::InformationPresenter(InformationView&)
<LI><a href="#[414]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::finalizeTransition(touchgfx::Screen*, touchgfx::Presenter*, touchgfx::Transition*)
<LI><a href="#[412]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::prepareTransition(touchgfx::Screen**, touchgfx::Presenter**, touchgfx::Transition**)
<LI><a href="#[516]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;T1& touchgfx::AbstractPartition::at&lang;touchgfx::NoTransition&rang;(unsigned short)
<LI><a href="#[517]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::NoTransition::NoTransition()
<LI><a href="#[519]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Model::bind(ModelListener*)
<LI><a href="#[51a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ModelListener::bind(Model*)
<LI><a href="#[2b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_assert
</UL>
<BR>[Called By]<UL><LI><a href="#[e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FrontendApplicationBase::gotoInformationScreenNoTransitionImpl()
</UL>

<P><STRONG><a name="[3b6]"></a>T2* touchgfx::makeTransition&lang;SplashScreenView, SplashScreenPresenter, touchgfx::NoTransition, Model&rang;(touchgfx::Screen**, touchgfx::Presenter**, touchgfx::MVPHeap&, touchgfx::Transition**, T4*)</STRONG> (Thumb, 284 bytes, Stack size 64 bytes, frontendapplicationbase.o(t._ZN8touchgfx14makeTransitionI16SplashScreenView21SplashScreenPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_))
<BR><BR>[Stack]<UL><LI>Max Depth = 216 + Unknown Stack Size
<LI>Call Chain = T2* touchgfx::makeTransition&lang;SplashScreenView, SplashScreenPresenter, touchgfx::NoTransition, Model&rang;(touchgfx::Screen**, touchgfx::Presenter**, touchgfx::MVPHeap&, touchgfx::Transition**, T4*) &rArr; SplashScreenView::SplashScreenView() &rArr; SplashScreenViewBase::SplashScreenViewBase() &rArr; touchgfx::FadeAnimator&lang;touchgfx::Image&rang;::FadeAnimator() &rArr; touchgfx::Image::Image(const touchgfx::Bitmap&) &rArr; touchgfx::Image::setBitmap(const touchgfx::Bitmap&) &rArr; touchgfx::Bitmap::getHeight() const &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[414]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::finalizeTransition(touchgfx::Screen*, touchgfx::Presenter*, touchgfx::Transition*)
<LI><a href="#[412]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::prepareTransition(touchgfx::Screen**, touchgfx::Presenter**, touchgfx::Transition**)
<LI><a href="#[393]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SplashScreenView::SplashScreenView()
<LI><a href="#[51d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SplashScreenPresenter::SplashScreenPresenter(SplashScreenView&)
<LI><a href="#[516]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;T1& touchgfx::AbstractPartition::at&lang;touchgfx::NoTransition&rang;(unsigned short)
<LI><a href="#[517]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::NoTransition::NoTransition()
<LI><a href="#[519]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Model::bind(ModelListener*)
<LI><a href="#[51a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ModelListener::bind(Model*)
<LI><a href="#[2b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_assert
</UL>
<BR>[Called By]<UL><LI><a href="#[de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FrontendApplicationBase::gotoSplashScreenScreenNoTransitionImpl()
</UL>

<P><STRONG><a name="[3b7]"></a>T2* touchgfx::makeTransition&lang;SelectingMenuView, SelectingMenuPresenter, touchgfx::NoTransition, Model&rang;(touchgfx::Screen**, touchgfx::Presenter**, touchgfx::MVPHeap&, touchgfx::Transition**, T4*)</STRONG> (Thumb, 284 bytes, Stack size 64 bytes, frontendapplicationbase.o(t._ZN8touchgfx14makeTransitionI17SelectingMenuView22SelectingMenuPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_))
<BR><BR>[Stack]<UL><LI>Max Depth = 424 + Unknown Stack Size
<LI>Call Chain = T2* touchgfx::makeTransition&lang;SelectingMenuView, SelectingMenuPresenter, touchgfx::NoTransition, Model&rang;(touchgfx::Screen**, touchgfx::Presenter**, touchgfx::MVPHeap&, touchgfx::Transition**, T4*) &rArr; SelectingMenuView::SelectingMenuView() &rArr; SelectingMenuViewBase::SelectingMenuViewBase() &rArr; touchgfx::Unicode::snprintf(unsigned short*, unsigned short, const char*, ...) &rArr; touchgfx::Unicode::vsnprintf(unsigned short*, unsigned short, const char*, std::__va_list) &rArr; touchgfx::Unicode::vsnprintf(unsigned short*, unsigned short, const unsigned short*, const char*, std::__va_list) &rArr; touchgfx::Unicode::itoa(int, unsigned short*, unsigned short, int) &rArr; touchgfx::Unicode::strncpy(unsigned short*, const char*, unsigned short)
</UL>
<BR>[Calls]<UL><LI><a href="#[51e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SelectingMenuPresenter::SelectingMenuPresenter(SelectingMenuView&)
<LI><a href="#[414]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::finalizeTransition(touchgfx::Screen*, touchgfx::Presenter*, touchgfx::Transition*)
<LI><a href="#[412]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::prepareTransition(touchgfx::Screen**, touchgfx::Presenter**, touchgfx::Transition**)
<LI><a href="#[3a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SelectingMenuView::SelectingMenuView()
<LI><a href="#[516]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;T1& touchgfx::AbstractPartition::at&lang;touchgfx::NoTransition&rang;(unsigned short)
<LI><a href="#[517]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::NoTransition::NoTransition()
<LI><a href="#[519]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Model::bind(ModelListener*)
<LI><a href="#[51a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ModelListener::bind(Model*)
<LI><a href="#[2b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_assert
</UL>
<BR>[Called By]<UL><LI><a href="#[df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FrontendApplicationBase::gotoSelectingMenuScreenNoTransitionImpl()
</UL>

<P><STRONG><a name="[3b8]"></a>T2* touchgfx::makeTransition&lang;InformationDemoView, InformationDemoPresenter, touchgfx::NoTransition, Model&rang;(touchgfx::Screen**, touchgfx::Presenter**, touchgfx::MVPHeap&, touchgfx::Transition**, T4*)</STRONG> (Thumb, 284 bytes, Stack size 64 bytes, frontendapplicationbase.o(t._ZN8touchgfx14makeTransitionI19InformationDemoView24InformationDemoPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_))
<BR><BR>[Stack]<UL><LI>Max Depth = 192 + Unknown Stack Size
<LI>Call Chain = T2* touchgfx::makeTransition&lang;InformationDemoView, InformationDemoPresenter, touchgfx::NoTransition, Model&rang;(touchgfx::Screen**, touchgfx::Presenter**, touchgfx::MVPHeap&, touchgfx::Transition**, T4*) &rArr; InformationDemoView::InformationDemoView() &rArr; InformationDemoViewBase::InformationDemoViewBase() &rArr; touchgfx::Image::setBitmap(const touchgfx::Bitmap&) &rArr; touchgfx::Bitmap::getHeight() const &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[51f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InformationDemoPresenter::InformationDemoPresenter(InformationDemoView&)
<LI><a href="#[3ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InformationDemoView::InformationDemoView()
<LI><a href="#[414]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::finalizeTransition(touchgfx::Screen*, touchgfx::Presenter*, touchgfx::Transition*)
<LI><a href="#[412]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::prepareTransition(touchgfx::Screen**, touchgfx::Presenter**, touchgfx::Transition**)
<LI><a href="#[516]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;T1& touchgfx::AbstractPartition::at&lang;touchgfx::NoTransition&rang;(unsigned short)
<LI><a href="#[517]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::NoTransition::NoTransition()
<LI><a href="#[519]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Model::bind(ModelListener*)
<LI><a href="#[51a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ModelListener::bind(Model*)
<LI><a href="#[2b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_assert
</UL>
<BR>[Called By]<UL><LI><a href="#[e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FrontendApplicationBase::gotoInformationDemoScreenNoTransitionImpl()
</UL>

<P><STRONG><a name="[516]"></a>T1& touchgfx::AbstractPartition::at&lang;touchgfx::NoTransition&rang;(unsigned short)</STRONG> (Thumb, 18 bytes, Stack size 16 bytes, frontendapplicationbase.o(t._ZN8touchgfx17AbstractPartition2atINS_12NoTransitionEEERT_t))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = T1& touchgfx::AbstractPartition::at&lang;touchgfx::NoTransition&rang;(unsigned short)
</UL>
<BR>[Called By]<UL><LI><a href="#[3b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;T2* touchgfx::makeTransition&lang;InformationDemoView, InformationDemoPresenter, touchgfx::NoTransition, Model&rang;(touchgfx::Screen**, touchgfx::Presenter**, touchgfx::MVPHeap&, touchgfx::Transition**, T4*)
<LI><a href="#[3b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;T2* touchgfx::makeTransition&lang;SelectingMenuView, SelectingMenuPresenter, touchgfx::NoTransition, Model&rang;(touchgfx::Screen**, touchgfx::Presenter**, touchgfx::MVPHeap&, touchgfx::Transition**, T4*)
<LI><a href="#[3b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;T2* touchgfx::makeTransition&lang;SplashScreenView, SplashScreenPresenter, touchgfx::NoTransition, Model&rang;(touchgfx::Screen**, touchgfx::Presenter**, touchgfx::MVPHeap&, touchgfx::Transition**, T4*)
<LI><a href="#[3b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;T2* touchgfx::makeTransition&lang;InformationView, InformationPresenter, touchgfx::NoTransition, Model&rang;(touchgfx::Screen**, touchgfx::Presenter**, touchgfx::MVPHeap&, touchgfx::Transition**, T4*)
<LI><a href="#[3b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;T2* touchgfx::makeTransition&lang;SettingsView, SettingsPresenter, touchgfx::NoTransition, Model&rang;(touchgfx::Screen**, touchgfx::Presenter**, touchgfx::MVPHeap&, touchgfx::Transition**, T4*)
<LI><a href="#[3b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;T2* touchgfx::makeTransition&lang;CookingView, CookingPresenter, touchgfx::NoTransition, Model&rang;(touchgfx::Screen**, touchgfx::Presenter**, touchgfx::MVPHeap&, touchgfx::Transition**, T4*)
</UL>

<P><STRONG><a name="[38e]"></a>touchgfx::BoxWithBorderButtonStyle&lang;touchgfx::ClickButtonTrigger&rang;::setBorderSize(unsigned char)</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, selectingmenuviewbase.o(t._ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEE13setBorderSizeEh))
<BR><BR>[Called By]<UL><LI><a href="#[3a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SelectingMenuViewBase::SelectingMenuViewBase()
<LI><a href="#[362]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SettingsViewBase::SettingsViewBase()
</UL>

<P><STRONG><a name="[239]"></a>touchgfx::BoxWithBorderButtonStyle&lang;touchgfx::ClickButtonTrigger&rang;::handleAlphaUpdated()</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, informationdemoviewbase.o(t._ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEE18handleAlphaUpdatedEv))
<BR>[Address Reference Count : 1]<UL><LI> informationdemoviewbase.o(.constdata__ZTVN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEE)
</UL>
<P><STRONG><a name="[238]"></a>touchgfx::BoxWithBorderButtonStyle&lang;touchgfx::ClickButtonTrigger&rang;::handlePressedUpdated()</STRONG> (Thumb, 68 bytes, Stack size 16 bytes, informationdemoviewbase.o(t._ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEE20handlePressedUpdatedEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = touchgfx::BoxWithBorderButtonStyle&lang;touchgfx::ClickButtonTrigger&rang;::handlePressedUpdated() &rArr; touchgfx::Box::setColor(touchgfx::colortype)
</UL>
<BR>[Calls]<UL><LI><a href="#[38c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Box::setColor(touchgfx::colortype)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> informationdemoviewbase.o(.constdata__ZTVN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEE)
</UL>
<P><STRONG><a name="[38f]"></a>touchgfx::BoxWithBorderButtonStyle&lang;touchgfx::ClickButtonTrigger&rang;::setBoxWithBorderColors(touchgfx::colortype, touchgfx::colortype, touchgfx::colortype, touchgfx::colortype)</STRONG> (Thumb, 32 bytes, Stack size 24 bytes, selectingmenuviewbase.o(t._ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEE22setBoxWithBorderColorsENS_9colortypeES3_S3_S3_))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = touchgfx::BoxWithBorderButtonStyle&lang;touchgfx::ClickButtonTrigger&rang;::setBoxWithBorderColors(touchgfx::colortype, touchgfx::colortype, touchgfx::colortype, touchgfx::colortype)
</UL>
<BR>[Called By]<UL><LI><a href="#[3a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SelectingMenuViewBase::SelectingMenuViewBase()
<LI><a href="#[362]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SettingsViewBase::SettingsViewBase()
</UL>

<P><STRONG><a name="[38d]"></a>touchgfx::BoxWithBorderButtonStyle&lang;touchgfx::ClickButtonTrigger&rang;::setBoxWithBorderPosition(short, short, short, short)</STRONG> (Thumb, 38 bytes, Stack size 32 bytes, selectingmenuviewbase.o(t._ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEE24setBoxWithBorderPositionEssss))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = touchgfx::BoxWithBorderButtonStyle&lang;touchgfx::ClickButtonTrigger&rang;::setBoxWithBorderPosition(short, short, short, short) &rArr; touchgfx::Drawable::setPosition(short, short, short, short) &rArr; touchgfx::Drawable::setXY(short, short)
</UL>
<BR>[Calls]<UL><LI><a href="#[373]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Drawable::setPosition(short, short, short, short)
</UL>
<BR>[Called By]<UL><LI><a href="#[3a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SelectingMenuViewBase::SelectingMenuViewBase()
<LI><a href="#[362]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SettingsViewBase::SettingsViewBase()
</UL>

<P><STRONG><a name="[389]"></a>touchgfx::BoxWithBorderButtonStyle&lang;touchgfx::ClickButtonTrigger&rang;::BoxWithBorderButtonStyle()</STRONG> (Thumb, 138 bytes, Stack size 16 bytes, informationdemoviewbase.o(t._ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEC1Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 72 + Unknown Stack Size
<LI>Call Chain = touchgfx::BoxWithBorderButtonStyle&lang;touchgfx::ClickButtonTrigger&rang;::BoxWithBorderButtonStyle() &rArr; touchgfx::Container::add(touchgfx::Drawable&) &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[369]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::colortype::colortype(unsigned)
<LI><a href="#[350]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Drawable::setXY(short, short)
<LI><a href="#[20c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Container::add(touchgfx::Drawable&)
<LI><a href="#[520]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::colortype::colortype()
<LI><a href="#[386]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Box::Box()
<LI><a href="#[413]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::ClickButtonTrigger::ClickButtonTrigger()
<LI><a href="#[2d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[383]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InformationViewBase::InformationViewBase()
<LI><a href="#[3af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InformationDemoViewBase::InformationDemoViewBase()
<LI><a href="#[3a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SelectingMenuViewBase::SelectingMenuViewBase()
<LI><a href="#[362]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SettingsViewBase::SettingsViewBase()
</UL>

<P><STRONG><a name="[5f5]"></a>touchgfx::BoxWithBorderButtonStyle&lang;touchgfx::ClickButtonTrigger&rang;::BoxWithBorderButtonStyle__sub_object()</STRONG> (Thumb, 0 bytes, Stack size 16 bytes, informationdemoviewbase.o(t._ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEC1Ev), UNUSED)

<P><STRONG><a name="[4ad]"></a>T1 touchgfx::abs&lang;int&rang;(T1)</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, circle.o(t._ZN8touchgfx3absIiEET_S1_))
<BR><BR>[Called By]<UL><LI><a href="#[340]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Circle::getMinimalRectForUpdatedEndAngle(const touchgfx::CWRUtil::Q5&) const
<LI><a href="#[4ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Circle::calculateMinimalRect(touchgfx::CWRUtil::Q5, touchgfx::CWRUtil::Q5, touchgfx::CWRUtil::Q5&, touchgfx::CWRUtil::Q5&, touchgfx::CWRUtil::Q5&, touchgfx::CWRUtil::Q5&) const
<LI><a href="#[254]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Circle::drawCanvasWidget(const touchgfx::Rect&) const
</UL>

<P><STRONG><a name="[46c]"></a>T1 touchgfx::abs&lang;short&rang;(T1)</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, gestures.o(t._ZN8touchgfx3absIsEET_S1_))
<BR><BR>[Called By]<UL><LI><a href="#[425]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Gestures::registerDragEvent(unsigned short, unsigned short, unsigned short, unsigned short)
</UL>

<P><STRONG><a name="[33a]"></a>void touchgfx::Circle::updateArcEnd&lang;float&rang;(T1)</STRONG> (Thumb, 98 bytes, Stack size 40 bytes, cookingview.o(t._ZN8touchgfx6Circle12updateArcEndIfEEvT_))
<BR><BR>[Stack]<UL><LI>Max Depth = 416<LI>Call Chain = void touchgfx::Circle::updateArcEnd&lang;float&rang;(T1) &rArr; touchgfx::Circle::getMinimalRectForUpdatedEndAngle(const touchgfx::CWRUtil::Q5&) const &rArr; touchgfx::Circle::getMinimalRect(touchgfx::CWRUtil::Q5, touchgfx::CWRUtil::Q5) const &rArr; touchgfx::Circle::calculateMinimalRect(touchgfx::CWRUtil::Q5, touchgfx::CWRUtil::Q5, touchgfx::CWRUtil::Q5&, touchgfx::CWRUtil::Q5&, touchgfx::CWRUtil::Q5&, touchgfx::CWRUtil::Q5&) const &rArr; touchgfx::Circle::updateMinMaxAngleLine(const touchgfx::CWRUtil::Q5&, const touchgfx::CWRUtil::Q5&, touchgfx::CWRUtil::Q5&, touchgfx::CWRUtil::Q5&, touchgfx::CWRUtil::Q5&, touchgfx::CWRUtil::Q5&) const &rArr; touchgfx::CWRUtil::cosine(touchgfx::CWRUtil::Q5) &rArr; touchgfx::CWRUtil::sine(touchgfx::CWRUtil::Q5) &rArr; touchgfx::muldiv(int, int, int, int&) &rArr; touchgfx::muldivu(unsigned, unsigned, unsigned, unsigned&) &rArr;  touchgfx::muldivu(unsigned, unsigned, unsigned, unsigned&) (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[340]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Circle::getMinimalRectForUpdatedEndAngle(const touchgfx::CWRUtil::Q5&) const
<LI><a href="#[33f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::CWRUtil::Q5::operator int() const
<LI><a href="#[377]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::CWRUtil::Q5::Q5(int)
</UL>
<BR>[Called By]<UL><LI><a href="#[337]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CookingView::EXITSCREEN_STATEMACHINE()
<LI><a href="#[338]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CookingView::updateCircleTimer()
<LI><a href="#[331]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CookingView::customSetupScreen()
</UL>

<P><STRONG><a name="[3d9]"></a>touchgfx::Vector&lang;touchgfx::Rect, (unsigned short)8&rang;::quickRemoveAt(unsigned short)</STRONG> (Thumb, 44 bytes, Stack size 8 bytes, application.o(t._ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt))
<BR><BR>[Stack]<UL><LI>Max Depth = 56 + Unknown Stack Size
<LI>Call Chain = touchgfx::Vector&lang;touchgfx::Rect, (unsigned short)8&rang;::quickRemoveAt(unsigned short) &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[2ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;abort
</UL>
<BR>[Called By]<UL><LI><a href="#[17c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Application::drawCachedAreas()
<LI><a href="#[17e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Application::invalidateArea(touchgfx::Rect)
</UL>

<P><STRONG><a name="[3dd]"></a>touchgfx::Vector&lang;touchgfx::Rect, (unsigned short)8&rang;::add(touchgfx::Rect)</STRONG> (Thumb, 30 bytes, Stack size 8 bytes, application.o(t._ZN8touchgfx6VectorINS_4RectELt8EE3addES1_))
<BR><BR>[Stack]<UL><LI>Max Depth = 56 + Unknown Stack Size
<LI>Call Chain = touchgfx::Vector&lang;touchgfx::Rect, (unsigned short)8&rang;::add(touchgfx::Rect) &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[2ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;abort
</UL>
<BR>[Called By]<UL><LI><a href="#[17c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Application::drawCachedAreas()
<LI><a href="#[17e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Application::invalidateArea(touchgfx::Rect)
</UL>

<P><STRONG><a name="[3df]"></a>touchgfx::Vector&lang;touchgfx::Rect, (unsigned short)8&rang;::Vector()</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, application.o(t._ZN8touchgfx6VectorINS_4RectELt8EEC1Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = touchgfx::Vector&lang;touchgfx::Rect, (unsigned short)8&rang;::Vector() &rArr; __aeabi_vec_ctor_nocookie_nodtor
</UL>
<BR>[Calls]<UL><LI><a href="#[521]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_vec_ctor_nocookie_nodtor
</UL>
<BR>[Called By]<UL><LI><a href="#[17c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Application::drawCachedAreas()
<LI><a href="#[3b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Application::Application()
</UL>

<P><STRONG><a name="[5f6]"></a>touchgfx::Vector&lang;touchgfx::Rect, (unsigned short)8&rang;::Vector__sub_object()</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, application.o(t._ZN8touchgfx6VectorINS_4RectELt8EEC1Ev), UNUSED)

<P><STRONG><a name="[33b]"></a>touchgfx::CWRUtil::Q5 touchgfx::CWRUtil::toQ5&lang;int&rang;(T1)</STRONG> (Thumb, 16 bytes, Stack size 16 bytes, cookingview.o(t._ZN8touchgfx7CWRUtil4toQ5IiEENS0_2Q5ET_))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = touchgfx::CWRUtil::Q5 touchgfx::CWRUtil::toQ5&lang;int&rang;(T1)
</UL>
<BR>[Calls]<UL><LI><a href="#[377]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::CWRUtil::Q5::Q5(int)
</UL>
<BR>[Called By]<UL><LI><a href="#[340]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Circle::getMinimalRectForUpdatedEndAngle(const touchgfx::CWRUtil::Q5&) const
<LI><a href="#[349]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CookingViewBase::CookingViewBase()
<LI><a href="#[337]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CookingView::EXITSCREEN_STATEMACHINE()
<LI><a href="#[331]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CookingView::customSetupScreen()
<LI><a href="#[36e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Circle::Circle()
<LI><a href="#[444]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Canvas::Canvas(const touchgfx::AbstractPainter*, const touchgfx::Rect&, const touchgfx::Rect&, unsigned char)
<LI><a href="#[4ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Circle::calculateMinimalRect(touchgfx::CWRUtil::Q5, touchgfx::CWRUtil::Q5, touchgfx::CWRUtil::Q5&, touchgfx::CWRUtil::Q5&, touchgfx::CWRUtil::Q5&, touchgfx::CWRUtil::Q5&) const
<LI><a href="#[254]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Circle::drawCanvasWidget(const touchgfx::Rect&) const
<LI><a href="#[4aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Circle::getMinimalRect(touchgfx::CWRUtil::Q5, touchgfx::CWRUtil::Q5) const
<LI><a href="#[455]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::CWRUtil::cosine(touchgfx::CWRUtil::Q5)
<LI><a href="#[452]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::CWRUtil::sine(touchgfx::CWRUtil::Q5)
<LI><a href="#[440]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Canvas::transformFrameBufferToDisplay(touchgfx::CWRUtil::Q5&, touchgfx::CWRUtil::Q5&) const
</UL>

<P><STRONG><a name="[259]"></a>touchgfx::Callback&lang;CookingViewBase, const touchgfx::AbstractButton&, void, void&rang;::execute(const touchgfx::AbstractButton&)</STRONG> (Thumb, 48 bytes, Stack size 24 bytes, cookingviewbase.o(t._ZN8touchgfx8CallbackI15CookingViewBaseRKNS_14AbstractButtonEvvE7executeES4_))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = touchgfx::Callback&lang;CookingViewBase, const touchgfx::AbstractButton&, void, void&rang;::execute(const touchgfx::AbstractButton&)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> cookingviewbase.o(.constdata__ZTVN8touchgfx8CallbackI15CookingViewBaseRKNS_14AbstractButtonEvvEE)
</UL>
<P><STRONG><a name="[25c]"></a>touchgfx::Callback&lang;SettingsViewBase, const touchgfx::AbstractButton&, void, void&rang;::execute(const touchgfx::AbstractButton&)</STRONG> (Thumb, 48 bytes, Stack size 24 bytes, settingsviewbase.o(t._ZN8touchgfx8CallbackI16SettingsViewBaseRKNS_14AbstractButtonEvvE7executeES4_))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = touchgfx::Callback&lang;SettingsViewBase, const touchgfx::AbstractButton&, void, void&rang;::execute(const touchgfx::AbstractButton&)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> settingsviewbase.o(.constdata__ZTVN8touchgfx8CallbackI16SettingsViewBaseRKNS_14AbstractButtonEvvEE)
</UL>
<P><STRONG><a name="[25f]"></a>touchgfx::Callback&lang;SettingsViewBase, const touchgfx::AbstractButtonContainer&, void, void&rang;::execute(const touchgfx::AbstractButtonContainer&)</STRONG> (Thumb, 48 bytes, Stack size 24 bytes, settingsviewbase.o(t._ZN8touchgfx8CallbackI16SettingsViewBaseRKNS_23AbstractButtonContainerEvvE7executeES4_))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = touchgfx::Callback&lang;SettingsViewBase, const touchgfx::AbstractButtonContainer&, void, void&rang;::execute(const touchgfx::AbstractButtonContainer&)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> settingsviewbase.o(.constdata__ZTVN8touchgfx8CallbackI16SettingsViewBaseRKNS_23AbstractButtonContainerEvvEE)
</UL>
<P><STRONG><a name="[262]"></a>touchgfx::Callback&lang;InformationViewBase, const touchgfx::AbstractButtonContainer&, void, void&rang;::execute(const touchgfx::AbstractButtonContainer&)</STRONG> (Thumb, 48 bytes, Stack size 24 bytes, informationviewbase.o(t._ZN8touchgfx8CallbackI19InformationViewBaseRKNS_23AbstractButtonContainerEvvE7executeES4_))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = touchgfx::Callback&lang;InformationViewBase, const touchgfx::AbstractButtonContainer&, void, void&rang;::execute(const touchgfx::AbstractButtonContainer&)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> informationviewbase.o(.constdata__ZTVN8touchgfx8CallbackI19InformationViewBaseRKNS_23AbstractButtonContainerEvvEE)
</UL>
<P><STRONG><a name="[265]"></a>touchgfx::Callback&lang;SplashScreenViewBase, const touchgfx::FadeAnimator&lang;touchgfx::Image&rang;&, void, void&rang;::execute(const touchgfx::FadeAnimator&lang;touchgfx::Image&rang;&)</STRONG> (Thumb, 48 bytes, Stack size 24 bytes, splashscreenviewbase.o(t._ZN8touchgfx8CallbackI20SplashScreenViewBaseRKNS_12FadeAnimatorINS_5ImageEEEvvE7executeES6_))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = touchgfx::Callback&lang;SplashScreenViewBase, const touchgfx::FadeAnimator&lang;touchgfx::Image&rang;&, void, void&rang;::execute(const touchgfx::FadeAnimator&lang;touchgfx::Image&rang;&)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> splashscreenviewbase.o(.constdata__ZTVN8touchgfx8CallbackI20SplashScreenViewBaseRKNS_12FadeAnimatorINS_5ImageEEEvvEE)
</UL>
<P><STRONG><a name="[268]"></a>touchgfx::Callback&lang;SelectingMenuViewBase, const touchgfx::AbstractButton&, void, void&rang;::execute(const touchgfx::AbstractButton&)</STRONG> (Thumb, 48 bytes, Stack size 24 bytes, selectingmenuviewbase.o(t._ZN8touchgfx8CallbackI21SelectingMenuViewBaseRKNS_14AbstractButtonEvvE7executeES4_))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = touchgfx::Callback&lang;SelectingMenuViewBase, const touchgfx::AbstractButton&, void, void&rang;::execute(const touchgfx::AbstractButton&)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> selectingmenuviewbase.o(.constdata__ZTVN8touchgfx8CallbackI21SelectingMenuViewBaseRKNS_14AbstractButtonEvvEE)
</UL>
<P><STRONG><a name="[26b]"></a>touchgfx::Callback&lang;SelectingMenuViewBase, const touchgfx::AbstractButtonContainer&, void, void&rang;::execute(const touchgfx::AbstractButtonContainer&)</STRONG> (Thumb, 48 bytes, Stack size 24 bytes, selectingmenuviewbase.o(t._ZN8touchgfx8CallbackI21SelectingMenuViewBaseRKNS_23AbstractButtonContainerEvvE7executeES4_))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = touchgfx::Callback&lang;SelectingMenuViewBase, const touchgfx::AbstractButtonContainer&, void, void&rang;::execute(const touchgfx::AbstractButtonContainer&)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> selectingmenuviewbase.o(.constdata__ZTVN8touchgfx8CallbackI21SelectingMenuViewBaseRKNS_23AbstractButtonContainerEvvEE)
</UL>
<P><STRONG><a name="[26e]"></a>touchgfx::Callback&lang;FrontendApplicationBase, void, void, void&rang;::execute()</STRONG> (Thumb, 44 bytes, Stack size 24 bytes, frontendapplicationbase.o(t._ZN8touchgfx8CallbackI23FrontendApplicationBasevvvE7executeEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = touchgfx::Callback&lang;FrontendApplicationBase, void, void, void&rang;::execute()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> frontendapplicationbase.o(.constdata__ZTVN8touchgfx8CallbackI23FrontendApplicationBasevvvEE)
</UL>
<P><STRONG><a name="[3b1]"></a>touchgfx::Callback&lang;FrontendApplicationBase, void, void, void&rang;::Callback(FrontendApplicationBase*, void(FrontendApplicationBase::*)())</STRONG> (Thumb, 34 bytes, Stack size 32 bytes, frontendapplicationbase.o(t._ZN8touchgfx8CallbackI23FrontendApplicationBasevvvEC1EPS1_MS1_FvvE))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = touchgfx::Callback&lang;FrontendApplicationBase, void, void, void&rang;::Callback(FrontendApplicationBase*, void(FrontendApplicationBase::*)())
</UL>
<BR>[Calls]<UL><LI><a href="#[3ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::GenericCallback&lang;void, void, void&rang;::GenericCallback__sub_object()
</UL>
<BR>[Called By]<UL><LI><a href="#[384]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FrontendApplicationBase::gotoSplashScreenScreenNoTransition()
<LI><a href="#[365]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FrontendApplicationBase::gotoSelectingMenuScreenNoTransition()
<LI><a href="#[366]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FrontendApplicationBase::gotoInformationScreenNoTransition()
<LI><a href="#[364]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FrontendApplicationBase::gotoSettingsScreenNoTransition()
<LI><a href="#[3b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FrontendApplicationBase::gotoInformationDemoScreenNoTransition()
<LI><a href="#[385]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FrontendApplicationBase::gotoCookingScreenNoTransition()
</UL>

<P><STRONG><a name="[5f7]"></a>touchgfx::Callback&lang;FrontendApplicationBase, void, void, void&rang;::Callback__sub_object(FrontendApplicationBase*, void(FrontendApplicationBase::*)())</STRONG> (Thumb, 0 bytes, Stack size 32 bytes, frontendapplicationbase.o(t._ZN8touchgfx8CallbackI23FrontendApplicationBasevvvEC1EPS1_MS1_FvvE), UNUSED)

<P><STRONG><a name="[271]"></a>touchgfx::Callback&lang;InformationDemoViewBase, const touchgfx::AbstractButtonContainer&, void, void&rang;::execute(const touchgfx::AbstractButtonContainer&)</STRONG> (Thumb, 48 bytes, Stack size 24 bytes, informationdemoviewbase.o(t._ZN8touchgfx8CallbackI23InformationDemoViewBaseRKNS_23AbstractButtonContainerEvvE7executeES4_))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = touchgfx::Callback&lang;InformationDemoViewBase, const touchgfx::AbstractButtonContainer&, void, void&rang;::execute(const touchgfx::AbstractButtonContainer&)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> informationdemoviewbase.o(.constdata__ZTVN8touchgfx8CallbackI23InformationDemoViewBaseRKNS_23AbstractButtonContainerEvvEE)
</UL>
<P><STRONG><a name="[286]"></a>touchgfx::Partition&lang;touchgfx::meta::TypeList&lang;CookingView, touchgfx::meta::TypeList&lang;touchgfx::meta::Nil, touchgfx::meta::Nil&rang;&rang;, (unsigned short)1&rang;::element_size()</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, touchgfxconfiguration.o(t._ZN8touchgfx9PartitionINS_4meta8TypeListI11CookingViewNS2_INS1_3NilES4_EEEELt1EE12element_sizeEv))
<BR>[Address Reference Count : 1]<UL><LI> touchgfxconfiguration.o(.constdata__ZTVN8touchgfx9PartitionINS_4meta8TypeListI11CookingViewNS2_INS1_3NilES4_EEEELt1EEE)
</UL>
<P><STRONG><a name="[287]"></a>touchgfx::Partition&lang;touchgfx::meta::TypeList&lang;CookingView, touchgfx::meta::TypeList&lang;touchgfx::meta::Nil, touchgfx::meta::Nil&rang;&rang;, (unsigned short)1&rang;::element(unsigned short)</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, touchgfxconfiguration.o(t._ZN8touchgfx9PartitionINS_4meta8TypeListI11CookingViewNS2_INS1_3NilES4_EEEELt1EE7elementEt))
<BR>[Address Reference Count : 1]<UL><LI> touchgfxconfiguration.o(.constdata__ZTVN8touchgfx9PartitionINS_4meta8TypeListI11CookingViewNS2_INS1_3NilES4_EEEELt1EEE)
</UL>
<P><STRONG><a name="[289]"></a>touchgfx::Partition&lang;touchgfx::meta::TypeList&lang;InformationPresenter, touchgfx::meta::TypeList&lang;touchgfx::meta::Nil, touchgfx::meta::Nil&rang;&rang;, (unsigned short)1&rang;::element_size()</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, touchgfxconfiguration.o(t._ZN8touchgfx9PartitionINS_4meta8TypeListI20InformationPresenterNS2_INS1_3NilES4_EEEELt1EE12element_sizeEv))
<BR>[Address Reference Count : 1]<UL><LI> touchgfxconfiguration.o(.constdata__ZTVN8touchgfx9PartitionINS_4meta8TypeListI20InformationPresenterNS2_INS1_3NilES4_EEEELt1EEE)
</UL>
<P><STRONG><a name="[28a]"></a>touchgfx::Partition&lang;touchgfx::meta::TypeList&lang;InformationPresenter, touchgfx::meta::TypeList&lang;touchgfx::meta::Nil, touchgfx::meta::Nil&rang;&rang;, (unsigned short)1&rang;::element(unsigned short)</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, touchgfxconfiguration.o(t._ZN8touchgfx9PartitionINS_4meta8TypeListI20InformationPresenterNS2_INS1_3NilES4_EEEELt1EE7elementEt))
<BR>[Address Reference Count : 1]<UL><LI> touchgfxconfiguration.o(.constdata__ZTVN8touchgfx9PartitionINS_4meta8TypeListI20InformationPresenterNS2_INS1_3NilES4_EEEELt1EEE)
</UL>
<P><STRONG><a name="[28c]"></a>touchgfx::Partition&lang;touchgfx::meta::TypeList&lang;touchgfx::NoTransition, touchgfx::meta::TypeList&lang;touchgfx::meta::Nil, touchgfx::meta::Nil&rang;&rang;, (unsigned short)1&rang;::element_size()</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, touchgfxconfiguration.o(t._ZN8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EE12element_sizeEv))
<BR>[Address Reference Count : 1]<UL><LI> touchgfxconfiguration.o(.constdata__ZTVN8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EEE)
</UL>
<P><STRONG><a name="[28d]"></a>touchgfx::Partition&lang;touchgfx::meta::TypeList&lang;touchgfx::NoTransition, touchgfx::meta::TypeList&lang;touchgfx::meta::Nil, touchgfx::meta::Nil&rang;&rang;, (unsigned short)1&rang;::element(unsigned short)</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, touchgfxconfiguration.o(t._ZN8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EE7elementEt))
<BR>[Address Reference Count : 1]<UL><LI> touchgfxconfiguration.o(.constdata__ZTVN8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EEE)
</UL>
<P><STRONG><a name="[3a1]"></a>touchgfx::FadeAnimator&lang;touchgfx::Image&rang;::isFadeAnimationRunning() const</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, selectingmenuview.o(t._ZNK8touchgfx12FadeAnimatorINS_5ImageEE22isFadeAnimationRunningEv))
<BR><BR>[Called By]<UL><LI><a href="#[39c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SelectingMenuView::ANIMATION_CHANGE_STATEMACHINE()
<LI><a href="#[39b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SelectingMenuView::ENTERSCREEN_STATEMACHINE()
<LI><a href="#[39d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SelectingMenuView::EXITSCREEN_STATEMACHINE()
</UL>

<P><STRONG><a name="[35e]"></a>touchgfx::FadeAnimator&lang;touchgfx::TextArea&rang;::isFadeAnimationRunning() const</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, settingsview.o(t._ZNK8touchgfx12FadeAnimatorINS_8TextAreaEE22isFadeAnimationRunningEv))
<BR><BR>[Called By]<UL><LI><a href="#[356]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SettingsView::ENTERSCREEN_STATEMACHINE()
<LI><a href="#[357]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SettingsView::EXITSCREEN_STATEMACHINE()
</UL>

<P><STRONG><a name="[400]"></a>touchgfx::TextProvider::circularBuffer&lang;(unsigned)10&rang;::isFull() const</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, textprovider.o(t._ZNK8touchgfx12TextProvider14circularBufferILj10EE6isFullEv))
<BR><BR>[Called By]<UL><LI><a href="#[3f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextProvider::fillInputBuffer()
</UL>

<P><STRONG><a name="[453]"></a>T1 touchgfx::CWRUtil::Q5::to&lang;int&rang;() const</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, circle.o(t._ZNK8touchgfx7CWRUtil2Q52toIiEET_v))
<BR><BR>[Called By]<UL><LI><a href="#[254]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Circle::drawCanvasWidget(const touchgfx::Rect&) const
<LI><a href="#[4aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Circle::getMinimalRect(touchgfx::CWRUtil::Q5, touchgfx::CWRUtil::Q5) const
<LI><a href="#[452]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::CWRUtil::sine(touchgfx::CWRUtil::Q5)
</UL>

<P><STRONG><a name="[4ac]"></a>T1 touchgfx::CWRUtil::Q5::to&lang;short&rang;() const</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, circle.o(t._ZNK8touchgfx7CWRUtil2Q52toIsEET_v))
<BR><BR>[Called By]<UL><LI><a href="#[254]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Circle::drawCanvasWidget(const touchgfx::Rect&) const
</UL>

<P><STRONG><a name="[25a]"></a>touchgfx::Callback&lang;CookingViewBase, const touchgfx::AbstractButton&, void, void&rang;::isValid() const</STRONG> (Thumb, 36 bytes, Stack size 0 bytes, cookingviewbase.o(t._ZNK8touchgfx8CallbackI15CookingViewBaseRKNS_14AbstractButtonEvvE7isValidEv))
<BR>[Address Reference Count : 1]<UL><LI> cookingviewbase.o(.constdata__ZTVN8touchgfx8CallbackI15CookingViewBaseRKNS_14AbstractButtonEvvEE)
</UL>
<P><STRONG><a name="[25d]"></a>touchgfx::Callback&lang;SettingsViewBase, const touchgfx::AbstractButton&, void, void&rang;::isValid() const</STRONG> (Thumb, 36 bytes, Stack size 0 bytes, settingsviewbase.o(t._ZNK8touchgfx8CallbackI16SettingsViewBaseRKNS_14AbstractButtonEvvE7isValidEv))
<BR>[Address Reference Count : 1]<UL><LI> settingsviewbase.o(.constdata__ZTVN8touchgfx8CallbackI16SettingsViewBaseRKNS_14AbstractButtonEvvEE)
</UL>
<P><STRONG><a name="[260]"></a>touchgfx::Callback&lang;SettingsViewBase, const touchgfx::AbstractButtonContainer&, void, void&rang;::isValid() const</STRONG> (Thumb, 36 bytes, Stack size 0 bytes, settingsviewbase.o(t._ZNK8touchgfx8CallbackI16SettingsViewBaseRKNS_23AbstractButtonContainerEvvE7isValidEv))
<BR>[Address Reference Count : 1]<UL><LI> settingsviewbase.o(.constdata__ZTVN8touchgfx8CallbackI16SettingsViewBaseRKNS_23AbstractButtonContainerEvvEE)
</UL>
<P><STRONG><a name="[263]"></a>touchgfx::Callback&lang;InformationViewBase, const touchgfx::AbstractButtonContainer&, void, void&rang;::isValid() const</STRONG> (Thumb, 36 bytes, Stack size 0 bytes, informationviewbase.o(t._ZNK8touchgfx8CallbackI19InformationViewBaseRKNS_23AbstractButtonContainerEvvE7isValidEv))
<BR>[Address Reference Count : 1]<UL><LI> informationviewbase.o(.constdata__ZTVN8touchgfx8CallbackI19InformationViewBaseRKNS_23AbstractButtonContainerEvvEE)
</UL>
<P><STRONG><a name="[266]"></a>touchgfx::Callback&lang;SplashScreenViewBase, const touchgfx::FadeAnimator&lang;touchgfx::Image&rang;&, void, void&rang;::isValid() const</STRONG> (Thumb, 36 bytes, Stack size 0 bytes, splashscreenviewbase.o(t._ZNK8touchgfx8CallbackI20SplashScreenViewBaseRKNS_12FadeAnimatorINS_5ImageEEEvvE7isValidEv))
<BR>[Address Reference Count : 1]<UL><LI> splashscreenviewbase.o(.constdata__ZTVN8touchgfx8CallbackI20SplashScreenViewBaseRKNS_12FadeAnimatorINS_5ImageEEEvvEE)
</UL>
<P><STRONG><a name="[269]"></a>touchgfx::Callback&lang;SelectingMenuViewBase, const touchgfx::AbstractButton&, void, void&rang;::isValid() const</STRONG> (Thumb, 36 bytes, Stack size 0 bytes, selectingmenuviewbase.o(t._ZNK8touchgfx8CallbackI21SelectingMenuViewBaseRKNS_14AbstractButtonEvvE7isValidEv))
<BR>[Address Reference Count : 1]<UL><LI> selectingmenuviewbase.o(.constdata__ZTVN8touchgfx8CallbackI21SelectingMenuViewBaseRKNS_14AbstractButtonEvvEE)
</UL>
<P><STRONG><a name="[26c]"></a>touchgfx::Callback&lang;SelectingMenuViewBase, const touchgfx::AbstractButtonContainer&, void, void&rang;::isValid() const</STRONG> (Thumb, 36 bytes, Stack size 0 bytes, selectingmenuviewbase.o(t._ZNK8touchgfx8CallbackI21SelectingMenuViewBaseRKNS_23AbstractButtonContainerEvvE7isValidEv))
<BR>[Address Reference Count : 1]<UL><LI> selectingmenuviewbase.o(.constdata__ZTVN8touchgfx8CallbackI21SelectingMenuViewBaseRKNS_23AbstractButtonContainerEvvEE)
</UL>
<P><STRONG><a name="[26f]"></a>touchgfx::Callback&lang;FrontendApplicationBase, void, void, void&rang;::isValid() const</STRONG> (Thumb, 36 bytes, Stack size 0 bytes, frontendapplicationbase.o(t._ZNK8touchgfx8CallbackI23FrontendApplicationBasevvvE7isValidEv))
<BR>[Address Reference Count : 1]<UL><LI> frontendapplicationbase.o(.constdata__ZTVN8touchgfx8CallbackI23FrontendApplicationBasevvvEE)
</UL>
<P><STRONG><a name="[272]"></a>touchgfx::Callback&lang;InformationDemoViewBase, const touchgfx::AbstractButtonContainer&, void, void&rang;::isValid() const</STRONG> (Thumb, 36 bytes, Stack size 0 bytes, informationdemoviewbase.o(t._ZNK8touchgfx8CallbackI23InformationDemoViewBaseRKNS_23AbstractButtonContainerEvvE7isValidEv))
<BR>[Address Reference Count : 1]<UL><LI> informationdemoviewbase.o(.constdata__ZTVN8touchgfx8CallbackI23InformationDemoViewBaseRKNS_23AbstractButtonContainerEvvEE)
</UL>
<P><STRONG><a name="[29b]"></a>_fp_init</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, fpinit.o(x$fpl$fpinit))
<BR><BR>[Called By]<UL><LI><a href="#[29a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_lib_init_fp_1
</UL>

<P><STRONG><a name="[5f8]"></a>__fplib_config_fpu_vfp</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, fpinit.o(x$fpl$fpinit), UNUSED)

<P><STRONG><a name="[5f9]"></a>__fplib_config_pureend_doubles</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, fpinit.o(x$fpl$fpinit), UNUSED)
<P>
<H3>
Local Symbols
</H3>
<P><STRONG><a name="[2d7]"></a>HAL_FMC_MspInit</STRONG> (Thumb, 300 bytes, Stack size 232 bytes, fmc.o(i.HAL_FMC_MspInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 280<LI>Call Chain = HAL_FMC_MspInit &rArr; HAL_RCCEx_PeriphCLKConfig &rArr; RCCEx_PLL3_Config
</UL>
<BR>[Calls]<UL><LI><a href="#[2db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_Init
<LI><a href="#[2d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCCEx_PeriphCLKConfig
<LI><a href="#[2da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Error_Handler
<LI><a href="#[2d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[2fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SDRAM_MspInit
</UL>

<P><STRONG><a name="[2f2]"></a>__NVIC_GetPriorityGrouping</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, stm32h7xx_hal_cortex.o(i.__NVIC_GetPriorityGrouping))
<BR><BR>[Called By]<UL><LI><a href="#[2d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_NVIC_SetPriority
</UL>

<P><STRONG><a name="[2f3]"></a>__NVIC_SetPriority</STRONG> (Thumb, 32 bytes, Stack size 8 bytes, stm32h7xx_hal_cortex.o(i.__NVIC_SetPriority))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = __NVIC_SetPriority
</UL>
<BR>[Called By]<UL><LI><a href="#[2d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_NVIC_SetPriority
</UL>

<P><STRONG><a name="[2f5]"></a>RCCEx_PLL2_Config</STRONG> (Thumb, 350 bytes, Stack size 24 bytes, stm32h7xx_hal_rcc_ex.o(i.RCCEx_PLL2_Config))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = RCCEx_PLL2_Config
</UL>
<BR>[Calls]<UL><LI><a href="#[2d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GetTick
</UL>
<BR>[Called By]<UL><LI><a href="#[2d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCCEx_PeriphCLKConfig
</UL>

<P><STRONG><a name="[2f6]"></a>RCCEx_PLL3_Config</STRONG> (Thumb, 350 bytes, Stack size 24 bytes, stm32h7xx_hal_rcc_ex.o(i.RCCEx_PLL3_Config))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = RCCEx_PLL3_Config
</UL>
<BR>[Calls]<UL><LI><a href="#[2d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GetTick
</UL>
<BR>[Called By]<UL><LI><a href="#[2d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCCEx_PeriphCLKConfig
</UL>

<P><STRONG><a name="[2e6]"></a>LTDC_SetConfig</STRONG> (Thumb, 528 bytes, Stack size 20 bytes, stm32h7xx_hal_ltdc.o(i.LTDC_SetConfig))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = LTDC_SetConfig
</UL>
<BR>[Called By]<UL><LI><a href="#[2e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_LTDC_ConfigLayer
</UL>

<P><STRONG><a name="[4dd]"></a>prvCopyDataFromQueue</STRONG> (Thumb, 42 bytes, Stack size 16 bytes, queue.o(i.prvCopyDataFromQueue))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = prvCopyDataFromQueue
</UL>
<BR>[Calls]<UL><LI><a href="#[3fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[4c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueReceiveFromISR
<LI><a href="#[4c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueReceive
</UL>

<P><STRONG><a name="[4de]"></a>prvCopyDataToQueue</STRONG> (Thumb, 126 bytes, Stack size 24 bytes, queue.o(i.prvCopyDataToQueue))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = prvCopyDataToQueue &rArr; xTaskPriorityDisinherit
</UL>
<BR>[Calls]<UL><LI><a href="#[4df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskPriorityDisinherit
<LI><a href="#[3fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[4c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericSendFromISR
<LI><a href="#[4c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericSend
</UL>

<P><STRONG><a name="[50e]"></a>prvGetDisinheritPriorityAfterTimeout</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, queue.o(i.prvGetDisinheritPriorityAfterTimeout))
<BR><BR>[Called By]<UL><LI><a href="#[4ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueSemaphoreTake
</UL>

<P><STRONG><a name="[4e1]"></a>prvInitialiseNewQueue</STRONG> (Thumb, 42 bytes, Stack size 24 bytes, queue.o(i.prvInitialiseNewQueue))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = prvInitialiseNewQueue &rArr; xQueueGenericReset &rArr; xTaskRemoveFromEventList
</UL>
<BR>[Calls]<UL><LI><a href="#[4e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericReset
</UL>
<BR>[Called By]<UL><LI><a href="#[4c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericCreateStatic
<LI><a href="#[4c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericCreate
</UL>

<P><STRONG><a name="[4e7]"></a>prvIsQueueEmpty</STRONG> (Thumb, 26 bytes, Stack size 16 bytes, queue.o(i.prvIsQueueEmpty))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = prvIsQueueEmpty
</UL>
<BR>[Calls]<UL><LI><a href="#[4d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortExitCritical
<LI><a href="#[4d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortEnterCritical
</UL>
<BR>[Called By]<UL><LI><a href="#[4ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueSemaphoreTake
<LI><a href="#[4c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueReceive
</UL>

<P><STRONG><a name="[4e8]"></a>prvIsQueueFull</STRONG> (Thumb, 30 bytes, Stack size 16 bytes, queue.o(i.prvIsQueueFull))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = prvIsQueueFull
</UL>
<BR>[Calls]<UL><LI><a href="#[4d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortExitCritical
<LI><a href="#[4d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortEnterCritical
</UL>
<BR>[Called By]<UL><LI><a href="#[4c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericSend
</UL>

<P><STRONG><a name="[4f4]"></a>prvUnlockQueue</STRONG> (Thumb, 126 bytes, Stack size 16 bytes, queue.o(i.prvUnlockQueue))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = prvUnlockQueue &rArr; xTaskRemoveFromEventList
</UL>
<BR>[Calls]<UL><LI><a href="#[4f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskRemoveFromEventList
<LI><a href="#[4f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskMissedYield
<LI><a href="#[4d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortExitCritical
<LI><a href="#[4d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortEnterCritical
</UL>
<BR>[Called By]<UL><LI><a href="#[4ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueSemaphoreTake
<LI><a href="#[4c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueReceive
<LI><a href="#[4c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericSend
<LI><a href="#[4f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vQueueWaitForMessageRestricted
</UL>

<P><STRONG><a name="[4d1]"></a>prvAddCurrentTaskToDelayedList</STRONG> (Thumb, 100 bytes, Stack size 24 bytes, tasks.o(i.prvAddCurrentTaskToDelayedList))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = prvAddCurrentTaskToDelayedList &rArr; vListInsert
</UL>
<BR>[Calls]<UL><LI><a href="#[4d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vListInsertEnd
<LI><a href="#[4d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vListInsert
<LI><a href="#[4d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uxListRemove
</UL>
<BR>[Called By]<UL><LI><a href="#[500]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskPlaceOnEventListRestricted
<LI><a href="#[501]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskPlaceOnEventList
<LI><a href="#[4c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskDelay
</UL>

<P><STRONG><a name="[4d5]"></a>prvAddNewTaskToReadyList</STRONG> (Thumb, 154 bytes, Stack size 8 bytes, tasks.o(i.prvAddNewTaskToReadyList))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = prvAddNewTaskToReadyList &rArr; prvInitialiseTaskLists
</UL>
<BR>[Calls]<UL><LI><a href="#[4d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vListInsertEnd
<LI><a href="#[4d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortExitCritical
<LI><a href="#[4d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortEnterCritical
<LI><a href="#[4d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvInitialiseTaskLists
</UL>
<BR>[Called By]<UL><LI><a href="#[4cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskCreateStatic
<LI><a href="#[4d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskCreate
</UL>

<P><STRONG><a name="[4db]"></a>prvCheckTasksWaitingTermination</STRONG> (Thumb, 60 bytes, Stack size 8 bytes, tasks.o(i.prvCheckTasksWaitingTermination))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = prvCheckTasksWaitingTermination &rArr; prvDeleteTCB &rArr; vPortFree &rArr; xTaskResumeAll &rArr; xTaskIncrementTick
</UL>
<BR>[Calls]<UL><LI><a href="#[4d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uxListRemove
<LI><a href="#[4d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortExitCritical
<LI><a href="#[4d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortEnterCritical
<LI><a href="#[4dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvDeleteTCB
</UL>
<BR>[Called By]<UL><LI><a href="#[da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvIdleTask
</UL>

<P><STRONG><a name="[4dc]"></a>prvDeleteTCB</STRONG> (Thumb, 80 bytes, Stack size 8 bytes, tasks.o(i.prvDeleteTCB))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = prvDeleteTCB &rArr; vPortFree &rArr; xTaskResumeAll &rArr; xTaskIncrementTick
</UL>
<BR>[Calls]<UL><LI><a href="#[4e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortFree
</UL>
<BR>[Called By]<UL><LI><a href="#[4db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvCheckTasksWaitingTermination
</UL>

<P><STRONG><a name="[da]"></a>prvIdleTask</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, tasks.o(i.prvIdleTask))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = prvIdleTask &rArr; prvCheckTasksWaitingTermination &rArr; prvDeleteTCB &rArr; vPortFree &rArr; xTaskResumeAll &rArr; xTaskIncrementTick
</UL>
<BR>[Calls]<UL><LI><a href="#[4db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvCheckTasksWaitingTermination
</UL>
<BR>[Address Reference Count : 1]<UL><LI> tasks.o(i.vTaskStartScheduler)
</UL>
<P><STRONG><a name="[4e3]"></a>prvInitialiseNewTask</STRONG> (Thumb, 190 bytes, Stack size 40 bytes, tasks.o(i.prvInitialiseNewTask))
<BR><BR>[Stack]<UL><LI>Max Depth = 40 + Unknown Stack Size
<LI>Call Chain = prvInitialiseNewTask
</UL>
<BR>[Calls]<UL><LI><a href="#[4e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vListInitialiseItem
<LI><a href="#[4e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pxPortInitialiseStack
<LI><a href="#[2b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memset
</UL>
<BR>[Called By]<UL><LI><a href="#[4cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskCreateStatic
<LI><a href="#[4d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskCreate
</UL>

<P><STRONG><a name="[4d7]"></a>prvInitialiseTaskLists</STRONG> (Thumb, 70 bytes, Stack size 8 bytes, tasks.o(i.prvInitialiseTaskLists))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = prvInitialiseTaskLists
</UL>
<BR>[Calls]<UL><LI><a href="#[4da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vListInitialise
</UL>
<BR>[Called By]<UL><LI><a href="#[4d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvAddNewTaskToReadyList
</UL>

<P><STRONG><a name="[50f]"></a>prvResetNextTaskUnblockTime</STRONG> (Thumb, 42 bytes, Stack size 0 bytes, tasks.o(i.prvResetNextTaskUnblockTime))
<BR><BR>[Called By]<UL><LI><a href="#[4ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskResumeAll
<LI><a href="#[509]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskIncrementTick
</UL>

<P><STRONG><a name="[4d9]"></a>prvCheckForValidListAndQueue</STRONG> (Thumb, 78 bytes, Stack size 8 bytes, timers.o(i.prvCheckForValidListAndQueue))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = prvCheckForValidListAndQueue &rArr; xQueueGenericCreateStatic &rArr; prvInitialiseNewQueue &rArr; xQueueGenericReset &rArr; xTaskRemoveFromEventList
</UL>
<BR>[Calls]<UL><LI><a href="#[4c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericCreateStatic
<LI><a href="#[4c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vQueueAddToRegistry
<LI><a href="#[4d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortExitCritical
<LI><a href="#[4d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortEnterCritical
<LI><a href="#[4da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vListInitialise
</UL>
<BR>[Called By]<UL><LI><a href="#[504]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTimerCreateTimerTask
</UL>

<P><STRONG><a name="[4f3]"></a>prvGetNextExpireTime</STRONG> (Thumb, 36 bytes, Stack size 0 bytes, timers.o(i.prvGetNextExpireTime))
<BR><BR>[Called By]<UL><LI><a href="#[db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvTimerTask
</UL>

<P><STRONG><a name="[4e6]"></a>prvInsertTimerInActiveList</STRONG> (Thumb, 80 bytes, Stack size 24 bytes, timers.o(i.prvInsertTimerInActiveList))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = prvInsertTimerInActiveList &rArr; vListInsert
</UL>
<BR>[Calls]<UL><LI><a href="#[4d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vListInsert
</UL>
<BR>[Called By]<UL><LI><a href="#[4eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvProcessReceivedCommands
<LI><a href="#[4e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvProcessExpiredTimer
</UL>

<P><STRONG><a name="[4e9]"></a>prvProcessExpiredTimer</STRONG> (Thumb, 110 bytes, Stack size 24 bytes, timers.o(i.prvProcessExpiredTimer))
<BR><BR>[Stack]<UL><LI>Max Depth = 176<LI>Call Chain = prvProcessExpiredTimer &rArr; xTimerGenericCommand &rArr; xQueueGenericSend &rArr; vTaskPlaceOnEventList &rArr; prvAddCurrentTaskToDelayedList &rArr; vListInsert
</UL>
<BR>[Calls]<UL><LI><a href="#[4d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uxListRemove
<LI><a href="#[4ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTimerGenericCommand
<LI><a href="#[4e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvInsertTimerInActiveList
</UL>
<BR>[Called By]<UL><LI><a href="#[4ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvProcessTimerOrBlockTask
</UL>

<P><STRONG><a name="[4eb]"></a>prvProcessReceivedCommands</STRONG> (Thumb, 350 bytes, Stack size 48 bytes, timers.o(i.prvProcessReceivedCommands))
<BR><BR>[Stack]<UL><LI>Max Depth = 248<LI>Call Chain = prvProcessReceivedCommands &rArr; prvSampleTimeNow &rArr; prvSwitchTimerLists &rArr; xTimerGenericCommand &rArr; xQueueGenericSend &rArr; vTaskPlaceOnEventList &rArr; prvAddCurrentTaskToDelayedList &rArr; vListInsert
</UL>
<BR>[Calls]<UL><LI><a href="#[4c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueReceive
<LI><a href="#[4d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uxListRemove
<LI><a href="#[4e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortFree
<LI><a href="#[4ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTimerGenericCommand
<LI><a href="#[4ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvSampleTimeNow
<LI><a href="#[4e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvInsertTimerInActiveList
</UL>
<BR>[Called By]<UL><LI><a href="#[db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvTimerTask
</UL>

<P><STRONG><a name="[4ed]"></a>prvProcessTimerOrBlockTask</STRONG> (Thumb, 102 bytes, Stack size 24 bytes, timers.o(i.prvProcessTimerOrBlockTask))
<BR><BR>[Stack]<UL><LI>Max Depth = 224<LI>Call Chain = prvProcessTimerOrBlockTask &rArr; prvSampleTimeNow &rArr; prvSwitchTimerLists &rArr; xTimerGenericCommand &rArr; xQueueGenericSend &rArr; vTaskPlaceOnEventList &rArr; prvAddCurrentTaskToDelayedList &rArr; vListInsert
</UL>
<BR>[Calls]<UL><LI><a href="#[4f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vQueueWaitForMessageRestricted
<LI><a href="#[4ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskResumeAll
<LI><a href="#[4ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskSuspendAll
<LI><a href="#[4ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvSampleTimeNow
<LI><a href="#[4e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvProcessExpiredTimer
</UL>
<BR>[Called By]<UL><LI><a href="#[db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvTimerTask
</UL>

<P><STRONG><a name="[4ec]"></a>prvSampleTimeNow</STRONG> (Thumb, 40 bytes, Stack size 16 bytes, timers.o(i.prvSampleTimeNow))
<BR><BR>[Stack]<UL><LI>Max Depth = 200<LI>Call Chain = prvSampleTimeNow &rArr; prvSwitchTimerLists &rArr; xTimerGenericCommand &rArr; xQueueGenericSend &rArr; vTaskPlaceOnEventList &rArr; prvAddCurrentTaskToDelayedList &rArr; vListInsert
</UL>
<BR>[Calls]<UL><LI><a href="#[4f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvSwitchTimerLists
<LI><a href="#[4f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskGetTickCount
</UL>
<BR>[Called By]<UL><LI><a href="#[4ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvProcessTimerOrBlockTask
<LI><a href="#[4eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvProcessReceivedCommands
</UL>

<P><STRONG><a name="[4f2]"></a>prvSwitchTimerLists</STRONG> (Thumb, 154 bytes, Stack size 32 bytes, timers.o(i.prvSwitchTimerLists))
<BR><BR>[Stack]<UL><LI>Max Depth = 184<LI>Call Chain = prvSwitchTimerLists &rArr; xTimerGenericCommand &rArr; xQueueGenericSend &rArr; vTaskPlaceOnEventList &rArr; prvAddCurrentTaskToDelayedList &rArr; vListInsert
</UL>
<BR>[Calls]<UL><LI><a href="#[4d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vListInsert
<LI><a href="#[4d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uxListRemove
<LI><a href="#[4ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTimerGenericCommand
</UL>
<BR>[Called By]<UL><LI><a href="#[4ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvSampleTimeNow
</UL>

<P><STRONG><a name="[db]"></a>prvTimerTask</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, timers.o(i.prvTimerTask))
<BR><BR>[Stack]<UL><LI>Max Depth = 256<LI>Call Chain = prvTimerTask &rArr; prvProcessReceivedCommands &rArr; prvSampleTimeNow &rArr; prvSwitchTimerLists &rArr; xTimerGenericCommand &rArr; xQueueGenericSend &rArr; vTaskPlaceOnEventList &rArr; prvAddCurrentTaskToDelayedList &rArr; vListInsert
</UL>
<BR>[Calls]<UL><LI><a href="#[4ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvProcessTimerOrBlockTask
<LI><a href="#[4eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvProcessReceivedCommands
<LI><a href="#[4f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvGetNextExpireTime
</UL>
<BR>[Address Reference Count : 1]<UL><LI> timers.o(i.xTimerCreateTimerTask)
</UL>
<P><STRONG><a name="[4c0]"></a>__get_IPSR</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, cmsis_os2.o(i.__get_IPSR))
<BR><BR>[Called By]<UL><LI><a href="#[315]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osThreadNew
<LI><a href="#[31c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osDelay
<LI><a href="#[4bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osKernelStart
<LI><a href="#[4be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osKernelInitialize
<LI><a href="#[3c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osSemaphoreRelease
<LI><a href="#[3c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osSemaphoreNew
<LI><a href="#[3c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osSemaphoreAcquire
<LI><a href="#[3c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osMessageQueuePut
<LI><a href="#[3c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osMessageQueueNew
<LI><a href="#[3c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osMessageQueueGet
</UL>

<P><STRONG><a name="[4f8]"></a>prvHeapInit</STRONG> (Thumb, 98 bytes, Stack size 12 bytes, heap_4.o(i.prvHeapInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = prvHeapInit
</UL>
<BR>[Called By]<UL><LI><a href="#[4f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pvPortMalloc
</UL>

<P><STRONG><a name="[4f9]"></a>prvInsertBlockIntoFreeList</STRONG> (Thumb, 96 bytes, Stack size 8 bytes, heap_4.o(i.prvInsertBlockIntoFreeList))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = prvInsertBlockIntoFreeList
</UL>
<BR>[Called By]<UL><LI><a href="#[4e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortFree
<LI><a href="#[4f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pvPortMalloc
</UL>

<P><STRONG><a name="[d8]"></a>prvTaskExitError</STRONG> (Thumb, 60 bytes, Stack size 0 bytes, port.o(i.prvTaskExitError))
<BR>[Address Reference Count : 1]<UL><LI> port.o(i.pxPortInitialiseStack)
</UL>
<P><STRONG><a name="[291]"></a>__sti___25_TouchGFXConfiguration_cpp_f5abfd34</STRONG> (Thumb, 148 bytes, Stack size 48 bytes, touchgfxconfiguration.o(i.__sti___25_TouchGFXConfiguration_cpp_f5abfd34))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = __sti___25_TouchGFXConfiguration_cpp_f5abfd34 &rArr; __aeabi_atexit &rArr; malloc &rArr; __Heap_Full &rArr; __Heap_ProvideMemory &rArr; free
</UL>
<BR>[Calls]<UL><LI><a href="#[4bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::LCD16bpp()
<LI><a href="#[3be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;STM32DMA::STM32DMA()
<LI><a href="#[4bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::HAL::HAL__sub_object(touchgfx::DMA_Interface&, touchgfx::LCD&, touchgfx::TouchController&, unsigned short, unsigned short)
<LI><a href="#[2af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_atexit
</UL>
<BR>[Address Reference Count : 1]<UL><LI> touchgfxconfiguration.o(.init_array)
</UL>
<P><STRONG><a name="[412]"></a>touchgfx::prepareTransition(touchgfx::Screen**, touchgfx::Presenter**, touchgfx::Transition**)</STRONG> (Thumb, 100 bytes, Stack size 24 bytes, frontendapplicationbase.o(i._ZN8touchgfx17prepareTransitionEPPNS_6ScreenEPPNS_9PresenterEPPNS_10TransitionE))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = touchgfx::prepareTransition(touchgfx::Screen**, touchgfx::Presenter**, touchgfx::Transition**)
</UL>
<BR>[Calls]<UL><LI><a href="#[363]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Application::getInstance()
<LI><a href="#[3e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Application::TimerWidgets::clear()
</UL>
<BR>[Called By]<UL><LI><a href="#[3b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;T2* touchgfx::makeTransition&lang;InformationDemoView, InformationDemoPresenter, touchgfx::NoTransition, Model&rang;(touchgfx::Screen**, touchgfx::Presenter**, touchgfx::MVPHeap&, touchgfx::Transition**, T4*)
<LI><a href="#[3b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;T2* touchgfx::makeTransition&lang;SelectingMenuView, SelectingMenuPresenter, touchgfx::NoTransition, Model&rang;(touchgfx::Screen**, touchgfx::Presenter**, touchgfx::MVPHeap&, touchgfx::Transition**, T4*)
<LI><a href="#[3b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;T2* touchgfx::makeTransition&lang;SplashScreenView, SplashScreenPresenter, touchgfx::NoTransition, Model&rang;(touchgfx::Screen**, touchgfx::Presenter**, touchgfx::MVPHeap&, touchgfx::Transition**, T4*)
<LI><a href="#[3b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;T2* touchgfx::makeTransition&lang;InformationView, InformationPresenter, touchgfx::NoTransition, Model&rang;(touchgfx::Screen**, touchgfx::Presenter**, touchgfx::MVPHeap&, touchgfx::Transition**, T4*)
<LI><a href="#[3b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;T2* touchgfx::makeTransition&lang;SettingsView, SettingsPresenter, touchgfx::NoTransition, Model&rang;(touchgfx::Screen**, touchgfx::Presenter**, touchgfx::MVPHeap&, touchgfx::Transition**, T4*)
<LI><a href="#[3b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;T2* touchgfx::makeTransition&lang;CookingView, CookingPresenter, touchgfx::NoTransition, Model&rang;(touchgfx::Screen**, touchgfx::Presenter**, touchgfx::MVPHeap&, touchgfx::Transition**, T4*)
</UL>

<P><STRONG><a name="[414]"></a>touchgfx::finalizeTransition(touchgfx::Screen*, touchgfx::Presenter*, touchgfx::Transition*)</STRONG> (Thumb, 50 bytes, Stack size 16 bytes, frontendapplicationbase.o(i._ZN8touchgfx18finalizeTransitionEPNS_6ScreenEPNS_9PresenterEPNS_10TransitionE))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = touchgfx::finalizeTransition(touchgfx::Screen*, touchgfx::Presenter*, touchgfx::Transition*)
</UL>
<BR>[Calls]<UL><LI><a href="#[415]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Screen::bindTransition(touchgfx::Transition&)
</UL>
<BR>[Called By]<UL><LI><a href="#[3b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;T2* touchgfx::makeTransition&lang;InformationDemoView, InformationDemoPresenter, touchgfx::NoTransition, Model&rang;(touchgfx::Screen**, touchgfx::Presenter**, touchgfx::MVPHeap&, touchgfx::Transition**, T4*)
<LI><a href="#[3b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;T2* touchgfx::makeTransition&lang;SelectingMenuView, SelectingMenuPresenter, touchgfx::NoTransition, Model&rang;(touchgfx::Screen**, touchgfx::Presenter**, touchgfx::MVPHeap&, touchgfx::Transition**, T4*)
<LI><a href="#[3b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;T2* touchgfx::makeTransition&lang;SplashScreenView, SplashScreenPresenter, touchgfx::NoTransition, Model&rang;(touchgfx::Screen**, touchgfx::Presenter**, touchgfx::MVPHeap&, touchgfx::Transition**, T4*)
<LI><a href="#[3b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;T2* touchgfx::makeTransition&lang;InformationView, InformationPresenter, touchgfx::NoTransition, Model&rang;(touchgfx::Screen**, touchgfx::Presenter**, touchgfx::MVPHeap&, touchgfx::Transition**, T4*)
<LI><a href="#[3b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;T2* touchgfx::makeTransition&lang;SettingsView, SettingsPresenter, touchgfx::NoTransition, Model&rang;(touchgfx::Screen**, touchgfx::Presenter**, touchgfx::MVPHeap&, touchgfx::Transition**, T4*)
<LI><a href="#[3b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;T2* touchgfx::makeTransition&lang;CookingView, CookingPresenter, touchgfx::NoTransition, Model&rang;(touchgfx::Screen**, touchgfx::Presenter**, touchgfx::MVPHeap&, touchgfx::Transition**, T4*)
</UL>

<P><STRONG><a name="[292]"></a>__sti___21_typedtextdatabase_cpp_05ec7672</STRONG> (Thumb, 108 bytes, Stack size 8 bytes, typedtextdatabase.o(i.__sti___21_typedtextdatabase_cpp_05ec7672))
<BR><BR>[Stack]<UL><LI>Max Depth = 196<LI>Call Chain = __sti___21_typedtextdatabase_cpp_05ec7672 &rArr; getFont_Nanum_Gothic_Bold_700_28_4bpp() &rArr; touchgfx::GeneratedFont::GeneratedFont(const touchgfx::GlyphNode*, unsigned short, unsigned short, unsigned short, unsigned char, unsigned char, unsigned char, unsigned char, unsigned char, unsigned char, const unsigned char*const *, const touchgfx::KerningNode*, unsigned short, unsigned short, const unsigned short*, const touchgfx::FontContextualFormsTable*) &rArr; touchgfx::ConstFont::ConstFont__sub_object(const touchgfx::GlyphNode*, unsigned short, unsigned short, unsigned short, unsigned char, unsigned char, unsigned char, unsigned char, unsigned char, unsigned char, unsigned short, unsigned short)
</UL>
<BR>[Calls]<UL><LI><a href="#[32f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getFont_Nanum_Gothic_Bold_700_28_4bpp()
<LI><a href="#[32e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getFont_Nanum_Gothic_Bold_700_25_4bpp()
<LI><a href="#[32d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getFont_Nanum_Gothic_Bold_700_14_4bpp()
<LI><a href="#[32c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getFont_GommeSansW04Bold_30_4bpp()
<LI><a href="#[32b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getFont_GommeSansW04Bold_28_4bpp()
<LI><a href="#[32a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getFont_GommeSansW04Bold_25_4bpp()
<LI><a href="#[329]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getFont_GommeSansW04Bold_24_4bpp()
<LI><a href="#[328]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getFont_GommeSansW04Bold_20_4bpp()
<LI><a href="#[327]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getFont_GommeSansW04Bold_14_4bpp()
<LI><a href="#[321]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getFont_GILB_____TTF_24_4bpp()
<LI><a href="#[326]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getFont_chinese_msyh_28_4bpp()
<LI><a href="#[325]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getFont_chinese_msyh_25_4bpp()
<LI><a href="#[324]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getFont_chinese_msyh_14_4bpp()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> typedtextdatabase.o(.init_array)
</UL>
<P><STRONG><a name="[293]"></a>__sti___15_Application_cpp_63cd8d44</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, application.o(i.__sti___15_Application_cpp_63cd8d44))
<BR><BR>[Calls]<UL><LI><a href="#[dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Rect::Rect()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> application.o(.init_array)
</UL>
<P><STRONG><a name="[294]"></a>__sti___7_LCD_cpp_86507772</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, lcd.o(i.__sti___7_LCD_cpp_86507772))
<BR>[Address Reference Count : 1]<UL><LI> lcd.o(.init_array)
</UL><P>
<H3>
Undefined Global Symbols
</H3><HR></body></html>
